{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/smart-buffer/build/utils.js"],"names":["Object","defineProperty","exports","value","ERRORS","INVALID_ENCODING","INVALID_SMARTBUFFER_SIZE","INVALID_SMARTBUFFER_BUFFER","INVALID_SMARTBUFFER_OBJECT","INVALID_OFFSET","INVALID_OFFSET_NON_NUMBER","INVALID_LENGTH","INVALID_LENGTH_NON_NUMBER","INVALID_TARGET_OFFSET","INVALID_TARGET_LENGTH","INVALID_READ_BEYOND_BOUNDS","INVALID_WRITE_BEYOND_BOUNDS","checkEncoding","encoding","Buffer","isEncoding","Error","isFiniteInteger","isFinite","isInteger","checkOffsetOrLengthValue","offset","checkLengthValue","length","checkOffsetValue","checkTargetOffset","buff","Math","floor"],"mappings":"AAAA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA;;;AAGA,IAAMC,SAAS;AACXC,sBAAkB,kGADP;AAEXC,8BAA0B,wEAFf;AAGXC,gCAA4B,gDAHjB;AAIXC,gCAA4B,2FAJjB;AAKXC,oBAAgB,uCALL;AAMXC,+BAA2B,oEANhB;AAOXC,oBAAgB,uCAPL;AAQXC,+BAA2B,oEARhB;AASXC,2BAAuB,sEATZ;AAUXC,2BAAuB,yFAVZ;AAWXC,gCAA4B,0DAXjB;AAYXC,iCAA6B;AAZlB,CAAf;AAcAd,QAAQE,MAAR,GAAiBA,MAAjB;AACA;;;;;AAKA,SAASa,aAAT,CAAuBC,QAAvB,EAAiC;AAC7B,QAAI,CAACC,OAAOC,UAAP,CAAkBF,QAAlB,CAAL,EAAkC;AAC9B,cAAM,IAAIG,KAAJ,CAAUjB,OAAOC,gBAAjB,CAAN;AACH;AACJ;AACDH,QAAQe,aAAR,GAAwBA,aAAxB;AACA;;;;;AAKA,SAASK,eAAT,CAAyBnB,KAAzB,EAAgC;AAC5B,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BoB,SAASpB,KAAT,CAA7B,IAAgDqB,UAAUrB,KAAV,CAAvD;AACH;AACDD,QAAQoB,eAAR,GAA0BA,eAA1B;AACA;;;;;;AAMA,SAASG,wBAAT,CAAkCtB,KAAlC,EAAyCuB,MAAzC,EAAiD;AAC7C,QAAI,OAAOvB,KAAP,KAAiB,QAArB,EAA+B;AAC3B;AACA,YAAI,CAACmB,gBAAgBnB,KAAhB,CAAD,IAA2BA,QAAQ,CAAvC,EAA0C;AACtC,kBAAM,IAAIkB,KAAJ,CAAUK,SAAStB,OAAOK,cAAhB,GAAiCL,OAAOO,cAAlD,CAAN;AACH;AACJ,KALD,MAMK;AACD,cAAM,IAAIU,KAAJ,CAAUK,SAAStB,OAAOM,yBAAhB,GAA4CN,OAAOQ,yBAA7D,CAAN;AACH;AACJ;AACD;;;;;AAKA,SAASe,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9BH,6BAAyBG,MAAzB,EAAiC,KAAjC;AACH;AACD1B,QAAQyB,gBAAR,GAA2BA,gBAA3B;AACA;;;;;AAKA,SAASE,gBAAT,CAA0BH,MAA1B,EAAkC;AAC9BD,6BAAyBC,MAAzB,EAAiC,IAAjC;AACH;AACDxB,QAAQ2B,gBAAR,GAA2BA,gBAA3B;AACA;;;;;;AAMA,SAASC,iBAAT,CAA2BJ,MAA3B,EAAmCK,IAAnC,EAAyC;AACrC,QAAIL,SAAS,CAAT,IAAcA,SAASK,KAAKH,MAAhC,EAAwC;AACpC,cAAM,IAAIP,KAAJ,CAAUjB,OAAOS,qBAAjB,CAAN;AACH;AACJ;AACDX,QAAQ4B,iBAAR,GAA4BA,iBAA5B;AACA;;;;AAIA,SAASN,SAAT,CAAmBrB,KAAnB,EAA0B;AACtB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BoB,SAASpB,KAAT,CAA7B,IAAgD6B,KAAKC,KAAL,CAAW9B,KAAX,MAAsBA,KAA7E;AACH;AACD","file":"utils.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Error strings\n */\nconst ERRORS = {\n    INVALID_ENCODING: 'Invalid encoding provided. Please specify a valid encoding the internal Node.js Buffer supports.',\n    INVALID_SMARTBUFFER_SIZE: 'Invalid size provided. Size must be a valid integer greater than zero.',\n    INVALID_SMARTBUFFER_BUFFER: 'Invalid Buffer provided in SmartBufferOptions.',\n    INVALID_SMARTBUFFER_OBJECT: 'Invalid SmartBufferOptions object supplied to SmartBuffer constructor or factory methods.',\n    INVALID_OFFSET: 'An invalid offset value was provided.',\n    INVALID_OFFSET_NON_NUMBER: 'An invalid offset value was provided. A numeric value is required.',\n    INVALID_LENGTH: 'An invalid length value was provided.',\n    INVALID_LENGTH_NON_NUMBER: 'An invalid length value was provived. A numeric value is required.',\n    INVALID_TARGET_OFFSET: 'Target offset is beyond the bounds of the internal SmartBuffer data.',\n    INVALID_TARGET_LENGTH: 'Specified length value moves cursor beyong the bounds of the internal SmartBuffer data.',\n    INVALID_READ_BEYOND_BOUNDS: 'Attempted to read beyond the bounds of the managed data.',\n    INVALID_WRITE_BEYOND_BOUNDS: 'Attempted to write beyond the bounds of the managed data.'\n};\nexports.ERRORS = ERRORS;\n/**\n * Checks if a given encoding is a valid Buffer encoding. (Throws an exception if check fails)\n *\n * @param { String } encoding The encoding string to check.\n */\nfunction checkEncoding(encoding) {\n    if (!Buffer.isEncoding(encoding)) {\n        throw new Error(ERRORS.INVALID_ENCODING);\n    }\n}\nexports.checkEncoding = checkEncoding;\n/**\n * Checks if a given number is a finite integer. (Throws an exception if check fails)\n *\n * @param { Number } value The number value to check.\n */\nfunction isFiniteInteger(value) {\n    return typeof value === 'number' && isFinite(value) && isInteger(value);\n}\nexports.isFiniteInteger = isFiniteInteger;\n/**\n * Checks if an offset/length value is valid. (Throws an exception if check fails)\n *\n * @param value The value to check.\n * @param offset True if checking an offset, false if checking a length.\n */\nfunction checkOffsetOrLengthValue(value, offset) {\n    if (typeof value === 'number') {\n        // Check for non finite/non integers\n        if (!isFiniteInteger(value) || value < 0) {\n            throw new Error(offset ? ERRORS.INVALID_OFFSET : ERRORS.INVALID_LENGTH);\n        }\n    }\n    else {\n        throw new Error(offset ? ERRORS.INVALID_OFFSET_NON_NUMBER : ERRORS.INVALID_LENGTH_NON_NUMBER);\n    }\n}\n/**\n * Checks if a length value is valid. (Throws an exception if check fails)\n *\n * @param { Number } length The value to check.\n */\nfunction checkLengthValue(length) {\n    checkOffsetOrLengthValue(length, false);\n}\nexports.checkLengthValue = checkLengthValue;\n/**\n * Checks if a offset value is valid. (Throws an exception if check fails)\n *\n * @param { Number } offset The value to check.\n */\nfunction checkOffsetValue(offset) {\n    checkOffsetOrLengthValue(offset, true);\n}\nexports.checkOffsetValue = checkOffsetValue;\n/**\n * Checks if a target offset value is out of bounds. (Throws an exception if check fails)\n *\n * @param { Number } offset The offset value to check.\n * @param { SmartBuffer } buff The SmartBuffer instance to check against.\n */\nfunction checkTargetOffset(offset, buff) {\n    if (offset < 0 || offset > buff.length) {\n        throw new Error(ERRORS.INVALID_TARGET_OFFSET);\n    }\n}\nexports.checkTargetOffset = checkTargetOffset;\n/**\n * Determines whether a given number is a integer.\n * @param value The number to check.\n */\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n//# sourceMappingURL=utils.js.map"]}