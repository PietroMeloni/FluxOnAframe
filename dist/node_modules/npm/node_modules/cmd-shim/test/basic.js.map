{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/cmd-shim/test/basic.js"],"names":["test","require","mkdirp","fs","path","fixtures","resolve","__dirname","cmdShim","t","from","to","er","equal","readFileSync","end","console","error"],"mappings":"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","file":"basic.js","sourcesContent":["var test = require('tap').test\nvar mkdirp = require('mkdirp')\nvar fs = require('fs')\nvar path = require('path')\nvar fixtures = path.resolve(__dirname, 'fixtures')\n\nvar cmdShim = require('../')\n\ntest('no shebang', function (t) {\n  var from = path.resolve(fixtures, 'from.exe')\n  var to = path.resolve(fixtures, 'exe.shim')\n  cmdShim(from, to, function(er) {\n    if (er)\n      throw er\n    t.equal(fs.readFileSync(to, 'utf8'),\n            \"\\\"$basedir/from.exe\\\"   \\\"$@\\\"\\nexit $?\\n\")\n    t.equal(fs.readFileSync(to + '.cmd', 'utf8'),\n            \"@\\\"%~dp0\\\\from.exe\\\"   %*\\r\\n\")\n    t.end()\n  })\n})\n\ntest('env shebang', function (t) {\n  var from = path.resolve(fixtures, 'from.env')\n  var to = path.resolve(fixtures, 'env.shim')\n  cmdShim(from, to, function(er) {\n    if (er)\n      throw er\n    console.error('%j', fs.readFileSync(to, 'utf8'))\n    console.error('%j', fs.readFileSync(to + '.cmd', 'utf8'))\n\n    t.equal(fs.readFileSync(to, 'utf8'),\n            \"#!/bin/sh\"+\n            \"\\nbasedir=$(dirname \\\"$(echo \\\"$0\\\" | sed -e 's,\\\\\\\\,/,g')\\\")\"+\n            \"\\n\"+\n            \"\\ncase `uname` in\"+\n            \"\\n    *CYGWIN*) basedir=`cygpath -w \\\"$basedir\\\"`;;\"+\n            \"\\nesac\"+\n            \"\\n\"+\n            \"\\nif [ -x \\\"$basedir/node\\\" ]; then\"+\n            \"\\n  \\\"$basedir/node\\\"  \\\"$basedir/from.env\\\" \\\"$@\\\"\"+\n            \"\\n  ret=$?\"+\n            \"\\nelse \"+\n            \"\\n  node  \\\"$basedir/from.env\\\" \\\"$@\\\"\"+\n            \"\\n  ret=$?\"+\n            \"\\nfi\"+\n            \"\\nexit $ret\"+\n            \"\\n\")\n    t.equal(fs.readFileSync(to + '.cmd', 'utf8'),\n            \"@IF EXIST \\\"%~dp0\\\\node.exe\\\" (\\r\"+\n            \"\\n  \\\"%~dp0\\\\node.exe\\\"  \\\"%~dp0\\\\from.env\\\" %*\\r\"+\n            \"\\n) ELSE (\\r\"+\n            \"\\n  @SETLOCAL\\r\"+\n            \"\\n  @SET PATHEXT=%PATHEXT:;.JS;=;%\\r\"+\n            \"\\n  node  \\\"%~dp0\\\\from.env\\\" %*\\r\"+\n            \"\\n)\")\n    t.end()\n  })\n})\n\ntest('env shebang with args', function (t) {\n  var from = path.resolve(fixtures, 'from.env.args')\n  var to = path.resolve(fixtures, 'env.args.shim')\n  cmdShim(from, to, function(er) {\n    if (er)\n      throw er\n    console.error('%j', fs.readFileSync(to, 'utf8'))\n    console.error('%j', fs.readFileSync(to + '.cmd', 'utf8'))\n\n    t.equal(fs.readFileSync(to, 'utf8'),\n            \"#!/bin/sh\"+\n            \"\\nbasedir=$(dirname \\\"$(echo \\\"$0\\\" | sed -e 's,\\\\\\\\,/,g')\\\")\"+\n            \"\\n\"+\n            \"\\ncase `uname` in\"+\n            \"\\n    *CYGWIN*) basedir=`cygpath -w \\\"$basedir\\\"`;;\"+\n            \"\\nesac\"+\n            \"\\n\"+\n            \"\\nif [ -x \\\"$basedir/node\\\" ]; then\"+\n            \"\\n  \\\"$basedir/node\\\"  --expose_gc \\\"$basedir/from.env.args\\\" \\\"$@\\\"\"+\n            \"\\n  ret=$?\"+\n            \"\\nelse \"+\n            \"\\n  node  --expose_gc \\\"$basedir/from.env.args\\\" \\\"$@\\\"\"+\n            \"\\n  ret=$?\"+\n            \"\\nfi\"+\n            \"\\nexit $ret\"+\n            \"\\n\")\n    t.equal(fs.readFileSync(to + '.cmd', 'utf8'),\n            \"@IF EXIST \\\"%~dp0\\\\node.exe\\\" (\\r\"+\n            \"\\n  \\\"%~dp0\\\\node.exe\\\"  --expose_gc \\\"%~dp0\\\\from.env.args\\\" %*\\r\"+\n            \"\\n) ELSE (\\r\"+\n            \"\\n  @SETLOCAL\\r\"+\n            \"\\n  @SET PATHEXT=%PATHEXT:;.JS;=;%\\r\"+\n            \"\\n  node  --expose_gc \\\"%~dp0\\\\from.env.args\\\" %*\\r\"+\n            \"\\n)\")\n    t.end()\n  })\n})\n\ntest('explicit shebang', function (t) {\n  var from = path.resolve(fixtures, 'from.sh')\n  var to = path.resolve(fixtures, 'sh.shim')\n  cmdShim(from, to, function(er) {\n    if (er)\n      throw er\n    console.error('%j', fs.readFileSync(to, 'utf8'))\n    console.error('%j', fs.readFileSync(to + '.cmd', 'utf8'))\n\n    t.equal(fs.readFileSync(to, 'utf8'),\n            \"#!/bin/sh\" +\n            \"\\nbasedir=$(dirname \\\"$(echo \\\"$0\\\" | sed -e 's,\\\\\\\\,/,g')\\\")\" +\n            \"\\n\" +\n            \"\\ncase `uname` in\" +\n            \"\\n    *CYGWIN*) basedir=`cygpath -w \\\"$basedir\\\"`;;\" +\n            \"\\nesac\" +\n            \"\\n\" +\n            \"\\nif [ -x \\\"$basedir//usr/bin/sh\\\" ]; then\" +\n            \"\\n  \\\"$basedir//usr/bin/sh\\\"  \\\"$basedir/from.sh\\\" \\\"$@\\\"\" +\n            \"\\n  ret=$?\" +\n            \"\\nelse \" +\n            \"\\n  /usr/bin/sh  \\\"$basedir/from.sh\\\" \\\"$@\\\"\" +\n            \"\\n  ret=$?\" +\n            \"\\nfi\" +\n            \"\\nexit $ret\" +\n            \"\\n\")\n\n    t.equal(fs.readFileSync(to + '.cmd', 'utf8'),\n            \"@IF EXIST \\\"%~dp0\\\\/usr/bin/sh.exe\\\" (\\r\" +\n            \"\\n  \\\"%~dp0\\\\/usr/bin/sh.exe\\\"  \\\"%~dp0\\\\from.sh\\\" %*\\r\" +\n            \"\\n) ELSE (\\r\" +\n            \"\\n  @SETLOCAL\\r\"+\n            \"\\n  @SET PATHEXT=%PATHEXT:;.JS;=;%\\r\"+\n            \"\\n  /usr/bin/sh  \\\"%~dp0\\\\from.sh\\\" %*\\r\" +\n            \"\\n)\")\n    t.end()\n  })\n})\n\ntest('explicit shebang with args', function (t) {\n  var from = path.resolve(fixtures, 'from.sh.args')\n  var to = path.resolve(fixtures, 'sh.args.shim')\n  cmdShim(from, to, function(er) {\n    if (er)\n      throw er\n    console.error('%j', fs.readFileSync(to, 'utf8'))\n    console.error('%j', fs.readFileSync(to + '.cmd', 'utf8'))\n\n    t.equal(fs.readFileSync(to, 'utf8'),\n            \"#!/bin/sh\" +\n            \"\\nbasedir=$(dirname \\\"$(echo \\\"$0\\\" | sed -e 's,\\\\\\\\,/,g')\\\")\" +\n            \"\\n\" +\n            \"\\ncase `uname` in\" +\n            \"\\n    *CYGWIN*) basedir=`cygpath -w \\\"$basedir\\\"`;;\" +\n            \"\\nesac\" +\n            \"\\n\" +\n            \"\\nif [ -x \\\"$basedir//usr/bin/sh\\\" ]; then\" +\n            \"\\n  \\\"$basedir//usr/bin/sh\\\"  -x \\\"$basedir/from.sh.args\\\" \\\"$@\\\"\" +\n            \"\\n  ret=$?\" +\n            \"\\nelse \" +\n            \"\\n  /usr/bin/sh  -x \\\"$basedir/from.sh.args\\\" \\\"$@\\\"\" +\n            \"\\n  ret=$?\" +\n            \"\\nfi\" +\n            \"\\nexit $ret\" +\n            \"\\n\")\n\n    t.equal(fs.readFileSync(to + '.cmd', 'utf8'),\n            \"@IF EXIST \\\"%~dp0\\\\/usr/bin/sh.exe\\\" (\\r\" +\n            \"\\n  \\\"%~dp0\\\\/usr/bin/sh.exe\\\"  -x \\\"%~dp0\\\\from.sh.args\\\" %*\\r\" +\n            \"\\n) ELSE (\\r\" +\n            \"\\n  @SETLOCAL\\r\"+\n            \"\\n  @SET PATHEXT=%PATHEXT:;.JS;=;%\\r\"+\n            \"\\n  /usr/bin/sh  -x \\\"%~dp0\\\\from.sh.args\\\" %*\\r\" +\n            \"\\n)\")\n    t.end()\n  })\n})\n"]}