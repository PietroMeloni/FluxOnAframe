{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/jsonparse/test/offset.js"],"names":["test","require","Parser","input","input2","input3","offsets","C","LEFT_BRACE","STRING","COLON","COMMA","NUMBER","RIGHT_BRACE","LEFT_BRACKET","RIGHT_BRACKET","NULL","TRUE","FALSE","t","plan","length","p","i","onToken","token","equal","offset","write"],"mappings":"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","file":"offset.js","sourcesContent":["var test = require('tape');\nvar Parser = require('../');\n\nvar input = '{\\n  \"string\": \"value\",\\n  \"number\": 3,\\n  \"object\"';\nvar input2 = ': {\\n  \"key\": \"v–¥\"\\n  },\\n  \"array\": [\\n  -1,\\n  12\\n  ]\\n  ';\nvar input3 = '\"null\": null, \"true\": true, \"false\": false, \"frac\": 3.14 }';\n\nvar offsets = [\n  [ 0, Parser.C.LEFT_BRACE ],\n  [ 4, Parser.C.STRING ],\n  [ 12, Parser.C.COLON ],\n  [ 14, Parser.C.STRING ],\n  [ 21, Parser.C.COMMA ],\n  [ 25, Parser.C.STRING ],\n  [ 33, Parser.C.COLON ],\n  [ 35, Parser.C.NUMBER ],\n  [ 36, Parser.C.COMMA ],\n  [ 40, Parser.C.STRING ],\n  [ 48, Parser.C.COLON ],\n  [ 50, Parser.C.LEFT_BRACE ],\n  [ 54, Parser.C.STRING ],\n  [ 59, Parser.C.COLON ],\n  [ 61, Parser.C.STRING ],\n  [ 69, Parser.C.RIGHT_BRACE ],\n  [ 70, Parser.C.COMMA ],\n  [ 74, Parser.C.STRING ],\n  [ 81, Parser.C.COLON ],\n  [ 83, Parser.C.LEFT_BRACKET ],\n  [ 87, Parser.C.NUMBER ],\n  [ 89, Parser.C.COMMA ],\n  [ 93, Parser.C.NUMBER ],\n  [ 98, Parser.C.RIGHT_BRACKET ],\n  [ 102, Parser.C.STRING ],\n  [ 108, Parser.C.COLON ],\n  [ 110, Parser.C.NULL ],\n  [ 114, Parser.C.COMMA ],\n  [ 116, Parser.C.STRING ],\n  [ 122, Parser.C.COLON ],\n  [ 124, Parser.C.TRUE ],\n  [ 128, Parser.C.COMMA ],\n  [ 130, Parser.C.STRING ],\n  [ 137, Parser.C.COLON ],\n  [ 139, Parser.C.FALSE ],\n  [ 144, Parser.C.COMMA ],\n  [ 146, Parser.C.STRING ],\n  [ 152, Parser.C.COLON ],\n  [ 154, Parser.C.NUMBER ],\n  [ 159, Parser.C.RIGHT_BRACE ]\n];\n\ntest('offset', function(t) {\n  t.plan(offsets.length * 2 + 1);\n\n  var p = new Parser();\n  var i = 0;\n  p.onToken = function (token) {\n    t.equal(p.offset, offsets[i][0]);\n    t.equal(token, offsets[i][1]);\n    i++;\n  };\n\n  p.write(input);\n  p.write(input2);\n  p.write(input3);\n\n  t.equal(i, offsets.length);\n});\n"]}