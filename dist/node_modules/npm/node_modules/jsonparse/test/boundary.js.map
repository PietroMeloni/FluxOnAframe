{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/jsonparse/test/boundary.js"],"names":["test","require","Parser","t","plan","p","onValue","value","equal","de_buffer","Buffer","write","han_buffer","Ux2070E_buffer","han_buffer_first","han_buffer_second","Ux2070E_buffer_first","Ux2070E_buffer_second","eclectic_buffer","rand_chunk","Math","floor","random","length","first_buffer","slice","second_buffer","console","log"],"mappings":"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","file":"boundary.js","sourcesContent":["var test = require('tape');\nvar Parser = require('../');\n\ntest('2 byte utf8 \\'De\\' character: д', function (t) {\n  t.plan(1);\n\n  var p = new Parser();\n  p.onValue = function (value) {\n    t.equal(value, 'д');\n  };\n\n  var de_buffer = new Buffer([0xd0, 0xb4]);\n\n  p.write('\"');\n  p.write(de_buffer);\n  p.write('\"');\n\n});\n\ntest('3 byte utf8 \\'Han\\' character: 我', function (t) {\n  t.plan(1);\n\n  var p = new Parser();\n  p.onValue = function (value) {\n    t.equal(value, '我');\n  };\n\n  var han_buffer = new Buffer([0xe6, 0x88, 0x91]);\n  p.write('\"');\n  p.write(han_buffer);\n  p.write('\"');\n});\n\ntest('4 byte utf8 character (unicode scalar U+2070E): 𠜎', function (t) {\n  t.plan(1);\n\n  var p = new Parser();\n  p.onValue = function (value) {\n    t.equal(value, '𠜎');\n  };\n\n  var Ux2070E_buffer = new Buffer([0xf0, 0xa0, 0x9c, 0x8e]);\n  p.write('\"');\n  p.write(Ux2070E_buffer);\n  p.write('\"');\n});\n\ntest('3 byte utf8 \\'Han\\' character chunked inbetween 2nd and 3rd byte: 我', function (t) {\n  t.plan(1);\n\n  var p = new Parser();\n  p.onValue = function (value) {\n    t.equal(value, '我');\n  };\n\n  var han_buffer_first = new Buffer([0xe6, 0x88]);\n  var han_buffer_second = new Buffer([0x91]);\n  p.write('\"');\n  p.write(han_buffer_first);\n  p.write(han_buffer_second);\n  p.write('\"');\n});\n\ntest('4 byte utf8 character (unicode scalar U+2070E) chunked inbetween 2nd and 3rd byte: 𠜎', function (t) {\n  t.plan(1);\n\n  var p = new Parser();\n  p.onValue = function (value) {\n    t.equal(value, '𠜎');\n  };\n\n  var Ux2070E_buffer_first = new Buffer([0xf0, 0xa0]);\n  var Ux2070E_buffer_second = new Buffer([0x9c, 0x8e]);\n  p.write('\"');\n  p.write(Ux2070E_buffer_first);\n  p.write(Ux2070E_buffer_second);\n  p.write('\"');\n});\n\ntest('1-4 byte utf8 character string chunked inbetween random bytes: Aж文𠜱B', function (t) {\n  t.plan(1);\n\nvar p = new Parser();\n  p.onValue = function (value) {\n    t.equal(value, 'Aж文𠜱B');\n  };\n\n  var eclectic_buffer = new Buffer([0x41, // A\n                                    0xd0, 0xb6, // ж\n                                    0xe6, 0x96, 0x87, // 文\n                                    0xf0, 0xa0, 0x9c, 0xb1, // 𠜱\n                                    0x42]); // B\n\n  var rand_chunk = Math.floor(Math.random() * (eclectic_buffer.length));\n  var first_buffer = eclectic_buffer.slice(0, rand_chunk);\n  var second_buffer = eclectic_buffer.slice(rand_chunk);\n\n  //console.log('eclectic_buffer: ' + eclectic_buffer)\n  //console.log('sliced from 0 to ' + rand_chunk);\n  //console.log(first_buffer);\n  //console.log('then sliced from ' + rand_chunk + ' to the end');\n  //console.log(second_buffer);\n\n  console.log('chunked after offset ' + rand_chunk);\n  p.write('\"');\n  p.write(first_buffer);\n  p.write(second_buffer);\n  p.write('\"');\n\n});"]}