{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/node-fetch-npm/src/blob.js"],"names":["Buffer","require","BUFFER","Symbol","TYPE","CLOSED","Blob","Object","defineProperty","toStringTag","value","writable","enumerable","configurable","blobParts","arguments","options","buffers","a","length","Number","i","element","buffer","isBuffer","ArrayBuffer","isView","from","Uint8Array","byteOffset","byteLength","String","push","concat","type","undefined","toLowerCase","test","size","start","end","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","slice","blob","exports","module","prototype"],"mappings":"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","file":"blob.js","sourcesContent":["'use strict'\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst Buffer = require('safe-buffer').Buffer\n\nconst BUFFER = Symbol('buffer')\nconst TYPE = Symbol('type')\nconst CLOSED = Symbol('closed')\n\nclass Blob {\n  constructor () {\n    Object.defineProperty(this, Symbol.toStringTag, {\n      value: 'Blob',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    })\n\n    this[CLOSED] = false\n    this[TYPE] = ''\n\n    const blobParts = arguments[0]\n    const options = arguments[1]\n\n    const buffers = []\n\n    if (blobParts) {\n      const a = blobParts\n      const length = Number(a.length)\n      for (let i = 0; i < length; i++) {\n        const element = a[i]\n        let buffer\n        if (Buffer.isBuffer(element)) {\n          buffer = element\n        } else if (ArrayBuffer.isView(element)) {\n          buffer = Buffer.from(new Uint8Array(element.buffer, element.byteOffset, element.byteLength))\n        } else if (element instanceof ArrayBuffer) {\n          buffer = Buffer.from(new Uint8Array(element))\n        } else if (element instanceof Blob) {\n          buffer = element[BUFFER]\n        } else {\n          buffer = Buffer.from(typeof element === 'string' ? element : String(element))\n        }\n        buffers.push(buffer)\n      }\n    }\n\n    this[BUFFER] = Buffer.concat(buffers)\n\n    let type = options && options.type !== undefined && String(options.type).toLowerCase()\n    if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n      this[TYPE] = type\n    }\n  }\n  get size () {\n    return this[CLOSED] ? 0 : this[BUFFER].length\n  }\n  get type () {\n    return this[TYPE]\n  }\n  get isClosed () {\n    return this[CLOSED]\n  }\n  slice () {\n    const size = this.size\n\n    const start = arguments[0]\n    const end = arguments[1]\n    let relativeStart, relativeEnd\n    if (start === undefined) {\n      relativeStart = 0\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0)\n    } else {\n      relativeStart = Math.min(start, size)\n    }\n    if (end === undefined) {\n      relativeEnd = size\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0)\n    } else {\n      relativeEnd = Math.min(end, size)\n    }\n    const span = Math.max(relativeEnd - relativeStart, 0)\n\n    const buffer = this[BUFFER]\n    const slicedBuffer = buffer.slice(\n      relativeStart,\n      relativeStart + span\n    )\n    const blob = new Blob([], { type: arguments[2] })\n    blob[BUFFER] = slicedBuffer\n    blob[CLOSED] = this[CLOSED]\n    return blob\n  }\n  close () {\n    this[CLOSED] = true\n  }\n}\nexports = module.exports = Blob\nexports.BUFFER = BUFFER\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: 'BlobPrototype',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n"]}