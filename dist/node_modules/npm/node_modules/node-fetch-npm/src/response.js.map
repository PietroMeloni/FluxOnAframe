{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/node-fetch-npm/src/response.js"],"names":["STATUS_CODES","require","Headers","Body","clone","Response","body","opts","call","url","status","statusText","headers","Object","defineProperty","Symbol","toStringTag","value","writable","enumerable","configurable","ok","mixIn","prototype","module","exports"],"mappings":"AAAA;;AAEA;;;;;;;;;;AAMA,IAAMA,eAAeC,QAAQ,MAAR,EAAgBD,YAArC;AACA,IAAME,UAAUD,QAAQ,cAAR,CAAhB;AACA,IAAME,OAAOF,QAAQ,WAAR,CAAb;AACA,IAAMG,SAAQD,KAAKC,KAAnB;;AAEA;;;;;;;;IAOMC,Q;AACJ,oBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AACvB,QAAI,CAACA,IAAL,EAAWA,OAAO,EAAP;AACXJ,SAAKK,IAAL,CAAU,IAAV,EAAgBF,IAAhB,EAAsBC,IAAtB;;AAEA,SAAKE,GAAL,GAAWF,KAAKE,GAAhB;AACA,SAAKC,MAAL,GAAcH,KAAKG,MAAL,IAAe,GAA7B;AACA,SAAKC,UAAL,GAAkBJ,KAAKI,UAAL,IAAmBX,aAAa,KAAKU,MAAlB,CAArC;;AAEA,SAAKE,OAAL,GAAe,IAAIV,OAAJ,CAAYK,KAAKK,OAAjB,CAAf;;AAEAC,WAAOC,cAAP,CAAsB,IAAtB,EAA4BC,OAAOC,WAAnC,EAAgD;AAC9CC,aAAO,UADuC;AAE9CC,gBAAU,KAFoC;AAG9CC,kBAAY,KAHkC;AAI9CC,oBAAc;AAJgC,KAAhD;AAMD;;AAED;;;;;;;;;AAOA;;;;;4BAKS;AACP,aAAO,IAAIf,QAAJ,CAAaD,OAAM,IAAN,CAAb,EAA0B;AAC/BK,aAAK,KAAKA,GADqB;AAE/BC,gBAAQ,KAAKA,MAFkB;AAG/BC,oBAAY,KAAKA,UAHc;AAI/BC,iBAAS,KAAKA,OAJiB;AAK/BS,YAAI,KAAKA;AALsB,OAA1B,CAAP;AAOD;;;wBAjBS;AACR,aAAO,KAAKX,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,GAAc,GAA3C;AACD;;;;;;AAkBHP,KAAKmB,KAAL,CAAWjB,SAASkB,SAApB;;AAEAV,OAAOC,cAAP,CAAsBT,SAASkB,SAA/B,EAA0CR,OAAOC,WAAjD,EAA8D;AAC5DC,SAAO,mBADqD;AAE5DC,YAAU,KAFkD;AAG5DC,cAAY,KAHgD;AAI5DC,gBAAc;AAJ8C,CAA9D;AAMAI,OAAOC,OAAP,GAAiBpB,QAAjB","file":"response.js","sourcesContent":["'use strict'\n\n/**\n * response.js\n *\n * Response class provides content decoding\n */\n\nconst STATUS_CODES = require('http').STATUS_CODES\nconst Headers = require('./headers.js')\nconst Body = require('./body.js')\nconst clone = Body.clone\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n  constructor (body, opts) {\n    if (!opts) opts = {}\n    Body.call(this, body, opts)\n\n    this.url = opts.url\n    this.status = opts.status || 200\n    this.statusText = opts.statusText || STATUS_CODES[this.status]\n\n    this.headers = new Headers(opts.headers)\n\n    Object.defineProperty(this, Symbol.toStringTag, {\n      value: 'Response',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    })\n  }\n\n  /**\n   * Convenience property representing if the request ended normally\n   */\n  get ok () {\n    return this.status >= 200 && this.status < 300\n  }\n\n  /**\n   * Clone this response\n   *\n   * @return  Response\n   */\n  clone () {\n    return new Response(clone(this), {\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok\n    })\n  }\n}\n\nBody.mixIn(Response.prototype)\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n  value: 'ResponsePrototype',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\nmodule.exports = Response\n"]}