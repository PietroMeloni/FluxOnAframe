{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/err-code/test/test.js"],"names":["errcode","require","expect","describe","it","err","to","be","an","Error","hasOwnProperty","code","foo","bar","undefined","myErr","message"],"mappings":"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","file":"test.js","sourcesContent":["'use strict';\n\nvar errcode = require('../index');\nvar expect = require('expect.js');\n\ndescribe('errcode', function () {\n    describe('string as first argument', function () {\n        it('should create an error object without code', function () {\n            var err = errcode('my message');\n\n            expect(err).to.be.an(Error);\n            expect(err.hasOwnProperty(err.code)).to.be(false);\n        });\n\n        it('should create an error object with code', function () {\n            var err = errcode('my message', 'ESOME');\n\n            expect(err).to.be.an(Error);\n            expect(err.code).to.be('ESOME');\n        });\n\n        it('should create an error object with code and properties', function () {\n            var err = errcode('my message', 'ESOME', { foo: 'bar', bar: 'foo' });\n\n            expect(err).to.be.an(Error);\n            expect(err.code).to.be('ESOME');\n            expect(err.foo).to.be('bar');\n            expect(err.bar).to.be('foo');\n        });\n\n        it('should create an error object without code but with properties', function () {\n            var err = errcode('my message', { foo: 'bar', bar: 'foo' });\n\n            expect(err).to.be.an(Error);\n            expect(err.code).to.be(undefined);\n            expect(err.foo).to.be('bar');\n            expect(err.bar).to.be('foo');\n        });\n    });\n\n    describe('error as first argument', function () {\n        it('should accept an error and do nothing', function () {\n            var myErr = new Error('my message');\n            var err = errcode(myErr);\n\n            expect(err).to.be(myErr);\n            expect(err.hasOwnProperty(err.code)).to.be(false);\n        });\n\n        it('should accept an error and add a code', function () {\n            var myErr = new Error('my message');\n            var err = errcode(myErr, 'ESOME');\n\n            expect(err).to.be(myErr);\n            expect(err.code).to.be('ESOME');\n        });\n\n        it('should accept an error object and add code & properties', function () {\n            var myErr = new Error('my message');\n            var err = errcode(myErr, 'ESOME', { foo: 'bar', bar: 'foo' });\n\n            expect(err).to.be.an(Error);\n            expect(err.code).to.be('ESOME');\n            expect(err.foo).to.be('bar');\n            expect(err.bar).to.be('foo');\n        });\n\n        it('should create an error object without code but with properties', function () {\n            var myErr = new Error('my message');\n            var err = errcode(myErr, { foo: 'bar', bar: 'foo' });\n\n            expect(err).to.be.an(Error);\n            expect(err.code).to.be(undefined);\n            expect(err.foo).to.be('bar');\n            expect(err.bar).to.be('foo');\n        });\n    });\n\n    it('should allow passing null & undefined in the first argument', function () {\n        var err;\n\n        err = errcode(null, 'ESOME');\n        expect(err).to.be.an(Error);\n        expect(err.message).to.be('null');\n        expect(err.code).to.be('ESOME');\n\n        err = errcode(undefined, 'ESOME');\n        expect(err).to.be.an(Error);\n        expect(err.message).to.be('');\n        expect(err.code).to.be('ESOME');\n    });\n});\n"]}