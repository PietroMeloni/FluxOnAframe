{"version":3,"sources":["../../../../../node_modules/npm/node_modules/libnpx/parse-args.js"],"names":["npa","path","require","module","exports","parseArgs","argv","defaultNpm","process","length","fastPathArgs","parser","yargsParser","opts","getOptions","bools","Set","boolean","cmdIndex","hasDashDash","i","opt","splice","has","replace","indexOf","parsed","parse","slice","parsedCmd","command","package","type","guessCmdName","isLocal","cmdOpts","packageRequested","cmdHadVersion","name","raw","pkg","p","map","toString","call","splitCmd","_","match","registry","shell","noYargs","npm","showHelp","_guessCmdName","spec","scope","hosted","project","fetchSpec","ext","extname","basename","console","error","Y","usage","option","alias","describe","default","choices","requireArg","version","help","epilogue","_y"],"mappings":"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","file":"parse-args.js","sourcesContent":["'use strict'\n\nlet npa\nconst path = require('path')\n\nmodule.exports = parseArgs\nfunction parseArgs (argv, defaultNpm) {\n  argv = argv || process.argv\n  if (argv.length > 2 && argv[2][0] !== '-') {\n    // fast-path around arg parsing! Don't even need to load yargs here.\n    return fastPathArgs(argv, defaultNpm)\n  }\n\n  npa = require('npm-package-arg')\n\n  const parser = yargsParser(argv, defaultNpm)\n\n  const opts = parser.getOptions()\n  const bools = new Set(opts.boolean)\n\n  let cmdIndex\n  let hasDashDash\n  for (let i = 2; i < argv.length; i++) {\n    const opt = argv[i]\n    if (opt === '--') {\n      hasDashDash = true\n      break\n    } else if (opt === '--node-arg' || opt === '-n') {\n      argv[i] = `${opt}=${argv[i + 1]}`\n      argv.splice(i + 1, 1)\n    } else if (opt[0] === '-') {\n      if (\n        // --no-install needs to be special-cased because we're abusing\n        // yargs a bit in order to get the --help text right.\n        opt !== '--no-install' &&\n        !bools.has(opt.replace(/^--?(no-)?/i, '')) &&\n        opt.indexOf('=') === -1\n      ) {\n        i++\n      }\n    } else {\n      cmdIndex = i\n      break\n    }\n  }\n  if (cmdIndex) {\n    const parsed = parser.parse(argv.slice(0, cmdIndex))\n    const parsedCmd = npa(argv[cmdIndex])\n    parsed.command = parsed.package && parsedCmd.type !== 'directory'\n      ? argv[cmdIndex]\n      : guessCmdName(parsedCmd)\n    parsed.isLocal = parsedCmd.type === 'directory'\n    parsed.cmdOpts = argv.slice(cmdIndex + 1)\n    if (typeof parsed.package === 'string') {\n      parsed.package = [parsed.package]\n    }\n    parsed.packageRequested = !!parsed.package\n    parsed.cmdHadVersion = parsed.package || parsedCmd.type === 'directory'\n      ? false\n      : parsedCmd.name !== parsedCmd.raw\n    const pkg = parsed.package || [argv[cmdIndex]]\n    parsed.p = parsed.package = pkg.map(p => npa(p).toString())\n    return parsed\n  } else {\n    const parsed = parser.parse(argv)\n    if (typeof parsed.package === 'string') {\n      parsed.package = [parsed.package]\n    }\n    // -c *requires* -p, because the -c string should not be touched by npx\n    if (parsed.call && parsed.package) {\n      parsed.packageRequested = !!parsed.package\n      parsed.cmdHadVersion = false\n      const pkg = parsed.package\n      parsed.p = parsed.package = pkg.map(p => npa(p).toString())\n    } else if (parsed.call && !parsed.package) {\n      parsed.packageRequested = false\n      parsed.cmdHadVersion = false\n      parsed.p = parsed.package = []\n    } else if (hasDashDash) {\n      const splitCmd = parsed._.slice(2)\n      const parsedCmd = npa(splitCmd[0])\n      parsed.command = parsed.package\n        ? splitCmd[0]\n        : guessCmdName(parsedCmd)\n      parsed.cmdOpts = splitCmd.slice(1)\n      parsed.packageRequested = !!parsed.package\n      parsed.cmdHadVersion = parsed.package\n        ? false\n        : parsedCmd.name !== parsedCmd.raw\n      const pkg = parsed.package || [splitCmd[0]]\n      parsed.p = parsed.package = pkg.map(p => npa(p).toString())\n    }\n    return parsed\n  }\n}\n\nfunction fastPathArgs (argv, defaultNpm) {\n  let parsedCmd\n  let pkg\n  if (argv[2].match(/^[a-z0-9_-]+$/i)) {\n    parsedCmd = { registry: true, name: argv[2], raw: argv[2] }\n    pkg = [`${argv[2]}@latest`]\n  } else {\n    npa = require('npm-package-arg')\n    parsedCmd = npa(argv[2])\n    if (parsedCmd.type === 'directory') {\n      pkg = []\n    } else {\n      pkg = [parsedCmd.toString()]\n    }\n  }\n  return {\n    command: guessCmdName(parsedCmd),\n    cmdOpts: argv.slice(3),\n    packageRequested: false,\n    isLocal: parsedCmd.type === 'directory',\n    cmdHadVersion: (\n      parsedCmd.name !== parsedCmd.raw &&\n      parsedCmd.type !== 'directory'\n    ),\n    package: pkg,\n    p: pkg,\n    shell: false,\n    noYargs: true,\n    npm: defaultNpm || 'npm'\n  }\n}\n\nparseArgs.showHelp = () => require('yargs').showHelp()\n\nmodule.exports._guessCmdName = guessCmdName\nfunction guessCmdName (spec) {\n  if (typeof spec === 'string') {\n    if (!npa) { npa = require('npm-package-arg') }\n    spec = npa(spec)\n  }\n  if (spec.scope) {\n    return spec.name.slice(spec.scope.length + 1)\n  } else if (spec.registry) {\n    return spec.name\n  } else if (spec.hosted && spec.hosted.project) {\n    return spec.hosted.project\n  } else if (spec.type === 'git') {\n    const match = spec.fetchSpec.match(/([a-z0-9-]+)(?:\\.git)?$/i)\n    return match[1]\n  } else if (spec.type === 'directory') {\n    return spec.raw\n  } else if (spec.type === 'file' || spec.type === 'remote') {\n    let ext = path.extname(spec.fetchSpec)\n    if (ext === '.gz') {\n      ext = path.extname(path.basename(spec.fetchSpec, ext)) + ext\n    }\n    return path.basename(spec.fetchSpec, ext).replace(/-\\d+\\.\\d+\\.\\d+(?:-[a-z0-9.\\-+]+)?$/i, '')\n  }\n\n  console.error(Y()`Unable to guess a binary name from ${spec.raw}. Please use --package.`)\n  return null\n}\n\nfunction yargsParser (argv, defaultNpm) {\n  const usage = `\n  npx [${Y()`options`}] <${Y()`command`}>[@${Y()`version`}] [${Y()`command-arg`}]...\n\n  npx [${Y()`options`}] [-p|--package <${Y()`package`}>]... <${Y()`command`}> [${Y()`command-arg`}]...\n\n  npx [${Y()`options`}] -c '<${Y()`command-string`}>'\n\n  npx --shell-auto-fallback [${Y()`shell`}]\n  `\n\n  return require('yargs')\n    .usage(Y()`Execute binaries from npm packages.\\n${usage}`)\n    .option('package', {\n      alias: 'p',\n      type: 'string',\n      describe: Y()`Package to be installed.`\n    })\n    .option('cache', {\n      type: 'string',\n      describe: Y()`Location of the npm cache.`\n    })\n    .option('always-spawn', {\n      describe: Y()`Always spawn a child process to execute the command.`,\n      type: 'boolean'\n    })\n    .option('no-install', {\n      type: 'boolean',\n      describe: Y()`Skip installation if a package is missing.`\n    })\n    .option('userconfig', {\n      type: 'string',\n      describe: Y()`Path to user npmrc.`\n    })\n    .option('call', {\n      alias: 'c',\n      type: 'string',\n      describe: Y()`Execute string as if inside \\`npm run-script\\`.`\n    })\n    .option('shell', {\n      alias: 's',\n      type: 'string',\n      describe: Y()`Shell to execute the command with, if any.`,\n      default: false\n    })\n    .option('shell-auto-fallback', {\n      choices: ['', 'bash', 'fish', 'zsh'],\n      describe: Y()`Generate shell code to use npx as the \"command not found\" fallback.`,\n      requireArg: false,\n      type: 'string'\n    })\n    .option('ignore-existing', {\n      describe: Y()`Ignores existing binaries in $PATH, or in the local project. This forces npx to do a temporary install and use the latest version.`,\n      type: 'boolean'\n    })\n    .option('quiet', {\n      alias: 'q',\n      describe: Y()`Suppress output from npx itself. Subcommands will not be affected.`,\n      type: 'boolean'\n    })\n    .option('npm', {\n      describe: Y()`npm binary to use for internal operations.`,\n      type: 'string',\n      default: defaultNpm || 'npm'\n    })\n    .option('node-arg', {\n      alias: 'n',\n      type: 'string',\n      describe: Y()`Extra node argument when calling a node binary.`\n    })\n    .version()\n    .alias('version', 'v')\n    .help()\n    .alias('help', 'h')\n    .epilogue(Y()`For the full documentation, see the manual page for npx(1).`)\n}\n\nvar _y\nfunction Y () {\n  if (!_y) { _y = require('./y.js') }\n  return _y\n}\n"]}