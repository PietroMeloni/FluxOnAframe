{"version":3,"sources":["../../../../../node_modules/npm/node_modules/libnpx/child.js"],"names":["cp","require","path","module","exports","runCommand","command","opts","cmd","call","copts","cmdOpts","spawn","shell","stdio","catch","err","code","Error","basename","exitCode","message","args","process","platform","Promise","resolve","reject","child","stdout","stderr","on","d","join","isOperational","exec","escapeArg","str","asPath","normalize","split","map","s","match","replace"],"mappings":"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","file":"child.js","sourcesContent":["'use strict'\n\nconst cp = require('child_process')\nconst path = require('path')\n\nmodule.exports.runCommand = runCommand\nfunction runCommand (command, opts) {\n  const cmd = opts.call || command || opts.command\n  const copts = (opts.call ? [] : opts.cmdOpts) || []\n  return spawn(cmd, copts, {\n    shell: opts.shell || !!opts.call,\n    stdio: opts.stdio || 'inherit'\n  }).catch(err => {\n    if (err.code === 'ENOENT') {\n      err = new Error(\n        `npx: ${\n          require('./y.js')`command not found: ${path.basename(cmd)}`\n        }`\n      )\n      err.exitCode = 127\n    } else {\n      err.message = require('./y.js')`Command failed: ${cmd} ${err.message}`\n    }\n    throw err\n  })\n}\n\nmodule.exports.spawn = spawn\nfunction spawn (cmd, args, opts) {\n  opts = opts || {}\n  opts.shell = opts.shell || process.platform === 'win32'\n  return new Promise((resolve, reject) => {\n    const child = cp.spawn(cmd, args, opts)\n    let stdout = ''\n    let stderr = ''\n    child.stdout && child.stdout.on('data', d => { stdout += d })\n    child.stderr && child.stderr.on('data', d => { stderr += d })\n    child.on('error', reject)\n    child.on('close', code => {\n      if (code) {\n        const err = new Error(\n          require('./y.js')`Command failed: ${cmd} ${args.join(' ')}`\n        )\n        err.isOperational = true\n        err.stderr = stderr\n        err.exitCode = code\n        reject(err)\n      } else {\n        resolve({code, stdout, stderr})\n      }\n    })\n  })\n}\n\nmodule.exports.exec = exec\nfunction exec (cmd, args, opts) {\n  opts = opts || {}\n  return new Promise((resolve, reject) => {\n    cp.exec(`${escapeArg(cmd, true)} ${\n      args.join(' ')\n    }`, opts, (err, stdout) => {\n      if (err) {\n        if (typeof err.code === 'number') {\n          err.exitCode = err.code\n        }\n        reject(err)\n      } else {\n        resolve(stdout)\n      }\n    })\n  })\n}\n\nmodule.exports.escapeArg = escapeArg\nfunction escapeArg (str, asPath) {\n  return process.platform === 'win32' && asPath\n    ? path.normalize(str)\n      .split(/\\\\/)\n      .map(s => s.match(/\\s+/) ? `\"${s}\"` : s)\n      .join('\\\\')\n    : process.platform === 'win32'\n      ? `\"${str}\"`\n      : str.match(/[^-_.~/\\w]/)\n        ? `'${str.replace(/'/g, \"'\\\"'\\\"'\")}'`\n        : str\n}\n"]}