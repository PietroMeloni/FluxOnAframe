{"version":3,"sources":["../../../../../node_modules/npm/node_modules/libnpx/index.js"],"names":["Buffer","require","promisify","child","fs","parseArgs","path","which","module","exports","npx","argv","shell","fallback","process","env","SHELL","console","log","exitCode","call","command","package","q","error","Y","showHelp","startTime","Date","now","localBinPath","cwd","then","local","PATH","delimiter","Promise","all","getExistingPath","getEnv","existing","args","newEnv","Object","assign","packageRequested","npxPkg","pkg","notify","e","ensurePackages","results","added","updated","length","readdir","bin","platform","bins","filter","b","Error","cmd","RegExp","matching","find","match","resolve","err","code","execCommand","catch","message","_localBinPath","prefix","join","_getEnv","opts","findNodeScript","npm","isLocal","npmPath","unshift","escapeArg","exec","parse","_ensurePackages","specs","cache","getNpmCache","pid","toString","rimraf","on","sync","installPackages","info","_getExistingPath","cmdHadVersion","ignoreExisting","install","_getNpmCache","userconfig","push","trim","_buildArgs","buildArgs","concat","_installPackages","spawn","stdio","installerStdio","deets","stdout","JSON","_execCommand","_existing","argvCmdOpts","cmdOpts","alwaysSpawn","nodeArg","Module","noYargs","reset","runMain","Array","isArray","reduce","acc","arg","split","runCommand","isOperational","_findNodeScript","stat","extname","isDirectory","target","main","script","bytecount","buf","alloc","open","read","fd","close","re","mingw","str","dirname"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nconst Buffer = require('safe-buffer').Buffer\nconst promisify = require('./util.js').promisify\n\nconst child = require('./child')\nconst fs = require('fs')\nconst parseArgs = require('./parse-args.js')\nconst path = require('path')\nconst which = promisify(require('which'))\n\nmodule.exports = npx\nmodule.exports.parseArgs = parseArgs\nfunction npx (argv) {\n  const shell = argv['shell-auto-fallback']\n  if (shell || shell === '') {\n    const fallback = require('./auto-fallback.js')(\n      shell, process.env.SHELL, argv\n    )\n    if (fallback) {\n      return console.log(fallback)\n    } else {\n      process.exitCode = 1\n      return\n    }\n  }\n\n  if (!argv.call && (!argv.command || !argv.package)) {\n    !argv.q && console.error(Y()`\\nERROR: You must supply a command.\\n`)\n    !argv.q && parseArgs.showHelp()\n    process.exitCode = 1\n    return\n  }\n\n  const startTime = Date.now()\n\n  // First, we look to see if we're inside an npm project, and grab its\n  // bin path. This is exactly the same as running `$ npm bin`.\n  return localBinPath(process.cwd()).then(local => {\n    if (local) {\n      // Local project paths take priority. Go ahead and prepend it.\n      process.env.PATH = `${local}${path.delimiter}${process.env.PATH}`\n    }\n    return Promise.all([\n      // Figuring out if a command exists, early on, lets us maybe\n      // short-circuit a few things later. This bit here primarily benefits\n      // calls like `$ npx foo`, where we might just be trying to invoke\n      // a single command and use whatever is already in the path.\n      argv.command && getExistingPath(argv.command, argv),\n      // The `-c` flag involves special behavior when used: in this case,\n      // we take a bit of extra time to pick up npm's full lifecycle script\n      // environment (so you can use `$npm_package_xxxxx` and company).\n      // Without that flag, we just use the current env.\n      argv.call && local && getEnv(argv)\n    ]).then(args => {\n      const existing = args[0]\n      const newEnv = args[1]\n      if (newEnv) {\n        // NOTE - we don't need to manipulate PATH further here, because\n        //        npm has already done so. And even added the node-gyp path!\n        Object.assign(process.env, newEnv)\n      }\n      if ((!existing && !argv.call) || argv.packageRequested) {\n        // We only fire off the updateNotifier if we're installing things\n        if (argv.npxPkg) {\n          try {\n            require('update-notifier')({\n              pkg: require(argv.npxPkg)\n            }).notify()\n          } catch (e) {}\n        }\n        // Some npm packages need to be installed. Let's install them!\n        return ensurePackages(argv.package, argv).then(results => {\n          if (results && results.added && results.updated && !argv.q) {\n            console.error(Y()`npx: installed ${\n              results.added.length + results.updated.length\n            } in ${(Date.now() - startTime) / 1000}s`)\n          }\n          if (\n            argv.command &&\n            !existing &&\n            !argv.packageRequested &&\n            argv.package.length === 1\n          ) {\n            return promisify(fs.readdir)(results.bin).then(bins => {\n              if (process.platform === 'win32') {\n                bins = bins.filter(b => b !== 'etc' && b !== 'node_modules')\n              }\n              if (bins.length < 1) {\n                throw new Error(Y()`command not found: ${argv.command}`)\n              }\n              const cmd = new RegExp(`^${argv.command}(?:\\\\.cmd)?$`, 'i')\n              const matching = bins.find(b => b.match(cmd))\n              return path.resolve(results.bin, bins[matching] || bins[0])\n            }, err => {\n              if (err.code === 'ENOENT') {\n                throw new Error(Y()`command not found: ${argv.command}`)\n              } else {\n                throw err\n              }\n            })\n          } else {\n            return existing\n          }\n        })\n      } else {\n        // We can skip any extra installation, 'cause everything exists.\n        return existing\n      }\n    }).then(existing => {\n      return execCommand(existing, argv)\n    }).catch(err => {\n      !argv.q && console.error(err.message)\n      process.exitCode = err.exitCode || 1\n    })\n  })\n}\n\nmodule.exports._localBinPath = localBinPath\nfunction localBinPath (cwd) {\n  return require('./get-prefix.js')(cwd).then(prefix => {\n    return prefix && path.join(prefix, 'node_modules', '.bin')\n  })\n}\n\nmodule.exports._getEnv = getEnv\nfunction getEnv (opts) {\n  const args = ['run', 'env', '--parseable']\n  return findNodeScript(opts.npm, {isLocal: true}).then(npmPath => {\n    if (npmPath) {\n      args.unshift(child.escapeArg(opts.npm))\n      return process.argv[0]\n    } else {\n      return opts.npm\n    }\n  }).then(npmPath => {\n    return child.exec(npmPath, args)\n  }).then(require('dotenv').parse)\n}\n\nmodule.exports._ensurePackages = ensurePackages\nfunction ensurePackages (specs, opts) {\n  return (\n    opts.cache ? Promise.resolve(opts.cache) : getNpmCache(opts)\n  ).then(cache => {\n    const prefix = path.join(cache, '_npx', process.pid.toString())\n    const bins = process.platform === 'win32'\n      ? prefix\n      : path.join(prefix, 'bin')\n    const rimraf = require('rimraf')\n    process.on('exit', () => rimraf.sync(prefix))\n    return promisify(rimraf)(bins).then(() => {\n      return installPackages(specs, prefix, opts)\n    }).then(info => {\n      // This will make temp bins _higher priority_ than even local bins.\n      // This is intentional, since npx assumes that if you went through\n      // the trouble of doing `-p`, you're rather have that one. Right? ;)\n      process.env.PATH = `${bins}${path.delimiter}${process.env.PATH}`\n      if (!info) { info = {} }\n      info.prefix = prefix\n      info.bin = bins\n      return info\n    })\n  })\n}\n\nmodule.exports._getExistingPath = getExistingPath\nfunction getExistingPath (command, opts) {\n  if (opts.isLocal) {\n    return Promise.resolve(command)\n  } else if (\n    opts.cmdHadVersion || opts.packageRequested || opts.ignoreExisting\n  ) {\n    return Promise.resolve(false)\n  } else {\n    return which(command).catch(err => {\n      if (err.code === 'ENOENT') {\n        if (opts.install === false) {\n          err.exitCode = 127\n          throw err\n        }\n      } else {\n        throw err\n      }\n    })\n  }\n}\n\nmodule.exports._getNpmCache = getNpmCache\nfunction getNpmCache (opts) {\n  const args = ['config', 'get', 'cache', '--parseable']\n  if (opts.userconfig) {\n    args.push('--userconfig', child.escapeArg(opts.userconfig, true))\n  }\n  return findNodeScript(opts.npm, {isLocal: true}).then(npmPath => {\n    if (npmPath) {\n      // This one is NOT escaped as a path because it's handed to Node.\n      args.unshift(child.escapeArg(opts.npm))\n      return process.argv[0]\n    } else {\n      return opts.npm\n    }\n  }).then(npmPath => {\n    return child.exec(npmPath, args)\n  }).then(cache => cache.trim())\n}\n\nmodule.exports._buildArgs = buildArgs\nfunction buildArgs (specs, prefix, opts) {\n  const args = ['install'].concat(specs)\n  args.push('--global', '--prefix', prefix)\n  if (opts.cache) args.push('--cache', opts.cache)\n  if (opts.userconfig) args.push('--userconfig', opts.userconfig)\n  args.push('--loglevel', 'error', '--json')\n\n  return args\n}\n\nmodule.exports._installPackages = installPackages\nfunction installPackages (specs, prefix, opts) {\n  const args = buildArgs(specs, prefix, opts)\n  return findNodeScript(opts.npm, {isLocal: true}).then(npmPath => {\n    if (npmPath) {\n      args.unshift(\n        process.platform === 'win32'\n          ? child.escapeArg(opts.npm)\n          : opts.npm\n      )\n      return process.argv[0]\n    } else {\n      return opts.npm\n    }\n  }).then(npmPath => {\n    return process.platform === 'win32' ? child.escapeArg(npmPath, true) : npmPath\n  }).then(npmPath => {\n    return child.spawn(npmPath, args, {\n      stdio: opts.installerStdio\n        ? opts.installerStdio\n        : [0, 'pipe', opts.q ? 'ignore' : 2]\n    }).then(deets => {\n      try {\n        return deets.stdout ? JSON.parse(deets.stdout) : null\n      } catch (e) { }\n    }, err => {\n      if (err.exitCode) {\n        err.message = Y()`Install for ${specs} failed with code ${err.exitCode}`\n      }\n      throw err\n    })\n  })\n}\n\nmodule.exports._execCommand = execCommand\nfunction execCommand (_existing, argv) {\n  return findNodeScript(_existing, argv).then(existing => {\n    const argvCmdOpts = argv.cmdOpts || []\n    if (existing && !argv.alwaysSpawn && !argv.nodeArg && !argv.shell && existing !== process.argv[1]) {\n      const Module = require('module')\n      // let it take over the process. This means we can skip node startup!\n      if (!argv.noYargs) {\n        // blow away built-up yargs crud\n        require('yargs').reset()\n      }\n      process.argv = [\n        process.argv[0], // Current node binary\n        existing // node script path. `runMain()` will set this as the new main\n      ].concat(argvCmdOpts) // options for the cmd itself\n      Module.runMain() // ✨MAGIC✨. Sorry-not-sorry\n    } else if (!existing && argv.nodeArg && argv.nodeArg.length) {\n      throw new Error(Y()`ERROR: --node-arg/-n can only be used on packages with node scripts.`)\n    } else {\n      let cmd = existing\n      let cmdOpts = argvCmdOpts\n      if (existing) {\n        cmd = process.argv[0]\n        if (process.platform === 'win32') {\n          cmd = child.escapeArg(cmd, true)\n        }\n        // If we know we're running a run script and we got a --node-arg,\n        // we need to fudge things a bit to get them working right.\n        cmdOpts = argv.nodeArg\n        if (cmdOpts) {\n          cmdOpts = Array.isArray(cmdOpts) ? cmdOpts : [cmdOpts]\n        } else {\n          cmdOpts = []\n        }\n        // It's valid for a single arg to be a string of multiple\n        // space-separated node args.\n        // Example: `$ npx -n '--inspect --harmony --debug' ...`\n        cmdOpts = cmdOpts.reduce((acc, arg) => {\n          return acc.concat(arg.split(/\\s+/))\n        }, [])\n        cmdOpts = cmdOpts.concat(existing, argvCmdOpts)\n      }\n      const opts = Object.assign({}, argv, { cmdOpts })\n      return child.runCommand(cmd, opts).catch(err => {\n        if (err.isOperational && err.exitCode) {\n          // At this point, we want to treat errors from the child as if\n          // we were just running the command. That means no extra msg logging\n          process.exitCode = err.exitCode\n        } else {\n          // But if it's not just a regular child-level error, blow up normally\n          throw err\n        }\n      })\n    }\n  })\n}\n\nmodule.exports._findNodeScript = findNodeScript\nfunction findNodeScript (existing, opts) {\n  if (!existing) {\n    return Promise.resolve(false)\n  } else {\n    return promisify(fs.stat)(existing).then(stat => {\n      if (opts && opts.isLocal && path.extname(existing) === '.js') {\n        return existing\n      } else if (opts && opts.isLocal && stat.isDirectory()) {\n        // npx will execute the directory itself\n        try {\n          const pkg = require(path.resolve(existing, 'package.json'))\n          const target = path.resolve(existing, pkg.bin || pkg.main || 'index.js')\n          return findNodeScript(target, opts).then(script => {\n            if (script) {\n              return script\n            } else {\n              throw new Error(Y()`command not found: ${target}`)\n            }\n          })\n        } catch (e) {\n          throw new Error(Y()`command not found: ${existing}`)\n        }\n      } else if (process.platform !== 'win32') {\n        const bytecount = 400\n        const buf = Buffer.alloc(bytecount)\n        return promisify(fs.open)(existing, 'r').then(fd => {\n          return promisify(fs.read)(fd, buf, 0, bytecount, 0).then(() => {\n            return promisify(fs.close)(fd)\n          }, err => {\n            return promisify(fs.close)(fd).then(() => { throw err })\n          })\n        }).then(() => {\n          const re = /#!\\s*(?:\\/usr\\/bin\\/env\\s*node|\\/usr\\/local\\/bin\\/node|\\/usr\\/bin\\/node)\\s*\\r?\\n/i\n          return buf.toString('utf8').match(re) && existing\n        })\n      } else if (process.platform === 'win32') {\n        const buf = Buffer.alloc(1000)\n        return promisify(fs.open)(existing, 'r').then(fd => {\n          return promisify(fs.read)(fd, buf, 0, 1000, 0).then(() => {\n            return promisify(fs.close)(fd)\n          }, err => {\n            return promisify(fs.close)(fd).then(() => { throw err })\n          })\n        }).then(() => {\n          return buf.toString('utf8').trim()\n        }).then(str => {\n          const cmd = /\"%~dp0\\\\node\\.exe\"\\s+\"%~dp0\\\\(.*)\"\\s+%\\*/\n          const mingw = /\"\\$basedir\\/node\"\\s+\"\\$basedir\\/(.*)\"\\s+\"\\$@\"/i\n          return str.match(cmd) || str.match(mingw)\n        }).then(match => {\n          return match && path.join(path.dirname(existing), match[1])\n        })\n      }\n    })\n  }\n}\n\nfunction Y () {\n  return require('./y.js')\n}\n"]}