{"version":3,"sources":["../../../../../node_modules/npm/node_modules/run-queue/queue.js"],"names":["module","exports","RunQueue","validate","require","opts","finished","inflight","maxConcurrency","queued","queue","currentPrio","currentQueue","Promise","global","deferred","prototype","run","arguments","length","Error","self","promise","resolve","reject","_runQueue","prios","Object","keys","ii","prioQueue","next","shift","args","queueEntry","cmd","apply","then","err","add","prio","Math","abs","floor","Number","push"],"mappings":"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","file":"queue.js","sourcesContent":["'use strict'\nmodule.exports = RunQueue\n\nvar validate = require('aproba')\n\nfunction RunQueue (opts) {\n  validate('Z|O', [opts])\n  if (!opts) opts = {}\n  this.finished = false\n  this.inflight = 0\n  this.maxConcurrency = opts.maxConcurrency || 1\n  this.queued = 0\n  this.queue = []\n  this.currentPrio = null\n  this.currentQueue = null\n  this.Promise = opts.Promise || global.Promise\n  this.deferred = {}\n}\n\nRunQueue.prototype = {}\n\nRunQueue.prototype.run = function () {\n  if (arguments.length !== 0) throw new Error('RunQueue.run takes no arguments')\n  var self = this\n  var deferred = this.deferred\n  if (!deferred.promise) {\n    deferred.promise = new this.Promise(function (resolve, reject) {\n      deferred.resolve = resolve\n      deferred.reject = reject\n      self._runQueue()\n    })\n  }\n  return deferred.promise\n}\n\nRunQueue.prototype._runQueue = function () {\n  var self = this\n\n  while ((this.inflight < this.maxConcurrency) && this.queued) {\n    if (!this.currentQueue || this.currentQueue.length === 0) {\n      // wait till the current priority is entirely processed before\n      // starting a new one\n      if (this.inflight) return\n      var prios = Object.keys(this.queue)\n      for (var ii = 0; ii < prios.length; ++ii) {\n        var prioQueue = this.queue[prios[ii]]\n        if (prioQueue.length) {\n          this.currentQueue = prioQueue\n          this.currentPrio = prios[ii]\n          break\n        }\n      }\n    }\n\n    --this.queued\n    ++this.inflight\n    var next = this.currentQueue.shift()\n    var args = next.args || []\n\n    // we explicitly construct a promise here so that queue items can throw\n    // or immediately return to resolve\n    var queueEntry = new this.Promise(function (resolve) {\n      resolve(next.cmd.apply(null, args))\n    })\n\n    queueEntry.then(function () {\n      --self.inflight\n      if (self.finished) return\n      if (self.queued <= 0 && self.inflight <= 0) {\n        self.finished = true\n        self.deferred.resolve()\n      }\n      self._runQueue()\n    }, function (err) {\n      self.finished = true\n      self.deferred.reject(err)\n    })\n  }\n}\n\nRunQueue.prototype.add = function (prio, cmd, args) {\n  if (this.finished) throw new Error(\"Can't add to a finished queue. Create a new queue.\")\n  if (Math.abs(Math.floor(prio)) !== prio) throw new Error('Priorities must be a positive integer value.')\n  validate('NFA|NFZ', [prio, cmd, args])\n  prio = Number(prio)\n  if (!this.queue[prio]) this.queue[prio] = []\n  ++this.queued\n  this.queue[prio].push({cmd: cmd, args: args})\n  // if this priority is higher than the one we're currently processing,\n  // switch back to processing its queue.\n  if (this.currentPrio > prio) {\n    this.currentQueue = this.queue[prio]\n    this.currentPrio = prio\n  }\n}\n"]}