{"version":3,"sources":["../../../../../node_modules/npm/node_modules/move-concurrently/move.js"],"names":["module","exports","move","nodeFs","require","rimraf","validate","copy","RunQueue","extend","Object","assign","_extend","promisify","Promise","fn","args","slice","call","arguments","resolve","reject","apply","concat","err","value","from","to","opts","global","fs","rimrafAsync","renameAsync","rename","top","queue","maxConcurrency","recurseWith","add","run","then","remove","code","passThroughError","target","unlink","chmod","stat","lstat","rmdir","readdir","glob","done","catch","item"],"mappings":"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","file":"move.js","sourcesContent":["'use strict'\nmodule.exports = move\n\nvar nodeFs = require('fs')\nvar rimraf = require('rimraf')\nvar validate = require('aproba')\nvar copy = require('copy-concurrently')\nvar RunQueue = require('run-queue')\nvar extend = Object.assign || require('util')._extend\n\nfunction promisify (Promise, fn) {\n  return function () {\n    var args = [].slice.call(arguments)\n    return new Promise(function (resolve, reject) {\n      return fn.apply(null, args.concat(function (err, value) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      }))\n    })\n  }\n}\n\nfunction move (from, to, opts) {\n  validate('SSO|SS', arguments)\n  opts = extend({}, opts || {})\n\n  var Promise = opts.Promise || global.Promise\n  var fs = opts.fs || nodeFs\n  var rimrafAsync = promisify(Promise, rimraf)\n  var renameAsync = promisify(Promise, fs.rename)\n\n  opts.top = from\n\n  var queue = new RunQueue({\n    maxConcurrency: opts.maxConcurrency,\n    Promise: Promise\n  })\n  opts.queue = queue\n  opts.recurseWith = rename\n\n  queue.add(0, rename, [from, to, opts])\n\n  return queue.run().then(function () {\n    return remove(from)\n  }, function (err) {\n    // if the target already exists don't clobber it\n    if (err.code === 'EEXIST' || err.code === 'EPERM') {\n      return passThroughError()\n    } else {\n      return remove(to).then(passThroughError, passThroughError)\n    }\n    function passThroughError () {\n      return Promise.reject(err)\n    }\n  })\n\n  function remove (target) {\n    var opts = {\n      unlink: fs.unlink,\n      chmod: fs.chmod,\n      stat: fs.stat,\n      lstat: fs.lstat,\n      rmdir: fs.rmdir,\n      readdir: fs.readdir,\n      glob: false\n    }\n    return rimrafAsync(target, opts)\n  }\n\n  function rename (from, to, opts, done) {\n    return renameAsync(from, to).catch(function (err) {\n      if (err.code !== 'EXDEV') {\n        return Promise.reject(err)\n      } else {\n        return remove(to).then(function () {\n          return copy.item(from, to, opts)\n        })\n      }\n    })\n  }\n}\n"]}