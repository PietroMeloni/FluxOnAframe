{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/JSONStream/test/stringify_object.js"],"names":["fs","require","join","file","__dirname","JSONStream","it","style","es","pending","passed","randomObj","Math","random","hello","whatever","lies","nothing","stuff","ouec","ix","count","expected","stringify","stringifyObject","connect","writeArray","err","lines","JSON","parse","deepEqual","console","error","key","toString","slice","write","process","nextTick","end"],"mappings":";;AACA,IAAIA,KAAKC,QAAS,IAAT,CAAT;AAAA,IACIC,OAAOD,QAAQ,MAAR,EAAgBC,IAD3B;AAAA,IAEIC,OAAOD,KAAKE,SAAL,EAAgB,UAAhB,EAA2B,cAA3B,CAFX;AAAA,IAGIC,aAAaJ,QAAQ,KAAR,CAHjB;AAAA,IAIIK,KAAKL,QAAQ,OAAR,EAAiBM,KAAjB,CAAuB,QAAvB,CAJT;AAAA,IAKIC,KAAKP,QAAQ,cAAR,CALT;AAAA,IAMIQ,UAAU,EANd;AAAA,IAOIC,SAAS,IAPb;;AASE,SAASC,SAAT,GAAsB;AACpB,SACEC,KAAKC,MAAL,KAAiB,GAAjB,GACE,EAACC,OAAO,aAAR;AACEC,cAAU,MADZ;AAEEC,UAAM,IAFR;AAGEC,aAAS,CAAC,IAAD,CAHX;AAIEC,WAAO,CAACN,KAAKC,MAAL,EAAD,EAAeD,KAAKC,MAAL,EAAf,EAA6BD,KAAKC,MAAL,EAA7B;AAJT,GADF,GAOE,CAAC,OAAD,EAAU,UAAV,EAAsB,EAACM,MAAM,KAAP,EAAtB,EAAqC,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAD,CAArC,CARJ;AAUD;;AAEH,KAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKX,OAAtB,EAA+BW,IAA/B;AAAqC,GAAC,UAAUC,KAAV,EAAiB;AACrD,QAAIC,WAAY,EAAhB;AAAA,QACIC,YAAYlB,WAAWmB,eAAX,EADhB;;AAGAhB,OAAGiB,OAAH,CACEF,SADF,EAEEf,GAAGkB,UAAH,CAAc,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAClCtB,SAAGuB,KAAKC,KAAL,CAAWF,MAAM1B,IAAN,CAAW,EAAX,CAAX,CAAH,EAA+B6B,SAA/B,CAAyCT,QAAzC;AACA,UAAI,EAAEb,OAAF,KAAc,CAAlB,EAAqB;AACnBuB,gBAAQC,KAAR,CAAc,QAAd;AACD;AACF,KALD,CAFF;;AAUA,WAAOZ,OAAP,EAAiB;AACf,UAAIa,MAAMtB,KAAKC,MAAL,GAAcsB,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAV;AACAd,eAASY,GAAT,IAAgBvB,WAAhB;AACAY,gBAAUc,KAAV,CAAgB,CAAEH,GAAF,EAAOZ,SAASY,GAAT,CAAP,CAAhB;AACD;;AAEDI,YAAQC,QAAR,CAAiB,YAAY;AAC3BhB,gBAAUiB,GAAV;AACD,KAFD;AAGD,GAvBoC,EAuBlCpB,EAvBkC;AAArC","file":"stringify_object.js","sourcesContent":["\nvar fs = require ('fs')\n  , join = require('path').join\n  , file = join(__dirname, 'fixtures','all_npm.json')\n  , JSONStream = require('../')\n  , it = require('it-is').style('colour')\n  , es = require('event-stream')\n  , pending = 10\n  , passed = true\n\n  function randomObj () {\n    return (\n      Math.random () < 0.4\n      ? {hello: 'eonuhckmqjk',\n          whatever: 236515,\n          lies: true,\n          nothing: [null],\n          stuff: [Math.random(),Math.random(),Math.random()]\n        } \n      : ['AOREC', 'reoubaor', {ouec: 62642}, [[[], {}, 53]]]\n    )\n  }\n\nfor (var ix = 0; ix < pending; ix++) (function (count) {\n  var expected =  {}\n    , stringify = JSONStream.stringifyObject()\n    \n  es.connect(\n    stringify,\n    es.writeArray(function (err, lines) {\n      it(JSON.parse(lines.join(''))).deepEqual(expected)\n      if (--pending === 0) {\n        console.error('PASSED')\n      }\n    })\n  )\n\n  while (count --) {\n    var key = Math.random().toString(16).slice(2)\n    expected[key] = randomObj()\n    stringify.write([ key, expected[key] ])\n  }\n\n  process.nextTick(function () {\n    stringify.end()\n  })\n})(ix)\n"]}