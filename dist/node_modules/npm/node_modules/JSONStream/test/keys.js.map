{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/JSONStream/test/keys.js"],"names":["test","require","fs","join","couch_sample_file","__dirname","JSONStream","fixture","obj","one","two","three","assertFixtureKeys","stream","t","keys","values","on","data","push","key","value","deepEqual","end","write","JSON","stringify","parse","emitKey","emitPath","paths","console","log","path","advanced","readFileSync","d","fail"],"mappings":"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","file":"keys.js","sourcesContent":["var test = require('tape');\nvar fs = require ('fs');\nvar join = require('path').join;\nvar couch_sample_file = join(__dirname, 'fixtures','couch_sample.json');\nvar JSONStream = require('../');\n\nvar fixture = {\n  obj: {\n    one: 1,\n    two: 2,\n    three: 3\n  }\n};\n\nfunction assertFixtureKeys(stream, t) {\n    var keys = [];\n    var values = [];\n    stream.on('data', function(data) {\n        keys.push(data.key);\n        values.push(data.value);\n    });\n\n    stream.on('end', function() {\n        t.deepEqual(keys, ['one', 'two', 'three']);\n        t.deepEqual(values, [1,2,3]);\n        t.end();\n    });\n    stream.write(JSON.stringify(fixture));\n    stream.end();\n}\n\ntest('keys via string', function(t) {\n    var stream = JSONStream.parse('obj.$*');\n    assertFixtureKeys(stream, t);\n});\n\ntest('keys via array', function(t) {\n    var stream = JSONStream.parse(['obj',{emitKey: true}]);\n    assertFixtureKeys(stream, t);\n});\n\ntest('path via array', function(t) {\n    var stream = JSONStream.parse(['obj',{emitPath: true}]);\n    \n    var paths = [];\n    var values = [];\n    stream.on('data', function(data) {\n        console.log(JSON.stringify(data));\n        paths.push(data.path);\n        values.push(data.value);\n    });\n\n    stream.on('end', function() {\n        t.deepEqual(paths, [['obj', 'one'], ['obj', 'two'], ['obj', 'three']]);\n        t.deepEqual(values, [1,2,3]);\n        t.end();\n    });\n    stream.write(JSON.stringify(fixture));\n    stream.end();\n});\n\ntest('advanced keys', function(t) {\n    var advanced = fs.readFileSync(couch_sample_file);\n    var stream = JSONStream.parse(['rows', true, 'doc', {emitKey: true}]);\n\n    var keys = [];\n    var values = [];\n    stream.on('data', function(data) {\n        keys.push(data.key);\n        values.push(data.value);\n    });\n\n    stream.on('end', function() {\n        t.deepEqual(keys, [\n            '_id', '_rev', 'hello',\n            '_id', '_rev', 'hello'\n        ]);\n        t.deepEqual(values, [\n            \"change1_0.6995461115147918\", \"1-e240bae28c7bb3667f02760f6398d508\", 1,\n            \"change2_0.6995461115147918\", \"1-13677d36b98c0c075145bb8975105153\", 2\n        ]);\n        t.end();\n    });\n    stream.write(advanced);\n    stream.end();\n});\n\ntest('parent keys', function(t) {\n    var stream = JSONStream.parse('$*');\n    var d = null;\n    stream.on('data', function(data) {\n        if(d) t.fail('should only be called once');\n        d = data;\n    });\n\n    stream.on('end', function() {\n        t.deepEqual(d,{\n            key: 'obj',\n            value: fixture.obj\n        });\n        t.end();\n    });\n    stream.write(JSON.stringify(fixture));\n    stream.end();\n})\n"]}