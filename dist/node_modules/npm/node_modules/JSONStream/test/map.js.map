{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/JSONStream/test/map.js"],"names":["test","require","JSONStream","t","actual","stream","parse","e","on","v","push","deepEqual","end","write","JSON","stringify"],"mappings":";;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,IAAIC,aAAaD,QAAQ,KAAR,CAAjB;;AAEAD,KAAK,cAAL,EAAqB,UAAUG,CAAV,EAAa;;AAEhC,MAAIC,SAAS,EAAb;;AAEAC,WAASH,WAAWI,KAAX,CAAiB,CAAC,IAAD,CAAjB,EAAyB,UAAUC,CAAV,EAAa;AAAE,WAAOA,IAAE,EAAT;AAAa,GAArD,CAAT;AACEF,SAAOG,EAAP,CAAU,MAAV,EAAkB,UAAUC,CAAV,EAAa;AAAEL,WAAOM,IAAP,CAAYD,CAAZ;AAAe,GAAhD;AACAJ,SAAOG,EAAP,CAAU,KAAV,EAAiB,YAAY;AAC3BL,MAAEQ,SAAF,CAAYP,MAAZ,EAAoB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,CAApB;AACAD,MAAES,GAAF;AAED,GAJD;;AAMFP,SAAOQ,KAAP,CAAaC,KAAKC,SAAL,CAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAf,EAA8B,IAA9B,EAAoC,CAApC,CAAb;AACAV,SAAOO,GAAP;AAED,CAfD;;AAiBAZ,KAAK,iBAAL,EAAwB,UAAUG,CAAV,EAAa;;AAEnC,MAAIC,SAAS,EAAb;;AAEAC,WAASH,WACNI,KADM,CACA,CAAC,IAAD,CADA,EACQ,UAAUC,CAAV,EAAa;AAAE,WAAOA,IAAE,CAAF,GAAMA,CAAN,GAAU,IAAjB;AAAsB,GAD7C,EAENC,EAFM,CAEH,MAFG,EAEK,UAAUC,CAAV,EAAa;AAAEL,WAAOM,IAAP,CAAYD,CAAZ;AAAe,GAFnC,EAGND,EAHM,CAGH,KAHG,EAGI,YAAY;AACrBL,MAAEQ,SAAF,CAAYP,MAAZ,EAAoB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAApB;AACAD,MAAES,GAAF;AAED,GAPM,CAAT;;AASAP,SAAOQ,KAAP,CAAaC,KAAKC,SAAL,CAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAf,EAA8B,IAA9B,EAAoC,CAApC,CAAb;AACAV,SAAOO,GAAP;AAED,CAhBD","file":"map.js","sourcesContent":["\nvar test = require('tape')\n\nvar JSONStream = require('../')\n\ntest('map function', function (t) {\n\n  var actual = []\n\n  stream = JSONStream.parse([true], function (e) { return e*10 })\n    stream.on('data', function (v) { actual.push(v)})\n    stream.on('end', function () {\n      t.deepEqual(actual, [10,20,30,40,50,60])\n      t.end()\n\n    })\n\n  stream.write(JSON.stringify([1,2,3,4,5,6], null, 2))\n  stream.end()\n\n})\n\ntest('filter function', function (t) {\n\n  var actual = []\n\n  stream = JSONStream\n    .parse([true], function (e) { return e%2 ? e : null})\n    .on('data', function (v) { actual.push(v)})\n    .on('end', function () {\n      t.deepEqual(actual, [1,3,5])\n      t.end()\n\n    })\n\n  stream.write(JSON.stringify([1,2,3,4,5,6], null, 2))\n  stream.end()\n\n})\n\n"]}