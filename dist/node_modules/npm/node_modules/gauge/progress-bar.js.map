{"version":3,"sources":["../../../../../node_modules/npm/node_modules/gauge/progress-bar.js"],"names":["validate","require","renderTemplate","wideTruncate","stringWidth","module","exports","theme","width","completed","sofar","Math","round","rest","template","type","value","repeat","complete","length","remaining","string","result","n","floor"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,QAAR,CAAf;AACA,IAAIC,iBAAiBD,QAAQ,sBAAR,CAArB;AACA,IAAIE,eAAeF,QAAQ,iBAAR,CAAnB;AACA,IAAIG,cAAcH,QAAQ,cAAR,CAAlB;;AAEAI,OAAOC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmC;AAClDT,WAAS,KAAT,EAAgB,CAACO,KAAD,EAAQC,KAAR,EAAeC,SAAf,CAAhB;AACA,MAAIA,YAAY,CAAhB,EAAmBA,YAAY,CAAZ;AACnB,MAAIA,YAAY,CAAhB,EAAmBA,YAAY,CAAZ;AACnB,MAAID,SAAS,CAAb,EAAgB,OAAO,EAAP;AAChB,MAAIE,QAAQC,KAAKC,KAAL,CAAWJ,QAAQC,SAAnB,CAAZ;AACA,MAAII,OAAOL,QAAQE,KAAnB;AACA,MAAII,WAAW,CACb,EAACC,MAAM,UAAP,EAAmBC,OAAOC,OAAOV,MAAMW,QAAb,EAAuBR,KAAvB,CAA1B,EAAyDS,QAAQT,KAAjE,EADa,EAEb,EAACK,MAAM,WAAP,EAAoBC,OAAOC,OAAOV,MAAMa,SAAb,EAAwBP,IAAxB,CAA3B,EAA0DM,QAAQN,IAAlE,EAFa,CAAf;AAIA,SAAOX,eAAeM,KAAf,EAAsBM,QAAtB,EAAgCP,KAAhC,CAAP;AACD,CAZD;;AAcA;AACA,SAASU,MAAT,CAAiBI,MAAjB,EAAyBb,KAAzB,EAAgC;AAC9B,MAAIc,SAAS,EAAb;AACA,MAAIC,IAAIf,KAAR;AACA,KAAG;AACD,QAAIe,IAAI,CAAR,EAAW;AACTD,gBAAUD,MAAV;AACD;AACDE,QAAIZ,KAAKa,KAAL,CAAWD,IAAI,CAAf,CAAJ;AACA;AACAF,cAAUA,MAAV;AACD,GAPD,QAOSE,KAAKnB,YAAYkB,MAAZ,IAAsBd,KAPpC;;AASA,SAAOL,aAAamB,MAAb,EAAqBd,KAArB,CAAP;AACD","file":"progress-bar.js","sourcesContent":["'use strict'\nvar validate = require('aproba')\nvar renderTemplate = require('./render-template.js')\nvar wideTruncate = require('./wide-truncate')\nvar stringWidth = require('string-width')\n\nmodule.exports = function (theme, width, completed) {\n  validate('ONN', [theme, width, completed])\n  if (completed < 0) completed = 0\n  if (completed > 1) completed = 1\n  if (width <= 0) return ''\n  var sofar = Math.round(width * completed)\n  var rest = width - sofar\n  var template = [\n    {type: 'complete', value: repeat(theme.complete, sofar), length: sofar},\n    {type: 'remaining', value: repeat(theme.remaining, rest), length: rest}\n  ]\n  return renderTemplate(width, template, theme)\n}\n\n// lodash's way of repeating\nfunction repeat (string, width) {\n  var result = ''\n  var n = width\n  do {\n    if (n % 2) {\n      result += string\n    }\n    n = Math.floor(n / 2)\n    /*eslint no-self-assign: 0*/\n    string += string\n  } while (n && stringWidth(result) < width)\n\n  return wideTruncate(result, width)\n}\n"]}