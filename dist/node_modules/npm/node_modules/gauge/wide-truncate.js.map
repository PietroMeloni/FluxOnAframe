{"version":3,"sources":["../../../../../node_modules/npm/node_modules/gauge/wide-truncate.js"],"names":["stringWidth","require","stripAnsi","module","exports","wideTruncate","str","target","noAnsi","ansiSize","length","truncated","slice"],"mappings":"AAAA;;AACA,IAAIA,cAAcC,QAAQ,cAAR,CAAlB;AACA,IAAIC,YAAYD,QAAQ,YAAR,CAAhB;;AAEAE,OAAOC,OAAP,GAAiBC,YAAjB;;AAEA,SAASA,YAAT,CAAuBC,GAAvB,EAA4BC,MAA5B,EAAoC;AAClC,MAAIP,YAAYM,GAAZ,MAAqB,CAAzB,EAA4B,OAAOA,GAAP;AAC5B,MAAIC,UAAU,CAAd,EAAiB,OAAO,EAAP;AACjB,MAAIP,YAAYM,GAAZ,KAAoBC,MAAxB,EAAgC,OAAOD,GAAP;;AAEhC;AACA;AACA;AACA,MAAIE,SAASN,UAAUI,GAAV,CAAb;AACA,MAAIG,WAAWH,IAAII,MAAJ,GAAaF,OAAOE,MAAnC;AACA,MAAIC,YAAYL,IAAIM,KAAJ,CAAU,CAAV,EAAaL,SAASE,QAAtB,CAAhB;;AAEA;AACA;AACA,SAAOT,YAAYW,SAAZ,IAAyBJ,MAAhC,EAAwC;AACtCI,gBAAYA,UAAUC,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ;AACD;AACD,SAAOD,SAAP;AACD","file":"wide-truncate.js","sourcesContent":["'use strict'\nvar stringWidth = require('string-width')\nvar stripAnsi = require('strip-ansi')\n\nmodule.exports = wideTruncate\n\nfunction wideTruncate (str, target) {\n  if (stringWidth(str) === 0) return str\n  if (target <= 0) return ''\n  if (stringWidth(str) <= target) return str\n\n  // We compute the number of bytes of ansi sequences here and add\n  // that to our initial truncation to ensure that we don't slice one\n  // that we want to keep in half.\n  var noAnsi = stripAnsi(str)\n  var ansiSize = str.length + noAnsi.length\n  var truncated = str.slice(0, target + ansiSize)\n\n  // we have to shrink the result to account for our ansi sequence buffer\n  // (if an ansi sequence was truncated) and double width characters.\n  while (stringWidth(truncated) > target) {\n    truncated = truncated.slice(0, -1)\n  }\n  return truncated\n}\n"]}