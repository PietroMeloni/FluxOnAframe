{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tar/lib/types.js"],"names":["exports","name","Map","code","Array","from","map","kv"],"mappings":"AAAA;AACA;;AACAA,QAAQC,IAAR,GAAe,IAAIC,GAAJ,CAAQ,CACrB,CAAC,GAAD,EAAM,MAAN,CADqB;AAErB;AACA,CAAC,EAAD,EAAK,SAAL,CAHqB,EAIrB,CAAC,GAAD,EAAM,MAAN,CAJqB,EAKrB,CAAC,GAAD,EAAM,cAAN,CALqB;AAMrB;AACA;AACA,CAAC,GAAD,EAAM,iBAAN,CARqB,EASrB,CAAC,GAAD,EAAM,aAAN,CATqB,EAUrB,CAAC,GAAD,EAAM,WAAN,CAVqB,EAWrB,CAAC,GAAD,EAAM,MAAN,CAXqB;AAYrB;AACA,CAAC,GAAD,EAAM,gBAAN,CAbqB;AAcrB;AACA,CAAC,GAAD,EAAM,sBAAN,CAfqB,EAgBrB,CAAC,GAAD,EAAM,gBAAN,CAhBqB;AAiBrB;AACA;AACA,CAAC,GAAD,EAAM,YAAN,CAnBqB;AAoBrB;AACA,CAAC,GAAD,EAAM,YAAN,CArBqB;AAsBrB;AACA,CAAC,GAAD,EAAM,OAAN,CAvBqB;AAwBrB;AACA,CAAC,GAAD,EAAM,yBAAN,CAzBqB;AA0BrB;AACA,CAAC,GAAD,EAAM,qBAAN,CA3BqB;AA4BrB;AACA,CAAC,GAAD,EAAM,kBAAN,CA7BqB;AA8BrB;AACA,CAAC,GAAD,EAAM,gBAAN,CA/BqB;AAgCrB;AACA,CAAC,GAAD,EAAM,YAAN,CAjCqB;AAkCrB;AACA,CAAC,GAAD,EAAM,kBAAN,CAnCqB;AAoCrB;AACA,CAAC,GAAD,EAAM,mBAAN,CArCqB,CAAR,CAAf;;AAwCA;AACAF,QAAQG,IAAR,GAAe,IAAID,GAAJ,CAAQE,MAAMC,IAAN,CAAWL,QAAQC,IAAnB,EAAyBK,GAAzB,CAA6B;AAAA,SAAM,CAACC,GAAG,CAAH,CAAD,EAAQA,GAAG,CAAH,CAAR,CAAN;AAAA,CAA7B,CAAR,CAAf","file":"types.js","sourcesContent":["'use strict'\n// map types from key to human-friendly name\nexports.name = new Map([\n  ['0', 'File'],\n  // same as File\n  ['', 'OldFile'],\n  ['1', 'Link'],\n  ['2', 'SymbolicLink'],\n  // Devices and FIFOs aren't fully supported\n  // they are parsed, but skipped when unpacking\n  ['3', 'CharacterDevice'],\n  ['4', 'BlockDevice'],\n  ['5', 'Directory'],\n  ['6', 'FIFO'],\n  // same as File\n  ['7', 'ContiguousFile'],\n  // pax headers\n  ['g', 'GlobalExtendedHeader'],\n  ['x', 'ExtendedHeader'],\n  // vendor-specific stuff\n  // skip\n  ['A', 'SolarisACL'],\n  // like 5, but with data, which should be skipped\n  ['D', 'GNUDumpDir'],\n  // metadata only, skip\n  ['I', 'Inode'],\n  // data = link path of next file\n  ['K', 'NextFileHasLongLinkpath'],\n  // data = path of next file\n  ['L', 'NextFileHasLongPath'],\n  // skip\n  ['M', 'ContinuationFile'],\n  // like L\n  ['N', 'OldGnuLongPath'],\n  // skip\n  ['S', 'SparseFile'],\n  // skip\n  ['V', 'TapeVolumeHeader'],\n  // like x\n  ['X', 'OldExtendedHeader']\n])\n\n// map the other direction\nexports.code = new Map(Array.from(exports.name).map(kv => [kv[1], kv[0]]))\n"]}