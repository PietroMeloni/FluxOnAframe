{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tar/lib/unpack.js"],"names":["assert","require","EE","EventEmitter","Parser","fs","fsm","path","mkdir","mkdirSync","sync","wc","ONENTRY","Symbol","CHECKFS","ISREUSABLE","MAKEFS","FILE","DIRECTORY","LINK","SYMLINK","HARDLINK","UNSUPPORTED","UNKNOWN","CHECKPATH","MKDIR","ONERROR","PENDING","PEND","UNPEND","ENDED","MAYBECLOSE","SKIP","DOCHOWN","UID","GID","crypto","unlinkFile","cb","process","platform","unlink","name","randomBytes","toString","rename","er","unlinkFileSync","unlinkSync","renameSync","uint32","a","b","c","Unpack","opt","ondone","transform","writable","readable","dirCache","Map","uid","gid","TypeError","preserveOwner","setOwner","undefined","getuid","processUid","processGid","getgid","forceChown","win32","newer","keep","noMtime","preservePaths","cwd","resolve","strip","processUmask","umask","dmode","fmode","on","entry","emit","parts","split","length","slice","join","p","match","warn","isAbsolute","parsed","parse","root","substr","encode","absolute","resume","equal","type","mode","message","dir","preserve","cache","stream","WriteStream","autoClose","actions","done","close","fd","abs","mtime","atime","Date","futimes","utimes","er2","fchown","chown","tx","pipe","linkpath","st","isFile","nlink","dirname","lstat","isDirectory","chmod","rmdir","link","UnpackSync","lstatSync","chmodSync","rmdirSync","oner","closeSync","_","openSync","writeSync","chunk","futimesSync","futimeser","utimesSync","utimeser","fchownSync","fchowner","chownSync","chowner","Sync","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,KAAKD,QAAQ,QAAR,EAAkBE,YAA7B;AACA,IAAMC,SAASH,QAAQ,YAAR,CAAf;AACA,IAAMI,KAAKJ,QAAQ,IAAR,CAAX;AACA,IAAMK,MAAML,QAAQ,aAAR,CAAZ;AACA,IAAMM,OAAON,QAAQ,MAAR,CAAb;AACA,IAAMO,QAAQP,QAAQ,YAAR,CAAd;AACA,IAAMQ,YAAYD,MAAME,IAAxB;AACA,IAAMC,KAAKV,QAAQ,eAAR,CAAX;;AAEA,IAAMW,UAAUC,OAAO,SAAP,CAAhB;AACA,IAAMC,UAAUD,OAAO,SAAP,CAAhB;AACA,IAAME,aAAaF,OAAO,YAAP,CAAnB;AACA,IAAMG,SAASH,OAAO,QAAP,CAAf;AACA,IAAMI,OAAOJ,OAAO,MAAP,CAAb;AACA,IAAMK,YAAYL,OAAO,WAAP,CAAlB;AACA,IAAMM,OAAON,OAAO,MAAP,CAAb;AACA,IAAMO,UAAUP,OAAO,SAAP,CAAhB;AACA,IAAMQ,WAAWR,OAAO,UAAP,CAAjB;AACA,IAAMS,cAAcT,OAAO,aAAP,CAApB;AACA,IAAMU,UAAUV,OAAO,SAAP,CAAhB;AACA,IAAMW,YAAYX,OAAO,WAAP,CAAlB;AACA,IAAMY,QAAQZ,OAAO,OAAP,CAAd;AACA,IAAMa,UAAUb,OAAO,SAAP,CAAhB;AACA,IAAMc,UAAUd,OAAO,SAAP,CAAhB;AACA,IAAMe,OAAOf,OAAO,MAAP,CAAb;AACA,IAAMgB,SAAShB,OAAO,QAAP,CAAf;AACA,IAAMiB,QAAQjB,OAAO,OAAP,CAAd;AACA,IAAMkB,aAAalB,OAAO,YAAP,CAAnB;AACA,IAAMmB,OAAOnB,OAAO,MAAP,CAAb;AACA,IAAMoB,UAAUpB,OAAO,SAAP,CAAhB;AACA,IAAMqB,MAAMrB,OAAO,KAAP,CAAZ;AACA,IAAMsB,MAAMtB,OAAO,KAAP,CAAZ;AACA,IAAMuB,SAASnC,QAAQ,QAAR,CAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMoC,aAAa,SAAbA,UAAa,CAAC9B,IAAD,EAAO+B,EAAP,EAAc;AAC/B,MAAIC,QAAQC,QAAR,KAAqB,OAAzB,EACE,OAAOnC,GAAGoC,MAAH,CAAUlC,IAAV,EAAgB+B,EAAhB,CAAP;;AAEF,MAAMI,OAAOnC,OAAO,UAAP,GAAoB6B,OAAOO,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAjC;AACAvC,KAAGwC,MAAH,CAAUtC,IAAV,EAAgBmC,IAAhB,EAAsB,cAAM;AAC1B,QAAII,EAAJ,EACE,OAAOR,GAAGQ,EAAH,CAAP;AACFzC,OAAGoC,MAAH,CAAUC,IAAV,EAAgBJ,EAAhB;AACD,GAJD;AAKD,CAVD;;AAYA;AACA,IAAMS,iBAAiB,SAAjBA,cAAiB,OAAQ;AAC7B,MAAIR,QAAQC,QAAR,KAAqB,OAAzB,EACE,OAAOnC,GAAG2C,UAAH,CAAczC,IAAd,CAAP;;AAEF,MAAMmC,OAAOnC,OAAO,UAAP,GAAoB6B,OAAOO,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAjC;AACAvC,KAAG4C,UAAH,CAAc1C,IAAd,EAAoBmC,IAApB;AACArC,KAAG2C,UAAH,CAAcN,IAAd;AACD,CAPD;;AASA;AACA,IAAMQ,SAAS,SAATA,MAAS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,SACbF,MAAMA,MAAM,CAAZ,GAAgBA,CAAhB,GACEC,MAAMA,MAAM,CAAZ,GAAgBA,CAAhB,GACAC,CAHW;AAAA,CAAf;;IAKMC,M;;;AACJ,kBAAaC,GAAb,EAAkB;AAAA;;AAChB,QAAI,CAACA,GAAL,EACEA,MAAM,EAAN;;AAEFA,QAAIC,MAAJ,GAAa,aAAK;AAChB,YAAK1B,KAAL,IAAc,IAAd;AACA,YAAKC,UAAL;AACD,KAHD;;AAJgB,gHASVwB,GATU;;AAWhB,UAAKE,SAAL,GAAiB,OAAOF,IAAIE,SAAX,KAAyB,UAAzB,GAAsCF,IAAIE,SAA1C,GAAsD,IAAvE;;AAEA,UAAKC,QAAL,GAAgB,IAAhB;AACA,UAAKC,QAAL,GAAgB,KAAhB;;AAEA,UAAKhC,OAAL,IAAgB,CAAhB;AACA,UAAKG,KAAL,IAAc,KAAd;;AAEA,UAAK8B,QAAL,GAAgBL,IAAIK,QAAJ,IAAgB,IAAIC,GAAJ,EAAhC;;AAEA,QAAI,OAAON,IAAIO,GAAX,KAAmB,QAAnB,IAA+B,OAAOP,IAAIQ,GAAX,KAAmB,QAAtD,EAAgE;AAC9D;AACA,UAAI,OAAOR,IAAIO,GAAX,KAAmB,QAAnB,IAA+B,OAAOP,IAAIQ,GAAX,KAAmB,QAAtD,EACE,MAAM,IAAIC,SAAJ,CAAc,6CAAd,CAAN;AACF,UAAIT,IAAIU,aAAR,EACE,MAAM,IAAID,SAAJ,CACJ,gEADI,CAAN;AAEF,YAAKF,GAAL,GAAWP,IAAIO,GAAf;AACA,YAAKC,GAAL,GAAWR,IAAIQ,GAAf;AACA,YAAKG,QAAL,GAAgB,IAAhB;AACD,KAVD,MAUO;AACL,YAAKJ,GAAL,GAAW,IAAX;AACA,YAAKC,GAAL,GAAW,IAAX;AACA,YAAKG,QAAL,GAAgB,KAAhB;AACD;;AAED;AACA,QAAIX,IAAIU,aAAJ,KAAsBE,SAAtB,IAAmC,OAAOZ,IAAIO,GAAX,KAAmB,QAA1D,EACE,MAAKG,aAAL,GAAqB1B,QAAQ6B,MAAR,IAAkB7B,QAAQ6B,MAAR,OAAqB,CAA5D,CADF,KAGE,MAAKH,aAAL,GAAqB,CAAC,CAACV,IAAIU,aAA3B;;AAEF,UAAKI,UAAL,GAAkB,CAAC,MAAKJ,aAAL,IAAsB,MAAKC,QAA5B,KAAyC3B,QAAQ6B,MAAjD,GAChB7B,QAAQ6B,MAAR,EADgB,GACG,IADrB;AAEA,UAAKE,UAAL,GAAkB,CAAC,MAAKL,aAAL,IAAsB,MAAKC,QAA5B,KAAyC3B,QAAQgC,MAAjD,GAChBhC,QAAQgC,MAAR,EADgB,GACG,IADrB;;AAGA;AACA;AACA,UAAKC,UAAL,GAAkBjB,IAAIiB,UAAJ,KAAmB,IAArC;;AAEA;AACA,UAAKC,KAAL,GAAa,CAAC,CAAClB,IAAIkB,KAAN,IAAelC,QAAQC,QAAR,KAAqB,OAAjD;;AAEA;AACA,UAAKkC,KAAL,GAAa,CAAC,CAACnB,IAAImB,KAAnB;;AAEA;AACA,UAAKC,IAAL,GAAY,CAAC,CAACpB,IAAIoB,IAAlB;;AAEA;AACA,UAAKC,OAAL,GAAe,CAAC,CAACrB,IAAIqB,OAArB;;AAEA;AACA;AACA;AACA,UAAKC,aAAL,GAAqB,CAAC,CAACtB,IAAIsB,aAA3B;;AAEA;AACA;AACA,UAAKpC,MAAL,GAAc,CAAC,CAACc,IAAId,MAApB;;AAEA,UAAKqC,GAAL,GAAWvE,KAAKwE,OAAL,CAAaxB,IAAIuB,GAAJ,IAAWvC,QAAQuC,GAAR,EAAxB,CAAX;AACA,UAAKE,KAAL,GAAa,CAACzB,IAAIyB,KAAL,IAAc,CAA3B;AACA,UAAKC,YAAL,GAAoB1C,QAAQ2C,KAAR,EAApB;AACA,UAAKA,KAAL,GAAa,OAAO3B,IAAI2B,KAAX,KAAqB,QAArB,GAAgC3B,IAAI2B,KAApC,GAA4C,MAAKD,YAA9D;AACA;AACA,UAAKE,KAAL,GAAa5B,IAAI4B,KAAJ,IAAc,MAAU,CAAC,MAAKD,KAA3C;AACA,UAAKE,KAAL,GAAa7B,IAAI6B,KAAJ,IAAc,MAAU,CAAC,MAAKF,KAA3C;AACA,UAAKG,EAAL,CAAQ,OAAR,EAAiB;AAAA,aAAS,MAAKzE,OAAL,EAAc0E,KAAd,CAAT;AAAA,KAAjB;AAhFgB;AAiFjB;;;SAEAvD,U;4BAAe;AACd,UAAI,KAAKD,KAAL,KAAe,KAAKH,OAAL,MAAkB,CAArC,EAAwC;AACtC,aAAK4D,IAAL,CAAU,WAAV;AACA,aAAKA,IAAL,CAAU,QAAV;AACA,aAAKA,IAAL,CAAU,KAAV;AACA,aAAKA,IAAL,CAAU,OAAV;AACD;AACF;;SAEA/D,S;0BAAY8D,K,EAAO;AAClB,UAAI,KAAKN,KAAT,EAAgB;AACd,YAAMQ,QAAQF,MAAM/E,IAAN,CAAWkF,KAAX,CAAiB,OAAjB,CAAd;AACA,YAAID,MAAME,MAAN,GAAe,KAAKV,KAAxB,EACE,OAAO,KAAP;AACFM,cAAM/E,IAAN,GAAaiF,MAAMG,KAAN,CAAY,KAAKX,KAAjB,EAAwBY,IAAxB,CAA6B,GAA7B,CAAb;AACD;;AAED,UAAI,CAAC,KAAKf,aAAV,EAAyB;AACvB,YAAMgB,IAAIP,MAAM/E,IAAhB;AACA,YAAIsF,EAAEC,KAAF,CAAQ,wBAAR,CAAJ,EAAuC;AACrC,eAAKC,IAAL,CAAU,sBAAV,EAAkCF,CAAlC;AACA,iBAAO,KAAP;AACD;;AAED;AACA;AACA,YAAItF,KAAKkE,KAAL,CAAWuB,UAAX,CAAsBH,CAAtB,CAAJ,EAA8B;AAC5B,cAAMI,SAAS1F,KAAKkE,KAAL,CAAWyB,KAAX,CAAiBL,CAAjB,CAAf;AACA,eAAKE,IAAL,CAAU,eAAeE,OAAOE,IAAtB,GAA6B,qBAAvC,EAA8DN,CAA9D;AACAP,gBAAM/E,IAAN,GAAasF,EAAEO,MAAF,CAASH,OAAOE,IAAP,CAAYT,MAArB,CAAb;AACD;AACF;;AAED;AACA,UAAI,KAAKjB,KAAT,EAAgB;AACd,YAAMwB,UAAS1F,KAAKkE,KAAL,CAAWyB,KAAX,CAAiBZ,MAAM/E,IAAvB,CAAf;AACA+E,cAAM/E,IAAN,GAAa0F,QAAOE,IAAP,KAAgB,EAAhB,GAAqBxF,GAAG0F,MAAH,CAAUf,MAAM/E,IAAhB,CAArB,GACT0F,QAAOE,IAAP,GAAcxF,GAAG0F,MAAH,CAAUf,MAAM/E,IAAN,CAAW6F,MAAX,CAAkBH,QAAOE,IAAP,CAAYT,MAA9B,CAAV,CADlB;AAED;;AAED,UAAInF,KAAKyF,UAAL,CAAgBV,MAAM/E,IAAtB,CAAJ,EACE+E,MAAMgB,QAAN,GAAiBhB,MAAM/E,IAAvB,CADF,KAGE+E,MAAMgB,QAAN,GAAiB/F,KAAKwE,OAAL,CAAa,KAAKD,GAAlB,EAAuBQ,MAAM/E,IAA7B,CAAjB;;AAEF,aAAO,IAAP;AACD;;SAEAK,O;0BAAU0E,K,EAAO;AAChB,UAAI,CAAC,KAAK9D,SAAL,EAAgB8D,KAAhB,CAAL,EACE,OAAOA,MAAMiB,MAAN,EAAP;;AAEFvG,aAAOwG,KAAP,SAAoBlB,MAAMgB,QAA1B,GAAoC,QAApC;;AAEA,cAAQhB,MAAMmB,IAAd;AACE,aAAK,WAAL;AACA,aAAK,YAAL;AACE,cAAInB,MAAMoB,IAAV,EACEpB,MAAMoB,IAAN,GAAapB,MAAMoB,IAAN,GAAa,GAA1B;;AAEJ,aAAK,MAAL;AACA,aAAK,SAAL;AACA,aAAK,gBAAL;AACA,aAAK,MAAL;AACA,aAAK,cAAL;AACE,iBAAO,KAAK5F,OAAL,EAAcwE,KAAd,CAAP;;AAEF,aAAK,iBAAL;AACA,aAAK,aAAL;AACA,aAAK,MAAL;AACE,iBAAO,KAAKhE,WAAL,EAAkBgE,KAAlB,CAAP;AAhBJ;AAkBD;;SAEA5D,O;0BAAUoB,E,EAAIwC,K,EAAO;AACpB;AACA;AACA;AACA,UAAIxC,GAAGJ,IAAH,KAAY,UAAhB,EACE,KAAK6C,IAAL,CAAU,OAAV,EAAmBzC,EAAnB,EADF,KAEK;AACH,aAAKiD,IAAL,CAAUjD,GAAG6D,OAAb,EAAsB7D,EAAtB;AACA,aAAKjB,MAAL;AACAyD,cAAMiB,MAAN;AACD;AACF;;SAEA9E,K;0BAAQmF,G,EAAKF,I,EAAMpE,E,EAAI;AACtB9B,YAAMoG,GAAN,EAAW;AACT9C,aAAK,KAAKA,GADD;AAETC,aAAK,KAAKA,GAFD;AAGTM,oBAAY,KAAKA,UAHR;AAITC,oBAAY,KAAKA,UAJR;AAKTY,eAAO,KAAKD,YALH;AAMT4B,kBAAU,KAAKhC,aANN;AAOTpC,gBAAQ,KAAKA,MAPJ;AAQTqE,eAAO,KAAKlD,QARH;AASTkB,aAAK,KAAKA,GATD;AAUT4B,cAAMA;AAVG,OAAX,EAWGpE,EAXH;AAYD;;SAEAL,O;0BAAUqD,K,EAAO;AAChB;AACA;AACA,aAAO,KAAKd,UAAL,IACL,KAAKP,aAAL,KACE,OAAOqB,MAAMxB,GAAb,KAAqB,QAArB,IAAiCwB,MAAMxB,GAAN,KAAc,KAAKO,UAApD,IACA,OAAOiB,MAAMvB,GAAb,KAAqB,QAArB,IAAiCuB,MAAMvB,GAAN,KAAc,KAAKO,UAFtD,CADK,IAKH,OAAO,KAAKR,GAAZ,KAAoB,QAApB,IAAgC,KAAKA,GAAL,KAAa,KAAKO,UAAlD,IACA,OAAO,KAAKN,GAAZ,KAAoB,QAApB,IAAgC,KAAKA,GAAL,KAAa,KAAKO,UANtD;AAOD;;SAEApC,G;0BAAMoD,K,EAAO;AACZ,aAAOpC,OAAO,KAAKY,GAAZ,EAAiBwB,MAAMxB,GAAvB,EAA4B,KAAKO,UAAjC,CAAP;AACD;;SAEAlC,G;0BAAMmD,K,EAAO;AACZ,aAAOpC,OAAO,KAAKa,GAAZ,EAAiBuB,MAAMvB,GAAvB,EAA4B,KAAKO,UAAjC,CAAP;AACD;;SAEArD,I;0BAAOqE,K,EAAO;AAAA;;AACb,UAAMoB,OAAOpB,MAAMoB,IAAN,GAAa,IAAb,IAAuB,KAAKtB,KAAzC;AACA,UAAM2B,SAAS,IAAIzG,IAAI0G,WAAR,CAAoB1B,MAAMgB,QAA1B,EAAoC;AACjDI,cAAMA,IAD2C;AAEjDO,mBAAW;AAFsC,OAApC,CAAf;AAIAF,aAAO1B,EAAP,CAAU,OAAV,EAAmB;AAAA,eAAM,OAAK3D,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAN;AAAA,OAAnB;;AAEA,UAAI4B,UAAU,CAAd;AACA,UAAMC,OAAO,SAAPA,IAAO,KAAM;AACjB,YAAIrE,EAAJ,EACE,OAAO,OAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;;AAEF,YAAI,EAAE4B,OAAF,KAAc,CAAlB,EACE7G,GAAG+G,KAAH,CAASL,OAAOM,EAAhB,EAAoB;AAAA,iBAAK,OAAKxF,MAAL,GAAL;AAAA,SAApB;AACH,OAND;;AAQAkF,aAAO1B,EAAP,CAAU,QAAV,EAAoB,aAAK;AACvB;AACA;AACA;AACA,YAAMiC,MAAMhC,MAAMgB,QAAlB;AACA,YAAMe,KAAKN,OAAOM,EAAlB;;AAEA,YAAI/B,MAAMiC,KAAN,IAAe,CAAC,OAAK3C,OAAzB,EAAkC;AAChCsC;AACA,cAAMM,QAAQlC,MAAMkC,KAAN,IAAe,IAAIC,IAAJ,EAA7B;AACA,cAAMF,QAAQjC,MAAMiC,KAApB;AACAlH,aAAGqH,OAAH,CAAWL,EAAX,EAAeG,KAAf,EAAsBD,KAAtB,EAA6B;AAAA,mBAC3BzE,KAAKzC,GAAGsH,MAAH,CAAUL,GAAV,EAAeE,KAAf,EAAsBD,KAAtB,EAA6B;AAAA,qBAAOJ,KAAKS,OAAO9E,EAAZ,CAAP;AAAA,aAA7B,CAAL,GACEqE,MAFyB;AAAA,WAA7B;AAGD;;AAED,YAAI,OAAKlF,OAAL,EAAcqD,KAAd,CAAJ,EAA0B;AACxB4B;AACA,cAAMpD,MAAM,OAAK5B,GAAL,EAAUoD,KAAV,CAAZ;AACA,cAAMvB,MAAM,OAAK5B,GAAL,EAAUmD,KAAV,CAAZ;AACAjF,aAAGwH,MAAH,CAAUR,EAAV,EAAcvD,GAAd,EAAmBC,GAAnB,EAAwB;AAAA,mBACtBjB,KAAKzC,GAAGyH,KAAH,CAASR,GAAT,EAAcxD,GAAd,EAAmBC,GAAnB,EAAwB;AAAA,qBAAOoD,KAAKS,OAAO9E,EAAZ,CAAP;AAAA,aAAxB,CAAL,GACEqE,MAFoB;AAAA,WAAxB;AAGD;;AAEDA;AACD,OA1BD;;AA4BA,UAAMY,KAAK,KAAKtE,SAAL,GAAiB,KAAKA,SAAL,CAAe6B,KAAf,KAAyBA,KAA1C,GAAkDA,KAA7D;AACA,UAAIyC,OAAOzC,KAAX,EACEA,MAAM0C,IAAN,CAAWD,EAAX;AACFA,SAAGC,IAAH,CAAQjB,MAAR;AACD;;SAEA7F,S;0BAAYoE,K,EAAO;AAAA;;AAClB,UAAMoB,OAAOpB,MAAMoB,IAAN,GAAa,IAAb,IAAuB,KAAKvB,KAAzC;AACA,WAAK1D,KAAL,EAAY6D,MAAMgB,QAAlB,EAA4BI,IAA5B,EAAkC,cAAM;AACtC,YAAI5D,EAAJ,EACE,OAAO,OAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;;AAEF,YAAI4B,UAAU,CAAd;AACA,YAAMC,OAAO,SAAPA,IAAO,IAAK;AAChB,cAAI,EAAED,OAAF,KAAc,CAAlB,EAAqB;AACnB,mBAAKrF,MAAL;AACAyD,kBAAMiB,MAAN;AACD;AACF,SALD;;AAOA,YAAIjB,MAAMiC,KAAN,IAAe,CAAC,OAAK3C,OAAzB,EAAkC;AAChCsC;AACA7G,aAAGsH,MAAH,CAAUrC,MAAMgB,QAAhB,EAA0BhB,MAAMkC,KAAN,IAAe,IAAIC,IAAJ,EAAzC,EAAqDnC,MAAMiC,KAA3D,EAAkEJ,IAAlE;AACD;;AAED,YAAI,OAAKlF,OAAL,EAAcqD,KAAd,CAAJ,EAA0B;AACxB4B;AACA7G,aAAGyH,KAAH,CAASxC,MAAMgB,QAAf,EAAyB,OAAKpE,GAAL,EAAUoD,KAAV,CAAzB,EAA2C,OAAKnD,GAAL,EAAUmD,KAAV,CAA3C,EAA6D6B,IAA7D;AACD;;AAEDA;AACD,OAvBD;AAwBD;;SAEA7F,W;0BAAcgE,K,EAAO;AACpB,WAAKS,IAAL,CAAU,6BAA6BT,MAAMmB,IAA7C,EAAmDnB,KAAnD;AACAA,YAAMiB,MAAN;AACD;;SAEAnF,O;0BAAUkE,K,EAAO;AAChB,WAAKnE,IAAL,EAAWmE,KAAX,EAAkBA,MAAM2C,QAAxB,EAAkC,SAAlC;AACD;;SAEA5G,Q;0BAAWiE,K,EAAO;AACjB,WAAKnE,IAAL,EAAWmE,KAAX,EAAkB/E,KAAKwE,OAAL,CAAa,KAAKD,GAAlB,EAAuBQ,MAAM2C,QAA7B,CAAlB,EAA0D,MAA1D;AACD;;SAEArG,I;4BAAS;AACR,WAAKD,OAAL;AACD;;SAEAE,M;4BAAW;AACV,WAAKF,OAAL;AACA,WAAKI,UAAL;AACD;;SAEAC,I;0BAAOsD,K,EAAO;AACb,WAAKzD,MAAL;AACAyD,YAAMiB,MAAN;AACD;;AAED;AACA;AACA;;;SACCxF,U;0BAAauE,K,EAAO4C,E,EAAI;AACvB,aAAO5C,MAAMmB,IAAN,KAAe,MAAf,IACL,CAAC,KAAKhE,MADD,IAELyF,GAAGC,MAAH,EAFK,IAGLD,GAAGE,KAAH,IAAY,CAHP,IAIL7F,QAAQC,QAAR,KAAqB,OAJvB;AAKD;;AAED;;;SACC1B,O;0BAAUwE,K,EAAO;AAAA;;AAChB,WAAK1D,IAAL;AACA,WAAKH,KAAL,EAAYlB,KAAK8H,OAAL,CAAa/C,MAAMgB,QAAnB,CAAZ,EAA0C,KAAKnB,KAA/C,EAAsD,cAAM;AAC1D,YAAIrC,EAAJ,EACE,OAAO,OAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;AACFjF,WAAGiI,KAAH,CAAShD,MAAMgB,QAAf,EAAyB,UAACxD,EAAD,EAAKoF,EAAL,EAAY;AACnC,cAAIA,OAAO,OAAKvD,IAAL,IAAa,OAAKD,KAAL,IAAcwD,GAAGX,KAAH,GAAWjC,MAAMiC,KAAnD,CAAJ,EACE,OAAKvF,IAAL,EAAWsD,KAAX,EADF,KAEK,IAAIxC,MAAM,OAAK/B,UAAL,EAAiBuE,KAAjB,EAAwB4C,EAAxB,CAAV,EACH,OAAKlH,MAAL,EAAa,IAAb,EAAmBsE,KAAnB,EADG,KAEA,IAAI4C,GAAGK,WAAH,EAAJ,EAAsB;AACzB,gBAAIjD,MAAMmB,IAAN,KAAe,WAAnB,EAAgC;AAC9B,kBAAI,CAACnB,MAAMoB,IAAP,IAAe,CAACwB,GAAGxB,IAAH,GAAU,IAAX,MAAuBpB,MAAMoB,IAAhD,EACE,OAAK1F,MAAL,EAAa,IAAb,EAAmBsE,KAAnB,EADF,KAGEjF,GAAGmI,KAAH,CAASlD,MAAMgB,QAAf,EAAyBhB,MAAMoB,IAA/B,EAAqC;AAAA,uBAAM,OAAK1F,MAAL,EAAa8B,EAAb,EAAiBwC,KAAjB,CAAN;AAAA,eAArC;AACH,aALD,MAMEjF,GAAGoI,KAAH,CAASnD,MAAMgB,QAAf,EAAyB;AAAA,qBAAM,OAAKtF,MAAL,EAAa8B,EAAb,EAAiBwC,KAAjB,CAAN;AAAA,aAAzB;AACH,WARI,MASHjD,WAAWiD,MAAMgB,QAAjB,EAA2B;AAAA,mBAAM,OAAKtF,MAAL,EAAa8B,EAAb,EAAiBwC,KAAjB,CAAN;AAAA,WAA3B;AACH,SAfD;AAgBD,OAnBD;AAoBD;;SAEAtE,M;0BAAS8B,E,EAAIwC,K,EAAO;AACnB,UAAIxC,EAAJ,EACE,OAAO,KAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;;AAEF,cAAQA,MAAMmB,IAAd;AACE,aAAK,MAAL;AACA,aAAK,SAAL;AACA,aAAK,gBAAL;AACE,iBAAO,KAAKxF,IAAL,EAAWqE,KAAX,CAAP;;AAEF,aAAK,MAAL;AACE,iBAAO,KAAKjE,QAAL,EAAeiE,KAAf,CAAP;;AAEF,aAAK,cAAL;AACE,iBAAO,KAAKlE,OAAL,EAAckE,KAAd,CAAP;;AAEF,aAAK,WAAL;AACA,aAAK,YAAL;AACE,iBAAO,KAAKpE,SAAL,EAAgBoE,KAAhB,CAAP;AAdJ;AAgBD;;SAEAnE,I;0BAAOmE,K,EAAO2C,Q,EAAUS,I,EAAM;AAAA;;AAC7B;AACArI,SAAGqI,IAAH,EAAST,QAAT,EAAmB3C,MAAMgB,QAAzB,EAAmC,cAAM;AACvC,YAAIxD,EAAJ,EACE,OAAO,OAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;AACF,eAAKzD,MAAL;AACAyD,cAAMiB,MAAN;AACD,OALD;AAMD;;;;EA1XkBnG,M;;IA6XfuI,U;;;AACJ,sBAAapF,GAAb,EAAkB;AAAA;;AAAA,mHACVA,GADU;AAEjB;;;SAEAzC,O;0BAAUwE,K,EAAO;AAChB,UAAMxC,KAAK,KAAKrB,KAAL,EAAYlB,KAAK8H,OAAL,CAAa/C,MAAMgB,QAAnB,CAAZ,EAA0C,KAAKnB,KAA/C,CAAX;AACA,UAAIrC,EAAJ,EACE,OAAO,KAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;AACF,UAAI;AACF,YAAM4C,KAAK7H,GAAGuI,SAAH,CAAatD,MAAMgB,QAAnB,CAAX;AACA,YAAI,KAAK3B,IAAL,IAAa,KAAKD,KAAL,IAAcwD,GAAGX,KAAH,GAAWjC,MAAMiC,KAAhD,EACE,OAAO,KAAKvF,IAAL,EAAWsD,KAAX,CAAP,CADF,KAEK,IAAI,KAAKvE,UAAL,EAAiBuE,KAAjB,EAAwB4C,EAAxB,CAAJ,EACH,OAAO,KAAKlH,MAAL,EAAa,IAAb,EAAmBsE,KAAnB,CAAP,CADG,KAEA;AACH,cAAI;AACF,gBAAI4C,GAAGK,WAAH,EAAJ,EAAsB;AACpB,kBAAIjD,MAAMmB,IAAN,KAAe,WAAnB,EAAgC;AAC9B,oBAAInB,MAAMoB,IAAN,IAAc,CAACwB,GAAGxB,IAAH,GAAU,IAAX,MAAuBpB,MAAMoB,IAA/C,EACErG,GAAGwI,SAAH,CAAavD,MAAMgB,QAAnB,EAA6BhB,MAAMoB,IAAnC;AACH,eAHD,MAIErG,GAAGyI,SAAH,CAAaxD,MAAMgB,QAAnB;AACH,aAND,MAOEvD,eAAeuC,MAAMgB,QAArB;AACF,mBAAO,KAAKtF,MAAL,EAAa,IAAb,EAAmBsE,KAAnB,CAAP;AACD,WAVD,CAUE,OAAOxC,EAAP,EAAW;AACX,mBAAO,KAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;AACD;AACF;AACF,OArBD,CAqBE,OAAOxC,EAAP,EAAW;AACX,eAAO,KAAK9B,MAAL,EAAa,IAAb,EAAmBsE,KAAnB,CAAP;AACD;AACF;;SAEArE,I;0BAAOqE,K,EAAO;AAAA;;AACb,UAAMoB,OAAOpB,MAAMoB,IAAN,GAAa,IAAb,IAAuB,KAAKtB,KAAzC;;AAEA,UAAM2D,OAAO,SAAPA,IAAO,KAAM;AACjB,YAAI;AAAE1I,aAAG2I,SAAH,CAAa3B,EAAb;AAAkB,SAAxB,CAAyB,OAAO4B,CAAP,EAAU,CAAE;AACrC,YAAInG,EAAJ,EACE,OAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB;AACH,OAJD;;AAMA,UAAIyB,eAAJ;AACA,UAAIM,WAAJ;AACA,UAAI;AACFA,aAAKhH,GAAG6I,QAAH,CAAY5D,MAAMgB,QAAlB,EAA4B,GAA5B,EAAiCI,IAAjC,CAAL;AACD,OAFD,CAEE,OAAO5D,EAAP,EAAW;AACX,eAAOiG,KAAKjG,EAAL,CAAP;AACD;AACD,UAAMiF,KAAK,KAAKtE,SAAL,GAAiB,KAAKA,SAAL,CAAe6B,KAAf,KAAyBA,KAA1C,GAAkDA,KAA7D;AACA,UAAIyC,OAAOzC,KAAX,EACEA,MAAM0C,IAAN,CAAWD,EAAX;;AAEFA,SAAG1C,EAAH,CAAM,MAAN,EAAc,iBAAS;AACrB,YAAI;AACFhF,aAAG8I,SAAH,CAAa9B,EAAb,EAAiB+B,KAAjB,EAAwB,CAAxB,EAA2BA,MAAM1D,MAAjC;AACD,SAFD,CAEE,OAAO5C,EAAP,EAAW;AACXiG,eAAKjG,EAAL;AACD;AACF,OAND;;AAQAiF,SAAG1C,EAAH,CAAM,KAAN,EAAa,aAAK;AAChB,YAAIvC,KAAK,IAAT;AACA;AACA;AACA,YAAIwC,MAAMiC,KAAN,IAAe,CAAC,OAAK3C,OAAzB,EAAkC;AAChC,cAAM4C,QAAQlC,MAAMkC,KAAN,IAAe,IAAIC,IAAJ,EAA7B;AACA,cAAMF,QAAQjC,MAAMiC,KAApB;AACA,cAAI;AACFlH,eAAGgJ,WAAH,CAAehC,EAAf,EAAmBG,KAAnB,EAA0BD,KAA1B;AACD,WAFD,CAEE,OAAO+B,SAAP,EAAkB;AAClB,gBAAI;AACFjJ,iBAAGkJ,UAAH,CAAcjE,MAAMgB,QAApB,EAA8BkB,KAA9B,EAAqCD,KAArC;AACD,aAFD,CAEE,OAAOiC,QAAP,EAAiB;AACjB1G,mBAAKwG,SAAL;AACD;AACF;AACF;;AAED,YAAI,OAAKrH,OAAL,EAAcqD,KAAd,CAAJ,EAA0B;AACxB,cAAMxB,MAAM,OAAK5B,GAAL,EAAUoD,KAAV,CAAZ;AACA,cAAMvB,MAAM,OAAK5B,GAAL,EAAUmD,KAAV,CAAZ;;AAEA,cAAI;AACFjF,eAAGoJ,UAAH,CAAcpC,EAAd,EAAkBvD,GAAlB,EAAuBC,GAAvB;AACD,WAFD,CAEE,OAAO2F,QAAP,EAAiB;AACjB,gBAAI;AACFrJ,iBAAGsJ,SAAH,CAAarE,MAAMgB,QAAnB,EAA6BxC,GAA7B,EAAkCC,GAAlC;AACD,aAFD,CAEE,OAAO6F,OAAP,EAAgB;AAChB9G,mBAAKA,MAAM4G,QAAX;AACD;AACF;AACF;;AAEDX,aAAKjG,EAAL;AACD,OAlCD;AAmCD;;SAEA5B,S;0BAAYoE,K,EAAO;AAClB,UAAMoB,OAAOpB,MAAMoB,IAAN,GAAa,IAAb,IAAuB,KAAKvB,KAAzC;AACA,UAAMrC,KAAK,KAAKrB,KAAL,EAAY6D,MAAMgB,QAAlB,EAA4BI,IAA5B,CAAX;AACA,UAAI5D,EAAJ,EACE,OAAO,KAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;AACF,UAAIA,MAAMiC,KAAN,IAAe,CAAC,KAAK3C,OAAzB,EAAkC;AAChC,YAAI;AACFvE,aAAGkJ,UAAH,CAAcjE,MAAMgB,QAApB,EAA8BhB,MAAMkC,KAAN,IAAe,IAAIC,IAAJ,EAA7C,EAAyDnC,MAAMiC,KAA/D;AACD,SAFD,CAEE,OAAOzE,EAAP,EAAW,CAAE;AAChB;AACD,UAAI,KAAKb,OAAL,EAAcqD,KAAd,CAAJ,EAA0B;AACxB,YAAI;AACFjF,aAAGsJ,SAAH,CAAarE,MAAMgB,QAAnB,EAA6B,KAAKpE,GAAL,EAAUoD,KAAV,CAA7B,EAA+C,KAAKnD,GAAL,EAAUmD,KAAV,CAA/C;AACD,SAFD,CAEE,OAAOxC,EAAP,EAAW,CAAE;AAChB;AACDwC,YAAMiB,MAAN;AACD;;SAEA9E,K;0BAAQmF,G,EAAKF,I,EAAM;AAClB,UAAI;AACF,eAAOlG,MAAME,IAAN,CAAWkG,GAAX,EAAgB;AACrB9C,eAAK,KAAKA,GADW;AAErBC,eAAK,KAAKA,GAFW;AAGrBM,sBAAY,KAAKA,UAHI;AAIrBC,sBAAY,KAAKA,UAJI;AAKrBY,iBAAO,KAAKD,YALS;AAMrB4B,oBAAU,KAAKhC,aANM;AAOrBpC,kBAAQ,KAAKA,MAPQ;AAQrBqE,iBAAO,KAAKlD,QARS;AASrBkB,eAAK,KAAKA,GATW;AAUrB4B,gBAAMA;AAVe,SAAhB,CAAP;AAYD,OAbD,CAaE,OAAO5D,EAAP,EAAW;AACX,eAAOA,EAAP;AACD;AACF;;SAEA3B,I;0BAAOmE,K,EAAO2C,Q,EAAUS,I,EAAM;AAC7B,UAAI;AACFrI,WAAGqI,OAAO,MAAV,EAAkBT,QAAlB,EAA4B3C,MAAMgB,QAAlC;AACAhB,cAAMiB,MAAN;AACD,OAHD,CAGE,OAAOzD,EAAP,EAAW;AACX,eAAO,KAAKpB,OAAL,EAAcoB,EAAd,EAAkBwC,KAAlB,CAAP;AACD;AACF;;;;EAhJsBhC,M;;AAmJzBA,OAAOuG,IAAP,GAAclB,UAAd;AACAmB,OAAOC,OAAP,GAAiBzG,MAAjB","file":"unpack.js","sourcesContent":["'use strict'\n\nconst assert = require('assert')\nconst EE = require('events').EventEmitter\nconst Parser = require('./parse.js')\nconst fs = require('fs')\nconst fsm = require('fs-minipass')\nconst path = require('path')\nconst mkdir = require('./mkdir.js')\nconst mkdirSync = mkdir.sync\nconst wc = require('./winchars.js')\n\nconst ONENTRY = Symbol('onEntry')\nconst CHECKFS = Symbol('checkFs')\nconst ISREUSABLE = Symbol('isReusable')\nconst MAKEFS = Symbol('makeFs')\nconst FILE = Symbol('file')\nconst DIRECTORY = Symbol('directory')\nconst LINK = Symbol('link')\nconst SYMLINK = Symbol('symlink')\nconst HARDLINK = Symbol('hardlink')\nconst UNSUPPORTED = Symbol('unsupported')\nconst UNKNOWN = Symbol('unknown')\nconst CHECKPATH = Symbol('checkPath')\nconst MKDIR = Symbol('mkdir')\nconst ONERROR = Symbol('onError')\nconst PENDING = Symbol('pending')\nconst PEND = Symbol('pend')\nconst UNPEND = Symbol('unpend')\nconst ENDED = Symbol('ended')\nconst MAYBECLOSE = Symbol('maybeClose')\nconst SKIP = Symbol('skip')\nconst DOCHOWN = Symbol('doChown')\nconst UID = Symbol('uid')\nconst GID = Symbol('gid')\nconst crypto = require('crypto')\n\n// Unlinks on Windows are not atomic.\n//\n// This means that if you have a file entry, followed by another\n// file entry with an identical name, and you cannot re-use the file\n// (because it's a hardlink, or because unlink:true is set, or it's\n// Windows, which does not have useful nlink values), then the unlink\n// will be committed to the disk AFTER the new file has been written\n// over the old one, deleting the new file.\n//\n// To work around this, on Windows systems, we rename the file and then\n// delete the renamed file.  It's a sloppy kludge, but frankly, I do not\n// know of a better way to do this, given windows' non-atomic unlink\n// semantics.\n//\n// See: https://github.com/npm/node-tar/issues/183\n/* istanbul ignore next */\nconst unlinkFile = (path, cb) => {\n  if (process.platform !== 'win32')\n    return fs.unlink(path, cb)\n\n  const name = path + '.DELETE.' + crypto.randomBytes(16).toString('hex')\n  fs.rename(path, name, er => {\n    if (er)\n      return cb(er)\n    fs.unlink(name, cb)\n  })\n}\n\n/* istanbul ignore next */\nconst unlinkFileSync = path => {\n  if (process.platform !== 'win32')\n    return fs.unlinkSync(path)\n\n  const name = path + '.DELETE.' + crypto.randomBytes(16).toString('hex')\n  fs.renameSync(path, name)\n  fs.unlinkSync(name)\n}\n\n// this.gid, entry.gid, this.processUid\nconst uint32 = (a, b, c) =>\n  a === a >>> 0 ? a\n  : b === b >>> 0 ? b\n  : c\n\nclass Unpack extends Parser {\n  constructor (opt) {\n    if (!opt)\n      opt = {}\n\n    opt.ondone = _ => {\n      this[ENDED] = true\n      this[MAYBECLOSE]()\n    }\n\n    super(opt)\n\n    this.transform = typeof opt.transform === 'function' ? opt.transform : null\n\n    this.writable = true\n    this.readable = false\n\n    this[PENDING] = 0\n    this[ENDED] = false\n\n    this.dirCache = opt.dirCache || new Map()\n\n    if (typeof opt.uid === 'number' || typeof opt.gid === 'number') {\n      // need both or neither\n      if (typeof opt.uid !== 'number' || typeof opt.gid !== 'number')\n        throw new TypeError('cannot set owner without number uid and gid')\n      if (opt.preserveOwner)\n        throw new TypeError(\n          'cannot preserve owner in archive and also set owner explicitly')\n      this.uid = opt.uid\n      this.gid = opt.gid\n      this.setOwner = true\n    } else {\n      this.uid = null\n      this.gid = null\n      this.setOwner = false\n    }\n\n    // default true for root\n    if (opt.preserveOwner === undefined && typeof opt.uid !== 'number')\n      this.preserveOwner = process.getuid && process.getuid() === 0\n    else\n      this.preserveOwner = !!opt.preserveOwner\n\n    this.processUid = (this.preserveOwner || this.setOwner) && process.getuid ?\n      process.getuid() : null\n    this.processGid = (this.preserveOwner || this.setOwner) && process.getgid ?\n      process.getgid() : null\n\n    // mostly just for testing, but useful in some cases.\n    // Forcibly trigger a chown on every entry, no matter what\n    this.forceChown = opt.forceChown === true\n\n    // turn ><?| in filenames into 0xf000-higher encoded forms\n    this.win32 = !!opt.win32 || process.platform === 'win32'\n\n    // do not unpack over files that are newer than what's in the archive\n    this.newer = !!opt.newer\n\n    // do not unpack over ANY files\n    this.keep = !!opt.keep\n\n    // do not set mtime/atime of extracted entries\n    this.noMtime = !!opt.noMtime\n\n    // allow .., absolute path entries, and unpacking through symlinks\n    // without this, warn and skip .., relativize absolutes, and error\n    // on symlinks in extraction path\n    this.preservePaths = !!opt.preservePaths\n\n    // unlink files and links before writing. This breaks existing hard\n    // links, and removes symlink directories rather than erroring\n    this.unlink = !!opt.unlink\n\n    this.cwd = path.resolve(opt.cwd || process.cwd())\n    this.strip = +opt.strip || 0\n    this.processUmask = process.umask()\n    this.umask = typeof opt.umask === 'number' ? opt.umask : this.processUmask\n    // default mode for dirs created as parents\n    this.dmode = opt.dmode || (0o0777 & (~this.umask))\n    this.fmode = opt.fmode || (0o0666 & (~this.umask))\n    this.on('entry', entry => this[ONENTRY](entry))\n  }\n\n  [MAYBECLOSE] () {\n    if (this[ENDED] && this[PENDING] === 0) {\n      this.emit('prefinish')\n      this.emit('finish')\n      this.emit('end')\n      this.emit('close')\n    }\n  }\n\n  [CHECKPATH] (entry) {\n    if (this.strip) {\n      const parts = entry.path.split(/\\/|\\\\/)\n      if (parts.length < this.strip)\n        return false\n      entry.path = parts.slice(this.strip).join('/')\n    }\n\n    if (!this.preservePaths) {\n      const p = entry.path\n      if (p.match(/(^|\\/|\\\\)\\.\\.(\\\\|\\/|$)/)) {\n        this.warn('path contains \\'..\\'', p)\n        return false\n      }\n\n      // absolutes on posix are also absolutes on win32\n      // so we only need to test this one to get both\n      if (path.win32.isAbsolute(p)) {\n        const parsed = path.win32.parse(p)\n        this.warn('stripping ' + parsed.root + ' from absolute path', p)\n        entry.path = p.substr(parsed.root.length)\n      }\n    }\n\n    // only encode : chars that aren't drive letter indicators\n    if (this.win32) {\n      const parsed = path.win32.parse(entry.path)\n      entry.path = parsed.root === '' ? wc.encode(entry.path)\n        : parsed.root + wc.encode(entry.path.substr(parsed.root.length))\n    }\n\n    if (path.isAbsolute(entry.path))\n      entry.absolute = entry.path\n    else\n      entry.absolute = path.resolve(this.cwd, entry.path)\n\n    return true\n  }\n\n  [ONENTRY] (entry) {\n    if (!this[CHECKPATH](entry))\n      return entry.resume()\n\n    assert.equal(typeof entry.absolute, 'string')\n\n    switch (entry.type) {\n      case 'Directory':\n      case 'GNUDumpDir':\n        if (entry.mode)\n          entry.mode = entry.mode | 0o700\n\n      case 'File':\n      case 'OldFile':\n      case 'ContiguousFile':\n      case 'Link':\n      case 'SymbolicLink':\n        return this[CHECKFS](entry)\n\n      case 'CharacterDevice':\n      case 'BlockDevice':\n      case 'FIFO':\n        return this[UNSUPPORTED](entry)\n    }\n  }\n\n  [ONERROR] (er, entry) {\n    // Cwd has to exist, or else nothing works. That's serious.\n    // Other errors are warnings, which raise the error in strict\n    // mode, but otherwise continue on.\n    if (er.name === 'CwdError')\n      this.emit('error', er)\n    else {\n      this.warn(er.message, er)\n      this[UNPEND]()\n      entry.resume()\n    }\n  }\n\n  [MKDIR] (dir, mode, cb) {\n    mkdir(dir, {\n      uid: this.uid,\n      gid: this.gid,\n      processUid: this.processUid,\n      processGid: this.processGid,\n      umask: this.processUmask,\n      preserve: this.preservePaths,\n      unlink: this.unlink,\n      cache: this.dirCache,\n      cwd: this.cwd,\n      mode: mode\n    }, cb)\n  }\n\n  [DOCHOWN] (entry) {\n    // in preserve owner mode, chown if the entry doesn't match process\n    // in set owner mode, chown if setting doesn't match process\n    return this.forceChown ||\n      this.preserveOwner &&\n      ( typeof entry.uid === 'number' && entry.uid !== this.processUid ||\n        typeof entry.gid === 'number' && entry.gid !== this.processGid )\n      ||\n      ( typeof this.uid === 'number' && this.uid !== this.processUid ||\n        typeof this.gid === 'number' && this.gid !== this.processGid )\n  }\n\n  [UID] (entry) {\n    return uint32(this.uid, entry.uid, this.processUid)\n  }\n\n  [GID] (entry) {\n    return uint32(this.gid, entry.gid, this.processGid)\n  }\n\n  [FILE] (entry) {\n    const mode = entry.mode & 0o7777 || this.fmode\n    const stream = new fsm.WriteStream(entry.absolute, {\n      mode: mode,\n      autoClose: false\n    })\n    stream.on('error', er => this[ONERROR](er, entry))\n\n    let actions = 1\n    const done = er => {\n      if (er)\n        return this[ONERROR](er, entry)\n\n      if (--actions === 0)\n        fs.close(stream.fd, _ => this[UNPEND]())\n    }\n\n    stream.on('finish', _ => {\n      // if futimes fails, try utimes\n      // if utimes fails, fail with the original error\n      // same for fchown/chown\n      const abs = entry.absolute\n      const fd = stream.fd\n\n      if (entry.mtime && !this.noMtime) {\n        actions++\n        const atime = entry.atime || new Date()\n        const mtime = entry.mtime\n        fs.futimes(fd, atime, mtime, er =>\n          er ? fs.utimes(abs, atime, mtime, er2 => done(er2 && er))\n          : done())\n      }\n\n      if (this[DOCHOWN](entry)) {\n        actions++\n        const uid = this[UID](entry)\n        const gid = this[GID](entry)\n        fs.fchown(fd, uid, gid, er =>\n          er ? fs.chown(abs, uid, gid, er2 => done(er2 && er))\n          : done())\n      }\n\n      done()\n    })\n\n    const tx = this.transform ? this.transform(entry) || entry : entry\n    if (tx !== entry)\n      entry.pipe(tx)\n    tx.pipe(stream)\n  }\n\n  [DIRECTORY] (entry) {\n    const mode = entry.mode & 0o7777 || this.dmode\n    this[MKDIR](entry.absolute, mode, er => {\n      if (er)\n        return this[ONERROR](er, entry)\n\n      let actions = 1\n      const done = _ => {\n        if (--actions === 0) {\n          this[UNPEND]()\n          entry.resume()\n        }\n      }\n\n      if (entry.mtime && !this.noMtime) {\n        actions++\n        fs.utimes(entry.absolute, entry.atime || new Date(), entry.mtime, done)\n      }\n\n      if (this[DOCHOWN](entry)) {\n        actions++\n        fs.chown(entry.absolute, this[UID](entry), this[GID](entry), done)\n      }\n\n      done()\n    })\n  }\n\n  [UNSUPPORTED] (entry) {\n    this.warn('unsupported entry type: ' + entry.type, entry)\n    entry.resume()\n  }\n\n  [SYMLINK] (entry) {\n    this[LINK](entry, entry.linkpath, 'symlink')\n  }\n\n  [HARDLINK] (entry) {\n    this[LINK](entry, path.resolve(this.cwd, entry.linkpath), 'link')\n  }\n\n  [PEND] () {\n    this[PENDING]++\n  }\n\n  [UNPEND] () {\n    this[PENDING]--\n    this[MAYBECLOSE]()\n  }\n\n  [SKIP] (entry) {\n    this[UNPEND]()\n    entry.resume()\n  }\n\n  // Check if we can reuse an existing filesystem entry safely and\n  // overwrite it, rather than unlinking and recreating\n  // Windows doesn't report a useful nlink, so we just never reuse entries\n  [ISREUSABLE] (entry, st) {\n    return entry.type === 'File' &&\n      !this.unlink &&\n      st.isFile() &&\n      st.nlink <= 1 &&\n      process.platform !== 'win32'\n  }\n\n  // check if a thing is there, and if so, try to clobber it\n  [CHECKFS] (entry) {\n    this[PEND]()\n    this[MKDIR](path.dirname(entry.absolute), this.dmode, er => {\n      if (er)\n        return this[ONERROR](er, entry)\n      fs.lstat(entry.absolute, (er, st) => {\n        if (st && (this.keep || this.newer && st.mtime > entry.mtime))\n          this[SKIP](entry)\n        else if (er || this[ISREUSABLE](entry, st))\n          this[MAKEFS](null, entry)\n        else if (st.isDirectory()) {\n          if (entry.type === 'Directory') {\n            if (!entry.mode || (st.mode & 0o7777) === entry.mode)\n              this[MAKEFS](null, entry)\n            else\n              fs.chmod(entry.absolute, entry.mode, er => this[MAKEFS](er, entry))\n          } else\n            fs.rmdir(entry.absolute, er => this[MAKEFS](er, entry))\n        } else\n          unlinkFile(entry.absolute, er => this[MAKEFS](er, entry))\n      })\n    })\n  }\n\n  [MAKEFS] (er, entry) {\n    if (er)\n      return this[ONERROR](er, entry)\n\n    switch (entry.type) {\n      case 'File':\n      case 'OldFile':\n      case 'ContiguousFile':\n        return this[FILE](entry)\n\n      case 'Link':\n        return this[HARDLINK](entry)\n\n      case 'SymbolicLink':\n        return this[SYMLINK](entry)\n\n      case 'Directory':\n      case 'GNUDumpDir':\n        return this[DIRECTORY](entry)\n    }\n  }\n\n  [LINK] (entry, linkpath, link) {\n    // XXX: get the type ('file' or 'dir') for windows\n    fs[link](linkpath, entry.absolute, er => {\n      if (er)\n        return this[ONERROR](er, entry)\n      this[UNPEND]()\n      entry.resume()\n    })\n  }\n}\n\nclass UnpackSync extends Unpack {\n  constructor (opt) {\n    super(opt)\n  }\n\n  [CHECKFS] (entry) {\n    const er = this[MKDIR](path.dirname(entry.absolute), this.dmode)\n    if (er)\n      return this[ONERROR](er, entry)\n    try {\n      const st = fs.lstatSync(entry.absolute)\n      if (this.keep || this.newer && st.mtime > entry.mtime)\n        return this[SKIP](entry)\n      else if (this[ISREUSABLE](entry, st))\n        return this[MAKEFS](null, entry)\n      else {\n        try {\n          if (st.isDirectory()) {\n            if (entry.type === 'Directory') {\n              if (entry.mode && (st.mode & 0o7777) !== entry.mode)\n                fs.chmodSync(entry.absolute, entry.mode)\n            } else\n              fs.rmdirSync(entry.absolute)\n          } else\n            unlinkFileSync(entry.absolute)\n          return this[MAKEFS](null, entry)\n        } catch (er) {\n          return this[ONERROR](er, entry)\n        }\n      }\n    } catch (er) {\n      return this[MAKEFS](null, entry)\n    }\n  }\n\n  [FILE] (entry) {\n    const mode = entry.mode & 0o7777 || this.fmode\n\n    const oner = er => {\n      try { fs.closeSync(fd) } catch (_) {}\n      if (er)\n        this[ONERROR](er, entry)\n    }\n\n    let stream\n    let fd\n    try {\n      fd = fs.openSync(entry.absolute, 'w', mode)\n    } catch (er) {\n      return oner(er)\n    }\n    const tx = this.transform ? this.transform(entry) || entry : entry\n    if (tx !== entry)\n      entry.pipe(tx)\n\n    tx.on('data', chunk => {\n      try {\n        fs.writeSync(fd, chunk, 0, chunk.length)\n      } catch (er) {\n        oner(er)\n      }\n    })\n\n    tx.on('end', _ => {\n      let er = null\n      // try both, falling futimes back to utimes\n      // if either fails, handle the first error\n      if (entry.mtime && !this.noMtime) {\n        const atime = entry.atime || new Date()\n        const mtime = entry.mtime\n        try {\n          fs.futimesSync(fd, atime, mtime)\n        } catch (futimeser) {\n          try {\n            fs.utimesSync(entry.absolute, atime, mtime)\n          } catch (utimeser) {\n            er = futimeser\n          }\n        }\n      }\n\n      if (this[DOCHOWN](entry)) {\n        const uid = this[UID](entry)\n        const gid = this[GID](entry)\n\n        try {\n          fs.fchownSync(fd, uid, gid)\n        } catch (fchowner) {\n          try {\n            fs.chownSync(entry.absolute, uid, gid)\n          } catch (chowner) {\n            er = er || fchowner\n          }\n        }\n      }\n\n      oner(er)\n    })\n  }\n\n  [DIRECTORY] (entry) {\n    const mode = entry.mode & 0o7777 || this.dmode\n    const er = this[MKDIR](entry.absolute, mode)\n    if (er)\n      return this[ONERROR](er, entry)\n    if (entry.mtime && !this.noMtime) {\n      try {\n        fs.utimesSync(entry.absolute, entry.atime || new Date(), entry.mtime)\n      } catch (er) {}\n    }\n    if (this[DOCHOWN](entry)) {\n      try {\n        fs.chownSync(entry.absolute, this[UID](entry), this[GID](entry))\n      } catch (er) {}\n    }\n    entry.resume()\n  }\n\n  [MKDIR] (dir, mode) {\n    try {\n      return mkdir.sync(dir, {\n        uid: this.uid,\n        gid: this.gid,\n        processUid: this.processUid,\n        processGid: this.processGid,\n        umask: this.processUmask,\n        preserve: this.preservePaths,\n        unlink: this.unlink,\n        cache: this.dirCache,\n        cwd: this.cwd,\n        mode: mode\n      })\n    } catch (er) {\n      return er\n    }\n  }\n\n  [LINK] (entry, linkpath, link) {\n    try {\n      fs[link + 'Sync'](linkpath, entry.absolute)\n      entry.resume()\n    } catch (er) {\n      return this[ONERROR](er, entry)\n    }\n  }\n}\n\nUnpack.Sync = UnpackSync\nmodule.exports = Unpack\n"]}