{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tar/lib/header.js"],"names":["Buffer","require","types","pathModule","posix","large","TYPE","Symbol","Header","data","off","cksumValid","needPax","nullBlock","block","path","mode","uid","gid","size","mtime","cksum","linkpath","uname","gname","devmaj","devmin","atime","ctime","isBuffer","decode","set","buf","length","Error","decString","decNumber","decDate","substr","slice","toString","prefix","sum","i","alloc","prefixSize","split","splitPrefix","encString","encNumber","encDate","charCodeAt","write","undefined","name","get","type","code","has","p","pathSize","pp","ret","root","parse","byteLength","dirname","basename","join","replace","numToDate","num","Date","decSmallNumber","nanNull","isNaN","value","parseInt","trim","MAXNUM","number","encode","encSmallNumber","octalString","padOctal","Math","floor","string","Array","date","getTime","NULLS","module","exports"],"mappings":"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","file":"header.js","sourcesContent":["'use strict'\n// parse a 512-byte header block to a data object, or vice-versa\n// encode returns `true` if a pax extended header is needed, because\n// the data could not be faithfully encoded in a simple header.\n// (Also, check header.needPax to see if it needs a pax header.)\n\nconst Buffer = require('./buffer.js')\nconst types = require('./types.js')\nconst pathModule = require('path').posix\nconst large = require('./large-numbers.js')\n\nconst TYPE = Symbol('type')\n\nclass Header {\n  constructor (data, off) {\n    this.cksumValid = false\n    this.needPax = false\n    this.nullBlock = false\n\n    this.block = null\n    this.path = null\n    this.mode = null\n    this.uid = null\n    this.gid = null\n    this.size = null\n    this.mtime = null\n    this.cksum = null\n    this[TYPE] = '0'\n    this.linkpath = null\n    this.uname = null\n    this.gname = null\n    this.devmaj = 0\n    this.devmin = 0\n    this.atime = null\n    this.ctime = null\n\n    if (Buffer.isBuffer(data))\n      this.decode(data, off || 0)\n    else if (data)\n      this.set(data)\n  }\n\n  decode (buf, off) {\n    if (!off)\n      off = 0\n\n    if (!buf || !(buf.length >= off + 512))\n      throw new Error('need 512 bytes for header')\n\n    this.path = decString(buf, off, 100)\n    this.mode = decNumber(buf, off + 100, 8)\n    this.uid = decNumber(buf, off + 108, 8)\n    this.gid = decNumber(buf, off + 116, 8)\n    this.size = decNumber(buf, off + 124, 12)\n    this.mtime = decDate(buf, off + 136, 12)\n    this.cksum = decNumber(buf, off + 148, 12)\n\n    // old tar versions marked dirs as a file with a trailing /\n    this[TYPE] = decString(buf, off + 156, 1)\n    if (this[TYPE] === '')\n      this[TYPE] = '0'\n    if (this[TYPE] === '0' && this.path.substr(-1) === '/')\n      this[TYPE] = '5'\n\n    // tar implementations sometimes incorrectly put the stat(dir).size\n    // as the size in the tarball, even though Directory entries are\n    // not able to have any body at all.  In the very rare chance that\n    // it actually DOES have a body, we weren't going to do anything with\n    // it anyway, and it'll just be a warning about an invalid header.\n    if (this[TYPE] === '5')\n      this.size = 0\n\n    this.linkpath = decString(buf, off + 157, 100)\n    if (buf.slice(off + 257, off + 265).toString() === 'ustar\\u000000') {\n      this.uname = decString(buf, off + 265, 32)\n      this.gname = decString(buf, off + 297, 32)\n      this.devmaj = decNumber(buf, off + 329, 8)\n      this.devmin = decNumber(buf, off + 337, 8)\n      if (buf[off + 475] !== 0) {\n        // definitely a prefix, definitely >130 chars.\n        const prefix = decString(buf, off + 345, 155)\n        this.path = prefix + '/' + this.path\n      } else {\n        const prefix = decString(buf, off + 345, 130)\n        if (prefix)\n          this.path = prefix + '/' + this.path\n        this.atime = decDate(buf, off + 476, 12)\n        this.ctime = decDate(buf, off + 488, 12)\n      }\n    }\n\n    let sum = 8 * 0x20\n    for (let i = off; i < off + 148; i++) {\n      sum += buf[i]\n    }\n    for (let i = off + 156; i < off + 512; i++) {\n      sum += buf[i]\n    }\n    this.cksumValid = sum === this.cksum\n    if (this.cksum === null && sum === 8 * 0x20)\n      this.nullBlock = true\n  }\n\n  encode (buf, off) {\n    if (!buf) {\n      buf = this.block = Buffer.alloc(512)\n      off = 0\n    }\n\n    if (!off)\n      off = 0\n\n    if (!(buf.length >= off + 512))\n      throw new Error('need 512 bytes for header')\n\n    const prefixSize = this.ctime || this.atime ? 130 : 155\n    const split = splitPrefix(this.path || '', prefixSize)\n    const path = split[0]\n    const prefix = split[1]\n    this.needPax = split[2]\n\n    this.needPax = encString(buf, off, 100, path) || this.needPax\n    this.needPax = encNumber(buf, off + 100, 8, this.mode) || this.needPax\n    this.needPax = encNumber(buf, off + 108, 8, this.uid) || this.needPax\n    this.needPax = encNumber(buf, off + 116, 8, this.gid) || this.needPax\n    this.needPax = encNumber(buf, off + 124, 12, this.size) || this.needPax\n    this.needPax = encDate(buf, off + 136, 12, this.mtime) || this.needPax\n    buf[off + 156] = this[TYPE].charCodeAt(0)\n    this.needPax = encString(buf, off + 157, 100, this.linkpath) || this.needPax\n    buf.write('ustar\\u000000', off + 257, 8)\n    this.needPax = encString(buf, off + 265, 32, this.uname) || this.needPax\n    this.needPax = encString(buf, off + 297, 32, this.gname) || this.needPax\n    this.needPax = encNumber(buf, off + 329, 8, this.devmaj) || this.needPax\n    this.needPax = encNumber(buf, off + 337, 8, this.devmin) || this.needPax\n    this.needPax = encString(buf, off + 345, prefixSize, prefix) || this.needPax\n    if (buf[off + 475] !== 0)\n      this.needPax = encString(buf, off + 345, 155, prefix) || this.needPax\n    else {\n      this.needPax = encString(buf, off + 345, 130, prefix) || this.needPax\n      this.needPax = encDate(buf, off + 476, 12, this.atime) || this.needPax\n      this.needPax = encDate(buf, off + 488, 12, this.ctime) || this.needPax\n    }\n\n    let sum = 8 * 0x20\n    for (let i = off; i < off + 148; i++) {\n      sum += buf[i]\n    }\n    for (let i = off + 156; i < off + 512; i++) {\n      sum += buf[i]\n    }\n    this.cksum = sum\n    encNumber(buf, off + 148, 8, this.cksum)\n    this.cksumValid = true\n\n    return this.needPax\n  }\n\n  set (data) {\n    for (let i in data) {\n      if (data[i] !== null && data[i] !== undefined)\n        this[i] = data[i]\n    }\n  }\n\n  get type () {\n    return types.name.get(this[TYPE]) || this[TYPE]\n  }\n\n  get typeKey () {\n    return this[TYPE]\n  }\n\n  set type (type) {\n    if (types.code.has(type))\n      this[TYPE] = types.code.get(type)\n    else\n      this[TYPE] = type\n  }\n}\n\nconst splitPrefix = (p, prefixSize) => {\n  const pathSize = 100\n  let pp = p\n  let prefix = ''\n  let ret\n  const root = pathModule.parse(p).root || '.'\n\n  if (Buffer.byteLength(pp) < pathSize)\n    ret = [pp, prefix, false]\n  else {\n    // first set prefix to the dir, and path to the base\n    prefix = pathModule.dirname(pp)\n    pp = pathModule.basename(pp)\n\n    do {\n      // both fit!\n      if (Buffer.byteLength(pp) <= pathSize &&\n          Buffer.byteLength(prefix) <= prefixSize)\n        ret = [pp, prefix, false]\n\n      // prefix fits in prefix, but path doesn't fit in path\n      else if (Buffer.byteLength(pp) > pathSize &&\n          Buffer.byteLength(prefix) <= prefixSize)\n        ret = [pp.substr(0, pathSize - 1), prefix, true]\n\n      else {\n        // make path take a bit from prefix\n        pp = pathModule.join(pathModule.basename(prefix), pp)\n        prefix = pathModule.dirname(prefix)\n      }\n    } while (prefix !== root && !ret)\n\n    // at this point, found no resolution, just truncate\n    if (!ret)\n      ret = [p.substr(0, pathSize - 1), '', true]\n  }\n  return ret\n}\n\nconst decString = (buf, off, size) =>\n  buf.slice(off, off + size).toString('utf8').replace(/\\0.*/, '')\n\nconst decDate = (buf, off, size) =>\n  numToDate(decNumber(buf, off, size))\n\nconst numToDate = num => num === null ? null : new Date(num * 1000)\n\nconst decNumber = (buf, off, size) =>\n  buf[off] & 0x80 ? large.parse(buf.slice(off, off + size))\n    : decSmallNumber(buf, off, size)\n\nconst nanNull = value => isNaN(value) ? null : value\n\nconst decSmallNumber = (buf, off, size) =>\n  nanNull(parseInt(\n    buf.slice(off, off + size)\n      .toString('utf8').replace(/\\0.*$/, '').trim(), 8))\n\n// the maximum encodable as a null-terminated octal, by field size\nconst MAXNUM = {\n  12: 0o77777777777,\n  8 : 0o7777777\n}\n\nconst encNumber = (buf, off, size, number) =>\n  number === null ? false :\n  number > MAXNUM[size] || number < 0\n    ? (large.encode(number, buf.slice(off, off + size)), true)\n    : (encSmallNumber(buf, off, size, number), false)\n\nconst encSmallNumber = (buf, off, size, number) =>\n  buf.write(octalString(number, size), off, size, 'ascii')\n\nconst octalString = (number, size) =>\n  padOctal(Math.floor(number).toString(8), size)\n\nconst padOctal = (string, size) =>\n  (string.length === size - 1 ? string\n  : new Array(size - string.length - 1).join('0') + string + ' ') + '\\0'\n\nconst encDate = (buf, off, size, date) =>\n  date === null ? false :\n  encNumber(buf, off, size, date.getTime() / 1000)\n\n// enough to fill the longest string we've got\nconst NULLS = new Array(156).join('\\0')\n// pad with nulls, return true if it's longer or non-ascii\nconst encString = (buf, off, size, string) =>\n  string === null ? false :\n  (buf.write(string + NULLS, off, size, 'utf8'),\n   string.length !== Buffer.byteLength(string) || string.length > size)\n\nmodule.exports = Header\n"]}