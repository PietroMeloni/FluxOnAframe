{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tar/lib/write-entry.js"],"names":["Buffer","require","MiniPass","Pax","Header","ReadEntry","fs","path","types","maxReadSize","PROCESS","Symbol","FILE","DIRECTORY","SYMLINK","HARDLINK","HEADER","READ","LSTAT","ONLSTAT","ONREAD","ONREADLINK","OPENFILE","ONOPENFILE","CLOSE","MODE","warner","winchars","modeFix","WriteEntry","p","opt","TypeError","portable","myuid","process","getuid","myuser","env","USER","linkCache","Map","statCache","preservePaths","cwd","strict","noPax","noMtime","mtime","onwarn","on","win32","isAbsolute","parsed","parse","warn","root","substr","length","platform","decode","replace","absolute","resolve","has","get","lstat","er","stat","emit","set","isFile","size","type","getType","end","mode","header","linkpath","uid","gid","uname","atime","ctime","encode","write","dev","ino","nlink","block","readlink","relative","linkKey","indexOf","open","fd","blockLen","Math","ceil","bufLen","min","buf","allocUnsafe","offset","pos","remain","blockRemain","read","bytesRead","cb","close","Error","syscall","code","i","writeBuf","slice","alloc","_","WriteEntrySync","lstatSync","readlinkSync","openSync","threw","readSync","closeSync","WriteEntryTar","readEntry","gname","startBlockSize","pipe","data","writeLen","Sync","Tar","isDirectory","isSymbolicLink","module","exports"],"mappings":"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","file":"write-entry.js","sourcesContent":["'use strict'\nconst Buffer = require('./buffer.js')\nconst MiniPass = require('minipass')\nconst Pax = require('./pax.js')\nconst Header = require('./header.js')\nconst ReadEntry = require('./read-entry.js')\nconst fs = require('fs')\nconst path = require('path')\n\nconst types = require('./types.js')\nconst maxReadSize = 16 * 1024 * 1024\nconst PROCESS = Symbol('process')\nconst FILE = Symbol('file')\nconst DIRECTORY = Symbol('directory')\nconst SYMLINK = Symbol('symlink')\nconst HARDLINK = Symbol('hardlink')\nconst HEADER = Symbol('header')\nconst READ = Symbol('read')\nconst LSTAT = Symbol('lstat')\nconst ONLSTAT = Symbol('onlstat')\nconst ONREAD = Symbol('onread')\nconst ONREADLINK = Symbol('onreadlink')\nconst OPENFILE = Symbol('openfile')\nconst ONOPENFILE = Symbol('onopenfile')\nconst CLOSE = Symbol('close')\nconst MODE = Symbol('mode')\nconst warner = require('./warn-mixin.js')\nconst winchars = require('./winchars.js')\n\nconst modeFix = require('./mode-fix.js')\n\nconst WriteEntry = warner(class WriteEntry extends MiniPass {\n  constructor (p, opt) {\n    opt = opt || {}\n    super(opt)\n    if (typeof p !== 'string')\n      throw new TypeError('path is required')\n    this.path = p\n    // suppress atime, ctime, uid, gid, uname, gname\n    this.portable = !!opt.portable\n    // until node has builtin pwnam functions, this'll have to do\n    this.myuid = process.getuid && process.getuid()\n    this.myuser = process.env.USER || ''\n    this.maxReadSize = opt.maxReadSize || maxReadSize\n    this.linkCache = opt.linkCache || new Map()\n    this.statCache = opt.statCache || new Map()\n    this.preservePaths = !!opt.preservePaths\n    this.cwd = opt.cwd || process.cwd()\n    this.strict = !!opt.strict\n    this.noPax = !!opt.noPax\n    this.noMtime = !!opt.noMtime\n    this.mtime = opt.mtime || null\n\n    if (typeof opt.onwarn === 'function')\n      this.on('warn', opt.onwarn)\n\n    if (!this.preservePaths && path.win32.isAbsolute(p)) {\n      // absolutes on posix are also absolutes on win32\n      // so we only need to test this one to get both\n      const parsed = path.win32.parse(p)\n      this.warn('stripping ' + parsed.root + ' from absolute path', p)\n      this.path = p.substr(parsed.root.length)\n    }\n\n    this.win32 = !!opt.win32 || process.platform === 'win32'\n    if (this.win32) {\n      this.path = winchars.decode(this.path.replace(/\\\\/g, '/'))\n      p = p.replace(/\\\\/g, '/')\n    }\n\n    this.absolute = opt.absolute || path.resolve(this.cwd, p)\n\n    if (this.path === '')\n      this.path = './'\n\n    if (this.statCache.has(this.absolute))\n      this[ONLSTAT](this.statCache.get(this.absolute))\n    else\n      this[LSTAT]()\n  }\n\n  [LSTAT] () {\n    fs.lstat(this.absolute, (er, stat) => {\n      if (er)\n        return this.emit('error', er)\n      this[ONLSTAT](stat)\n    })\n  }\n\n  [ONLSTAT] (stat) {\n    this.statCache.set(this.absolute, stat)\n    this.stat = stat\n    if (!stat.isFile())\n      stat.size = 0\n    this.type = getType(stat)\n    this.emit('stat', stat)\n    this[PROCESS]()\n  }\n\n  [PROCESS] () {\n    switch (this.type) {\n      case 'File': return this[FILE]()\n      case 'Directory': return this[DIRECTORY]()\n      case 'SymbolicLink': return this[SYMLINK]()\n      // unsupported types are ignored.\n      default: return this.end()\n    }\n  }\n\n  [MODE] (mode) {\n    return modeFix(mode, this.type === 'Directory')\n  }\n\n  [HEADER] () {\n    if (this.type === 'Directory' && this.portable)\n      this.noMtime = true\n\n    this.header = new Header({\n      path: this.path,\n      linkpath: this.linkpath,\n      // only the permissions and setuid/setgid/sticky bitflags\n      // not the higher-order bits that specify file type\n      mode: this[MODE](this.stat.mode),\n      uid: this.portable ? null : this.stat.uid,\n      gid: this.portable ? null : this.stat.gid,\n      size: this.stat.size,\n      mtime: this.noMtime ? null : this.mtime || this.stat.mtime,\n      type: this.type,\n      uname: this.portable ? null :\n        this.stat.uid === this.myuid ? this.myuser : '',\n      atime: this.portable ? null : this.stat.atime,\n      ctime: this.portable ? null : this.stat.ctime\n    })\n\n    if (this.header.encode() && !this.noPax)\n      this.write(new Pax({\n        atime: this.portable ? null : this.header.atime,\n        ctime: this.portable ? null : this.header.ctime,\n        gid: this.portable ? null : this.header.gid,\n        mtime: this.noMtime ? null : this.mtime || this.header.mtime,\n        path: this.path,\n        linkpath: this.linkpath,\n        size: this.header.size,\n        uid: this.portable ? null : this.header.uid,\n        uname: this.portable ? null : this.header.uname,\n        dev: this.portable ? null : this.stat.dev,\n        ino: this.portable ? null : this.stat.ino,\n        nlink: this.portable ? null : this.stat.nlink\n      }).encode())\n    this.write(this.header.block)\n  }\n\n  [DIRECTORY] () {\n    if (this.path.substr(-1) !== '/')\n      this.path += '/'\n    this.stat.size = 0\n    this[HEADER]()\n    this.end()\n  }\n\n  [SYMLINK] () {\n    fs.readlink(this.absolute, (er, linkpath) => {\n      if (er)\n        return this.emit('error', er)\n      this[ONREADLINK](linkpath)\n    })\n  }\n\n  [ONREADLINK] (linkpath) {\n    this.linkpath = linkpath\n    this[HEADER]()\n    this.end()\n  }\n\n  [HARDLINK] (linkpath) {\n    this.type = 'Link'\n    this.linkpath = path.relative(this.cwd, linkpath)\n    this.stat.size = 0\n    this[HEADER]()\n    this.end()\n  }\n\n  [FILE] () {\n    if (this.stat.nlink > 1) {\n      const linkKey = this.stat.dev + ':' + this.stat.ino\n      if (this.linkCache.has(linkKey)) {\n        const linkpath = this.linkCache.get(linkKey)\n        if (linkpath.indexOf(this.cwd) === 0)\n          return this[HARDLINK](linkpath)\n      }\n      this.linkCache.set(linkKey, this.absolute)\n    }\n\n    this[HEADER]()\n    if (this.stat.size === 0)\n      return this.end()\n\n    this[OPENFILE]()\n  }\n\n  [OPENFILE] () {\n    fs.open(this.absolute, 'r', (er, fd) => {\n      if (er)\n        return this.emit('error', er)\n      this[ONOPENFILE](fd)\n    })\n  }\n\n  [ONOPENFILE] (fd) {\n    const blockLen = 512 * Math.ceil(this.stat.size / 512)\n    const bufLen = Math.min(blockLen, this.maxReadSize)\n    const buf = Buffer.allocUnsafe(bufLen)\n    this[READ](fd, buf, 0, buf.length, 0, this.stat.size, blockLen)\n  }\n\n  [READ] (fd, buf, offset, length, pos, remain, blockRemain) {\n    fs.read(fd, buf, offset, length, pos, (er, bytesRead) => {\n      if (er)\n        return this[CLOSE](fd, _ => this.emit('error', er))\n      this[ONREAD](fd, buf, offset, length, pos, remain, blockRemain, bytesRead)\n    })\n  }\n\n  [CLOSE] (fd, cb) {\n    fs.close(fd, cb)\n  }\n\n  [ONREAD] (fd, buf, offset, length, pos, remain, blockRemain, bytesRead) {\n    if (bytesRead <= 0 && remain > 0) {\n      const er = new Error('unexpected EOF')\n      er.path = this.absolute\n      er.syscall = 'read'\n      er.code = 'EOF'\n      this.emit('error', er)\n    }\n\n    // null out the rest of the buffer, if we could fit the block padding\n    if (bytesRead === remain) {\n      for (let i = bytesRead; i < length && bytesRead < blockRemain; i++) {\n        buf[i + offset] = 0\n        bytesRead ++\n        remain ++\n      }\n    }\n\n    const writeBuf = offset === 0 && bytesRead === buf.length ?\n      buf : buf.slice(offset, offset + bytesRead)\n    remain -= bytesRead\n    blockRemain -= bytesRead\n    pos += bytesRead\n    offset += bytesRead\n\n    this.write(writeBuf)\n\n    if (!remain) {\n      if (blockRemain)\n        this.write(Buffer.alloc(blockRemain))\n      this.end()\n      this[CLOSE](fd, _ => _)\n      return\n    }\n\n    if (offset >= length) {\n      buf = Buffer.allocUnsafe(length)\n      offset = 0\n    }\n    length = buf.length - offset\n    this[READ](fd, buf, offset, length, pos, remain, blockRemain)\n  }\n})\n\nclass WriteEntrySync extends WriteEntry {\n  constructor (path, opt) {\n    super(path, opt)\n  }\n\n  [LSTAT] () {\n    this[ONLSTAT](fs.lstatSync(this.absolute))\n  }\n\n  [SYMLINK] () {\n    this[ONREADLINK](fs.readlinkSync(this.absolute))\n  }\n\n  [OPENFILE] () {\n    this[ONOPENFILE](fs.openSync(this.absolute, 'r'))\n  }\n\n  [READ] (fd, buf, offset, length, pos, remain, blockRemain) {\n    let threw = true\n    try {\n      const bytesRead = fs.readSync(fd, buf, offset, length, pos)\n      this[ONREAD](fd, buf, offset, length, pos, remain, blockRemain, bytesRead)\n      threw = false\n    } finally {\n      if (threw)\n        try { this[CLOSE](fd) } catch (er) {}\n    }\n  }\n\n  [CLOSE] (fd) {\n    fs.closeSync(fd)\n  }\n}\n\nconst WriteEntryTar = warner(class WriteEntryTar extends MiniPass {\n  constructor (readEntry, opt) {\n    opt = opt || {}\n    super(opt)\n    this.preservePaths = !!opt.preservePaths\n    this.portable = !!opt.portable\n    this.strict = !!opt.strict\n    this.noPax = !!opt.noPax\n    this.noMtime = !!opt.noMtime\n\n    this.readEntry = readEntry\n    this.type = readEntry.type\n    if (this.type === 'Directory' && this.portable)\n      this.noMtime = true\n\n    this.path = readEntry.path\n    this.mode = this[MODE](readEntry.mode)\n    this.uid = this.portable ? null : readEntry.uid\n    this.gid = this.portable ? null : readEntry.gid\n    this.uname = this.portable ? null : readEntry.uname\n    this.gname = this.portable ? null : readEntry.gname\n    this.size = readEntry.size\n    this.mtime = this.noMtime ? null : opt.mtime || readEntry.mtime\n    this.atime = this.portable ? null : readEntry.atime\n    this.ctime = this.portable ? null : readEntry.ctime\n    this.linkpath = readEntry.linkpath\n\n    if (typeof opt.onwarn === 'function')\n      this.on('warn', opt.onwarn)\n\n    if (path.isAbsolute(this.path) && !this.preservePaths) {\n      const parsed = path.parse(this.path)\n      this.warn(\n        'stripping ' + parsed.root + ' from absolute path',\n        this.path\n      )\n      this.path = this.path.substr(parsed.root.length)\n    }\n\n    this.remain = readEntry.size\n    this.blockRemain = readEntry.startBlockSize\n\n    this.header = new Header({\n      path: this.path,\n      linkpath: this.linkpath,\n      // only the permissions and setuid/setgid/sticky bitflags\n      // not the higher-order bits that specify file type\n      mode: this.mode,\n      uid: this.portable ? null : this.uid,\n      gid: this.portable ? null : this.gid,\n      size: this.size,\n      mtime: this.noMtime ? null : this.mtime,\n      type: this.type,\n      uname: this.portable ? null : this.uname,\n      atime: this.portable ? null : this.atime,\n      ctime: this.portable ? null : this.ctime\n    })\n\n    if (this.header.encode() && !this.noPax)\n      super.write(new Pax({\n        atime: this.portable ? null : this.atime,\n        ctime: this.portable ? null : this.ctime,\n        gid: this.portable ? null : this.gid,\n        mtime: this.noMtime ? null : this.mtime,\n        path: this.path,\n        linkpath: this.linkpath,\n        size: this.size,\n        uid: this.portable ? null : this.uid,\n        uname: this.portable ? null : this.uname,\n        dev: this.portable ? null : this.readEntry.dev,\n        ino: this.portable ? null : this.readEntry.ino,\n        nlink: this.portable ? null : this.readEntry.nlink\n      }).encode())\n\n    super.write(this.header.block)\n    readEntry.pipe(this)\n  }\n\n  [MODE] (mode) {\n    return modeFix(mode, this.type === 'Directory')\n  }\n\n  write (data) {\n    const writeLen = data.length\n    if (writeLen > this.blockRemain)\n      throw new Error('writing more to entry than is appropriate')\n    this.blockRemain -= writeLen\n    return super.write(data)\n  }\n\n  end () {\n    if (this.blockRemain)\n      this.write(Buffer.alloc(this.blockRemain))\n    return super.end()\n  }\n})\n\nWriteEntry.Sync = WriteEntrySync\nWriteEntry.Tar = WriteEntryTar\n\nconst getType = stat =>\n  stat.isFile() ? 'File'\n  : stat.isDirectory() ? 'Directory'\n  : stat.isSymbolicLink() ? 'SymbolicLink'\n  : 'Unsupported'\n\nmodule.exports = WriteEntry\n"]}