{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tar/lib/high-level-opt.js"],"names":["argmap","Map","parse","module","exports","opt","Object","keys","map","has","k","get","reduce","set","kv","create"],"mappings":"AAAA;;AAEA;;AAEA,IAAMA,SAAS,IAAIC,GAAJ,CAAQ,CACrB,CAAC,GAAD,EAAM,KAAN,CADqB,EAErB,CAAC,GAAD,EAAM,MAAN,CAFqB,EAGrB,CAAC,GAAD,EAAM,MAAN,CAHqB,EAIrB,CAAC,GAAD,EAAM,eAAN,CAJqB,EAKrB,CAAC,GAAD,EAAM,QAAN,CALqB,EAMrB,CAAC,kBAAD,EAAqB,OAArB,CANqB,EAOrB,CAAC,iBAAD,EAAoB,OAApB,CAPqB,EAQrB,CAAC,YAAD,EAAe,OAAf,CARqB,EASrB,CAAC,WAAD,EAAc,OAAd,CATqB,EAUrB,CAAC,kBAAD,EAAqB,OAArB,CAVqB,EAWrB,CAAC,gBAAD,EAAmB,OAAnB,CAXqB,EAYrB,CAAC,GAAD,EAAM,MAAN,CAZqB,EAarB,CAAC,eAAD,EAAkB,MAAlB,CAbqB,EAcrB,CAAC,cAAD,EAAiB,MAAjB,CAdqB,EAerB,CAAC,GAAD,EAAM,SAAN,CAfqB,EAgBrB,CAAC,UAAD,EAAa,SAAb,CAhBqB,EAiBrB,CAAC,GAAD,EAAM,eAAN,CAjBqB,EAkBrB,CAAC,GAAD,EAAM,QAAN,CAlBqB,EAmBrB,CAAC,GAAD,EAAM,QAAN,CAnBqB,CAAR,CAAf;;AAsBA,IAAMC,QAAQC,OAAOC,OAAP,GAAiB;AAAA,SAAOC,MAAMC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAqB;AAAA,WAAK,CACpER,OAAOS,GAAP,CAAWC,CAAX,IAAgBV,OAAOW,GAAP,CAAWD,CAAX,CAAhB,GAAgCA,CADoC,EACjCL,IAAIK,CAAJ,CADiC,CAAL;AAAA,GAArB,EAEzCE,MAFyC,CAElC,UAACC,GAAD,EAAMC,EAAN;AAAA,WAAcD,IAAIC,GAAG,CAAH,CAAJ,IAAaA,GAAG,CAAH,CAAb,EAAoBD,GAAlC;AAAA,GAFkC,EAEMP,OAAOS,MAAP,CAAc,IAAd,CAFN,CAAN,GAEmC,EAF1C;AAAA,CAA/B","file":"high-level-opt.js","sourcesContent":["'use strict'\n\n// turn tar(1) style args like `C` into the more verbose things like `cwd`\n\nconst argmap = new Map([\n  ['C', 'cwd'],\n  ['f', 'file'],\n  ['z', 'gzip'],\n  ['P', 'preservePaths'],\n  ['U', 'unlink'],\n  ['strip-components', 'strip'],\n  ['stripComponents', 'strip'],\n  ['keep-newer', 'newer'],\n  ['keepNewer', 'newer'],\n  ['keep-newer-files', 'newer'],\n  ['keepNewerFiles', 'newer'],\n  ['k', 'keep'],\n  ['keep-existing', 'keep'],\n  ['keepExisting', 'keep'],\n  ['m', 'noMtime'],\n  ['no-mtime', 'noMtime'],\n  ['p', 'preserveOwner'],\n  ['L', 'follow'],\n  ['h', 'follow']\n])\n\nconst parse = module.exports = opt => opt ? Object.keys(opt).map(k => [\n  argmap.has(k) ? argmap.get(k) : k, opt[k]\n]).reduce((set, kv) => (set[kv[0]] = kv[1], set), Object.create(null)) : {}\n"]}