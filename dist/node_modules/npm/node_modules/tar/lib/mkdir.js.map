{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tar/lib/mkdir.js"],"names":["mkdirp","require","fs","path","chownr","SymlinkError","symlink","Error","CwdError","code","mkdir","module","exports","dir","opt","cb","umask","mode","needChmod","uid","gid","doChown","processUid","processGid","preserve","unlink","cache","cwd","done","er","created","set","chmod","get","lstat","st","isDirectory","sub","relative","parts","split","mkdir_","base","length","p","shift","part","onmkdir","dirname","statEr","isSymbolicLink","join","mkdirSync","sync","chmodSync","ok","lstatSync","unlinkSync"],"mappings":"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","file":"mkdir.js","sourcesContent":["'use strict'\n// wrapper around mkdirp for tar's needs.\n\n// TODO: This should probably be a class, not functionally\n// passing around state in a gazillion args.\n\nconst mkdirp = require('mkdirp')\nconst fs = require('fs')\nconst path = require('path')\nconst chownr = require('chownr')\n\nclass SymlinkError extends Error {\n  constructor (symlink, path) {\n    super('Cannot extract through symbolic link')\n    this.path = path\n    this.symlink = symlink\n  }\n\n  get name () {\n    return 'SylinkError'\n  }\n}\n\nclass CwdError extends Error {\n  constructor (path, code) {\n    super(code + ': Cannot cd into \\'' + path + '\\'')\n    this.path = path\n    this.code = code\n  }\n\n  get name () {\n    return 'CwdError'\n  }\n}\n\nconst mkdir = module.exports = (dir, opt, cb) => {\n  // if there's any overlap between mask and mode,\n  // then we'll need an explicit chmod\n  const umask = opt.umask\n  const mode = opt.mode | 0o0700\n  const needChmod = (mode & umask) !== 0\n\n  const uid = opt.uid\n  const gid = opt.gid\n  const doChown = typeof uid === 'number' &&\n    typeof gid === 'number' &&\n    ( uid !== opt.processUid || gid !== opt.processGid )\n\n  const preserve = opt.preserve\n  const unlink = opt.unlink\n  const cache = opt.cache\n  const cwd = opt.cwd\n\n  const done = (er, created) => {\n    if (er)\n      cb(er)\n    else {\n      cache.set(dir, true)\n      if (created && doChown)\n        chownr(created, uid, gid, er => done(er))\n      else if (needChmod)\n        fs.chmod(dir, mode, cb)\n      else\n        cb()\n    }\n  }\n\n  if (cache && cache.get(dir) === true)\n    return done()\n\n  if (dir === cwd)\n    return fs.lstat(dir, (er, st) => {\n      if (er || !st.isDirectory())\n        er = new CwdError(dir, er && er.code || 'ENOTDIR')\n      done(er)\n    })\n\n  if (preserve)\n    return mkdirp(dir, mode, done)\n\n  const sub = path.relative(cwd, dir)\n  const parts = sub.split(/\\/|\\\\/)\n  mkdir_(cwd, parts, mode, cache, unlink, cwd, null, done)\n}\n\nconst mkdir_ = (base, parts, mode, cache, unlink, cwd, created, cb) => {\n  if (!parts.length)\n    return cb(null, created)\n  const p = parts.shift()\n  const part = base + '/' + p\n  if (cache.get(part))\n    return mkdir_(part, parts, mode, cache, unlink, cwd, created, cb)\n  fs.mkdir(part, mode, onmkdir(part, parts, mode, cache, unlink, cwd, created, cb))\n}\n\nconst onmkdir = (part, parts, mode, cache, unlink, cwd, created, cb) => er => {\n  if (er) {\n    if (er.path && path.dirname(er.path) === cwd &&\n        (er.code === 'ENOTDIR' || er.code === 'ENOENT'))\n      return cb(new CwdError(cwd, er.code))\n\n    fs.lstat(part, (statEr, st) => {\n      if (statEr)\n        cb(statEr)\n      else if (st.isDirectory())\n        mkdir_(part, parts, mode, cache, unlink, cwd, created, cb)\n      else if (unlink)\n        fs.unlink(part, er => {\n          if (er)\n            return cb(er)\n          fs.mkdir(part, mode, onmkdir(part, parts, mode, cache, unlink, cwd, created, cb))\n        })\n      else if (st.isSymbolicLink())\n        return cb(new SymlinkError(part, part + '/' + parts.join('/')))\n      else\n        cb(er)\n    })\n  } else {\n    created = created || part\n    mkdir_(part, parts, mode, cache, unlink, cwd, created, cb)\n  }\n}\n\nconst mkdirSync = module.exports.sync = (dir, opt) => {\n  // if there's any overlap between mask and mode,\n  // then we'll need an explicit chmod\n  const umask = opt.umask\n  const mode = opt.mode | 0o0700\n  const needChmod = (mode & umask) !== 0\n\n  const uid = opt.uid\n  const gid = opt.gid\n  const doChown = typeof uid === 'number' &&\n    typeof gid === 'number' &&\n    ( uid !== opt.processUid || gid !== opt.processGid )\n\n  const preserve = opt.preserve\n  const unlink = opt.unlink\n  const cache = opt.cache\n  const cwd = opt.cwd\n\n  const done = (created) => {\n    cache.set(dir, true)\n    if (created && doChown)\n      chownr.sync(created, uid, gid)\n    if (needChmod)\n      fs.chmodSync(dir, mode)\n  }\n\n  if (cache && cache.get(dir) === true)\n    return done()\n\n  if (dir === cwd) {\n    let ok = false\n    let code = 'ENOTDIR'\n    try {\n      ok = fs.lstatSync(dir).isDirectory()\n    } catch (er) {\n      code = er.code\n    } finally {\n      if (!ok)\n        throw new CwdError(dir, code)\n    }\n    done()\n    return\n  }\n\n  if (preserve)\n    return done(mkdirp.sync(dir, mode))\n\n  const sub = path.relative(cwd, dir)\n  const parts = sub.split(/\\/|\\\\/)\n  let created = null\n  for (let p = parts.shift(), part = cwd;\n       p && (part += '/' + p);\n       p = parts.shift()) {\n\n    if (cache.get(part))\n      continue\n\n    try {\n      fs.mkdirSync(part, mode)\n      created = created || part\n      cache.set(part, true)\n    } catch (er) {\n      if (er.path && path.dirname(er.path) === cwd &&\n          (er.code === 'ENOTDIR' || er.code === 'ENOENT'))\n        return new CwdError(cwd, er.code)\n\n      const st = fs.lstatSync(part)\n      if (st.isDirectory()) {\n        cache.set(part, true)\n        continue\n      } else if (unlink) {\n        fs.unlinkSync(part)\n        fs.mkdirSync(part, mode)\n        created = created || part\n        cache.set(part, true)\n        continue\n      } else if (st.isSymbolicLink())\n        return new SymlinkError(part, part + '/' + parts.join('/'))\n    }\n  }\n\n  return done(created)\n}\n"]}