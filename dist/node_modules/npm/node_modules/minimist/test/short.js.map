{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/minimist/test/short.js"],"names":["parse","require","test","t","plan","deepEqual","n","_","b","c","a","s","h","p","end","same","f"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,KAAR,CAAZ;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEAC,KAAK,oBAAL,EAA2B,UAAUC,CAAV,EAAa;AACpCA,MAAEC,IAAF,CAAO,CAAP;AACAD,MAAEE,SAAF,CAAYL,MAAM,CAAE,OAAF,CAAN,CAAZ,EAAgC,EAAEM,GAAG,GAAL,EAAUC,GAAG,EAAb,EAAhC;AACAJ,MAAEE,SAAF,CACIL,MAAM,CAAE,MAAF,EAAU,KAAV,CAAN,CADJ,EAEI,EAAE,GAAG,IAAL,EAAW,GAAG,IAAd,EAAoB,GAAG,GAAvB,EAA4BO,GAAG,EAA/B,EAFJ;AAIH,CAPD;;AASAL,KAAK,OAAL,EAAc,UAAUC,CAAV,EAAa;AACvBA,MAAEE,SAAF,CACIL,MAAM,CAAE,IAAF,CAAN,CADJ,EAEI,EAAEQ,GAAI,IAAN,EAAYD,GAAI,EAAhB,EAFJ,EAGI,eAHJ;AAKAJ,MAAEE,SAAF,CACIL,MAAM,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,CAAN,CADJ,EAEI,EAAEO,GAAI,CAAE,KAAF,EAAS,KAAT,EAAgB,KAAhB,CAAN,EAFJ,EAGI,MAHJ;AAKAJ,MAAEE,SAAF,CACIL,MAAM,CAAE,OAAF,CAAN,CADJ,EAEI,EAAES,GAAI,IAAN,EAAYC,GAAI,IAAhB,EAAsBP,GAAI,IAA1B,EAAgCQ,GAAI,IAApC,EAA0CJ,GAAI,EAA9C,EAFJ,EAGI,OAHJ;AAKAJ,MAAEE,SAAF,CACIL,MAAM,CAAE,OAAF,EAAW,MAAX,CAAN,CADJ,EAEI,EAAES,GAAI,IAAN,EAAYC,GAAI,IAAhB,EAAsBP,GAAI,IAA1B,EAAgCQ,GAAI,MAApC,EAA4CJ,GAAI,EAAhD,EAFJ,EAGI,kBAHJ;AAKAJ,MAAEE,SAAF,CACIL,MAAM,CAAE,IAAF,EAAQ,WAAR,CAAN,CADJ,EAEI,EAAEY,GAAI,WAAN,EAAmBL,GAAI,EAAvB,EAFJ,EAGI,eAHJ;AAKAJ,MAAEE,SAAF,CACIL,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,IAArB,EAA2B,KAA3B,CAAN,CADJ,EAEI,EAAEY,GAAI,WAAN,EAAmBC,GAAI,GAAvB,EAA4BN,GAAI,EAAhC,EAFJ,EAGI,gBAHJ;AAKAJ,MAAEW,GAAF;AACH,CAhCD;;AAkCAZ,KAAK,8BAAL,EAAqC,UAAUC,CAAV,EAAa;AAC9CA,MAAEY,IAAF,CACIf,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,WAAnC,CAAN,CADJ,EAEI;AACIgB,WAAI,IADR,EACcH,GAAI,GADlB,EACuBD,GAAI,WAD3B;AAEIL,WAAI,CAAE,WAAF;AAFR,KAFJ;AAOAJ,MAAEW,GAAF;AACH,CATD;;AAWAZ,KAAK,gBAAL,EAAuB,UAAUC,CAAV,EAAa;AAChCA,MAAEE,SAAF,CACIL,MAAM,CAAE,IAAF,EAAQ,WAAR,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,WAAnC,CAAN,CADJ,EAEI;AACIgB,WAAI,IADR,EACcH,GAAI,GADlB,EACuBD,GAAI,WAD3B;AAEIL,WAAI,CAAE,WAAF;AAFR,KAFJ;AAOAJ,MAAEW,GAAF;AACH,CATD","file":"short.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('numeric short args', function (t) {\n    t.plan(2);\n    t.deepEqual(parse([ '-n123' ]), { n: 123, _: [] });\n    t.deepEqual(\n        parse([ '-123', '456' ]),\n        { 1: true, 2: true, 3: 456, _: [] }\n    );\n});\n\ntest('short', function (t) {\n    t.deepEqual(\n        parse([ '-b' ]),\n        { b : true, _ : [] },\n        'short boolean'\n    );\n    t.deepEqual(\n        parse([ 'foo', 'bar', 'baz' ]),\n        { _ : [ 'foo', 'bar', 'baz' ] },\n        'bare'\n    );\n    t.deepEqual(\n        parse([ '-cats' ]),\n        { c : true, a : true, t : true, s : true, _ : [] },\n        'group'\n    );\n    t.deepEqual(\n        parse([ '-cats', 'meow' ]),\n        { c : true, a : true, t : true, s : 'meow', _ : [] },\n        'short group next'\n    );\n    t.deepEqual(\n        parse([ '-h', 'localhost' ]),\n        { h : 'localhost', _ : [] },\n        'short capture'\n    );\n    t.deepEqual(\n        parse([ '-h', 'localhost', '-p', '555' ]),\n        { h : 'localhost', p : 555, _ : [] },\n        'short captures'\n    );\n    t.end();\n});\n \ntest('mixed short bool and capture', function (t) {\n    t.same(\n        parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ]\n        }\n    );\n    t.end();\n});\n \ntest('short and long', function (t) {\n    t.deepEqual(\n        parse([ '-h', 'localhost', '-fp', '555', 'script.js' ]),\n        {\n            f : true, p : 555, h : 'localhost',\n            _ : [ 'script.js' ]\n        }\n    );\n    t.end();\n});\n"]}