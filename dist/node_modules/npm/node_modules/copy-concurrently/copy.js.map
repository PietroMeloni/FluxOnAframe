{"version":3,"sources":["../../../../../node_modules/npm/node_modules/copy-concurrently/copy.js"],"names":["module","exports","copy","item","copyItem","recurse","recurseDir","symlink","copySymlink","file","copyFile","nodeFs","require","path","validate","stockWriteStreamAtomic","mkdirp","rimraf","isWindows","RunQueue","extend","Object","assign","_extend","promisify","Promise","fn","args","slice","call","arguments","resolve","reject","apply","concat","err","value","from","to","opts","global","fs","recurseWith","lstat","stat","chown","readdir","readlink","chmod","top","mkdirpAsync","rimrafAsync","queue","maxConcurrency","add","run","catch","code","passThroughError","remove","then","target","unlink","rmdir","glob","eexists","fromStat","cmdOpts","isDirectory","isSymbolicLink","isFile","isBlockDevice","eunsupported","isCharacterDevice","isFIFO","isSocket","mode","getuid","process","uid","gid","files","forEach","join","fromDest","absoluteDest","dirname","relativeDest","relative","linkFrom","substr","destStat","isDir","type","writeStreamAtomic","writeOpts","errored","onError","createReadStream","once","pipe","Error","msg"],"mappings":"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","file":"copy.js","sourcesContent":["'use strict'\nmodule.exports = copy\nmodule.exports.item = copyItem\nmodule.exports.recurse = recurseDir\nmodule.exports.symlink = copySymlink\nmodule.exports.file = copyFile\n\nvar nodeFs = require('fs')\nvar path = require('path')\nvar validate = require('aproba')\nvar stockWriteStreamAtomic = require('fs-write-stream-atomic')\nvar mkdirp = require('mkdirp')\nvar rimraf = require('rimraf')\nvar isWindows = require('./is-windows')\nvar RunQueue = require('run-queue')\nvar extend = Object.assign || require('util')._extend\n\nfunction promisify (Promise, fn) {\n  return function () {\n    var args = [].slice.call(arguments)\n    return new Promise(function (resolve, reject) {\n      return fn.apply(null, args.concat(function (err, value) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      }))\n    })\n  }\n}\n\nfunction copy (from, to, opts) {\n  validate('SSO|SS', arguments)\n  opts = extend({}, opts || {})\n\n  var Promise = opts.Promise || global.Promise\n  var fs = opts.fs || nodeFs\n\n  if (opts.isWindows == null) opts.isWindows = isWindows\n  if (!opts.Promise) opts.Promise = Promise\n  if (!opts.fs) opts.fs = fs\n  if (!opts.recurseWith) opts.recurseWith = copyItem\n  if (!opts.lstat) opts.lstat = promisify(opts.Promise, fs.lstat)\n  if (!opts.stat) opts.stat = promisify(opts.Promise, fs.stat)\n  if (!opts.chown) opts.chown = promisify(opts.Promise, fs.chown)\n  if (!opts.readdir) opts.readdir = promisify(opts.Promise, fs.readdir)\n  if (!opts.readlink) opts.readlink = promisify(opts.Promise, fs.readlink)\n  if (!opts.symlink) opts.symlink = promisify(opts.Promise, fs.symlink)\n  if (!opts.chmod) opts.chmod = promisify(opts.Promise, fs.chmod)\n\n  opts.top = from\n  opts.mkdirpAsync = promisify(opts.Promise, mkdirp)\n  var rimrafAsync = promisify(opts.Promise, rimraf)\n\n  var queue = new RunQueue({\n    maxConcurrency: opts.maxConcurrency,\n    Promise: Promise\n  })\n  opts.queue = queue\n\n  queue.add(0, copyItem, [from, to, opts])\n\n  return queue.run().catch(function (err) {\n    // if the target already exists don't clobber it\n    if (err.code === 'EEXIST' || err.code === 'EPERM') {\n      return passThroughError()\n    } else {\n      return remove(to).then(passThroughError, passThroughError)\n    }\n    function passThroughError () {\n      return Promise.reject(err)\n    }\n  })\n\n  function remove (target) {\n    var opts = {\n      unlink: fs.unlink,\n      chmod: fs.chmod,\n      stat: fs.stat,\n      lstat: fs.lstat,\n      rmdir: fs.rmdir,\n      readdir: fs.readdir,\n      glob: false\n    }\n    return rimrafAsync(target, opts)\n  }\n}\n\nfunction copyItem (from, to, opts) {\n  validate('SSO', [from, to, opts])\n  var fs = opts.fs || nodeFs\n  var Promise = opts.Promise || global.Promise\n  var lstat = opts.lstat || promisify(Promise, fs.lstat)\n\n  return lstat(to).then(function () {\n    return Promise.reject(eexists(from, to))\n  }, function (err) {\n    if (err && err.code !== 'ENOENT') return Promise.reject(err)\n    return lstat(from)\n  }).then(function (fromStat) {\n    var cmdOpts = extend(extend({}, opts), fromStat)\n    if (fromStat.isDirectory()) {\n      return recurseDir(from, to, cmdOpts)\n    } else if (fromStat.isSymbolicLink()) {\n      opts.queue.add(1, copySymlink, [from, to, cmdOpts])\n    } else if (fromStat.isFile()) {\n      return copyFile(from, to, cmdOpts)\n    } else if (fromStat.isBlockDevice()) {\n      return Promise.reject(eunsupported(from + \" is a block device, and we don't know how to copy those.\"))\n    } else if (fromStat.isCharacterDevice()) {\n      return Promise.reject(eunsupported(from + \" is a character device, and we don't know how to copy those.\"))\n    } else if (fromStat.isFIFO()) {\n      return Promise.reject(eunsupported(from + \" is a FIFO, and we don't know how to copy those.\"))\n    } else if (fromStat.isSocket()) {\n      return Promise.reject(eunsupported(from + \" is a socket, and we don't know how to copy those.\"))\n    } else {\n      return Promise.reject(eunsupported(\"We can't tell what \" + from + \" is and so we can't copy it.\"))\n    }\n  })\n}\n\nfunction recurseDir (from, to, opts) {\n  validate('SSO', [from, to, opts])\n  var recurseWith = opts.recurseWith || copyItem\n  var fs = opts.fs || nodeFs\n  var chown = opts.chown || promisify(Promise, fs.chown)\n  var readdir = opts.readdir || promisify(Promise, fs.readdir)\n  var mkdirpAsync = opts.mkdirpAsync || promisify(Promise, mkdirp)\n\n  return mkdirpAsync(to, {fs: fs, mode: opts.mode}).then(function () {\n    var getuid = opts.getuid || process.getuid\n    if (getuid && opts.uid != null && getuid() === 0) {\n      return chown(to, opts.uid, opts.gid)\n    }\n  }).then(function () {\n    return readdir(from)\n  }).then(function (files) {\n    files.forEach(function (file) {\n      opts.queue.add(0, recurseWith, [path.join(from, file), path.join(to, file), opts])\n    })\n  })\n}\n\nfunction copySymlink (from, to, opts) {\n  validate('SSO', [from, to, opts])\n  var fs = opts.fs || nodeFs\n  var readlink = opts.readlink || promisify(Promise, fs.readlink)\n  var stat = opts.stat || promisify(Promise, fs.symlink)\n  var symlink = opts.symlink || promisify(Promise, fs.symlink)\n  var Promise = opts.Promise || global.Promise\n\n  return readlink(from).then(function (fromDest) {\n    var absoluteDest = path.resolve(path.dirname(from), fromDest)\n    // Treat absolute paths that are inside the tree we're\n    // copying as relative. This necessary to properly support junctions\n    // on windows (which are always absolute) but is also DWIM with symlinks.\n    var relativeDest = path.relative(opts.top, absoluteDest)\n    var linkFrom = relativeDest.substr(0, 2) === '..' ? fromDest : path.relative(path.dirname(from), absoluteDest)\n    if (opts.isWindows) {\n      return stat(absoluteDest).catch(function () { return null }).then(function (destStat) {\n        var isDir = destStat && destStat.isDirectory()\n        var type = isDir ? 'dir' : 'file'\n        return symlink(linkFrom, to, type).catch(function (err) {\n          if (type === 'dir') {\n            return symlink(linkFrom, to, 'junction')\n          } else {\n            return Promise.reject(err)\n          }\n        })\n      })\n    } else {\n      return symlink(linkFrom, to)\n    }\n  })\n}\n\nfunction copyFile (from, to, opts) {\n  validate('SSO', [from, to, opts])\n  var fs = opts.fs || nodeFs\n  var writeStreamAtomic = opts.writeStreamAtomic || stockWriteStreamAtomic\n  var Promise = opts.Promise || global.Promise\n  var chmod = opts.chmod || promisify(Promise, fs.chmod)\n\n  var writeOpts = {}\n  var getuid = opts.getuid || process.getuid\n  if (getuid && opts.uid != null && getuid() === 0) {\n    writeOpts.chown = {\n      uid: opts.uid,\n      gid: opts.gid\n    }\n  }\n\n  return new Promise(function (resolve, reject) {\n    var errored = false\n    function onError (err) {\n      errored = true\n      reject(err)\n    }\n    fs.createReadStream(from)\n      .once('error', onError)\n      .pipe(writeStreamAtomic(to, writeOpts))\n      .once('error', onError)\n      .once('close', function () {\n        if (errored) return\n        if (opts.mode != null) {\n          resolve(chmod(to, opts.mode))\n        } else {\n          resolve()\n        }\n      })\n  })\n}\n\nfunction eexists (from, to) {\n  var err = new Error('Could not move ' + from + ' to ' + to + ': destination already exists.')\n  err.code = 'EEXIST'\n  return err\n}\n\nfunction eunsupported (msg) {\n  var err = new Error(msg)\n  err.code = 'EUNSUPPORTED'\n  return err\n}\n"]}