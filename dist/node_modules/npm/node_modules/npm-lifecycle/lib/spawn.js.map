{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/npm-lifecycle/lib/spawn.js"],"names":["module","exports","spawn","_spawn","require","EventEmitter","progressEnabled","running","startRunning","log","disableProgress","stopRunning","enableProgress","willCmdOutput","stdio","Array","isArray","fh","cmd","args","options","cmdWillOutput","raw","cooked","on","er","file","emit","code","signal","Error","errno","syscall","stdin","stdout","stderr","kill","sig"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiBC,KAAjB;;AAEA,IAAMC,SAASC,QAAQ,eAAR,EAAyBF,KAAxC;AACA,IAAMG,eAAeD,QAAQ,QAAR,EAAkBC,YAAvC;;AAEA,IAAIC,wBAAJ;AACA,IAAIC,UAAU,CAAd;;AAEA,SAASC,YAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAIH,mBAAmB,IAAvB,EAA6BA,kBAAkBG,IAAIH,eAAtB;AAC7B,MAAIA,eAAJ,EAAqBG,IAAIC,eAAJ;AACrB,IAAEH,OAAF;AACD;;AAED,SAASI,WAAT,CAAsBF,GAAtB,EAA2B;AACzB,IAAEF,OAAF;AACA,MAAID,mBAAmBC,YAAY,CAAnC,EAAsCE,IAAIG,cAAJ;AACvC;;AAED,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,UAAU,SAAd,EAAyB,OAAO,IAAP;AACzB,MAAI,CAACC,MAAMC,OAAN,CAAcF,KAAd,CAAL,EAA2B,OAAO,KAAP;AAC3B,OAAK,IAAIG,KAAK,CAAd,EAAiBA,MAAM,CAAvB,EAA0B,EAAEA,EAA5B,EAAgC;AAC9B,QAAIH,MAAMG,EAAN,MAAc,SAAlB,EAA6B,OAAO,IAAP;AAC7B,QAAIH,MAAMG,EAAN,MAAc,CAAd,IAAmBH,MAAMG,EAAN,MAAc,CAArC,EAAwC,OAAO,IAAP;AACzC;AACD,SAAO,KAAP;AACD;;AAED,SAASf,KAAT,CAAgBgB,GAAhB,EAAqBC,IAArB,EAA2BC,OAA3B,EAAoCX,GAApC,EAAyC;AACvC,MAAMY,gBAAgBR,cAAcO,WAAWA,QAAQN,KAAjC,CAAtB;;AAEA,MAAIO,aAAJ,EAAmBb,aAAaC,GAAb;AACnB,MAAMa,MAAMnB,OAAOe,GAAP,EAAYC,IAAZ,EAAkBC,OAAlB,CAAZ;AACA,MAAMG,SAAS,IAAIlB,YAAJ,EAAf;;AAEAiB,MAAIE,EAAJ,CAAO,OAAP,EAAgB,UAAUC,EAAV,EAAc;AAC5B,QAAIJ,aAAJ,EAAmBV,YAAYF,GAAZ;AACnBgB,OAAGC,IAAH,GAAUR,GAAV;AACAK,WAAOI,IAAP,CAAY,OAAZ,EAAqBF,EAArB;AACD,GAJD,EAIGD,EAJH,CAIM,OAJN,EAIe,UAAUI,IAAV,EAAgBC,MAAhB,EAAwB;AACrC,QAAIR,aAAJ,EAAmBV,YAAYF,GAAZ;AACnB;AACA;AACA,QAAImB,SAAS,GAAb,EAAkB;AAChB,UAAMH,KAAK,IAAIK,KAAJ,CAAU,cAAV,CAAX;AACAL,SAAGG,IAAH,GAAU,QAAV;AACAH,SAAGM,KAAH,GAAW,QAAX;AACAN,SAAGO,OAAH,GAAa,OAAb;AACAP,SAAGC,IAAH,GAAUR,GAAV;AACAK,aAAOI,IAAP,CAAY,OAAZ,EAAqBF,EAArB;AACD,KAPD,MAOO;AACLF,aAAOI,IAAP,CAAY,OAAZ,EAAqBC,IAArB,EAA2BC,MAA3B;AACD;AACF,GAlBD;;AAoBAN,SAAOU,KAAP,GAAeX,IAAIW,KAAnB;AACAV,SAAOW,MAAP,GAAgBZ,IAAIY,MAApB;AACAX,SAAOY,MAAP,GAAgBb,IAAIa,MAApB;AACAZ,SAAOa,IAAP,GAAc,UAAUC,GAAV,EAAe;AAAE,WAAOf,IAAIc,IAAJ,CAASC,GAAT,CAAP;AAAsB,GAArD;;AAEA,SAAOd,MAAP;AACD","file":"spawn.js","sourcesContent":["'use strict'\n\nmodule.exports = spawn\n\nconst _spawn = require('child_process').spawn\nconst EventEmitter = require('events').EventEmitter\n\nlet progressEnabled\nlet running = 0\n\nfunction startRunning (log) {\n  if (progressEnabled == null) progressEnabled = log.progressEnabled\n  if (progressEnabled) log.disableProgress()\n  ++running\n}\n\nfunction stopRunning (log) {\n  --running\n  if (progressEnabled && running === 0) log.enableProgress()\n}\n\nfunction willCmdOutput (stdio) {\n  if (stdio === 'inherit') return true\n  if (!Array.isArray(stdio)) return false\n  for (let fh = 1; fh <= 2; ++fh) {\n    if (stdio[fh] === 'inherit') return true\n    if (stdio[fh] === 1 || stdio[fh] === 2) return true\n  }\n  return false\n}\n\nfunction spawn (cmd, args, options, log) {\n  const cmdWillOutput = willCmdOutput(options && options.stdio)\n\n  if (cmdWillOutput) startRunning(log)\n  const raw = _spawn(cmd, args, options)\n  const cooked = new EventEmitter()\n\n  raw.on('error', function (er) {\n    if (cmdWillOutput) stopRunning(log)\n    er.file = cmd\n    cooked.emit('error', er)\n  }).on('close', function (code, signal) {\n    if (cmdWillOutput) stopRunning(log)\n    // Create ENOENT error because Node.js v8.0 will not emit\n    // an `error` event if the command could not be found.\n    if (code === 127) {\n      const er = new Error('spawn ENOENT')\n      er.code = 'ENOENT'\n      er.errno = 'ENOENT'\n      er.syscall = 'spawn'\n      er.file = cmd\n      cooked.emit('error', er)\n    } else {\n      cooked.emit('close', code, signal)\n    }\n  })\n\n  cooked.stdin = raw.stdin\n  cooked.stdout = raw.stdout\n  cooked.stderr = raw.stderr\n  cooked.kill = function (sig) { return raw.kill(sig) }\n\n  return cooked\n}\n"]}