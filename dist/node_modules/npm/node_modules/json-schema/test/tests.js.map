{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/json-schema/test/tests.js"],"names":["assert","require","vows","path","fs","validate","revision","schemaRoot","join","__dirname","schemaNames","schemas","forEach","name","file","loadSchema","s","n","f","data","readFileSync","schema","JSON","parse","resultIsValid","result","isObject","equal","valid","isArray","errors","i","length","notEqual","assertValidates","doc","context","topic","fail","assertSelfValidates","suite","describe","addBatch","export","module"],"mappings":"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","file":"tests.js","sourcesContent":["var assert = require('assert');\r\nvar vows = require('vows');\r\nvar path = require('path');\r\nvar fs = require('fs');\r\n\r\nvar validate = require('../lib/validate').validate;\r\n\r\n\r\nvar revision = 'draft-03';\r\nvar schemaRoot = path.join(__dirname, '..', revision);\r\nvar schemaNames = ['schema', 'hyper-schema', 'links', 'json-ref' ];\r\nvar schemas = {};\r\n\r\nschemaNames.forEach(function(name) {\r\n    var file = path.join(schemaRoot, name);\r\n    schemas[name] = loadSchema(file);\r\n});\r\n\r\nschemaNames.forEach(function(name) {\r\n    var s, n = name+'-nsd', f = path.join(schemaRoot, name);\r\n    schemas[n] = loadSchema(f);\r\n    s = schemas[n];\r\n    delete s['$schema'];\r\n});\r\n\r\nfunction loadSchema(path) {\r\n    var data = fs.readFileSync(path, 'utf-8');\r\n    var schema = JSON.parse(data);\r\n    return schema;\r\n}\r\n\r\nfunction resultIsValid() {\r\n    return function(result) {\r\n        assert.isObject(result);\r\n        //assert.isBoolean(result.valid);\r\n        assert.equal(typeof(result.valid), 'boolean');\r\n        assert.isArray(result.errors);\r\n        for (var i = 0; i < result.errors.length; i++) {\r\n            assert.notEqual(result.errors[i], null, 'errors['+i+'] is null');\r\n        }\r\n    }\r\n}\r\n\r\nfunction assertValidates(doc, schema) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+', '+schema+')'] = {\r\n        topic: validate(schemas[doc], schemas[schema]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) {\r\n            // XXX work-around for bug in vows: [null] chokes it\r\n            if (result.errors[0] == null) assert.fail('(errors contains null)');\r\n            assert.length(result.errors, 0);\r\n        }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nfunction assertSelfValidates(doc) {\r\n    var context = {};\r\n\r\n    context[': validate('+doc+')'] = {\r\n        topic: validate(schemas[doc]),\r\n        'returns valid result': resultIsValid(),\r\n        'with valid=true': function(result) { assert.equal(result.valid, true); },\r\n        'and no errors':   function(result) { assert.length(result.errors, 0); }\r\n    };\r\n\r\n    return context;\r\n}\r\n\r\nvar suite = vows.describe('JSON Schema').addBatch({\r\n    'Core-NSD self-validates': assertSelfValidates('schema-nsd'),\r\n    'Core-NSD/Core-NSD': assertValidates('schema-nsd', 'schema-nsd'),\r\n    'Core-NSD/Core': assertValidates('schema-nsd', 'schema'),\r\n\r\n    'Core self-validates': assertSelfValidates('schema'),\r\n    'Core/Core': assertValidates('schema', 'schema'),\r\n\r\n    'Hyper-NSD self-validates': assertSelfValidates('hyper-schema-nsd'),\r\n    'Hyper self-validates': assertSelfValidates('hyper-schema'),\r\n    'Hyper/Hyper': assertValidates('hyper-schema', 'hyper-schema'),\r\n    'Hyper/Core': assertValidates('hyper-schema', 'schema'),\r\n\r\n    'Links-NSD self-validates': assertSelfValidates('links-nsd'),\r\n    'Links self-validates': assertSelfValidates('links'),\r\n    'Links/Hyper': assertValidates('links', 'hyper-schema'),\r\n    'Links/Core': assertValidates('links', 'schema'),\r\n\r\n    'Json-Ref self-validates': assertSelfValidates('json-ref'),\r\n    'Json-Ref/Hyper': assertValidates('json-ref', 'hyper-schema'),\r\n    'Json-Ref/Core': assertValidates('json-ref', 'schema')\r\n}).export(module);\r\n"]}