{"version":3,"sources":["../../../../../node_modules/npm/node_modules/buffer-from/index.js"],"names":["toString","Object","prototype","isModern","Buffer","alloc","allocUnsafe","from","isArrayBuffer","input","call","slice","fromArrayBuffer","obj","byteOffset","length","maxLength","byteLength","RangeError","undefined","Uint8Array","fromString","string","encoding","isEncoding","TypeError","bufferFrom","value","encodingOrOffset","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,OAAOC,SAAP,CAAiBF,QAAhC;;AAEA,IAAIG,WACF,OAAOC,OAAOC,KAAd,KAAwB,UAAxB,IACA,OAAOD,OAAOE,WAAd,KAA8B,UAD9B,IAEA,OAAOF,OAAOG,IAAd,KAAuB,UAHzB;;AAMA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC7B,SAAOT,SAASU,IAAT,CAAcD,KAAd,EAAqBE,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,MAAsC,aAA7C;AACD;;AAED,SAASC,eAAT,CAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,MAA3C,EAAmD;AACjDD,kBAAgB,CAAhB;;AAEA,MAAIE,YAAYH,IAAII,UAAJ,GAAiBH,UAAjC;;AAEA,MAAIE,YAAY,CAAhB,EAAmB;AACjB,UAAM,IAAIE,UAAJ,CAAe,2BAAf,CAAN;AACD;;AAED,MAAIH,WAAWI,SAAf,EAA0B;AACxBJ,aAASC,SAAT;AACD,GAFD,MAEO;AACLD,gBAAY,CAAZ;;AAEA,QAAIA,SAASC,SAAb,EAAwB;AACtB,YAAM,IAAIE,UAAJ,CAAe,2BAAf,CAAN;AACD;AACF;;AAED,SAAOf,WACHC,OAAOG,IAAP,CAAYM,IAAIF,KAAJ,CAAUG,UAAV,EAAsBA,aAAaC,MAAnC,CAAZ,CADG,GAEH,IAAIX,MAAJ,CAAW,IAAIgB,UAAJ,CAAeP,IAAIF,KAAJ,CAAUG,UAAV,EAAsBA,aAAaC,MAAnC,CAAf,CAAX,CAFJ;AAGD;;AAED,SAASM,UAAT,CAAqBC,MAArB,EAA6BC,QAA7B,EAAuC;AACrC,MAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,aAAa,EAAjD,EAAqD;AACnDA,eAAW,MAAX;AACD;;AAED,MAAI,CAACnB,OAAOoB,UAAP,CAAkBD,QAAlB,CAAL,EAAkC;AAChC,UAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;AACD;;AAED,SAAOtB,WACHC,OAAOG,IAAP,CAAYe,MAAZ,EAAoBC,QAApB,CADG,GAEH,IAAInB,MAAJ,CAAWkB,MAAX,EAAmBC,QAAnB,CAFJ;AAGD;;AAED,SAASG,UAAT,CAAqBC,KAArB,EAA4BC,gBAA5B,EAA8Cb,MAA9C,EAAsD;AACpD,MAAI,OAAOY,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIF,SAAJ,CAAc,uCAAd,CAAN;AACD;;AAED,MAAIjB,cAAcmB,KAAd,CAAJ,EAA0B;AACxB,WAAOf,gBAAgBe,KAAhB,EAAuBC,gBAAvB,EAAyCb,MAAzC,CAAP;AACD;;AAED,MAAI,OAAOY,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAON,WAAWM,KAAX,EAAkBC,gBAAlB,CAAP;AACD;;AAED,SAAOzB,WACHC,OAAOG,IAAP,CAAYoB,KAAZ,CADG,GAEH,IAAIvB,MAAJ,CAAWuB,KAAX,CAFJ;AAGD;;AAEDE,OAAOC,OAAP,GAAiBJ,UAAjB","file":"index.js","sourcesContent":["var toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n"]}