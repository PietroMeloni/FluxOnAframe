{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/cross-spawn/lib/util/resolveCommand.js"],"names":["path","require","which","LRU","commandCache","max","maxAge","resolveCommand","command","noExtension","resolved","get","has","sync","pathExt","delimiter","process","env","PATHEXT","e","set","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;AACA,IAAIE,MAAMF,QAAQ,WAAR,CAAV;;AAEA,IAAIG,eAAe,IAAID,GAAJ,CAAQ,EAAEE,KAAK,EAAP,EAAWC,QAAQ,KAAK,IAAxB,EAAR,CAAnB,C,CAA6D;;AAE7D,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,WAAjC,EAA8C;AAC1C,QAAIC,QAAJ;;AAEAD,kBAAc,CAAC,CAACA,WAAhB;AACAC,eAAWN,aAAaO,GAAb,CAAiBH,UAAU,GAAV,GAAgBC,WAAjC,CAAX;;AAEA;AACA,QAAIL,aAAaQ,GAAb,CAAiBJ,OAAjB,CAAJ,EAA+B;AAC3B,eAAOJ,aAAaO,GAAb,CAAiBH,OAAjB,CAAP;AACH;;AAED,QAAI;AACAE,mBAAW,CAACD,WAAD,GACPP,MAAMW,IAAN,CAAWL,OAAX,CADO,GAEPN,MAAMW,IAAN,CAAWL,OAAX,EAAoB,EAAEM,SAASd,KAAKe,SAAL,IAAkBC,QAAQC,GAAR,CAAYC,OAAZ,IAAuB,EAAzC,CAAX,EAApB,CAFJ;AAGH,KAJD,CAIE,OAAOC,CAAP,EAAU,CAAE,WAAa;;AAE3Bf,iBAAagB,GAAb,CAAiBZ,UAAU,GAAV,GAAgBC,WAAjC,EAA8CC,QAA9C;;AAEA,WAAOA,QAAP;AACH;;AAEDW,OAAOC,OAAP,GAAiBf,cAAjB","file":"resolveCommand.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar which = require('which');\nvar LRU = require('lru-cache');\n\nvar commandCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec\n\nfunction resolveCommand(command, noExtension) {\n    var resolved;\n\n    noExtension = !!noExtension;\n    resolved = commandCache.get(command + '!' + noExtension);\n\n    // Check if its resolved in the cache\n    if (commandCache.has(command)) {\n        return commandCache.get(command);\n    }\n\n    try {\n        resolved = !noExtension ?\n            which.sync(command) :\n            which.sync(command, { pathExt: path.delimiter + (process.env.PATHEXT || '') });\n    } catch (e) { /* empty */ }\n\n    commandCache.set(command + '!' + noExtension, resolved);\n\n    return resolved;\n}\n\nmodule.exports = resolveCommand;\n"]}