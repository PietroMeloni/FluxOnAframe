{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/cross-spawn/lib/enoent.js"],"names":["isWin","process","platform","resolveCommand","require","isNode10","version","indexOf","notFoundError","command","syscall","err","Error","code","errno","hookChildProcess","cp","parsed","originalEmit","emit","name","arg1","verifyENOENT","call","apply","arguments","status","file","original","verifyENOENTSync","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQC,QAAR,KAAqB,OAAjC;AACA,IAAIC,iBAAiBC,QAAQ,uBAAR,CAArB;;AAEA,IAAIC,WAAWJ,QAAQK,OAAR,CAAgBC,OAAhB,CAAwB,QAAxB,MAAsC,CAArD;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AACrC,QAAIC,GAAJ;;AAEAA,UAAM,IAAIC,KAAJ,CAAUF,UAAU,GAAV,GAAgBD,OAAhB,GAA0B,SAApC,CAAN;AACAE,QAAIE,IAAJ,GAAWF,IAAIG,KAAJ,GAAY,QAAvB;AACAH,QAAID,OAAJ,GAAcA,UAAU,GAAV,GAAgBD,OAA9B;;AAEA,WAAOE,GAAP;AACH;;AAED,SAASI,gBAAT,CAA0BC,EAA1B,EAA8BC,MAA9B,EAAsC;AAClC,QAAIC,YAAJ;;AAEA,QAAI,CAAClB,KAAL,EAAY;AACR;AACH;;AAEDkB,mBAAeF,GAAGG,IAAlB;AACAH,OAAGG,IAAH,GAAU,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC5B,YAAIV,GAAJ;;AAEA;AACA;AACA;AACA,YAAIS,SAAS,MAAb,EAAqB;AACjBT,kBAAMW,aAAaD,IAAb,EAAmBJ,MAAnB,EAA2B,OAA3B,CAAN;;AAEA,gBAAIN,GAAJ,EAAS;AACL,uBAAOO,aAAaK,IAAb,CAAkBP,EAAlB,EAAsB,OAAtB,EAA+BL,GAA/B,CAAP;AACH;AACJ;;AAED,eAAOO,aAAaM,KAAb,CAAmBR,EAAnB,EAAuBS,SAAvB,CAAP;AACH,KAfD;AAgBH;;AAED,SAASH,YAAT,CAAsBI,MAAtB,EAA8BT,MAA9B,EAAsC;AAClC,QAAIjB,SAAS0B,WAAW,CAApB,IAAyB,CAACT,OAAOU,IAArC,EAA2C;AACvC,eAAOnB,cAAcS,OAAOW,QAArB,EAA+B,OAA/B,CAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAED,SAASC,gBAAT,CAA0BH,MAA1B,EAAkCT,MAAlC,EAA0C;AACtC,QAAIjB,SAAS0B,WAAW,CAApB,IAAyB,CAACT,OAAOU,IAArC,EAA2C;AACvC,eAAOnB,cAAcS,OAAOW,QAArB,EAA+B,WAA/B,CAAP;AACH;;AAED;AACA;AACA,QAAIvB,YAAYqB,WAAW,CAAC,CAA5B,EAA+B;AAC3BT,eAAOU,IAAP,GAAc3B,QAAQiB,OAAOU,IAAf,GAAsBxB,eAAec,OAAOW,QAAtB,CAApC;;AAEA,YAAI,CAACX,OAAOU,IAAZ,EAAkB;AACd,mBAAOnB,cAAcS,OAAOW,QAArB,EAA+B,WAA/B,CAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH;;AAEDE,OAAOC,OAAP,CAAehB,gBAAf,GAAkCA,gBAAlC;AACAe,OAAOC,OAAP,CAAeT,YAAf,GAA8BA,YAA9B;AACAQ,OAAOC,OAAP,CAAeF,gBAAf,GAAkCA,gBAAlC;AACAC,OAAOC,OAAP,CAAevB,aAAf,GAA+BA,aAA/B","file":"enoent.js","sourcesContent":["'use strict';\n\nvar isWin = process.platform === 'win32';\nvar resolveCommand = require('./util/resolveCommand');\n\nvar isNode10 = process.version.indexOf('v0.10.') === 0;\n\nfunction notFoundError(command, syscall) {\n    var err;\n\n    err = new Error(syscall + ' ' + command + ' ENOENT');\n    err.code = err.errno = 'ENOENT';\n    err.syscall = syscall + ' ' + command;\n\n    return err;\n}\n\nfunction hookChildProcess(cp, parsed) {\n    var originalEmit;\n\n    if (!isWin) {\n        return;\n    }\n\n    originalEmit = cp.emit;\n    cp.emit = function (name, arg1) {\n        var err;\n\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments);\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    // If we are in node 10, then we are using spawn-sync; if it exited\n    // with -1 it probably means that the command does not exist\n    if (isNode10 && status === -1) {\n        parsed.file = isWin ? parsed.file : resolveCommand(parsed.original);\n\n        if (!parsed.file) {\n            return notFoundError(parsed.original, 'spawnSync');\n        }\n    }\n\n    return null;\n}\n\nmodule.exports.hookChildProcess = hookChildProcess;\nmodule.exports.verifyENOENT = verifyENOENT;\nmodule.exports.verifyENOENTSync = verifyENOENTSync;\nmodule.exports.notFoundError = notFoundError;\n"]}