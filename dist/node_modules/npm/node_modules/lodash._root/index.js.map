{"version":3,"sources":["../../../../../node_modules/npm/node_modules/lodash._root/index.js"],"names":["objectTypes","freeExports","exports","nodeType","undefined","freeModule","module","freeGlobal","checkGlobal","global","freeSelf","self","freeWindow","window","thisGlobal","root","Function","value","Object"],"mappings":";;;;AAAA;;;;;;;;;AASA;AACA,IAAIA,cAAc;AAChB,cAAY,IADI;AAEhB,YAAU;AAFM,CAAlB;;AAKA;AACA,IAAIC,cAAeD,mBAAmBE,OAAnB,yCAAmBA,OAAnB,MAA+BA,OAA/B,IAA0C,CAACA,QAAQC,QAApD,GACdD,OADc,GAEdE,SAFJ;;AAIA;AACA,IAAIC,aAAcL,mBAAmBM,MAAnB,yCAAmBA,MAAnB,MAA8BA,MAA9B,IAAwC,CAACA,OAAOH,QAAjD,GACbG,MADa,GAEbF,SAFJ;;AAIA;AACA,IAAIG,aAAaC,YAAYP,eAAeI,UAAf,IAA6B,QAAOI,MAAP,yCAAOA,MAAP,MAAiB,QAA9C,IAA0DA,MAAtE,CAAjB;;AAEA;AACA,IAAIC,WAAWF,YAAYR,mBAAmBW,IAAnB,yCAAmBA,IAAnB,MAA4BA,IAAxC,CAAf;;AAEA;AACA,IAAIC,aAAaJ,YAAYR,mBAAmBa,MAAnB,yCAAmBA,MAAnB,MAA8BA,MAA1C,CAAjB;;AAEA;AACA,IAAIC,aAAaN,YAAYR,4CAAZ,CAAjB;;AAEA;;;;;;AAMA,IAAIe,OAAOR,cACPK,gBAAgBE,cAAcA,WAAWD,MAAzC,CAAD,IAAsDD,UAD9C,IAEPF,QAFO,IAEKI,UAFL,IAEmBE,SAAS,aAAT,GAF9B;;AAIA;;;;;;;AAOA,SAASR,WAAT,CAAqBS,KAArB,EAA4B;AAC1B,SAAQA,SAASA,MAAMC,MAAN,KAAiBA,MAA3B,GAAqCD,KAArC,GAA6C,IAApD;AACD;;AAEDX,OAAOJ,OAAP,GAAiBa,IAAjB","file":"index.js","sourcesContent":["/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used to determine if values are of the language type `Object`. */\nvar objectTypes = {\n  'function': true,\n  'object': true\n};\n\n/** Detect free variable `exports`. */\nvar freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n  ? exports\n  : undefined;\n\n/** Detect free variable `module`. */\nvar freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n  ? module\n  : undefined;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n/** Detect free variable `self`. */\nvar freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n/** Detect free variable `window`. */\nvar freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n/** Detect `this` as the global object. */\nvar thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n/**\n * Used as a reference to the global object.\n *\n * The `this` value is used if it's the global object to avoid Greasemonkey's\n * restricted `window` object, otherwise the `window` object is used.\n */\nvar root = freeGlobal ||\n  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n    freeSelf || thisGlobal || Function('return this')();\n\n/**\n * Checks if `value` is a global object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n */\nfunction checkGlobal(value) {\n  return (value && value.Object === Object) ? value : null;\n}\n\nmodule.exports = root;\n"]}