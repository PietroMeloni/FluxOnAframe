{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/node-gyp/lib/node-gyp.js"],"names":["module","exports","gyp","fs","require","path","nopt","log","child_process","EE","EventEmitter","inherits","commands","aliases","heading","Gyp","self","devDir","forEach","command","argv","callback","verbose","proto","prototype","package","configDefs","help","Boolean","arch","String","cafile","debug","directory","make","msvs_version","ensure","solution","proxy","devdir","nodedir","loglevel","python","jobs","thin","shorthands","release","C","j","silly","silent","parseArgv","parseOpts","opts","remain","slice","todo","map","arg","args","splice","indexOf","shift","length","push","name","npm_config_prefix","Object","keys","process","env","val","level","substring","resume","spawn","stdio","cp","info","usage","str","c","join","version","resolve","__dirname","versions","node","defineProperty","get","enumerable"],"mappings":"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","file":"node-gyp.js","sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = exports = gyp\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('graceful-fs')\n  , path = require('path')\n  , nopt = require('nopt')\n  , log = require('npmlog')\n  , child_process = require('child_process')\n  , EE = require('events').EventEmitter\n  , inherits = require('util').inherits\n  , commands = [\n      // Module build commands\n        'build'\n      , 'clean'\n      , 'configure'\n      , 'rebuild'\n      // Development Header File management commands\n      , 'install'\n      , 'list'\n      , 'remove'\n    ]\n  , aliases = {\n        'ls': 'list'\n      , 'rm': 'remove'\n    }\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp'\n\n/**\n * The `gyp` function.\n */\n\nfunction gyp () {\n  return new Gyp()\n}\n\nfunction Gyp () {\n  var self = this\n\n  this.devDir = ''\n  this.commands = {}\n\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv)\n      return require('./' + command)(self, argv, callback)\n    }\n  })\n}\ninherits(Gyp, EE)\nexports.Gyp = Gyp\nvar proto = Gyp.prototype\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package')\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n    help: Boolean     // everywhere\n  , arch: String      // 'configure'\n  , cafile: String    // 'install'\n  , debug: Boolean    // 'build'\n  , directory: String // bin\n  , make: String      // 'build'\n  , msvs_version: String // 'configure'\n  , ensure: Boolean   // 'install'\n  , solution: String  // 'build' (windows only)\n  , proxy: String     // 'install'\n  , devdir: String   // everywhere\n  , nodedir: String   // 'configure'\n  , loglevel: String  // everywhere\n  , python: String    // 'configure'\n  , 'dist-url': String // 'install'\n  , 'tarball': String // 'install'\n  , jobs: String      // 'build'\n  , thin: String      // 'configure'\n}\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n    release: '--no-debug'\n  , C: '--directory'\n  , debug: '--debug'\n  , j: '--jobs'\n  , silly: '--loglevel=silly'\n  , verbose: '--loglevel=verbose'\n  , silent: '--loglevel=silent'\n}\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts (argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv)\n  this.argv = this.opts.argv.remain.slice()\n\n  var commands = this.todo = []\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg]\n    }\n    return arg\n  }, this)\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg))\n      argv.shift()\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args\n      }\n      commands.push({ name: arg, args: [] })\n    }\n  }, this)\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0)\n  }\n\n  // support for inheriting config env variables from npm\n  var npm_config_prefix = 'npm_config_'\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npm_config_prefix) !== 0) return\n    var val = process.env[name]\n    if (name === npm_config_prefix + 'loglevel') {\n      log.level = val\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npm_config_prefix.length)\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) this.opts[name] = val\n    }\n  }, this)\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel\n  }\n  log.resume()\n}\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn (command, args, opts) {\n  if (!opts) opts = {}\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [ 0, 1, 2 ]\n  }\n  var cp = child_process.spawn(command, args, opts)\n  log.info('spawn', command)\n  log.info('spawn args', args)\n  return cp\n}\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage () {\n  var str = [\n      ''\n    , '  Usage: node-gyp <command> [options]'\n    , ''\n    , '  where <command> is one of:'\n    , commands.map(function (c) {\n        return '    - ' + c + ' - ' + require('./' + c).usage\n      }).join('\\n')\n    , ''\n    , 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..')\n    , 'node@' + process.versions.node\n  ].join('\\n')\n  return str\n}\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n    get: function () {\n      return this.package.version\n    }\n  , enumerable: true\n})\n\n"]}