{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/node-gyp/lib/find-vs2017.js"],"names":["log","require","execFile","path","findVS2017","callback","ps","join","process","env","SystemRoot","csFile","__dirname","psArgs","silly","child","encoding","err","stdout","stderr","Error","vsSetup","JSON","parse","e","verbose","trimRight","sdk","stdin","end","module","exports"],"mappings":";;AAAA,IAAIA,MAAMC,QAAQ,QAAR,CAAV;AAAA,IACIC,WAAWD,QAAQ,eAAR,EAAyBC,QADxC;AAAA,IAEIC,OAAOF,QAAQ,MAAR,CAFX;;AAIA,SAASG,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,MAAIC,KAAKH,KAAKI,IAAL,CAAUC,QAAQC,GAAR,CAAYC,UAAtB,EAAkC,UAAlC,EAA8C,mBAA9C,EACU,MADV,EACkB,gBADlB,CAAT;AAEA,MAAIC,SAASR,KAAKI,IAAL,CAAUK,SAAV,EAAqB,gBAArB,CAAb;AACA,MAAIC,SAAS,CAAC,kBAAD,EAAqB,cAArB,EAAqC,YAArC,EACC,UADD,EACa,wBAAwBF,MAAxB,GAAiC,KAAjC,GACZ,4CAFD,CAAb;;AAIAX,MAAIc,KAAJ,CAAU,aAAV,EAAyB,SAAzB,EAAoCR,EAApC,EAAwCO,MAAxC;AACA,MAAIE,QAAQb,SAASI,EAAT,EAAaO,MAAb,EAAqB,EAAEG,UAAU,MAAZ,EAArB,EACH,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,MAAvB,EAA+B;AACtCnB,QAAIc,KAAJ,CAAU,aAAV,EAAyB,SAAzB,EAAoCG,GAApC;AACAjB,QAAIc,KAAJ,CAAU,aAAV,EAAyB,YAAzB,EAAuCI,MAAvC;AACAlB,QAAIc,KAAJ,CAAU,aAAV,EAAyB,YAAzB,EAAuCK,MAAvC;;AAEA,QAAIF,GAAJ,EACE,OAAOZ,SAAS,IAAIe,KAAJ,CAAU,yCAAV,CAAT,CAAP;;AAEF,QAAIC,OAAJ;AACA,QAAI;AACFA,gBAAUC,KAAKC,KAAL,CAAWL,MAAX,CAAV;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACVxB,UAAIc,KAAJ,CAAU,aAAV,EAAyBU,CAAzB;AACA,aAAOnB,SAAS,IAAIe,KAAJ,CAAU,yCAAV,CAAT,CAAP;AACD;AACDpB,QAAIc,KAAJ,CAAU,aAAV,EAAyB,UAAzB,EAAqCO,OAArC;;AAEA,QAAIA,WAAWA,QAAQrB,GAAvB,EACEA,IAAIyB,OAAJ,CAAY,aAAZ,EAA2BJ,QAAQrB,GAAR,CAAY0B,SAAZ,EAA3B;;AAEF,QAAI,CAACL,OAAD,IAAY,CAACA,QAAQlB,IAArB,IAA6B,CAACkB,QAAQM,GAA1C,EAA+C;AAC7C,aAAOtB,SAAS,IAAIe,KAAJ,CAAU,wCAAV,CAAT,CAAP;AACD;;AAEDpB,QAAIyB,OAAJ,CAAY,aAAZ,EAA2B,qBAA3B,EAAkDJ,QAAQlB,IAA1D;AACAE,aAAS,IAAT,EAAe,EAAE,QAAQgB,QAAQlB,IAAlB,EAAwB,OAAOkB,QAAQM,GAAvC,EAAf;AACD,GA3BW,CAAZ;;AA6BAZ,QAAMa,KAAN,CAAYC,GAAZ;AACD;;AAEDC,OAAOC,OAAP,GAAiB3B,UAAjB","file":"find-vs2017.js","sourcesContent":["var log = require('npmlog')\n  , execFile = require('child_process').execFile\n  , path = require('path')\n\nfunction findVS2017(callback) {\n  var ps = path.join(process.env.SystemRoot, 'System32', 'WindowsPowerShell',\n                     'v1.0', 'powershell.exe')\n  var csFile = path.join(__dirname, 'Find-VS2017.cs')\n  var psArgs = ['-ExecutionPolicy', 'Unrestricted', '-NoProfile',\n                '-Command', '&{Add-Type -Path \\'' + csFile + '\\';' +\n                '[VisualStudioConfiguration.Main]::Query()}']\n\n  log.silly('find vs2017', 'Running', ps, psArgs)\n  var child = execFile(ps, psArgs, { encoding: 'utf8' },\n           function (err, stdout, stderr) {\n    log.silly('find vs2017', 'PS err:', err)\n    log.silly('find vs2017', 'PS stdout:', stdout)\n    log.silly('find vs2017', 'PS stderr:', stderr)\n\n    if (err)\n      return callback(new Error('Could not use PowerShell to find VS2017'))\n\n    var vsSetup\n    try {\n      vsSetup = JSON.parse(stdout)\n    } catch (e) {\n      log.silly('find vs2017', e)\n      return callback(new Error('Could not use PowerShell to find VS2017'))\n    }\n    log.silly('find vs2017', 'vsSetup:', vsSetup)\n\n    if (vsSetup && vsSetup.log)\n      log.verbose('find vs2017', vsSetup.log.trimRight())\n\n    if (!vsSetup || !vsSetup.path || !vsSetup.sdk) {\n      return callback(new Error('No usable installation of VS2017 found'))\n    }\n\n    log.verbose('find vs2017', 'using installation:', vsSetup.path)\n    callback(null, { \"path\": vsSetup.path, \"sdk\": vsSetup.sdk })\n  })\n\n  child.stdin.end()\n}\n\nmodule.exports = findVS2017\n"]}