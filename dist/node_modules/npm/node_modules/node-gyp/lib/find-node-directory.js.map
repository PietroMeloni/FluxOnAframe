{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/node-gyp/lib/find-node-directory.js"],"names":["path","require","log","findNodeDirectory","scriptLocation","processObj","undefined","__dirname","process","npm_parent_directory","join","verbose","basename","node_root_dir","platform","node_dir","dirname","execPath","directory_up","module","exports"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AAAA,IACIC,MAAMD,QAAQ,QAAR,CADV;;AAGA,SAASE,iBAAT,CAA2BC,cAA3B,EAA2CC,UAA3C,EAAuD;AACrD;AACA;AACA,MAAID,mBAAmBE,SAAvB,EAAkC;AAChCF,qBAAiBG,SAAjB;AACD;AACD,MAAIF,eAAeC,SAAnB,EAA8B;AAC5BD,iBAAaG,OAAb;AACD;;AAED;AACAC,yBAAuBT,KAAKU,IAAL,CAAUN,cAAV,EAA0B,aAA1B,CAAvB;AACAF,MAAIS,OAAJ,CAAY,eAAZ,EAA6B,6BACfX,KAAKY,QAAL,CAAcH,oBAAd,CADd;AAEAI,kBAAgB,EAAhB;;AAEAX,MAAIS,OAAJ,CAAY,eAAZ,EAA6B,6BAA7B;AACA,MAAIX,KAAKY,QAAL,CAAcH,oBAAd,MAAwC,MAA5C,EAAoD;AAClD;AACA;AACAI,oBAAgBb,KAAKU,IAAL,CAAUD,oBAAV,EAAgC,IAAhC,CAAhB;AACAP,QAAIS,OAAJ,CAAY,eAAZ,EAA6B,gCACfE,aADd;AAED,GAND,MAMO,IAAIb,KAAKY,QAAL,CAAcH,oBAAd,MAAwC,cAA5C,EAA4D;AACjE;AACA;AACA;AACA;AACA,QAAIJ,WAAWS,QAAX,KAAwB,OAA5B,EAAqC;AACnCD,sBAAgBb,KAAKU,IAAL,CAAUD,oBAAV,EAAgC,IAAhC,CAAhB;AACD,KAFD,MAEO;AACLI,sBAAgBb,KAAKU,IAAL,CAAUD,oBAAV,EAAgC,OAAhC,CAAhB;AACD;AACDP,QAAIS,OAAJ,CAAY,eAAZ,EAA6B,kCACfE,aADd;AAED,GAZM,MAYA;AACL;AACA;AACA,QAAIE,WAAWf,KAAKgB,OAAL,CAAaX,WAAWY,QAAxB,CAAf;AACA,QAAIC,eAAelB,KAAKY,QAAL,CAAcG,QAAd,CAAnB;AACA,QAAIG,iBAAiB,KAArB,EAA4B;AAC1BL,sBAAgBb,KAAKU,IAAL,CAAUK,QAAV,EAAoB,IAApB,CAAhB;AACD,KAFD,MAEO,IAAIG,iBAAiB,SAAjB,IAA8BA,iBAAiB,OAAnD,EAA4D;AACjE;AACA;AACA;AACA,UAAIb,WAAWS,QAAX,KAAwB,OAA5B,EAAqC;AACnCD,wBAAgBb,KAAKU,IAAL,CAAUK,QAAV,EAAoB,IAApB,CAAhB;AACD,OAFD,MAEO;AACLF,wBAAgBb,KAAKU,IAAL,CAAUK,QAAV,EAAoB,OAApB,CAAhB;AACD;AACF;AACD;AACD;AACD,SAAOF,aAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBjB,iBAAjB","file":"find-node-directory.js","sourcesContent":["var path = require('path')\n  , log = require('npmlog')\n\nfunction findNodeDirectory(scriptLocation, processObj) {\n  // set dirname and process if not passed in\n  // this facilitates regression tests\n  if (scriptLocation === undefined) {\n    scriptLocation = __dirname\n  }\n  if (processObj === undefined) {\n    processObj = process\n  }\n\n  // Have a look to see what is above us, to try and work out where we are\n  npm_parent_directory = path.join(scriptLocation, '../../../..')\n  log.verbose('node-gyp root', 'npm_parent_directory is '\n              + path.basename(npm_parent_directory))\n  node_root_dir = \"\"\n\n  log.verbose('node-gyp root', 'Finding node root directory')\n  if (path.basename(npm_parent_directory) === 'deps') {\n    // We are in a build directory where this script lives in\n    // deps/npm/node_modules/node-gyp/lib\n    node_root_dir = path.join(npm_parent_directory, '..')\n    log.verbose('node-gyp root', 'in build directory, root = '\n                + node_root_dir)\n  } else if (path.basename(npm_parent_directory) === 'node_modules') {\n    // We are in a node install directory where this script lives in\n    // lib/node_modules/npm/node_modules/node-gyp/lib or\n    // node_modules/npm/node_modules/node-gyp/lib depending on the\n    // platform\n    if (processObj.platform === 'win32') {\n      node_root_dir = path.join(npm_parent_directory, '..')\n    } else {\n      node_root_dir = path.join(npm_parent_directory, '../..')\n    }\n    log.verbose('node-gyp root', 'in install directory, root = '\n                + node_root_dir)\n  } else {\n    // We don't know where we are, try working it out from the location\n    // of the node binary\n    var node_dir = path.dirname(processObj.execPath)\n    var directory_up = path.basename(node_dir)\n    if (directory_up === 'bin') {\n      node_root_dir = path.join(node_dir, '..')\n    } else if (directory_up === 'Release' || directory_up === 'Debug') {\n      // If we are a recently built node, and the directory structure\n      // is that of a repository. If we are on Windows then we only need\n      // to go one level up, everything else, two\n      if (processObj.platform === 'win32') {\n        node_root_dir = path.join(node_dir, '..')\n      } else {\n        node_root_dir = path.join(node_dir, '../..')\n      }\n    }\n    // Else return the default blank, \"\".\n  }\n  return node_root_dir\n}\n\nmodule.exports = findNodeDirectory\n"]}