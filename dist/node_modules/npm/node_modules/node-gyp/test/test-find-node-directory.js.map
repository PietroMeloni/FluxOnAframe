{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/node-gyp/test/test-find-node-directory.js"],"names":["test","require","path","findNodeDirectory","platforms","t","plan","length","next","processObj","execPath","platform","equal","join"],"mappings":"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","file":"test-find-node-directory.js","sourcesContent":["var test = require('tape')\nvar path = require('path')\nvar findNodeDirectory = require('../lib/find-node-directory')\n\nvar platforms = ['darwin', 'freebsd', 'linux', 'sunos', 'win32', 'aix']\n\n// we should find the directory based on the directory\n// the script is running in and it should match the layout\n// in a build tree where npm is installed in\n// .... /deps/npm\ntest('test find-node-directory - node install', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj = {execPath: '/x/y/bin/node', platform: platforms[next]}\n    t.equal(\n      findNodeDirectory('/x/deps/npm/node_modules/node-gyp/lib', processObj),\n                        path.join('/x'))\n  }\n})\n\n// we should find the directory based on the directory\n// the script is running in and it should match the layout\n// in an installed tree where npm is installed in\n// .... /lib/node_modules/npm or .../node_modules/npm\n// depending on the patform\ntest('test find-node-directory - node build', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj = {execPath: '/x/y/bin/node', platform: platforms[next]}\n    if (platforms[next] === 'win32') {\n      t.equal(\n        findNodeDirectory('/y/node_modules/npm/node_modules/node-gyp/lib',\n                           processObj), path.join('/y'))\n    } else {\n      t.equal(\n        findNodeDirectory('/y/lib/node_modules/npm/node_modules/node-gyp/lib',\n                           processObj), path.join('/y'))\n    }\n  }\n})\n\n// we should find the directory based on the execPath\n// for node and match because it was in the bin directory\ntest('test find-node-directory - node in bin directory', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj = {execPath: '/x/y/bin/node', platform: platforms[next]}\n    t.equal(\n      findNodeDirectory('/nothere/npm/node_modules/node-gyp/lib', processObj),\n      path.join('/x/y'))\n  }\n})\n\n// we should find the directory based on the execPath\n// for node and match because it was in the Release directory\ntest('test find-node-directory - node in build release dir', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj\n    if (platforms[next] === 'win32') {\n      processObj = {execPath: '/x/y/Release/node', platform: platforms[next]}\n    } else {\n      processObj = {execPath: '/x/y/out/Release/node',\n                    platform: platforms[next]}\n    }\n\n    t.equal(\n      findNodeDirectory('/nothere/npm/node_modules/node-gyp/lib', processObj),\n                        path.join('/x/y'))\n  }\n})\n\n// we should find the directory based on the execPath\n// for node and match because it was in the Debug directory\ntest('test find-node-directory - node in Debug release dir', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj\n    if (platforms[next] === 'win32') {\n      processObj = {execPath: '/a/b/Debug/node', platform: platforms[next]}\n    } else {\n      processObj = {execPath: '/a/b/out/Debug/node', platform: platforms[next]}\n    }\n\n    t.equal(\n      findNodeDirectory('/nothere/npm/node_modules/node-gyp/lib', processObj),\n                        path.join('/a/b'))\n  }\n})\n\n// we should not find it as it will not match based on the execPath nor\n// the directory from which the script is running\ntest('test find-node-directory - not found', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj = {execPath: '/x/y/z/y', platform:next}\n    t.equal(findNodeDirectory('/a/b/c/d', processObj), '')\n  }\n})\n\n// we should find the directory based on the directory\n// the script is running in and it should match the layout\n// in a build tree where npm is installed in\n// .... /deps/npm\n// same test as above but make sure additional directory entries\n// don't cause an issue\ntest('test find-node-directory - node install', function (t) {\n  t.plan(platforms.length)\n  for (var next = 0; next < platforms.length; next++) {\n    var processObj = {execPath: '/x/y/bin/node', platform: platforms[next]}\n    t.equal(\n      findNodeDirectory('/x/y/z/a/b/c/deps/npm/node_modules/node-gyp/lib',\n                        processObj), path.join('/x/y/z/a/b/c'))\n  }\n})\n"]}