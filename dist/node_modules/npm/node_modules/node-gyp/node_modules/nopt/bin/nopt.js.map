{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/node-gyp/node_modules/nopt/bin/nopt.js"],"names":["nopt","require","path","types","num","Number","bool","Boolean","help","list","Array","String","str","clear","config","length","file","shorthands","s","b","nb","tft","h","H","n","c","l","f","parsed","process","argv","console","log","Object","keys","map","M","t","type","isArray","name","reduce","i"],"mappings":";;AACA,IAAIA,OAAOC,QAAQ,aAAR,CAAX;AAAA,IACIC,OAAOD,QAAQ,MAAR,CADX;AAAA,IAEIE,QAAQ,EAAEC,KAAKC,MAAP;AACEC,QAAMC,OADR;AAEEC,QAAMD,OAFR;AAGEE,QAAMC,KAHR;AAIE,cAAY,CAACL,MAAD,EAASK,KAAT,CAJd;AAKE,cAAY,CAACC,MAAD,EAASD,KAAT,CALd;AAME,eAAa,CAACH,OAAD,EAAUG,KAAV,CANf;AAOEE,OAAKD,MAPP;AAQEE,SAAON,OART;AASEO,UAAQP,OATV;AAUEQ,UAAQV,MAVV;AAWEW,QAAMd;AAXR,CAFZ;AAAA,IAeIe,aAAa,EAAEC,GAAG,CAAE,OAAF,EAAW,SAAX,CAAL;AACEC,KAAG,CAAE,QAAF,CADL;AAEEC,MAAI,CAAE,WAAF,CAFN;AAGEC,OAAK,CAAE,aAAF,EAAiB,gBAAjB,EAAmC,aAAnC,EAAkD,MAAlD,CAHP;AAIE,OAAK,CAAC,QAAD,CAJP;AAKEC,KAAG,CAAC,QAAD,CALL;AAMEC,KAAG,CAAC,QAAD,CANL;AAOEC,KAAG,CAAE,OAAF,EAAW,KAAX,CAPL;AAQEC,KAAG,CAAC,UAAD,CARL;AASEC,KAAG,CAAC,UAAD,CATL;AAUEC,KAAG,CAAC,QAAD;AAVL,CAfjB;AAAA,IA2BIC,SAAS5B,KAAMG,KAAN,EACMc,UADN,EAEMY,QAAQC,IAFd,EAGM,CAHN,CA3Bb;;AAgCAC,QAAQC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;;AAEA,IAAIA,OAAOpB,IAAX,EAAiB;AACfuB,UAAQC,GAAR,CAAY,EAAZ;AACAD,UAAQC,GAAR,CAAY,iBAAZ;AACAD,UAAQC,GAAR,CAAY,EAAZ;AACAD,UAAQC,GAAR,CAAY,OAAZ;AACAD,UAAQC,GAAR,CAAYC,OAAOC,IAAP,CAAY/B,KAAZ,EAAmBgC,GAAnB,CAAuB,SAASC,CAAT,CAAYC,CAAZ,EAAe;AAChD,QAAIC,OAAOnC,MAAMkC,CAAN,CAAX;AACA,QAAI3B,MAAM6B,OAAN,CAAcD,IAAd,CAAJ,EAAyB;AACvB,aAAO,CAACD,CAAD,EAAIC,KAAKH,GAAL,CAAS,UAAUG,IAAV,EAAgB;AAAE,eAAOA,KAAKE,IAAZ;AAAkB,OAA7C,CAAJ,CAAP;AACD;AACD,WAAO,CAACH,CAAD,EAAIC,QAAQA,KAAKE,IAAjB,CAAP;AACD,GANW,EAMTC,MANS,CAMF,UAAUvB,CAAV,EAAawB,CAAb,EAAgB;AACxBxB,MAAEwB,EAAE,CAAF,CAAF,IAAUA,EAAE,CAAF,CAAV;AACA,WAAOxB,CAAP;AACD,GATW,EAST,EATS,CAAZ;AAUAa,UAAQC,GAAR,CAAY,EAAZ;AACAD,UAAQC,GAAR,CAAY,YAAZ;AACAD,UAAQC,GAAR,CAAYf,UAAZ;AACD","file":"nopt.js","sourcesContent":["\nvar nopt = require(\"../lib/nopt\")\n  , path = require(\"path\")\n  , types = { num: Number\n            , bool: Boolean\n            , help: Boolean\n            , list: Array\n            , \"num-list\": [Number, Array]\n            , \"str-list\": [String, Array]\n            , \"bool-list\": [Boolean, Array]\n            , str: String\n            , clear: Boolean\n            , config: Boolean\n            , length: Number\n            , file: path\n            }\n  , shorthands = { s: [ \"--str\", \"astring\" ]\n                 , b: [ \"--bool\" ]\n                 , nb: [ \"--no-bool\" ]\n                 , tft: [ \"--bool-list\", \"--no-bool-list\", \"--bool-list\", \"true\" ]\n                 , \"?\": [\"--help\"]\n                 , h: [\"--help\"]\n                 , H: [\"--help\"]\n                 , n: [ \"--num\", \"125\" ]\n                 , c: [\"--config\"]\n                 , l: [\"--length\"]\n                 , f: [\"--file\"]\n                 }\n  , parsed = nopt( types\n                 , shorthands\n                 , process.argv\n                 , 2 )\n\nconsole.log(\"parsed\", parsed)\n\nif (parsed.help) {\n  console.log(\"\")\n  console.log(\"nopt cli tester\")\n  console.log(\"\")\n  console.log(\"types\")\n  console.log(Object.keys(types).map(function M (t) {\n    var type = types[t]\n    if (Array.isArray(type)) {\n      return [t, type.map(function (type) { return type.name })]\n    }\n    return [t, type && type.name]\n  }).reduce(function (s, i) {\n    s[i[0]] = i[1]\n    return s\n  }, {}))\n  console.log(\"\")\n  console.log(\"shorthands\")\n  console.log(shorthands)\n}\n"]}