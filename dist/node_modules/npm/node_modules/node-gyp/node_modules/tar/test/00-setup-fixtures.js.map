{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/node-gyp/node_modules/tar/test/00-setup-fixtures.js"],"names":["tap","require","child_process","rimraf","test","path","t","resolve","__dirname","er","ifError","end","c","spawn","cwd","stdout","on","errwrite","stderr","chunk","process","write","code","equal","comment"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAMC,QAAQ,KAAR,CAAV;AAAA,IACEC,gBAAgBD,QAAQ,eAAR,CADlB;AAAA,IAEEE,SAASF,QAAQ,QAAR,CAFX;AAAA,IAGEG,OAAOJ,IAAII,IAHb;AAAA,IAIEC,OAAOJ,QAAQ,MAAR,CAJT;;AAMAG,KAAK,gBAAL,EAAuB,UAAUE,CAAV,EAAa;AAClCH,SAAOE,KAAKE,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAP,EAA4C,UAAUC,EAAV,EAAc;AACxDH,MAAEI,OAAF,CAAUD,EAAV,EAAc,oBAAd;AACAH,MAAEK,GAAF;AACD,GAHD;AAID,CALD;;AAOAP,KAAK,WAAL,EAAkB,UAAUE,CAAV,EAAa;AAC7BH,SAAOE,KAAKE,OAAL,CAAaC,SAAb,EAAwB,KAAxB,CAAP,EAAuC,UAAUC,EAAV,EAAc;AACnDH,MAAEI,OAAF,CAAUD,EAAV,EAAc,eAAd;AACAH,MAAEK,GAAF;AACD,GAHD;AAID,CALD;;AAOAP,KAAK,kBAAL,EAAyB,UAAUE,CAAV,EAAa;AACpC,MAAIM,IAAIV,cAAcW,KAAd,CAAoB,KAApB,EACoB,CAAC,MAAD,EAAS,cAAT,CADpB,EAEoB,EAAEC,KAAKN,SAAP,EAFpB,CAAR;;AAIAI,IAAEG,MAAF,CAASC,EAAT,CAAY,MAAZ,EAAoBC,QAApB;AACAL,IAAEM,MAAF,CAASF,EAAT,CAAY,MAAZ,EAAoBC,QAApB;AACA,WAASA,QAAT,CAAmBE,KAAnB,EAA0B;AACxBC,YAAQF,MAAR,CAAeG,KAAf,CAAqBF,KAArB;AACD;;AAEDP,IAAEI,EAAF,CAAK,MAAL,EAAa,UAAUM,IAAV,EAAgB;AAC3BhB,MAAEiB,KAAF,CAAQD,IAAR,EAAc,CAAd,EAAiB,qCAAjB;AACA,QAAIA,IAAJ,EAAU;AACRhB,QAAEkB,OAAF,CAAU,6DAAV;AACD;AACDlB,MAAEK,GAAF;AACD,GAND;AAOD,CAlBD","file":"00-setup-fixtures.js","sourcesContent":["// the fixtures have some weird stuff that is painful\n// to include directly in the repo for various reasons.\n//\n// So, unpack the fixtures with the system tar first.\n//\n// This means, of course, that it'll only work if you\n// already have a tar implementation, and some of them\n// will not properly unpack the fixtures anyway.\n//\n// But, since usually those tests will fail on Windows\n// and other systems with less capable filesystems anyway,\n// at least this way we don't cause inconveniences by\n// merely cloning the repo or installing the package.\n\nvar tap = require(\"tap\")\n, child_process = require(\"child_process\")\n, rimraf = require(\"rimraf\")\n, test = tap.test\n, path = require(\"path\")\n\ntest(\"clean fixtures\", function (t) {\n  rimraf(path.resolve(__dirname, \"fixtures\"), function (er) {\n    t.ifError(er, \"rimraf ./fixtures/\")\n    t.end()\n  })\n})\n\ntest(\"clean tmp\", function (t) {\n  rimraf(path.resolve(__dirname, \"tmp\"), function (er) {\n    t.ifError(er, \"rimraf ./tmp/\")\n    t.end()\n  })\n})\n\ntest(\"extract fixtures\", function (t) {\n  var c = child_process.spawn(\"tar\"\n                             ,[\"xzvf\", \"fixtures.tgz\"]\n                             ,{ cwd: __dirname })\n\n  c.stdout.on(\"data\", errwrite)\n  c.stderr.on(\"data\", errwrite)\n  function errwrite (chunk) {\n    process.stderr.write(chunk)\n  }\n\n  c.on(\"exit\", function (code) {\n    t.equal(code, 0, \"extract fixtures should exit with 0\")\n    if (code) {\n      t.comment(\"Note, all tests from here on out will fail because of this.\")\n    }\n    t.end()\n  })\n})\n"]}