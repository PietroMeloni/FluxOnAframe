{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/node-gyp/node_modules/tar/lib/extract.js"],"names":["module","exports","Extract","tar","require","fstream","inherits","path","opts","Parse","apply","resolve","type","Directory","strip","_fst","Writer","pause","me","on","entry","p","split","slice","join","props","linkpath","lp","dn","dirname","target","indexOf","pipe","end","resume","err","emit","prototype","_streamEnd","_ended","_entry","error"],"mappings":"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","file":"extract.js","sourcesContent":["// give it a tarball and a path, and it'll dump the contents\n\nmodule.exports = Extract\n\nvar tar = require(\"../tar.js\")\n  , fstream = require(\"fstream\")\n  , inherits = require(\"inherits\")\n  , path = require(\"path\")\n\nfunction Extract (opts) {\n  if (!(this instanceof Extract)) return new Extract(opts)\n  tar.Parse.apply(this)\n\n  if (typeof opts !== \"object\") {\n    opts = { path: opts }\n  }\n\n  // better to drop in cwd? seems more standard.\n  opts.path = opts.path || path.resolve(\"node-tar-extract\")\n  opts.type = \"Directory\"\n  opts.Directory = true\n\n  // similar to --strip or --strip-components\n  opts.strip = +opts.strip\n  if (!opts.strip || opts.strip <= 0) opts.strip = 0\n\n  this._fst = fstream.Writer(opts)\n\n  this.pause()\n  var me = this\n\n  // Hardlinks in tarballs are relative to the root\n  // of the tarball.  So, they need to be resolved against\n  // the target directory in order to be created properly.\n  me.on(\"entry\", function (entry) {\n    // if there's a \"strip\" argument, then strip off that many\n    // path components.\n    if (opts.strip) {\n      var p = entry.path.split(\"/\").slice(opts.strip).join(\"/\")\n      entry.path = entry.props.path = p\n      if (entry.linkpath) {\n        var lp = entry.linkpath.split(\"/\").slice(opts.strip).join(\"/\")\n        entry.linkpath = entry.props.linkpath = lp\n      }\n    }\n    if (entry.type === \"Link\") {\n      entry.linkpath = entry.props.linkpath =\n        path.join(opts.path, path.join(\"/\", entry.props.linkpath))\n    }\n\n    if (entry.type === \"SymbolicLink\") {\n      var dn = path.dirname(entry.path) || \"\"\n      var linkpath = entry.props.linkpath\n      var target = path.resolve(opts.path, dn, linkpath)\n      if (target.indexOf(opts.path) !== 0) {\n        linkpath = path.join(opts.path, path.join(\"/\", linkpath))\n      }\n      entry.linkpath = entry.props.linkpath = linkpath\n    }\n  })\n\n  this._fst.on(\"ready\", function () {\n    me.pipe(me._fst, { end: false })\n    me.resume()\n  })\n\n  this._fst.on('error', function(err) {\n    me.emit('error', err)\n  })\n\n  this._fst.on('drain', function() {\n    me.emit('drain')\n  })\n\n  // this._fst.on(\"end\", function () {\n  //   console.error(\"\\nEEEE Extract End\", me._fst.path)\n  // })\n\n  this._fst.on(\"close\", function () {\n    // console.error(\"\\nEEEE Extract End\", me._fst.path)\n    me.emit(\"finish\")\n    me.emit(\"end\")\n    me.emit(\"close\")\n  })\n}\n\ninherits(Extract, tar.Parse)\n\nExtract.prototype._streamEnd = function () {\n  var me = this\n  if (!me._ended || me._entry) me.error(\"unexpected eof\")\n  me._fst.end()\n  // my .end() is coming later.\n}\n"]}