{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/node-gyp/node_modules/tar/lib/extended-header.js"],"names":["module","exports","ExtendedHeader","Entry","require","inherits","tar","numeric","keyTrans","apply","arguments","on","_parse","fields","_position","_fieldPos","_state","SIZE","_sizeBuf","_keyBuf","_valBuf","_size","_key","prototype","parse","s","states","KEY","VAL","ERR","Object","keys","forEach","_0","charCodeAt","_9","point","a","Z","z","space","eq","cr","c","i","l","length","b","error","parseInt","Buffer","toString","push","val","parseFloat","me","msg","state"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAOC,OAAP,GAAiBC,cAAjB;;AAEA,IAAIC,QAAQC,QAAQ,YAAR,CAAZ;AAAA,IACIC,WAAWD,QAAQ,UAAR,CADf;AAAA,IAEIE,MAAMF,QAAQ,WAAR,CAFV;AAAA,IAGIG,UAAUD,IAAIC,OAHlB;AAAA,IAIIC,WAAW,EAAE,cAAc,KAAhB;AACE,gBAAc,KADhB;AAEE,kBAAgB,OAFlB,EAJf;;AAQA,SAASN,cAAT,GAA2B;AACzBC,QAAMM,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;AACA,OAAKC,EAAL,CAAQ,MAAR,EAAgB,KAAKC,MAArB;AACA,OAAKC,MAAL,GAAc,EAAd;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL,GAAcC,IAAd;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACA,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKC,KAAL,GAAa,CAAC,CAAd;AACA,OAAKC,IAAL,GAAY,EAAZ;AACD;;AAEDjB,SAASH,cAAT,EAAyBC,KAAzB;AACAD,eAAeqB,SAAf,CAAyBX,MAAzB,GAAkCY,KAAlC;;AAEA,IAAIC,IAAI,CAAR;AAAA,IACIC,SAASxB,eAAewB,MAAf,GAAwB,EADrC;AAAA,IAEIT,OAAOS,OAAOT,IAAP,GAAcQ,GAFzB;AAAA,IAGIE,MAAOD,OAAOC,GAAP,GAAcF,GAHzB;AAAA,IAIIG,MAAOF,OAAOE,GAAP,GAAcH,GAJzB;AAAA,IAKII,MAAOH,OAAOG,GAAP,GAAcJ,GALzB;;AAOAK,OAAOC,IAAP,CAAYL,MAAZ,EAAoBM,OAApB,CAA4B,UAAUP,CAAV,EAAa;AACvCC,SAAOA,OAAOD,CAAP,CAAP,IAAoBC,OAAOD,CAAP,CAApB;AACD,CAFD;;AAIAC,OAAOD,CAAP,IAAY,IAAZ;;AAEA;AACA,IAAIQ,KAAK,IAAIC,UAAJ,CAAe,CAAf,CAAT;AAAA,IACIC,KAAK,IAAID,UAAJ,CAAe,CAAf,CADT;AAAA,IAEIE,QAAQ,IAAIF,UAAJ,CAAe,CAAf,CAFZ;AAAA,IAGIG,IAAI,IAAIH,UAAJ,CAAe,CAAf,CAHR;AAAA,IAIII,IAAI,IAAIJ,UAAJ,CAAe,CAAf,CAJR;AAAA,IAKIG,IAAI,IAAIH,UAAJ,CAAe,CAAf,CALR;AAAA,IAMIK,IAAI,IAAIL,UAAJ,CAAe,CAAf,CANR;AAAA,IAOIM,QAAQ,IAAIN,UAAJ,CAAe,CAAf,CAPZ;AAAA,IAQIO,KAAK,IAAIP,UAAJ,CAAe,CAAf,CART;AAAA,IASIQ,KAAK,KAAKR,UAAL,CAAgB,CAAhB,CATT;;AAWA,SAASV,KAAT,CAAgBmB,CAAhB,EAAmB;AACjB,MAAI,KAAK3B,MAAL,KAAgBa,GAApB,EAAyB;;AAEzB,OAAM,IAAIe,IAAI,CAAR,EAAWC,IAAIF,EAAEG,MAAvB,EACMF,IAAIC,CADV,EAEM,KAAK/B,SAAL,IAAkB,KAAKC,SAAL,EAAlB,EAAoC6B,GAF1C,EAE+C;AAC7C;;AAEA,QAAIG,IAAIJ,EAAEC,CAAF,CAAR;;AAEA,QAAI,KAAKvB,KAAL,IAAc,CAAd,IAAmB,KAAKN,SAAL,GAAiB,KAAKM,KAA7C,EAAoD;AAClD2B,YAAM,IAAN,EAAY,0BAAwB,KAAK3B,KAAzC;AACA;AACD;;AAED,YAAQ,KAAKL,MAAb;AACE,WAAKa,GAAL;AAAU;;AAEV,WAAKZ,IAAL;AACE;AACA,YAAI8B,MAAMP,KAAV,EAAiB;AACf,eAAKxB,MAAL,GAAcW,GAAd;AACA;AACA,eAAKN,KAAL,GAAa4B,SAAS,IAAIC,MAAJ,CAAW,KAAKhC,QAAhB,EAA0BiC,QAA1B,EAAT,EAA+C,EAA/C,CAAb;AACA,eAAKjC,QAAL,CAAc4B,MAAd,GAAuB,CAAvB;AACA;AACD;AACD,YAAIC,IAAId,EAAJ,IAAUc,IAAIZ,EAAlB,EAAsB;AACpBa,gBAAM,IAAN,EAAY,eAAef,EAAf,GAAoB,IAApB,GAA2BE,EAA3B,GAAgC,SAAhC,GAA4CY,CAAxD;AACA;AACD;AACD,aAAK7B,QAAL,CAAckC,IAAd,CAAmBL,CAAnB;AACA;;AAEF,WAAKpB,GAAL;AACE;AACA,YAAIoB,MAAMN,EAAV,EAAc;AACZ,eAAKzB,MAAL,GAAcY,GAAd;AACA,eAAKN,IAAL,GAAY,IAAI4B,MAAJ,CAAW,KAAK/B,OAAhB,EAAyBgC,QAAzB,EAAZ;AACA,cAAI3C,SAAS,KAAKc,IAAd,CAAJ,EAAyB,KAAKA,IAAL,GAAYd,SAAS,KAAKc,IAAd,CAAZ;AACzB,eAAKH,OAAL,CAAa2B,MAAb,GAAsB,CAAtB;AACA;AACD;AACD,aAAK3B,OAAL,CAAaiC,IAAb,CAAkBL,CAAlB;AACA;;AAEF,WAAKnB,GAAL;AACE;AACA,YAAI,KAAKb,SAAL,KAAmB,KAAKM,KAAL,GAAa,CAApC,EAAuC;AACrC;AACA,cAAI0B,MAAML,EAAV,EAAc;AACZM,kBAAM,IAAN,EAAY,8BAAZ;AACA;AACD;AACD,cAAIK,MAAM,IAAIH,MAAJ,CAAW,KAAK9B,OAAhB,EAAyB+B,QAAzB,EAAV;AACA,cAAI5C,QAAQ,KAAKe,IAAb,CAAJ,EAAwB;AACtB+B,kBAAMC,WAAWD,GAAX,CAAN;AACD;AACD,eAAKxC,MAAL,CAAY,KAAKS,IAAjB,IAAyB+B,GAAzB;;AAEA,eAAKjC,OAAL,CAAa0B,MAAb,GAAsB,CAAtB;AACA,eAAK9B,MAAL,GAAcC,IAAd;AACA,eAAKI,KAAL,GAAa,CAAC,CAAd;AACA,eAAKN,SAAL,GAAiB,CAAC,CAAlB;AACA;AACD;AACD,aAAKK,OAAL,CAAagC,IAAb,CAAkBL,CAAlB;AACA;AApDJ;AAsDD;AACF;;AAED,SAASC,KAAT,CAAgBO,EAAhB,EAAoBC,GAApB,EAAyB;AACvBA,QAAM,qBAAqBA,GAArB,GACA,aADA,GACgBD,GAAGzC,SADnB,GAEA,mBAFA,GAEsByC,GAAGxC,SAF/B;;AAIAwC,KAAGP,KAAH,CAASQ,GAAT;AACAD,KAAGE,KAAH,GAAW5B,GAAX;AACD","file":"extended-header.js","sourcesContent":["// An Entry consisting of:\n//\n// \"%d %s=%s\\n\", <length>, <keyword>, <value>\n//\n// The length is a decimal number, and includes itself and the \\n\n// \\0 does not terminate anything.  Only the length terminates the string.\n// Numeric values are decimal strings.\n\nmodule.exports = ExtendedHeader\n\nvar Entry = require(\"./entry.js\")\n  , inherits = require(\"inherits\")\n  , tar = require(\"../tar.js\")\n  , numeric = tar.numeric\n  , keyTrans = { \"SCHILY.dev\": \"dev\"\n               , \"SCHILY.ino\": \"ino\"\n               , \"SCHILY.nlink\": \"nlink\" }\n\nfunction ExtendedHeader () {\n  Entry.apply(this, arguments)\n  this.on(\"data\", this._parse)\n  this.fields = {}\n  this._position = 0\n  this._fieldPos = 0\n  this._state = SIZE\n  this._sizeBuf = []\n  this._keyBuf = []\n  this._valBuf = []\n  this._size = -1\n  this._key = \"\"\n}\n\ninherits(ExtendedHeader, Entry)\nExtendedHeader.prototype._parse = parse\n\nvar s = 0\n  , states = ExtendedHeader.states = {}\n  , SIZE = states.SIZE = s++\n  , KEY  = states.KEY  = s++\n  , VAL  = states.VAL  = s++\n  , ERR  = states.ERR  = s++\n\nObject.keys(states).forEach(function (s) {\n  states[states[s]] = states[s]\n})\n\nstates[s] = null\n\n// char code values for comparison\nvar _0 = \"0\".charCodeAt(0)\n  , _9 = \"9\".charCodeAt(0)\n  , point = \".\".charCodeAt(0)\n  , a = \"a\".charCodeAt(0)\n  , Z = \"Z\".charCodeAt(0)\n  , a = \"a\".charCodeAt(0)\n  , z = \"z\".charCodeAt(0)\n  , space = \" \".charCodeAt(0)\n  , eq = \"=\".charCodeAt(0)\n  , cr = \"\\n\".charCodeAt(0)\n\nfunction parse (c) {\n  if (this._state === ERR) return\n\n  for ( var i = 0, l = c.length\n      ; i < l\n      ; this._position++, this._fieldPos++, i++) {\n    // console.error(\"top of loop, size=\"+this._size)\n\n    var b = c[i]\n\n    if (this._size >= 0 && this._fieldPos > this._size) {\n      error(this, \"field exceeds length=\"+this._size)\n      return\n    }\n\n    switch (this._state) {\n      case ERR: return\n\n      case SIZE:\n        // console.error(\"parsing size, b=%d, rest=%j\", b, c.slice(i).toString())\n        if (b === space) {\n          this._state = KEY\n          // this._fieldPos = this._sizeBuf.length\n          this._size = parseInt(new Buffer(this._sizeBuf).toString(), 10)\n          this._sizeBuf.length = 0\n          continue\n        }\n        if (b < _0 || b > _9) {\n          error(this, \"expected [\" + _0 + \"..\" + _9 + \"], got \" + b)\n          return\n        }\n        this._sizeBuf.push(b)\n        continue\n\n      case KEY:\n        // can be any char except =, not > size.\n        if (b === eq) {\n          this._state = VAL\n          this._key = new Buffer(this._keyBuf).toString()\n          if (keyTrans[this._key]) this._key = keyTrans[this._key]\n          this._keyBuf.length = 0\n          continue\n        }\n        this._keyBuf.push(b)\n        continue\n\n      case VAL:\n        // field must end with cr\n        if (this._fieldPos === this._size - 1) {\n          // console.error(\"finished with \"+this._key)\n          if (b !== cr) {\n            error(this, \"expected \\\\n at end of field\")\n            return\n          }\n          var val = new Buffer(this._valBuf).toString()\n          if (numeric[this._key]) {\n            val = parseFloat(val)\n          }\n          this.fields[this._key] = val\n\n          this._valBuf.length = 0\n          this._state = SIZE\n          this._size = -1\n          this._fieldPos = -1\n          continue\n        }\n        this._valBuf.push(b)\n        continue\n    }\n  }\n}\n\nfunction error (me, msg) {\n  msg = \"invalid header: \" + msg\n      + \"\\nposition=\" + me._position\n      + \"\\nfield position=\" + me._fieldPos\n\n  me.error(msg)\n  me.state = ERR\n}\n"]}