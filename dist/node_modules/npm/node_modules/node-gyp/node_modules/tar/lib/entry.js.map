{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/node-gyp/node_modules/tar/lib/entry.js"],"names":["module","exports","Entry","TarHeader","require","tar","assert","ok","Stream","inherits","fstream","Abstract","header","extended","global","call","readable","writable","_needDrain","_paused","_reading","_ending","_ended","_remaining","_abort","_queue","_index","_queueLen","_read","bind","props","_header","_extended","_global","me","Object","keys","forEach","g","_setProps","prototype","write","c","error","length","slice","ql","push","end","pause","emit","resume","chunk","mql","_maxQueueLen","Math","min","fields","f","field","val","p","hasOwnProperty","split","Date","type","types","undefined","path","size","abort","warn"],"mappings":"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","file":"entry.js","sourcesContent":["// A passthrough read/write stream that sets its properties\n// based on a header, extendedHeader, and globalHeader\n//\n// Can be either a file system object of some sort, or\n// a pax/ustar metadata entry.\n\nmodule.exports = Entry\n\nvar TarHeader = require(\"./header.js\")\n  , tar = require(\"../tar\")\n  , assert = require(\"assert\").ok\n  , Stream = require(\"stream\").Stream\n  , inherits = require(\"inherits\")\n  , fstream = require(\"fstream\").Abstract\n\nfunction Entry (header, extended, global) {\n  Stream.call(this)\n  this.readable = true\n  this.writable = true\n\n  this._needDrain = false\n  this._paused = false\n  this._reading = false\n  this._ending = false\n  this._ended = false\n  this._remaining = 0\n  this._abort = false\n  this._queue = []\n  this._index = 0\n  this._queueLen = 0\n\n  this._read = this._read.bind(this)\n\n  this.props = {}\n  this._header = header\n  this._extended = extended || {}\n\n  // globals can change throughout the course of\n  // a file parse operation.  Freeze it at its current state.\n  this._global = {}\n  var me = this\n  Object.keys(global || {}).forEach(function (g) {\n    me._global[g] = global[g]\n  })\n\n  this._setProps()\n}\n\ninherits(Entry, Stream)\n\nEntry.prototype.write = function (c) {\n  if (this._ending) this.error(\"write() after end()\", null, true)\n  if (this._remaining === 0) {\n    this.error(\"invalid bytes past eof\")\n  }\n\n  // often we'll get a bunch of \\0 at the end of the last write,\n  // since chunks will always be 512 bytes when reading a tarball.\n  if (c.length > this._remaining) {\n    c = c.slice(0, this._remaining)\n  }\n  this._remaining -= c.length\n\n  // put it on the stack.\n  var ql = this._queueLen\n  this._queue.push(c)\n  this._queueLen ++\n\n  this._read()\n\n  // either paused, or buffered\n  if (this._paused || ql > 0) {\n    this._needDrain = true\n    return false\n  }\n\n  return true\n}\n\nEntry.prototype.end = function (c) {\n  if (c) this.write(c)\n  this._ending = true\n  this._read()\n}\n\nEntry.prototype.pause = function () {\n  this._paused = true\n  this.emit(\"pause\")\n}\n\nEntry.prototype.resume = function () {\n  // console.error(\"    Tar Entry resume\", this.path)\n  this.emit(\"resume\")\n  this._paused = false\n  this._read()\n  return this._queueLen - this._index > 1\n}\n\n  // This is bound to the instance\nEntry.prototype._read = function () {\n  // console.error(\"    Tar Entry _read\", this.path)\n\n  if (this._paused || this._reading || this._ended) return\n\n  // set this flag so that event handlers don't inadvertently\n  // get multiple _read() calls running.\n  this._reading = true\n\n  // have any data to emit?\n  while (this._index < this._queueLen && !this._paused) {\n    var chunk = this._queue[this._index ++]\n    this.emit(\"data\", chunk)\n  }\n\n  // check if we're drained\n  if (this._index >= this._queueLen) {\n    this._queue.length = this._queueLen = this._index = 0\n    if (this._needDrain) {\n      this._needDrain = false\n      this.emit(\"drain\")\n    }\n    if (this._ending) {\n      this._ended = true\n      this.emit(\"end\")\n    }\n  }\n\n  // if the queue gets too big, then pluck off whatever we can.\n  // this should be fairly rare.\n  var mql = this._maxQueueLen\n  if (this._queueLen > mql && this._index > 0) {\n    mql = Math.min(this._index, mql)\n    this._index -= mql\n    this._queueLen -= mql\n    this._queue = this._queue.slice(mql)\n  }\n\n  this._reading = false\n}\n\nEntry.prototype._setProps = function () {\n  // props = extended->global->header->{}\n  var header = this._header\n    , extended = this._extended\n    , global = this._global\n    , props = this.props\n\n  // first get the values from the normal header.\n  var fields = tar.fields\n  for (var f = 0; fields[f] !== null; f ++) {\n    var field = fields[f]\n      , val = header[field]\n    if (typeof val !== \"undefined\") props[field] = val\n  }\n\n  // next, the global header for this file.\n  // numeric values, etc, will have already been parsed.\n  ;[global, extended].forEach(function (p) {\n    Object.keys(p).forEach(function (f) {\n      if (typeof p[f] !== \"undefined\") props[f] = p[f]\n    })\n  })\n\n  // no nulls allowed in path or linkpath\n  ;[\"path\", \"linkpath\"].forEach(function (p) {\n    if (props.hasOwnProperty(p)) {\n      props[p] = props[p].split(\"\\0\")[0]\n    }\n  })\n\n\n  // set date fields to be a proper date\n  ;[\"mtime\", \"ctime\", \"atime\"].forEach(function (p) {\n    if (props.hasOwnProperty(p)) {\n      props[p] = new Date(props[p] * 1000)\n    }\n  })\n\n  // set the type so that we know what kind of file to create\n  var type\n  switch (tar.types[props.type]) {\n    case \"OldFile\":\n    case \"ContiguousFile\":\n      type = \"File\"\n      break\n\n    case \"GNUDumpDir\":\n      type = \"Directory\"\n      break\n\n    case undefined:\n      type = \"Unknown\"\n      break\n\n    case \"Link\":\n    case \"SymbolicLink\":\n    case \"CharacterDevice\":\n    case \"BlockDevice\":\n    case \"Directory\":\n    case \"FIFO\":\n    default:\n      type = tar.types[props.type]\n  }\n\n  this.type = type\n  this.path = props.path\n  this.size = props.size\n\n  // size is special, since it signals when the file needs to end.\n  this._remaining = props.size\n}\n\n// the parser may not call write if _abort is true. \n// useful for skipping data from some files quickly.\nEntry.prototype.abort = function(){\n  this._abort = true\n}\n\nEntry.prototype.warn = fstream.warn\nEntry.prototype.error = fstream.error\n"]}