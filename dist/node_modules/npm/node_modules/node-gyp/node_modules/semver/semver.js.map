{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/node-gyp/node_modules/semver/semver.js"],"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","loose","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","value","semver","ANY","operator","Range","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","charAt","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","maxSatisfying","versions","minSatisfying","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","parsed"],"mappings":"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","file":"semver.js","sourcesContent":["exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return compare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n"]}