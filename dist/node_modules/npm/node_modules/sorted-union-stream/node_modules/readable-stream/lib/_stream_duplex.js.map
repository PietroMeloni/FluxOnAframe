{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/sorted-union-stream/node_modules/readable-stream/lib/_stream_duplex.js"],"names":["module","exports","Duplex","objectKeys","Object","keys","obj","key","push","util","require","inherits","Readable","Writable","forEach","prototype","method","options","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","process","nextTick","end","bind","xs","f","i","l","length"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEAA,OAAOC,OAAP,GAAiBC,MAAjB;;AAEA;AACA,IAAIC,aAAaC,OAAOC,IAAP,IAAe,UAAUC,GAAV,EAAe;AAC7C,MAAID,OAAO,EAAX;AACA,OAAK,IAAIE,GAAT,IAAgBD,GAAhB;AAAqBD,SAAKG,IAAL,CAAUD,GAAV;AAArB,GACA,OAAOF,IAAP;AACD,CAJD;AAKA;;AAGA;AACA,IAAII,OAAOC,QAAQ,cAAR,CAAX;AACAD,KAAKE,QAAL,GAAgBD,QAAQ,UAAR,CAAhB;AACA;;AAEA,IAAIE,WAAWF,QAAQ,oBAAR,CAAf;AACA,IAAIG,WAAWH,QAAQ,oBAAR,CAAf;;AAEAD,KAAKE,QAAL,CAAcT,MAAd,EAAsBU,QAAtB;;AAEAE,QAAQX,WAAWU,SAASE,SAApB,CAAR,EAAwC,UAASC,MAAT,EAAiB;AACvD,MAAI,CAACd,OAAOa,SAAP,CAAiBC,MAAjB,CAAL,EACEd,OAAOa,SAAP,CAAiBC,MAAjB,IAA2BH,SAASE,SAAT,CAAmBC,MAAnB,CAA3B;AACH,CAHD;;AAKA,SAASd,MAAT,CAAgBe,OAAhB,EAAyB;AACvB,MAAI,EAAE,gBAAgBf,MAAlB,CAAJ,EACE,OAAO,IAAIA,MAAJ,CAAWe,OAAX,CAAP;;AAEFL,WAASM,IAAT,CAAc,IAAd,EAAoBD,OAApB;AACAJ,WAASK,IAAT,CAAc,IAAd,EAAoBD,OAApB;;AAEA,MAAIA,WAAWA,QAAQE,QAAR,KAAqB,KAApC,EACE,KAAKA,QAAL,GAAgB,KAAhB;;AAEF,MAAIF,WAAWA,QAAQG,QAAR,KAAqB,KAApC,EACE,KAAKA,QAAL,GAAgB,KAAhB;;AAEF,OAAKC,aAAL,GAAqB,IAArB;AACA,MAAIJ,WAAWA,QAAQI,aAAR,KAA0B,KAAzC,EACE,KAAKA,aAAL,GAAqB,KAArB;;AAEF,OAAKC,IAAL,CAAU,KAAV,EAAiBC,KAAjB;AACD;;AAED;AACA,SAASA,KAAT,GAAiB;AACf;AACA;AACA,MAAI,KAAKF,aAAL,IAAsB,KAAKG,cAAL,CAAoBC,KAA9C,EACE;;AAEF;AACA;AACAC,UAAQC,QAAR,CAAiB,KAAKC,GAAL,CAASC,IAAT,CAAc,IAAd,CAAjB;AACD;;AAED,SAASf,OAAT,CAAkBgB,EAAlB,EAAsBC,CAAtB,EAAyB;AACvB,OAAK,IAAIC,IAAI,CAAR,EAAWC,IAAIH,GAAGI,MAAvB,EAA+BF,IAAIC,CAAnC,EAAsCD,GAAtC,EAA2C;AACzCD,MAAED,GAAGE,CAAH,CAAF,EAASA,CAAT;AACD;AACF","file":"_stream_duplex.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n"]}