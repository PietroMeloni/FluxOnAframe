{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/sorted-union-stream/node_modules/readable-stream/lib/_stream_readable.js"],"names":["module","exports","Readable","isArray","require","Buffer","ReadableState","EE","EventEmitter","listenerCount","emitter","type","listeners","length","Stream","util","inherits","StringDecoder","debug","debuglog","options","stream","Duplex","hwm","highWaterMark","defaultHwm","objectMode","buffer","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","readableObjectMode","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","encoding","_readableState","readable","call","prototype","push","chunk","state","isString","readableAddChunk","unshift","addToFront","er","chunkInvalid","emit","isNullOrUndefined","onEofChunk","e","Error","write","read","emitReadable","maybeReadMore","needMoreData","setEncoding","enc","MAX_HWM","roundUpToNextPowerOf2","n","p","howMuchToRead","isNaN","isNull","nOrig","isNumber","endReadable","doRead","_read","ret","fromList","isBuffer","TypeError","end","process","nextTick","emitReadable_","flow","maybeReadMore_","len","pipe","dest","pipeOpts","src","doEnd","stdout","stderr","endFn","onend","cleanup","once","on","onunpipe","ondrain","pipeOnDrain","removeListener","onclose","onfinish","onerror","ondata","_writableState","needDrain","pause","unpipe","_events","error","resume","dests","i","indexOf","splice","ev","fn","res","self","addListener","resumeScheduled","resume_","wrap","paused","isFunction","isUndefined","method","apply","arguments","events","forEach","bind","_fromList","list","stringMode","shift","join","concat","buf","slice","c","l","cpy","Math","min","copy","xs","f","x"],"mappings":"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","file":"_stream_readable.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n"]}