{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/sorted-union-stream/node_modules/readable-stream/lib/_stream_writable.js"],"names":["module","exports","Writable","Buffer","require","WritableState","util","inherits","Stream","WriteReq","chunk","encoding","cb","callback","options","stream","Duplex","hwm","highWaterMark","defaultHwm","objectMode","writableObjectMode","needDrain","ending","ended","finished","noDecode","decodeStrings","defaultEncoding","length","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","buffer","pendingcb","prefinished","errorEmitted","_writableState","writable","call","prototype","pipe","emit","Error","writeAfterEnd","state","process","nextTick","validChunk","valid","isBuffer","isString","isNullOrUndefined","TypeError","write","ret","isFunction","writeOrBuffer","cork","uncork","clearBuffer","decodeChunk","len","push","doWrite","writev","_writev","_write","onwriteError","onwriteStateUpdate","needFinish","afterWrite","onwriteDrain","finishMaybe","cbs","c","err","i","entry","slice","end","endWritable","prefinish","need","once"],"mappings":"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","file":"_stream_writable.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n"]}