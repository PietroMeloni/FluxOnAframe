{"version":3,"sources":["../../../../../../../../../node_modules/npm/node_modules/npm-registry-client/node_modules/retry/test/integration/test-retry-wrap.js"],"names":["common","require","assert","fake","create","retry","dir","lib","getLib","fn1","fn2","fn3","wrapAll","wrap","equal","name","wrapAllPassOptions","retries","options","wrapDefined","notEqual","wrapDefinedAndPassOptions","runWrappedWithoutError","callbackCalled","method","a","b","callback","ok","runWrappedWithError","Error","err"],"mappings":"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","file":"test-retry-wrap.js","sourcesContent":["var common = require('../common');\nvar assert = common.assert;\nvar fake = common.fake.create();\nvar retry = require(common.dir.lib + '/retry');\n\nfunction getLib() {\n  return {\n    fn1: function() {},\n    fn2: function() {},\n    fn3: function() {}\n  };\n}\n\n(function wrapAll() {\n  var lib = getLib();\n  retry.wrap(lib);\n  assert.equal(lib.fn1.name, 'retryWrapper');\n  assert.equal(lib.fn2.name, 'retryWrapper');\n  assert.equal(lib.fn3.name, 'retryWrapper');\n}());\n\n(function wrapAllPassOptions() {\n  var lib = getLib();\n  retry.wrap(lib, {retries: 2});\n  assert.equal(lib.fn1.name, 'retryWrapper');\n  assert.equal(lib.fn2.name, 'retryWrapper');\n  assert.equal(lib.fn3.name, 'retryWrapper');\n  assert.equal(lib.fn1.options.retries, 2);\n  assert.equal(lib.fn2.options.retries, 2);\n  assert.equal(lib.fn3.options.retries, 2);\n}());\n\n(function wrapDefined() {\n  var lib = getLib();\n  retry.wrap(lib, ['fn2', 'fn3']);\n  assert.notEqual(lib.fn1.name, 'retryWrapper');\n  assert.equal(lib.fn2.name, 'retryWrapper');\n  assert.equal(lib.fn3.name, 'retryWrapper');\n}());\n\n(function wrapDefinedAndPassOptions() {\n  var lib = getLib();\n  retry.wrap(lib, {retries: 2}, ['fn2', 'fn3']);\n  assert.notEqual(lib.fn1.name, 'retryWrapper');\n  assert.equal(lib.fn2.name, 'retryWrapper');\n  assert.equal(lib.fn3.name, 'retryWrapper');\n  assert.equal(lib.fn2.options.retries, 2);\n  assert.equal(lib.fn3.options.retries, 2);\n}());\n\n(function runWrappedWithoutError() {\n  var callbackCalled;\n  var lib = {method: function(a, b, callback) {\n    assert.equal(a, 1);\n    assert.equal(b, 2);\n    assert.equal(typeof callback, 'function');\n    callback();\n  }};\n  retry.wrap(lib);\n  lib.method(1, 2, function() {\n    callbackCalled = true;\n  });\n  assert.ok(callbackCalled);\n}());\n\n(function runWrappedWithError() {\n  var callbackCalled;\n  var lib = {method: function(callback) {\n    callback(new Error('Some error'));\n  }};\n  retry.wrap(lib, {retries: 1});\n  lib.method(function(err) {\n    callbackCalled = true;\n    assert.ok(err instanceof Error);\n  });\n  assert.ok(!callbackCalled);\n}());\n"]}