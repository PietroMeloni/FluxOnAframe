{"version":3,"sources":["../../../../../../../../../node_modules/npm/node_modules/npm-registry-client/node_modules/retry/test/integration/test-retry-operation.js"],"names":["common","require","assert","fake","create","retry","dir","lib","testErrors","operation","error","Error","error2","_errors","push","deepEqual","errors","testMainErrorReturnsMostFrequentError","strictEqual","mainError","testMainErrorReturnsLastErrorOnEqualCount","testAttempt","fn","Function","timeoutOpts","timeout","cb","attempt","_fn","_operationTimeout","_operationTimeoutCb","testRetry","times","attempts","finalCallback","callback","expectAnytime","currentAttempt","equal","testRetryForever","retries","forever","testRetryForeverNoRetries","delay","minTimeout","maxTimeout","startTime","Date","getTime","endTime","minTime","maxTime","testStop","stop"],"mappings":"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","file":"test-retry-operation.js","sourcesContent":["var common = require('../common');\nvar assert = common.assert;\nvar fake = common.fake.create();\nvar retry = require(common.dir.lib + '/retry');\n\n(function testErrors() {\n  var operation = retry.operation();\n\n  var error = new Error('some error');\n  var error2 = new Error('some other error');\n  operation._errors.push(error);\n  operation._errors.push(error2);\n\n  assert.deepEqual(operation.errors(), [error, error2]);\n})();\n\n(function testMainErrorReturnsMostFrequentError() {\n  var operation = retry.operation();\n  var error = new Error('some error');\n  var error2 = new Error('some other error');\n\n  operation._errors.push(error);\n  operation._errors.push(error2);\n  operation._errors.push(error);\n\n  assert.strictEqual(operation.mainError(), error);\n})();\n\n(function testMainErrorReturnsLastErrorOnEqualCount() {\n  var operation = retry.operation();\n  var error = new Error('some error');\n  var error2 = new Error('some other error');\n\n  operation._errors.push(error);\n  operation._errors.push(error2);\n\n  assert.strictEqual(operation.mainError(), error2);\n})();\n\n(function testAttempt() {\n  var operation = retry.operation();\n  var fn = new Function();\n\n  var timeoutOpts = {\n    timeout: 1,\n    cb: function() {}\n  };\n  operation.attempt(fn, timeoutOpts);\n\n  assert.strictEqual(fn, operation._fn);\n  assert.strictEqual(timeoutOpts.timeout, operation._operationTimeout);\n  assert.strictEqual(timeoutOpts.cb, operation._operationTimeoutCb);\n})();\n\n(function testRetry() {\n  var times = 3;\n  var error = new Error('some error');\n  var operation = retry.operation([1, 2, 3]);\n  var attempts = 0;\n\n  var finalCallback = fake.callback('finalCallback');\n  fake.expectAnytime(finalCallback);\n\n  var fn = function() {\n    operation.attempt(function(currentAttempt) {\n      attempts++;\n      assert.equal(currentAttempt, attempts);\n      if (operation.retry(error)) {\n        return;\n      }\n\n      assert.strictEqual(attempts, 4);\n      assert.strictEqual(operation.attempts(), attempts);\n      assert.strictEqual(operation.mainError(), error);\n      finalCallback();\n    });\n  };\n\n  fn();\n})();\n\n(function testRetryForever() {\n  var error = new Error('some error');\n  var operation = retry.operation({ retries: 3, forever: true });\n  var attempts = 0;\n\n  var finalCallback = fake.callback('finalCallback');\n  fake.expectAnytime(finalCallback);\n\n  var fn = function() {\n    operation.attempt(function(currentAttempt) {\n      attempts++;\n      assert.equal(currentAttempt, attempts);\n      if (attempts !== 6 && operation.retry(error)) {\n        return;\n      }\n\n      assert.strictEqual(attempts, 6);\n      assert.strictEqual(operation.attempts(), attempts);\n      assert.strictEqual(operation.mainError(), error);\n      finalCallback();\n    });\n  };\n\n  fn();\n})();\n\n(function testRetryForeverNoRetries() {\n  var error = new Error('some error');\n  var delay = 50\n  var operation = retry.operation({\n    retries: null,\n    forever: true,\n    minTimeout: delay,\n    maxTimeout: delay\n  });\n\n  var attempts = 0;\n  var startTime = new Date().getTime();\n\n  var finalCallback = fake.callback('finalCallback');\n  fake.expectAnytime(finalCallback);\n\n  var fn = function() {\n    operation.attempt(function(currentAttempt) {\n      attempts++;\n      assert.equal(currentAttempt, attempts);\n      if (attempts !== 4 && operation.retry(error)) {\n        return;\n      }\n\n      var endTime = new Date().getTime();\n      var minTime = startTime + (delay * 3);\n      var maxTime = minTime + 20 // add a little headroom for code execution time\n      assert(endTime > minTime)\n      assert(endTime < maxTime)\n      assert.strictEqual(attempts, 4);\n      assert.strictEqual(operation.attempts(), attempts);\n      assert.strictEqual(operation.mainError(), error);\n      finalCallback();\n    });\n  };\n\n  fn();\n})();\n\n(function testStop() {\n  var error = new Error('some error');\n  var operation = retry.operation([1, 2, 3]);\n  var attempts = 0;\n\n  var finalCallback = fake.callback('finalCallback');\n  fake.expectAnytime(finalCallback);\n\n  var fn = function() {\n    operation.attempt(function(currentAttempt) {\n      attempts++;\n      assert.equal(currentAttempt, attempts);\n\n      if (attempts === 2) {\n        operation.stop();\n\n        assert.strictEqual(attempts, 2);\n        assert.strictEqual(operation.attempts(), attempts);\n        assert.strictEqual(operation.mainError(), error);\n        finalCallback();\n      }\n\n      if (operation.retry(error)) {\n        return;\n      }\n    });\n  };\n\n  fn();\n})();\n"]}