'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = tag;

var assert = require('assert');

function tag(uri, params, cb) {
  assert(typeof uri === 'string', 'must pass registry URI to tag');
  assert(params && (typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object', 'must pass params to tag');
  assert(typeof cb === 'function', 'must pass callback to tag');

  assert(typeof params.version === 'string', 'must pass version to tag');
  assert(typeof params.tag === 'string', 'must pass tag name to tag');
  assert(params.auth && _typeof(params.auth) === 'object', 'must pass auth to tag');

  var options = {
    method: 'PUT',
    body: JSON.stringify(params.version),
    auth: params.auth
  };
  this.request(uri + '/' + params.tag, options, cb);
}
//# sourceMappingURL=tag.js.map