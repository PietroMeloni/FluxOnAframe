{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/npm-registry-client/lib/team.js"],"names":["module","exports","team","assert","require","url","subcommands","sub","uri","params","cb","teamAssertions","call","create","request","apiUri","scope","method","auth","body","JSON","stringify","name","destroy","add","user","rm","ls","uriParams","reqUri","registryUri","path","Array","prototype","slice","arguments","map","encodeURIComponent","join","resolve","subcommand","hasOwnProperty","Object","keys","users","length"],"mappings":"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","file":"team.js","sourcesContent":["module.exports = team\n\nvar assert = require('assert')\nvar url = require('url')\n\nvar subcommands = {}\n\nfunction team (sub, uri, params, cb) {\n  teamAssertions(sub, uri, params, cb)\n  return subcommands[sub].call(this, uri, params, cb)\n}\n\nsubcommands.create = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'org', params.scope, 'team'), {\n    method: 'PUT',\n    auth: params.auth,\n    body: JSON.stringify({\n      name: params.team\n    })\n  }, cb)\n}\n\nsubcommands.destroy = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'team', params.scope, params.team), {\n    method: 'DELETE',\n    auth: params.auth\n  }, cb)\n}\n\nsubcommands.add = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'team', params.scope, params.team, 'user'), {\n    method: 'PUT',\n    auth: params.auth,\n    body: JSON.stringify({\n      user: params.user\n    })\n  }, cb)\n}\n\nsubcommands.rm = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'team', params.scope, params.team, 'user'), {\n    method: 'DELETE',\n    auth: params.auth,\n    body: JSON.stringify({\n      user: params.user\n    })\n  }, cb)\n}\n\nsubcommands.ls = function (uri, params, cb) {\n  var uriParams = '?format=cli'\n  if (params.team) {\n    var reqUri = apiUri(\n      uri, 'team', params.scope, params.team, 'user') + uriParams\n    return this.request(reqUri, {\n      method: 'GET',\n      auth: params.auth\n    }, cb)\n  } else {\n    return this.request(apiUri(uri, 'org', params.scope, 'team') + uriParams, {\n      method: 'GET',\n      auth: params.auth\n    }, cb)\n  }\n}\n\n// TODO - we punted this to v2\n// subcommands.edit = function (uri, params, cb) {\n//   return this.request(apiUri(uri, 'team', params.scope, params.team, 'user'), {\n//     method: 'POST',\n//     auth: params.auth,\n//     body: JSON.stringify({\n//       users: params.users\n//     })\n//   }, cb)\n// }\n\nfunction apiUri (registryUri) {\n  var path = Array.prototype.slice.call(arguments, 1)\n    .map(encodeURIComponent)\n    .join('/')\n  return url.resolve(registryUri, '-/' + path)\n}\n\nfunction teamAssertions (subcommand, uri, params, cb) {\n  assert(subcommand, 'subcommand is required')\n  assert(subcommands.hasOwnProperty(subcommand),\n    'team subcommand must be one of ' + Object.keys(subcommands))\n  assert(typeof uri === 'string', 'registry URI is required')\n  assert(typeof params === 'object', 'params are required')\n  assert(typeof params.auth === 'object', 'auth is required')\n  assert(typeof params.scope === 'string', 'scope is required')\n  assert(!cb || typeof cb === 'function', 'callback must be a function')\n  if (subcommand !== 'ls') {\n    assert(typeof params.team === 'string', 'team name is required')\n  }\n  if (subcommand === 'rm' || subcommand === 'add') {\n    assert(typeof params.user === 'string', 'user is required')\n  }\n  if (subcommand === 'edit') {\n    assert(typeof params.users === 'object' &&\n           params.users.length != null,\n    'users is required')\n  }\n}\n"]}