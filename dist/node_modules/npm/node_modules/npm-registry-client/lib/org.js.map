{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/npm-registry-client/lib/org.js"],"names":["module","exports","org","assert","require","url","subcommands","subcommand","uri","params","cb","orgAssertions","call","set","add","request","apiUri","method","auth","body","JSON","stringify","user","role","rm","ls","registryUri","path","Array","prototype","slice","arguments","map","encodeURIComponent","join","resolve","hasOwnProperty","Object","keys"],"mappings":"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","file":"org.js","sourcesContent":["'use strict'\n\nmodule.exports = org\n\nvar assert = require('assert')\nvar url = require('url')\n\nvar subcommands = {}\n\nfunction org (subcommand, uri, params, cb) {\n  orgAssertions(subcommand, uri, params, cb)\n  return subcommands[subcommand].call(this, uri, params, cb)\n}\n\nsubcommands.set = subcommands.add = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'org', params.org, 'user'), {\n    method: 'PUT',\n    auth: params.auth,\n    body: JSON.stringify({\n      user: params.user,\n      role: params.role\n    })\n  }, cb)\n}\n\nsubcommands.rm = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'org', params.org, 'user'), {\n    method: 'DELETE',\n    auth: params.auth,\n    body: JSON.stringify({\n      user: params.user\n    })\n  }, cb)\n}\n\nsubcommands.ls = function (uri, params, cb) {\n  return this.request(apiUri(uri, 'org', params.org, 'user'), {\n    method: 'GET',\n    auth: params.auth\n  }, cb)\n}\n\nfunction apiUri (registryUri) {\n  var path = Array.prototype.slice.call(arguments, 1)\n    .map(encodeURIComponent)\n    .join('/')\n  return url.resolve(registryUri, '-/' + path)\n}\n\nfunction orgAssertions (subcommand, uri, params, cb) {\n  assert(subcommand, 'subcommand is required')\n  assert(subcommands.hasOwnProperty(subcommand),\n    'org subcommand must be one of ' + Object.keys(subcommands))\n  assert(typeof uri === 'string', 'registry URI is required')\n  assert(typeof params === 'object', 'params are required')\n  assert(typeof params.auth === 'object', 'auth is required')\n  assert(!cb || typeof cb === 'function', 'callback must be a function')\n  assert(typeof params.org === 'string', 'org name is required')\n  if (subcommand === 'rm' || subcommand === 'add' || subcommand === 'set') {\n    assert(typeof params.user === 'string', 'user is required')\n  }\n}\n"]}