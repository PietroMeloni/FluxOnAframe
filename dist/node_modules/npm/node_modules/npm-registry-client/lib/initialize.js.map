{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/npm-registry-client/lib/initialize.js"],"names":["crypto","require","HttpAgent","Agent","HttpsAgent","pkg","module","exports","initialize","uri","method","accept","headers","config","sessionToken","randomBytes","toString","log","verbose","isFromCI","Boolean","process","env","opts","url","localAddress","proxy","strictSSL","ssl","strict","cert","certificate","key","ca","agent","getAgent","call","protocol","http","https","version","refer","referer","String","userAgent","scope","httpsAgent","keepAlive","maxSockets","rejectUnauthorized","httpAgent"],"mappings":"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","file":"initialize.js","sourcesContent":["var crypto = require('crypto')\nvar HttpAgent = require('http').Agent\nvar HttpsAgent = require('https').Agent\n\nvar pkg = require('../package.json')\n\nmodule.exports = initialize\n\nfunction initialize (uri, method, accept, headers) {\n  if (!this.config.sessionToken) {\n    this.config.sessionToken = crypto.randomBytes(8).toString('hex')\n    this.log.verbose('request id', this.config.sessionToken)\n  }\n  if (this.config.isFromCI == null) {\n    this.config.isFromCI = Boolean(\n      process.env['CI'] === 'true' || process.env['TDDIUM'] ||\n      process.env['JENKINS_URL'] || process.env['bamboo.buildKey'] ||\n      process.env['GO_PIPELINE_NAME'])\n  }\n\n  var opts = {\n    url: uri,\n    method: method,\n    headers: headers,\n    localAddress: this.config.proxy.localAddress,\n    strictSSL: this.config.ssl.strict,\n    cert: this.config.ssl.certificate,\n    key: this.config.ssl.key,\n    ca: this.config.ssl.ca,\n    agent: getAgent.call(this, uri.protocol)\n  }\n\n  // allow explicit disabling of proxy in environment via CLI\n  //\n  // how false gets here is the CLI's problem (it's gross)\n  if (this.config.proxy.http === false) {\n    opts.proxy = null\n  } else {\n    // request will not pay attention to the NOPROXY environment variable if a\n    // config value named proxy is passed in, even if it's set to null.\n    var proxy\n    if (uri.protocol === 'https:') {\n      proxy = this.config.proxy.https\n    } else {\n      proxy = this.config.proxy.http\n    }\n    if (typeof proxy === 'string') opts.proxy = proxy\n  }\n\n  headers.version = this.version || pkg.version\n  headers.accept = accept\n\n  if (this.refer) headers.referer = this.refer\n\n  headers['npm-session'] = this.config.sessionToken\n  headers['npm-in-ci'] = String(this.config.isFromCI)\n  headers['user-agent'] = this.config.userAgent\n  if (this.config.scope) {\n    headers['npm-scope'] = this.config.scope\n  }\n\n  return opts\n}\n\nfunction getAgent (protocol) {\n  if (protocol === 'https:') {\n    if (!this.httpsAgent) {\n      this.httpsAgent = new HttpsAgent({\n        keepAlive: true,\n        maxSockets: this.config.maxSockets,\n        localAddress: this.config.proxy.localAddress,\n        rejectUnauthorized: this.config.ssl.strict,\n        ca: this.config.ssl.ca,\n        cert: this.config.ssl.certificate,\n        key: this.config.ssl.key\n      })\n    }\n\n    return this.httpsAgent\n  } else {\n    if (!this.httpAgent) {\n      this.httpAgent = new HttpAgent({\n        keepAlive: true,\n        maxSockets: this.config.maxSockets,\n        localAddress: this.config.proxy.localAddress\n      })\n    }\n\n    return this.httpAgent\n  }\n}\n"]}