'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports = ping;

var url = require('url');
var assert = require('assert');

function ping(uri, params, cb) {
  assert(typeof uri === 'string', 'must pass registry URI to ping');
  assert(params && (typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object', 'must pass params to ping');
  assert(typeof cb === 'function', 'must pass callback to ping');

  var auth = params.auth;
  assert(auth && (typeof auth === 'undefined' ? 'undefined' : _typeof(auth)) === 'object', 'must pass auth to ping');

  this.request(url.resolve(uri, '-/ping?write=true'), { auth: auth }, function (er, fullData, data, response) {
    if (er || fullData) {
      cb(er, fullData, data, response);
    } else {
      cb(new Error('No data received'));
    }
  });
}
//# sourceMappingURL=ping.js.map