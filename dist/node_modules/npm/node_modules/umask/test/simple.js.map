{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/umask/test/simple.js"],"names":["umask","require","Code","Lab","lab","script","exports","describe","it","expect","done","o","result","validate","to","equal","undefined","NaN","toString","fromString","err","val","message"],"mappings":"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","file":"simple.js","sourcesContent":["'use strict';\n\nvar umask = require('..');\n\nvar Code = require('code');\nvar Lab = require('lab');\nvar lab = Lab.script();\nexports.lab = lab;\n\nvar describe = lab.describe;\nvar it = lab.it;\nvar expect = Code.expect;\n\ndescribe('validates umask', function () {\n    // signature of validator: validate(obj, key, val)\n    // store valid value in obj[key]\n    // return false if invalid\n\n    it('accepts numbers', function (done) {\n        var o = {},\n            result = false;\n\n        result = umask.validate(o, 'umask', 0);\n        expect(result).to.equal(true);\n        expect(o.umask).to.equal(0);\n\n        result = umask.validate(o, 'umask', 511);\n        expect(result).to.equal(true);\n        expect(o.umask).to.equal(511);\n        done();\n    });\n\n    it('accepts strings', function (done) {\n        var o = {},\n            result;\n\n        result = umask.validate(o, 'umask', \"0\");\n        expect(result).to.equal(true);\n        expect(o.umask).to.equal(0);\n\n        result = umask.validate(o, 'umask', \"0777\");\n        expect(result).to.equal(true);\n        expect(o.umask).to.equal(511);\n\n        done();\n    });\n\n    it('rejects other types', function (done) {\n        expect(umask.validate(undefined, undefined, false)).to.equal(false);\n        expect(umask.validate(undefined, undefined, {})).to.equal(false);\n\n        done();\n    });\n\n    it('rejects non-octalish strings', function (done) {\n        expect(umask.validate(undefined, undefined, \"1\")).to.equal(false);\n\n        done();\n    });\n\n    it('rejects NaN strings', function (done) {\n        expect(umask.validate(undefined, undefined, NaN)).to.equal(false);\n\n        done();\n    });\n});\n\ndescribe('umask to string', function () {\n    it(\"converts umask to string\", function (done) {\n        expect(umask.toString(0)).to.equal(\"0000\");\n        expect(umask.toString(1)).to.equal(\"0001\");\n        expect(umask.toString(7)).to.equal(\"0007\");\n        expect(umask.toString(8)).to.equal(\"0010\");\n        expect(umask.toString(511)).to.equal(\"0777\");\n        expect(umask.toString(18)).to.equal(\"0022\");\n        expect(umask.toString(16)).to.equal(\"0020\");\n        done();\n    });\n});\n\ndescribe('umask from string', function () {\n    it('converts valid values', function (done) {\n        expect(umask.fromString(\"0000\")).to.equal(0);\n        expect(umask.fromString(\"0\")).to.equal(0);\n        expect(umask.fromString(\"0777\")).to.equal(511);\n        expect(umask.fromString(\"0024\")).to.equal(20);\n\n        expect(umask.fromString(0)).to.equal(0);\n        expect(umask.fromString(20)).to.equal(20);\n        expect(umask.fromString(21)).to.equal(21);\n        expect(umask.fromString(511)).to.equal(511);\n\n        done();\n    });\n\n    it('converts valid values', function (done) {\n        expect(umask.fromString(\"0000\")).to.equal(0);\n        expect(umask.fromString(\"0\")).to.equal(0);\n        expect(umask.fromString(\"010\")).to.equal(8);\n        expect(umask.fromString(\"0777\")).to.equal(511);\n        expect(umask.fromString(\"0024\")).to.equal(20);\n\n        expect(umask.fromString(\"8\")).to.equal(8);\n        expect(umask.fromString(\"9\")).to.equal(9);\n        expect(umask.fromString(\"18\")).to.equal(18);\n        expect(umask.fromString(\"16\")).to.equal(16);\n\n        expect(umask.fromString(0)).to.equal(0);\n        expect(umask.fromString(20)).to.equal(20);\n        expect(umask.fromString(21)).to.equal(21);\n        expect(umask.fromString(511)).to.equal(511);\n\n        expect(umask.fromString(0.1)).to.equal(0);\n        expect(umask.fromString(511.1)).to.equal(511);\n\n        done();\n    });\n\n    it('errors on empty string', function (done) {\n        umask.fromString(\"\", function (err, val) {\n            expect(err.message).to.equal('Expected octal string, got \"\", defaulting to \"0022\"');\n            expect(val).to.equal(18);\n            done();\n        });\n    });\n\n    it('errors on invalid octal string', function (done) {\n        umask.fromString(\"099\", function (err, val) {\n            expect(err.message).to.equal('Expected octal string, got \"099\", defaulting to \"0022\"');\n            expect(val).to.equal(18);\n            done();\n        });\n    });\n\n    it('errors when non-string, non-number (boolean)', function (done) {\n        umask.fromString(false, function (err, val) {\n            expect(err.message).to.equal('Expected number or octal string, got false, defaulting to \"0022\"');\n            expect(val).to.equal(18);\n            done();\n        });\n    });\n\n    it('errors when non-string, non-number (object)', function (done) {\n        umask.fromString({}, function (err, val) {\n            expect(err.message).to.equal('Expected number or octal string, got {}, defaulting to \"0022\"');\n            expect(val).to.equal(18);\n            done();\n        });\n    });\n\n    it('errors when out of range (<0)', function (done) {\n        umask.fromString(-1, function (err, val) {\n            expect(err.message).to.equal('Must be in range 0..511 (0000..0777), got -1');\n            expect(val).to.equal(18);\n            done();\n        });\n    });\n\n    it('errors when out of range (>511)', function (done) {\n        umask.fromString(512, function (err, val) {\n            expect(err.message).to.equal('Must be in range 0..511 (0000..0777), got 512');\n            expect(val).to.equal(18);\n            done();\n        });\n    });\n});\n"]}