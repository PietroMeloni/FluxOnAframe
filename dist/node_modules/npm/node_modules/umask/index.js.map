{"version":3,"sources":["../../../../../node_modules/npm/node_modules/umask/index.js"],"names":["util","require","toString","val","length","defaultUmask","defaultUmaskString","validate","data","k","isNaN","charAt","parseInt","convert_fromString","cb","test","Error","format","Math","floor","fromString","err","result","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnBA,UAAMA,IAAID,QAAJ,CAAa,CAAb,CAAN;AACA,WAAOC,IAAIC,MAAJ,GAAa,CAApB,EAAuB;AACnBD,cAAM,MAAMA,GAAZ;AACH;AACD,WAAOA,GAAP;AACH;;AAED,IAAIE,eAAe,EAAnB,C,CAAuB;AACvB,IAAIC,qBAAqBJ,SAASG,YAAT,CAAzB;;AAEA,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,CAAxB,EAA2BN,GAA3B,EAAgC;AAC5B;AACA,QAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACO,MAAMP,GAAN,CAAhC,EAA4C;AACxCK,aAAKC,CAAL,IAAUN,GAAV;AACA,eAAO,IAAP;AACH;;AAED,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,YAAIA,IAAIQ,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AACvB,mBAAO,KAAP;AACH;AACDH,aAAKC,CAAL,IAAUG,SAAST,GAAT,EAAc,CAAd,CAAV;AACA,eAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAED,SAASU,kBAAT,CAA4BV,GAA5B,EAAiCW,EAAjC,EAAqC;AACjC,QAAI,OAAOX,GAAP,KAAe,QAAnB,EAA6B;AACzB;AACA,YAAIA,IAAIQ,MAAJ,CAAW,CAAX,MAAkB,GAAlB,IAAyB,WAAWI,IAAX,CAAgBZ,GAAhB,CAA7B,EAAmD;AAC/CA,kBAAMS,SAAST,GAAT,EAAc,CAAd,CAAN;AACH,SAFD,MAEO,IAAIA,IAAIQ,MAAJ,CAAW,CAAX,MAAkB,GAAlB,IAAyB,WAAWI,IAAX,CAAgBZ,GAAhB,CAA7B,EAAmD;AACtD;AACAA,kBAAMS,SAAST,GAAT,EAAc,EAAd,CAAN;AACH,SAHM,MAGA;AACH,mBAAOW,GAAG,IAAIE,KAAJ,CAAUhB,KAAKiB,MAAL,CAAY,iDAAZ,EACYd,GADZ,EACiBG,kBADjB,CAAV,CAAH,EAEGD,YAFH,CAAP;AAGH;AACJ,KAZD,MAYO,IAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AAChC,eAAOW,GAAG,IAAIE,KAAJ,CAAUhB,KAAKiB,MAAL,CAAY,2DAAZ,EACYd,GADZ,EACiBG,kBADjB,CAAV,CAAH,EAEGD,YAFH,CAAP;AAGH;;AAEDF,UAAMe,KAAKC,KAAL,CAAWhB,GAAX,CAAN;;AAEA,QAAKA,MAAM,CAAP,IAAcA,MAAM,GAAxB,EAA8B;AAC1B,eAAOW,GAAG,IAAIE,KAAJ,CAAUhB,KAAKiB,MAAL,CAAY,8CAAZ,EAA4Dd,GAA5D,CAAV,CAAH,EACGE,YADH,CAAP;AAEH;;AAEDS,OAAG,IAAH,EAASX,GAAT;AACH;;AAED,SAASiB,UAAT,CAAoBjB,GAApB,EAAyBW,EAAzB,EAA6B;;AAEzB;AACAD,uBAAmBV,GAAnB,EAAwBW,MAAM,UAAUO,GAAV,EAAeC,MAAf,EAAuB;AACjD;AACAnB,cAAMmB,MAAN;AACH,KAHD;;AAKA,WAAOnB,GAAP;AACH;;AAEDoB,QAAQrB,QAAR,GAAmBA,QAAnB;AACAqB,QAAQH,UAAR,GAAqBA,UAArB;AACAG,QAAQhB,QAAR,GAAmBA,QAAnB","file":"index.js","sourcesContent":["'use strict';\n\nvar util = require(\"util\");\n\nfunction toString(val) {\n    val = val.toString(8);\n    while (val.length < 4) {\n        val = \"0\" + val;\n    }\n    return val;\n}\n\nvar defaultUmask = 18; // 0022;\nvar defaultUmaskString = toString(defaultUmask);\n\nfunction validate(data, k, val) {\n    // must be either an integer or an octal string.\n    if (typeof val === \"number\" && !isNaN(val)) {\n        data[k] = val;\n        return true;\n    }\n\n    if (typeof val === \"string\") {\n        if (val.charAt(0) !== \"0\") {\n            return false;\n        }\n        data[k] = parseInt(val, 8);\n        return true;\n    }\n\n    return false;\n}\n\nfunction convert_fromString(val, cb) {\n    if (typeof val === \"string\") {\n        // check for octal string first\n        if (val.charAt(0) === '0' && /^[0-7]+$/.test(val)) {\n            val = parseInt(val, 8);\n        } else if (val.charAt(0) !== '0' && /^[0-9]+$/.test(val)) {\n            // legacy support for decimal strings\n            val = parseInt(val, 10);\n        } else {\n            return cb(new Error(util.format(\"Expected octal string, got %j, defaulting to %j\",\n                                            val, defaultUmaskString)),\n                      defaultUmask);\n        }\n    } else if (typeof val !== \"number\") {\n        return cb(new Error(util.format(\"Expected number or octal string, got %j, defaulting to %j\",\n                                        val, defaultUmaskString)),\n                  defaultUmask);\n    }\n\n    val = Math.floor(val);\n\n    if ((val < 0) || (val > 511)) {\n        return cb(new Error(util.format(\"Must be in range 0..511 (0000..0777), got %j\", val)),\n                  defaultUmask);\n    }\n\n    cb(null, val);\n}\n\nfunction fromString(val, cb) {\n\n    // synchronous callback, no zalgo\n    convert_fromString(val, cb || function (err, result) {\n        /*jslint unparam:true*/\n        val = result;\n    });\n\n    return val;\n}\n\nexports.toString = toString;\nexports.fromString = fromString;\nexports.validate = validate;\n\n"]}