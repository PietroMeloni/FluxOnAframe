{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/cryptiles/test/index.js"],"names":["Code","require","Cryptiles","Lab","internals","lab","exports","script","describe","it","expect","done","i","randomString","length","to","equal","message","match","randomBits","a","b","now","Date","fixedTimeComparison","t1","t2","be","within"],"mappings":"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","file":"index.js","sourcesContent":["// Load modules\n\nvar Code = require('code');\nvar Cryptiles = require('..');\nvar Lab = require('lab');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar describe = lab.describe;\nvar it = lab.it;\nvar expect = Code.expect;\n\n\ndescribe('randomString()', function () {\n\n    it('should generate the right length string', function (done) {\n\n        for (var i = 1; i <= 1000; ++i) {\n            expect(Cryptiles.randomString(i).length).to.equal(i);\n        }\n\n        done();\n    });\n\n    it('returns an error on invalid bits size', function (done) {\n\n        expect(Cryptiles.randomString(99999999999999999999).message).to.match(/Failed generating random bits/);\n        done();\n    });\n});\n\ndescribe('randomBits()', function () {\n\n    it('returns an error on invalid input', function (done) {\n\n        expect(Cryptiles.randomBits(0).message).to.equal('Invalid random bits count');\n        done();\n    });\n});\n\ndescribe('fixedTimeComparison()', function () {\n\n    var a = Cryptiles.randomString(50000);\n    var b = Cryptiles.randomString(150000);\n\n    it('should take the same amount of time comparing different string sizes', function (done) {\n\n        var now = Date.now();\n        Cryptiles.fixedTimeComparison(b, a);\n        var t1 = Date.now() - now;\n\n        now = Date.now();\n        Cryptiles.fixedTimeComparison(b, b);\n        var t2 = Date.now() - now;\n\n        expect(t2 - t1).to.be.within(-20, 20);\n        done();\n    });\n\n    it('should return true for equal strings', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a, a)).to.equal(true);\n        done();\n    });\n\n    it('should return false for different strings (size, a < b)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a, a + 'x')).to.equal(false);\n        done();\n    });\n\n    it('should return false for different strings (size, a > b)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a + 'x', a)).to.equal(false);\n        done();\n    });\n\n    it('should return false for different strings (size, a = b)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(a + 'x', a + 'y')).to.equal(false);\n        done();\n    });\n\n    it('should return false when not a string', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison('x', null)).to.equal(false);\n        done();\n    });\n\n    it('should return false when not a string (left)', function (done) {\n\n        expect(Cryptiles.fixedTimeComparison(null, 'x')).to.equal(false);\n        done();\n    });\n});\n"]}