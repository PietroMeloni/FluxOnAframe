{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/agentkeepalive/lib/_http_agent.js"],"names":["net","require","util","EventEmitter","debug","debuglog","Agent","options","call","self","defaultPort","protocol","_extend","path","requests","sockets","freeSockets","keepAliveMsecs","keepAlive","maxSockets","defaultMaxSockets","maxFreeSockets","freeSocketKeepAliveTimeout","timeout","socketActiveTTL","on","socket","name","getName","writable","length","shift","onSocket","req","_httpMessage","shouldKeepAlive","freeLen","count","destroy","setKeepAlive","unref","removeSocket","push","listeners","once","freeSocketErrorListener","setTimeout","inherits","exports","err","message","stack","emit","Infinity","prototype","createConnection","host","port","localAddress","family","handleSocketCreation","newSocket","process","nextTick","addRequest","servername","calculateServerName","sockLen","removeListener","Date","now","createdTime","createSocket","ref","cb","_agentKey","encoding","called","oncreate","Object","assign","s","onFree","onClose","onTimeout","onRemove","hostHeader","getHeader","startsWith","index","indexOf","substr","split","sets","sk","splice","set","keys","v","setName","n","globalAgent"],"mappings":"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","file":"_http_agent.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// patch from https://github.com/nodejs/node/blob/v7.2.1/lib/_http_agent.js\n\n'use strict';\n\nconst net = require('net');\nconst util = require('util');\nconst EventEmitter = require('events');\nconst debug = util.debuglog('http');\n\n// New Agent code.\n\n// The largest departure from the previous implementation is that\n// an Agent instance holds connections for a variable number of host:ports.\n// Surprisingly, this is still API compatible as far as third parties are\n// concerned. The only code that really notices the difference is the\n// request object.\n\n// Another departure is that all code related to HTTP parsing is in\n// ClientRequest.onSocket(). The Agent is now *strictly*\n// concerned with managing a connection pool.\n\nfunction Agent(options) {\n  if (!(this instanceof Agent))\n    return new Agent(options);\n\n  EventEmitter.call(this);\n\n  var self = this;\n\n  self.defaultPort = 80;\n  self.protocol = 'http:';\n\n  self.options = util._extend({}, options);\n\n  // don't confuse net and make it think that we're connecting to a pipe\n  self.options.path = null;\n  self.requests = {};\n  self.sockets = {};\n  self.freeSockets = {};\n  self.keepAliveMsecs = self.options.keepAliveMsecs || 1000;\n  self.keepAlive = self.options.keepAlive || false;\n  self.maxSockets = self.options.maxSockets || Agent.defaultMaxSockets;\n  self.maxFreeSockets = self.options.maxFreeSockets || 256;\n\n  // [patch start]\n  // free keep-alive socket timeout. By default free socket do not have a timeout.\n  self.freeSocketKeepAliveTimeout = self.options.freeSocketKeepAliveTimeout || 0;\n  // working socket timeout. By default working socket do not have a timeout.\n  self.timeout = self.options.timeout || 0;\n  // the socket active time to live, even if it's in use\n  this.socketActiveTTL = this.options.socketActiveTTL || null;\n  // [patch end]\n\n  self.on('free', function(socket, options) {\n    var name = self.getName(options);\n    debug('agent.on(free)', name);\n\n    if (socket.writable &&\n        self.requests[name] && self.requests[name].length) {\n      // [patch start]\n      debug('continue handle next request');\n      // [patch end]\n      self.requests[name].shift().onSocket(socket);\n      if (self.requests[name].length === 0) {\n        // don't leak\n        delete self.requests[name];\n      }\n    } else {\n      // If there are no pending requests, then put it in\n      // the freeSockets pool, but only if we're allowed to do so.\n      var req = socket._httpMessage;\n      if (req &&\n          req.shouldKeepAlive &&\n          socket.writable &&\n          self.keepAlive) {\n        var freeSockets = self.freeSockets[name];\n        var freeLen = freeSockets ? freeSockets.length : 0;\n        var count = freeLen;\n        if (self.sockets[name])\n          count += self.sockets[name].length;\n\n        if (count > self.maxSockets || freeLen >= self.maxFreeSockets) {\n          socket.destroy();\n        } else {\n          freeSockets = freeSockets || [];\n          self.freeSockets[name] = freeSockets;\n          socket.setKeepAlive(true, self.keepAliveMsecs);\n          socket.unref();\n          socket._httpMessage = null;\n          self.removeSocket(socket, options);\n          freeSockets.push(socket);\n\n          // [patch start]\n          // Add a default error handler to avoid Unhandled 'error' event throw on idle socket\n          // https://github.com/node-modules/agentkeepalive/issues/25\n          // https://github.com/nodejs/node/pull/4482 (fixed in >= 4.4.0 and >= 5.4.0)\n          if (socket.listeners('error').length === 0) {\n            socket.once('error', freeSocketErrorListener);\n          }\n          // set free keepalive timer\n          // try to use socket custom freeSocketKeepAliveTimeout first\n          const freeSocketKeepAliveTimeout = socket.freeSocketKeepAliveTimeout || self.freeSocketKeepAliveTimeout;\n          socket.setTimeout(freeSocketKeepAliveTimeout);\n          debug(`push to free socket queue and wait for ${freeSocketKeepAliveTimeout}ms`);\n          // [patch end]\n        }\n      } else {\n        socket.destroy();\n      }\n    }\n  });\n}\n\nutil.inherits(Agent, EventEmitter);\nexports.Agent = Agent;\n\n// [patch start]\nfunction freeSocketErrorListener(err) {\n  var socket = this;\n  debug('SOCKET ERROR on FREE socket:', err.message, err.stack);\n  socket.destroy();\n  socket.emit('agentRemove');\n}\n// [patch end]\n\nAgent.defaultMaxSockets = Infinity;\n\nAgent.prototype.createConnection = net.createConnection;\n\n// Get the key for a given set of request options\nAgent.prototype.getName = function getName(options) {\n  var name = options.host || 'localhost';\n\n  name += ':';\n  if (options.port)\n    name += options.port;\n\n  name += ':';\n  if (options.localAddress)\n    name += options.localAddress;\n\n  // Pacify parallel/test-http-agent-getname by only appending\n  // the ':' when options.family is set.\n  if (options.family === 4 || options.family === 6)\n    name += ':' + options.family;\n\n  return name;\n};\n\n// [patch start]\nfunction handleSocketCreation(req) {\n  return function(err, newSocket) {\n    if (err) {\n      process.nextTick(function() {\n        req.emit('error', err);\n      });\n      return;\n    }\n    req.onSocket(newSocket);\n  }\n}\n// [patch end]\n\nAgent.prototype.addRequest = function addRequest(req, options, port/*legacy*/,\n                                                 localAddress/*legacy*/) {\n  // Legacy API: addRequest(req, host, port, localAddress)\n  if (typeof options === 'string') {\n    options = {\n      host: options,\n      port,\n      localAddress\n    };\n  }\n\n  options = util._extend({}, options);\n  options = util._extend(options, this.options);\n\n  if (!options.servername)\n    options.servername = calculateServerName(options, req);\n\n  var name = this.getName(options);\n  if (!this.sockets[name]) {\n    this.sockets[name] = [];\n  }\n\n  var freeLen = this.freeSockets[name] ? this.freeSockets[name].length : 0;\n  var sockLen = freeLen + this.sockets[name].length;\n\n  if (freeLen) {\n    // we have a free socket, so use that.\n    var socket = this.freeSockets[name].shift();\n    debug('have free socket');\n\n    // [patch start]\n    // remove free socket error event handler\n    socket.removeListener('error', freeSocketErrorListener);\n    // restart the default timer\n    socket.setTimeout(this.timeout);\n\n    if (this.socketActiveTTL && Date.now() - socket.createdTime > this.socketActiveTTL) {\n      debug(`socket ${socket.createdTime} expired`);\n      socket.destroy();\n      return this.createSocket(req, options, handleSocketCreation(req));\n    }\n    // [patch end]\n\n    // don't leak\n    if (!this.freeSockets[name].length)\n      delete this.freeSockets[name];\n\n    socket.ref();\n    req.onSocket(socket);\n    this.sockets[name].push(socket);\n  } else if (sockLen < this.maxSockets) {\n    debug('call onSocket', sockLen, freeLen);\n    // If we are under maxSockets create a new one.\n    // [patch start]\n    this.createSocket(req, options, handleSocketCreation(req));\n    // [patch end]\n  } else {\n    debug('wait for socket');\n    // We are over limit so we'll add it to the queue.\n    if (!this.requests[name]) {\n      this.requests[name] = [];\n    }\n    this.requests[name].push(req);\n  }\n};\n\nAgent.prototype.createSocket = function createSocket(req, options, cb) {\n  var self = this;\n  options = util._extend({}, options);\n  options = util._extend(options, self.options);\n\n  if (!options.servername)\n    options.servername = calculateServerName(options, req);\n\n  var name = self.getName(options);\n  options._agentKey = name;\n\n  debug('createConnection', name, options);\n  options.encoding = null;\n  var called = false;\n  const newSocket = self.createConnection(options, oncreate);\n  // [patch start]\n  if (newSocket) {\n    oncreate(null, Object.assign(newSocket, { createdTime: Date.now() }));\n  }\n  // [patch end]\n  function oncreate(err, s) {\n    if (called)\n      return;\n    called = true;\n    if (err)\n      return cb(err);\n    if (!self.sockets[name]) {\n      self.sockets[name] = [];\n    }\n    self.sockets[name].push(s);\n    debug('sockets', name, self.sockets[name].length);\n\n    function onFree() {\n      self.emit('free', s, options);\n    }\n    s.on('free', onFree);\n\n    function onClose(err) {\n      debug('CLIENT socket onClose');\n      // This is the only place where sockets get removed from the Agent.\n      // If you want to remove a socket from the pool, just close it.\n      // All socket errors end in a close event anyway.\n      self.removeSocket(s, options);\n\n      // [patch start]\n      self.emit('close');\n      // [patch end]\n    }\n    s.on('close', onClose);\n\n    // [patch start]\n    // start socket timeout handler\n    function onTimeout() {\n      debug('CLIENT socket onTimeout');\n      s.destroy();\n      // Remove it from freeSockets immediately to prevent new requests from being sent through this socket.\n      self.removeSocket(s, options);\n      self.emit('timeout');\n    }\n    s.on('timeout', onTimeout);\n    // set the default timer\n    s.setTimeout(self.timeout);\n    // [patch end]\n\n    function onRemove() {\n      // We need this function for cases like HTTP 'upgrade'\n      // (defined by WebSockets) where we need to remove a socket from the\n      // pool because it'll be locked up indefinitely\n      debug('CLIENT socket onRemove');\n      self.removeSocket(s, options);\n      s.removeListener('close', onClose);\n      s.removeListener('free', onFree);\n      s.removeListener('agentRemove', onRemove);\n\n      // [patch start]\n      // remove socket timeout handler\n      s.setTimeout(0, onTimeout);\n      // [patch end]\n    }\n    s.on('agentRemove', onRemove);\n    cb(null, s);\n  }\n};\n\nfunction calculateServerName(options, req) {\n  let servername = options.host;\n  const hostHeader = req.getHeader('host');\n  if (hostHeader) {\n    // abc => abc\n    // abc:123 => abc\n    // [::1] => ::1\n    // [::1]:123 => ::1\n    if (hostHeader.startsWith('[')) {\n      const index = hostHeader.indexOf(']');\n      if (index === -1) {\n        // Leading '[', but no ']'. Need to do something...\n        servername = hostHeader;\n      } else {\n        servername = hostHeader.substr(1, index - 1);\n      }\n    } else {\n      servername = hostHeader.split(':', 1)[0];\n    }\n  }\n  return servername;\n}\n\nAgent.prototype.removeSocket = function removeSocket(s, options) {\n  var name = this.getName(options);\n  debug('removeSocket', name, 'writable:', s.writable);\n  var sets = [this.sockets];\n\n  // If the socket was destroyed, remove it from the free buffers too.\n  if (!s.writable)\n    sets.push(this.freeSockets);\n\n  for (var sk = 0; sk < sets.length; sk++) {\n    var sockets = sets[sk];\n\n    if (sockets[name]) {\n      var index = sockets[name].indexOf(s);\n      if (index !== -1) {\n        sockets[name].splice(index, 1);\n        // Don't leak\n        if (sockets[name].length === 0)\n          delete sockets[name];\n      }\n    }\n  }\n\n  // [patch start]\n  var freeLen = this.freeSockets[name] ? this.freeSockets[name].length : 0;\n  var sockLen = freeLen + this.sockets[name] ? this.sockets[name].length : 0;\n  // [patch end]\n\n  if (this.requests[name] && this.requests[name].length && sockLen < this.maxSockets) {\n    debug('removeSocket, have a request, make a socket');\n    var req = this.requests[name][0];\n    // If we have pending requests and a socket gets closed make a new one\n    this.createSocket(req, options, function(err, newSocket) {\n      if (err) {\n        process.nextTick(function() {\n          req.emit('error', err);\n        });\n        return;\n      }\n      newSocket.emit('free');\n    });\n  }\n};\n\nAgent.prototype.destroy = function destroy() {\n  var sets = [this.freeSockets, this.sockets];\n  for (var s = 0; s < sets.length; s++) {\n    var set = sets[s];\n    var keys = Object.keys(set);\n    for (var v = 0; v < keys.length; v++) {\n      var setName = set[keys[v]];\n      for (var n = 0; n < setName.length; n++) {\n        setName[n].destroy();\n      }\n    }\n  }\n};\n\nexports.globalAgent = new Agent();\n"]}