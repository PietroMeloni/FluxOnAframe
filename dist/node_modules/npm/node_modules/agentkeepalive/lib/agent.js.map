{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/agentkeepalive/lib/agent.js"],"names":["OriginalAgent","require","Agent","ms","options","keepAlive","freeSocketKeepAliveTimeout","undefined","keepAliveTimeout","timeout","createSocketCount","createSocketCountLastCheck","createSocketErrorCount","createSocketErrorCountLastCheck","closeSocketCount","closeSocketCountLastCheck","errorSocketCount","errorSocketCountLastCheck","requestCount","requestCountLastCheck","timeoutSocketCount","timeoutSocketCountLastCheck","on","s","lastFreeTime","Date","now","req","cb","err","socket","setNoDelay","freeSockets","inspect","sockets","requests","changed","module","exports","obj","res","key","length"],"mappings":"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","file":"agent.js","sourcesContent":["/**\n * refer:\n *   * @atimb \"Real keep-alive HTTP agent\": https://gist.github.com/2963672\n *   * https://github.com/joyent/node/blob/master/lib/http.js\n *   * https://github.com/joyent/node/blob/master/lib/https.js\n *   * https://github.com/joyent/node/blob/master/lib/_http_agent.js\n */\n\n'use strict';\n\nconst OriginalAgent = require('./_http_agent').Agent;\nconst ms = require('humanize-ms');\n\nclass Agent extends OriginalAgent {\n  constructor(options) {\n    options = options || {};\n    options.keepAlive = options.keepAlive !== false;\n    // default is keep-alive and 15s free socket timeout\n    if (options.freeSocketKeepAliveTimeout === undefined) {\n      options.freeSocketKeepAliveTimeout = 15000;\n    }\n    // Legacy API: keepAliveTimeout should be rename to `freeSocketKeepAliveTimeout`\n    if (options.keepAliveTimeout) {\n      options.freeSocketKeepAliveTimeout = options.keepAliveTimeout;\n    }\n    options.freeSocketKeepAliveTimeout = ms(options.freeSocketKeepAliveTimeout);\n\n    // Sets the socket to timeout after timeout milliseconds of inactivity on the socket.\n    // By default is double free socket keepalive timeout.\n    if (options.timeout === undefined) {\n      options.timeout = options.freeSocketKeepAliveTimeout * 2;\n      // make sure socket default inactivity timeout >= 30s\n      if (options.timeout < 30000) {\n        options.timeout = 30000;\n      }\n    }\n    options.timeout = ms(options.timeout);\n\n    super(options);\n\n    this.createSocketCount = 0;\n    this.createSocketCountLastCheck = 0;\n\n    this.createSocketErrorCount = 0;\n    this.createSocketErrorCountLastCheck = 0;\n\n    this.closeSocketCount = 0;\n    this.closeSocketCountLastCheck = 0;\n\n    // socket error event count\n    this.errorSocketCount = 0;\n    this.errorSocketCountLastCheck = 0;\n\n    this.requestCount = 0;\n    this.requestCountLastCheck = 0;\n\n    this.timeoutSocketCount = 0;\n    this.timeoutSocketCountLastCheck = 0;\n\n    this.on('free', s => {\n      this.requestCount++;\n      // last enter free queue timestamp\n      s.lastFreeTime = Date.now();\n    });\n    this.on('timeout', () => {\n      this.timeoutSocketCount++;\n    });\n    this.on('close', () => {\n      this.closeSocketCount++;\n    });\n    this.on('error', () => {\n      this.errorSocketCount++;\n    });\n  }\n\n  createSocket(req, options, cb) {\n    super.createSocket(req, options, (err, socket) => {\n      if (err) {\n        this.createSocketErrorCount++;\n        return cb(err);\n      }\n      if (this.keepAlive) {\n        // Disable Nagle's algorithm: http://blog.caustik.com/2012/04/08/scaling-node-js-to-100k-concurrent-connections/\n        // https://fengmk2.com/benchmark/nagle-algorithm-delayed-ack-mock.html\n        socket.setNoDelay(true);\n      }\n      this.createSocketCount++;\n      cb(null, socket);\n    });\n  }\n\n  get statusChanged() {\n    const changed = this.createSocketCount !== this.createSocketCountLastCheck ||\n      this.createSocketErrorCount !== this.createSocketErrorCountLastCheck ||\n      this.closeSocketCount !== this.closeSocketCountLastCheck ||\n      this.errorSocketCount !== this.errorSocketCountLastCheck ||\n      this.timeoutSocketCount !== this.timeoutSocketCountLastCheck ||\n      this.requestCount !== this.requestCountLastCheck;\n    if (changed) {\n      this.createSocketCountLastCheck = this.createSocketCount;\n      this.createSocketErrorCountLastCheck = this.createSocketErrorCount;\n      this.closeSocketCountLastCheck = this.closeSocketCount;\n      this.errorSocketCountLastCheck = this.errorSocketCount;\n      this.timeoutSocketCountLastCheck = this.timeoutSocketCount;\n      this.requestCountLastCheck = this.requestCount;\n    }\n    return changed;\n  }\n\n  getCurrentStatus() {\n    return {\n      createSocketCount: this.createSocketCount,\n      createSocketErrorCount: this.createSocketErrorCount,\n      closeSocketCount: this.closeSocketCount,\n      errorSocketCount: this.errorSocketCount,\n      timeoutSocketCount: this.timeoutSocketCount,\n      requestCount: this.requestCount,\n      freeSockets: inspect(this.freeSockets),\n      sockets: inspect(this.sockets),\n      requests: inspect(this.requests),\n    };\n  }\n}\n\nmodule.exports = Agent;\n\nfunction inspect(obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = obj[key].length;\n  }\n  return res;\n}\n"]}