{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/tiny-relative-date/src/factory.js"],"names":["relativeDateFactory","calculateDelta","now","date","Math","round","abs","translations","relativeDate","Date","delta","minute","hour","day","week","month","year","getFullYear","getMonth","getDate","translate","translatePhrase","timeValue","key","translation","replace","floor"],"mappings":";;;;;kBAEwBA,mB;AAFxB,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,IAAN;AAAA,SAAeC,KAAKC,KAAL,CAAWD,KAAKE,GAAL,CAASJ,MAAMC,IAAf,IAAuB,IAAlC,CAAf;AAAA,CAAvB;;AAEe,SAASH,mBAAT,CAA8BO,YAA9B,EAA4C;AACzD,SAAO,SAASC,YAAT,CAAuBL,IAAvB,EAA+C;AAAA,QAAlBD,GAAkB,uEAAZ,IAAIO,IAAJ,EAAY;;AACpD,QAAI,EAAEN,gBAAgBM,IAAlB,CAAJ,EAA6B;AAC3BN,aAAO,IAAIM,IAAJ,CAASN,IAAT,CAAP;AACD;;AAED,QAAIO,QAAQ,IAAZ;;AAEA,QAAMC,SAAS,EAAf;AACA,QAAMC,OAAOD,SAAS,EAAtB;AACA,QAAME,MAAMD,OAAO,EAAnB;AACA,QAAME,OAAOD,MAAM,CAAnB;AACA,QAAME,QAAQF,MAAM,EAApB;AACA,QAAMG,OAAOH,MAAM,GAAnB;;AAEAH,YAAQT,eAAeC,GAAf,EAAoBC,IAApB,CAAR;;AAEA,QAAIO,QAAQG,GAAR,IAAeH,QAAQI,IAA3B,EAAiC;AAC/BX,aAAO,IAAIM,IAAJ,CAASN,KAAKc,WAAL,EAAT,EAA6Bd,KAAKe,QAAL,EAA7B,EAA8Cf,KAAKgB,OAAL,EAA9C,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,CAApE,CAAP;AACAT,cAAQT,eAAeC,GAAf,EAAoBC,IAApB,CAAR;AACD;;AAED,QAAMiB,YAAY,SAAZA,SAAY,CAACC,eAAD,EAAkBC,SAAlB,EAAgC;AAChD,UAAIC,YAAJ;;AAEA,UAAIF,oBAAoB,SAAxB,EAAmC;AACjCE,cAAMF,eAAN;AACD,OAFD,MAEO,IAAInB,OAAOC,IAAX,EAAiB;AACtBoB,cAASF,eAAT;AACD,OAFM,MAEA;AACLE,cAASF,eAAT;AACD;;AAED,UAAMG,cAAcjB,aAAagB,GAAb,CAApB;;AAEA,UAAI,OAAOC,WAAP,KAAuB,UAA3B,EAAuC;AACrC,eAAOA,YAAYF,SAAZ,CAAP;AACD;;AAED,aAAOE,YAAYC,OAAZ,CAAoB,UAApB,EAAgCH,SAAhC,CAAP;AACD,KAlBD;;AAoBA,YAAQ,KAAR;AACE,WAAK,EAAEZ,QAAQ,EAAV,CAAL;AACE,eAAOU,UAAU,SAAV,CAAP;;AAEF,WAAK,EAAEV,QAAQC,MAAV,CAAL;AACE,eAAOS,UAAU,SAAV,EAAqBV,KAArB,CAAP;;AAEF,WAAK,EAAEA,QAAQ,IAAIC,MAAd,CAAL;AACE,eAAOS,UAAU,SAAV,CAAP;;AAEF,WAAK,EAAEV,QAAQE,IAAV,CAAL;AACE,eAAOQ,UAAU,SAAV,EAAqBhB,KAAKsB,KAAL,CAAWhB,QAAQC,MAAnB,CAArB,CAAP;;AAEF,WAAKP,KAAKsB,KAAL,CAAWhB,QAAQE,IAAnB,MAA6B,CAAlC;AACE,eAAOQ,UAAU,QAAV,CAAP;;AAEF,WAAK,EAAEV,QAAQG,GAAV,CAAL;AACE,eAAOO,UAAU,OAAV,EAAmBhB,KAAKsB,KAAL,CAAWhB,QAAQE,IAAnB,CAAnB,CAAP;;AAEF,WAAK,EAAEF,QAAQG,MAAM,CAAhB,CAAL;AACE,eAAOO,UAAU,MAAV,CAAP;;AAEF,WAAK,EAAEV,QAAQI,IAAV,CAAL;AACE,eAAOM,UAAU,MAAV,EAAkBhB,KAAKsB,KAAL,CAAWhB,QAAQG,GAAnB,CAAlB,CAAP;;AAEF,WAAKT,KAAKsB,KAAL,CAAWhB,QAAQI,IAAnB,MAA6B,CAAlC;AACE,eAAOM,UAAU,OAAV,CAAP;;AAEF,WAAK,EAAEV,QAAQK,KAAV,CAAL;AACE,eAAOK,UAAU,OAAV,EAAmBhB,KAAKsB,KAAL,CAAWhB,QAAQI,IAAnB,CAAnB,CAAP;;AAEF,WAAKV,KAAKsB,KAAL,CAAWhB,QAAQK,KAAnB,MAA8B,CAAnC;AACE,eAAOK,UAAU,QAAV,CAAP;;AAEF,WAAK,EAAEV,QAAQM,IAAV,CAAL;AACE,eAAOI,UAAU,QAAV,EAAoBhB,KAAKsB,KAAL,CAAWhB,QAAQK,KAAnB,CAApB,CAAP;;AAEF,WAAKX,KAAKsB,KAAL,CAAWhB,QAAQM,IAAnB,MAA6B,CAAlC;AACE,eAAOI,UAAU,OAAV,CAAP;;AAEF;AACE,eAAOA,UAAU,WAAV,CAAP;AAzCJ;AA2CD,GApFD;AAqFD","file":"factory.js","sourcesContent":["const calculateDelta = (now, date) => Math.round(Math.abs(now - date) / 1000)\n\nexport default function relativeDateFactory (translations) {\n  return function relativeDate (date, now = new Date()) {\n    if (!(date instanceof Date)) {\n      date = new Date(date)\n    }\n\n    let delta = null\n\n    const minute = 60\n    const hour = minute * 60\n    const day = hour * 24\n    const week = day * 7\n    const month = day * 30\n    const year = day * 365\n\n    delta = calculateDelta(now, date)\n\n    if (delta > day && delta < week) {\n      date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0)\n      delta = calculateDelta(now, date)\n    }\n\n    const translate = (translatePhrase, timeValue) => {\n      let key\n\n      if (translatePhrase === 'justNow') {\n        key = translatePhrase\n      } else if (now >= date) {\n        key = `${translatePhrase}Ago`\n      } else {\n        key = `${translatePhrase}FromNow`\n      }\n\n      const translation = translations[key]\n\n      if (typeof translation === 'function') {\n        return translation(timeValue)\n      }\n\n      return translation.replace('{{time}}', timeValue)\n    }\n\n    switch (false) {\n      case !(delta < 30):\n        return translate('justNow')\n\n      case !(delta < minute):\n        return translate('seconds', delta)\n\n      case !(delta < 2 * minute):\n        return translate('aMinute')\n\n      case !(delta < hour):\n        return translate('minutes', Math.floor(delta / minute))\n\n      case Math.floor(delta / hour) !== 1:\n        return translate('anHour')\n\n      case !(delta < day):\n        return translate('hours', Math.floor(delta / hour))\n\n      case !(delta < day * 2):\n        return translate('aDay')\n\n      case !(delta < week):\n        return translate('days', Math.floor(delta / day))\n\n      case Math.floor(delta / week) !== 1:\n        return translate('aWeek')\n\n      case !(delta < month):\n        return translate('weeks', Math.floor(delta / week))\n\n      case Math.floor(delta / month) !== 1:\n        return translate('aMonth')\n\n      case !(delta < year):\n        return translate('months', Math.floor(delta / month))\n\n      case Math.floor(delta / year) !== 1:\n        return translate('aYear')\n\n      default:\n        return translate('overAYear')\n    }\n  }\n}\n"]}