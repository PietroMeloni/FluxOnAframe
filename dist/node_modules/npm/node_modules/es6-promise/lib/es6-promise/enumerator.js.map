{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/es6-promise/lib/es6-promise/enumerator.js"],"names":["validationError","Error","Enumerator","Constructor","input","_instanceConstructor","promise","noop","PROMISE_ID","length","_remaining","_result","Array","_enumerate","i","_state","PENDING","_eachEntry","entry","c","resolve","originalResolve","then","originalThen","_settledAt","Promise","_willSettleAt","state","value","REJECTED","enumerator","undefined","FULFILLED","reason"],"mappings":"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","file":"enumerator.js","sourcesContent":["import {\n  isArray,\n  isMaybeThenable\n} from './utils';\nimport {\n  noop,\n  reject,\n  fulfill,\n  subscribe,\n  FULFILLED,\n  REJECTED,\n  PENDING,\n  getThen,\n  handleMaybeThenable\n} from './-internal';\n\nimport then from './then';\nimport Promise from './promise';\nimport originalResolve from './promise/resolve';\nimport originalThen from './then';\nimport { makePromise, PROMISE_ID } from './-internal';\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n};\n\nexport default class Enumerator {\n  constructor(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length     = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n  _enumerate(input) {\n    for (let i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  }\n\n  _eachEntry(entry, i) {\n    let c = this._instanceConstructor;\n    let { resolve } = c;\n\n    if (resolve === originalResolve) {\n      let then = getThen(entry);\n\n      if (then === originalThen &&\n        entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise) {\n        let promise = new c(noop);\n        handleMaybeThenable(promise, entry, then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(resolve => resolve(entry)), i);\n      }\n    } else {\n      this._willSettleAt(resolve(entry), i);\n    }\n  }\n\n  _settledAt(state, i, value) {\n    let { promise } = this;\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  }\n\n  _willSettleAt(promise, i) {\n    let enumerator = this;\n\n    subscribe(\n      promise, undefined,\n      value => enumerator._settledAt(FULFILLED, i, value),\n      reason => enumerator._settledAt(REJECTED, i, reason)\n    );\n  }\n};\n"]}