{"version":3,"sources":["../../../../../node_modules/npm/node_modules/isexe/index.js"],"names":["fs","require","core","process","platform","global","TESTING_WINDOWS","module","exports","isexe","sync","path","options","cb","Promise","TypeError","resolve","reject","er","is","code","ignoreErrors"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,IAAJ;AACA,IAAIC,QAAQC,QAAR,KAAqB,OAArB,IAAgCC,OAAOC,eAA3C,EAA4D;AAC1DJ,SAAOD,QAAQ,cAAR,CAAP;AACD,CAFD,MAEO;AACLC,SAAOD,QAAQ,WAAR,CAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBC,KAAjB;AACAA,MAAMC,IAAN,GAAaA,IAAb;;AAEA,SAASD,KAAT,CAAgBE,IAAhB,EAAsBC,OAAtB,EAA+BC,EAA/B,EAAmC;AACjC,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,SAAKD,OAAL;AACAA,cAAU,EAAV;AACD;;AAED,MAAI,CAACC,EAAL,EAAS;AACP,QAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC;AACjC,YAAM,IAAIC,SAAJ,CAAc,uBAAd,CAAN;AACD;;AAED,WAAO,IAAID,OAAJ,CAAY,UAAUE,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CR,YAAME,IAAN,EAAYC,WAAW,EAAvB,EAA2B,UAAUM,EAAV,EAAcC,EAAd,EAAkB;AAC3C,YAAID,EAAJ,EAAQ;AACND,iBAAOC,EAAP;AACD,SAFD,MAEO;AACLF,kBAAQG,EAAR;AACD;AACF,OAND;AAOD,KARM,CAAP;AASD;;AAEDjB,OAAKS,IAAL,EAAWC,WAAW,EAAtB,EAA0B,UAAUM,EAAV,EAAcC,EAAd,EAAkB;AAC1C;AACA,QAAID,EAAJ,EAAQ;AACN,UAAIA,GAAGE,IAAH,KAAY,QAAZ,IAAwBR,WAAWA,QAAQS,YAA/C,EAA6D;AAC3DH,aAAK,IAAL;AACAC,aAAK,KAAL;AACD;AACF;AACDN,OAAGK,EAAH,EAAOC,EAAP;AACD,GATD;AAUD;;AAED,SAAST,IAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC5B;AACA,MAAI;AACF,WAAOV,KAAKQ,IAAL,CAAUC,IAAV,EAAgBC,WAAW,EAA3B,CAAP;AACD,GAFD,CAEE,OAAOM,EAAP,EAAW;AACX,QAAIN,WAAWA,QAAQS,YAAnB,IAAmCH,GAAGE,IAAH,KAAY,QAAnD,EAA6D;AAC3D,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAMF,EAAN;AACD;AACF;AACF","file":"index.js","sourcesContent":["var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n"]}