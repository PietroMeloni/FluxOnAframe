{"version":3,"sources":["../../../../../node_modules/npm/node_modules/lock-verify/index.js"],"names":["module","exports","lockVerify","fs","require","path","npa","semver","check","pjson","readJson","plock","catch","Promise","all","then","result","warnings","errors","type","deps","isOptional","Object","keys","forEach","spec","resolve","name","lock","dependencies","push","registry","satisfies","version","fetchSpec","lockSpec","console","log","status","length","file","reject","readFile","err","content","JSON","parse"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\nmodule.exports = lockVerify\n\nconst fs = require('fs')\nconst path = require('path')\nconst npa = require('npm-package-arg')\nconst semver = require('semver')\n\nfunction lockVerify(check) {\n  if (!check) check = '.'\n\n  const pjson = readJson(`${check}/package.json`)\n  let plock = readJson(`${check}/npm-shrinkwrap.json`)\n    .catch(() => readJson(`${check}/package-lock.json`))\n\n  return Promise.all([pjson, plock]).then(result => {\n    const pjson = result[0]\n    const plock = result[1]\n    let warnings = []\n    let errors = []\n    for (let type of [['dependencies'], ['devDependencies'], ['optionalDependencies', true]]) {\n      const deps = pjson[type[0]]\n      if (!deps) continue\n      const isOptional = type[1]\n      Object.keys(deps).forEach(name => {\n        const spec = npa.resolve(name, deps[name])\n        const lock = plock.dependencies[name]\n        if (!lock) {\n          if (isOptional) {\n            warnings.push('Optional missing: ' + name + '@' + deps[name])\n          } else {\n            errors.push('Missing: ' + name + '@' + deps[name])\n          }\n          return\n        }\n        if (spec.registry) {\n          // Can't match tags to package-lock w/o network\n          if (spec.type === 'tag') return\n          if (!semver.satisfies(lock.version, spec.fetchSpec)) {\n            errors.push(\"Invalid: lock file's \" + name + '@' + lock.version + ' does not satisfy ' + name + '@' + spec.fetchSpec)\n            return\n          }\n        } else if (spec.type === 'git') {\n          // can't verify git w/o network\n          return\n        } else if (spec.type === 'remote') {\n          if (lock.version !== spec.fetchSpec) {\n            errors.push(\"Invalid: lock file's \" + name + '@' + lock.version + ' does not satisfy ' + name + '@' + spec.fetchSpec)\n            return\n          }\n        } else if (spec.type === 'file' || spec.type === 'directory') {\n          const lockSpec = npa.resolve(name, lock.version)\n          if (spec.fetchSpec !== lockSpec.fetchSpec) {\n            errors.push(\"Invalid: lock file's \" + name + '@' + lock.version + ' does not satisfy ' + name + '@' + deps[name])\n            return\n          }\n        } else {\n          console.log(spec)\n        }\n      })\n    }\n    return Promise.resolve({status: errors.length === 0, warnings: warnings, errors: errors})\n  })\n}\n\nfunction readJson (file) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(file, (err, content) => {\n      if (err) return reject(err)\n      return resolve(JSON.parse(content))\n    })\n  })\n}\n"]}