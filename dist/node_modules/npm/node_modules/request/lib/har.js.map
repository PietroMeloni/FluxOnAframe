{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/request/lib/har.js"],"names":["fs","require","qs","validate","extend","Har","request","prototype","reducer","obj","pair","name","undefined","value","arr","prep","data","queryObj","headersObj","postData","jsonObj","paramsObj","queryString","length","reduce","headers","reduceRight","header","cookies","map","cookie","join","some","type","mimeType","indexOf","params","text","stringify","JSON","parse","e","debug","options","har","log","entries","url","uri","baseUrl","httpVersion","bodySize","headersSize","size","req","method","Object","keys","test","form","body","json","formData","forEach","param","attachment","fileName","contentType","createReadStream","filename","exports"],"mappings":"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","file":"har.js","sourcesContent":["'use strict'\n\nvar fs = require('fs')\nvar qs = require('querystring')\nvar validate = require('har-validator')\nvar extend = require('extend')\n\nfunction Har (request) {\n  this.request = request\n}\n\nHar.prototype.reducer = function (obj, pair) {\n  // new property ?\n  if (obj[pair.name] === undefined) {\n    obj[pair.name] = pair.value\n    return obj\n  }\n\n  // existing? convert to array\n  var arr = [\n    obj[pair.name],\n    pair.value\n  ]\n\n  obj[pair.name] = arr\n\n  return obj\n}\n\nHar.prototype.prep = function (data) {\n  // construct utility properties\n  data.queryObj = {}\n  data.headersObj = {}\n  data.postData.jsonObj = false\n  data.postData.paramsObj = false\n\n  // construct query objects\n  if (data.queryString && data.queryString.length) {\n    data.queryObj = data.queryString.reduce(this.reducer, {})\n  }\n\n  // construct headers objects\n  if (data.headers && data.headers.length) {\n    // loweCase header keys\n    data.headersObj = data.headers.reduceRight(function (headers, header) {\n      headers[header.name] = header.value\n      return headers\n    }, {})\n  }\n\n  // construct Cookie header\n  if (data.cookies && data.cookies.length) {\n    var cookies = data.cookies.map(function (cookie) {\n      return cookie.name + '=' + cookie.value\n    })\n\n    if (cookies.length) {\n      data.headersObj.cookie = cookies.join('; ')\n    }\n  }\n\n  // prep body\n  function some (arr) {\n    return arr.some(function (type) {\n      return data.postData.mimeType.indexOf(type) === 0\n    })\n  }\n\n  if (some([\n    'multipart/mixed',\n    'multipart/related',\n    'multipart/form-data',\n    'multipart/alternative'])) {\n\n    // reset values\n    data.postData.mimeType = 'multipart/form-data'\n  }\n\n  else if (some([\n    'application/x-www-form-urlencoded'])) {\n\n    if (!data.postData.params) {\n      data.postData.text = ''\n    } else {\n      data.postData.paramsObj = data.postData.params.reduce(this.reducer, {})\n\n      // always overwrite\n      data.postData.text = qs.stringify(data.postData.paramsObj)\n    }\n  }\n\n  else if (some([\n    'text/json',\n    'text/x-json',\n    'application/json',\n    'application/x-json'])) {\n\n    data.postData.mimeType = 'application/json'\n\n    if (data.postData.text) {\n      try {\n        data.postData.jsonObj = JSON.parse(data.postData.text)\n      } catch (e) {\n        this.request.debug(e)\n\n        // force back to text/plain\n        data.postData.mimeType = 'text/plain'\n      }\n    }\n  }\n\n  return data\n}\n\nHar.prototype.options = function (options) {\n  // skip if no har property defined\n  if (!options.har) {\n    return options\n  }\n\n  var har = {}\n  extend(har, options.har)\n\n  // only process the first entry\n  if (har.log && har.log.entries) {\n    har = har.log.entries[0]\n  }\n\n  // add optional properties to make validation successful\n  har.url = har.url || options.url || options.uri || options.baseUrl || '/'\n  har.httpVersion = har.httpVersion || 'HTTP/1.1'\n  har.queryString = har.queryString || []\n  har.headers = har.headers || []\n  har.cookies = har.cookies || []\n  har.postData = har.postData || {}\n  har.postData.mimeType = har.postData.mimeType || 'application/octet-stream'\n\n  har.bodySize = 0\n  har.headersSize = 0\n  har.postData.size = 0\n\n  if (!validate.request(har)) {\n    return options\n  }\n\n  // clean up and get some utility properties\n  var req = this.prep(har)\n\n  // construct new options\n  if (req.url) {\n    options.url = req.url\n  }\n\n  if (req.method) {\n    options.method = req.method\n  }\n\n  if (Object.keys(req.queryObj).length) {\n    options.qs = req.queryObj\n  }\n\n  if (Object.keys(req.headersObj).length) {\n    options.headers = req.headersObj\n  }\n\n  function test (type) {\n    return req.postData.mimeType.indexOf(type) === 0\n  }\n  if (test('application/x-www-form-urlencoded')) {\n    options.form = req.postData.paramsObj\n  }\n  else if (test('application/json')) {\n    if (req.postData.jsonObj) {\n      options.body = req.postData.jsonObj\n      options.json = true\n    }\n  }\n  else if (test('multipart/form-data')) {\n    options.formData = {}\n\n    req.postData.params.forEach(function (param) {\n      var attachment = {}\n\n      if (!param.fileName && !param.fileName && !param.contentType) {\n        options.formData[param.name] = param.value\n        return\n      }\n\n      // attempt to read from disk!\n      if (param.fileName && !param.value) {\n        attachment.value = fs.createReadStream(param.fileName)\n      } else if (param.value) {\n        attachment.value = param.value\n      }\n\n      if (param.fileName) {\n        attachment.options = {\n          filename: param.fileName,\n          contentType: param.contentType ? param.contentType : null\n        }\n      }\n\n      options.formData[param.name] = attachment\n    })\n  }\n  else {\n    if (req.postData.text) {\n      options.body = req.postData.text\n    }\n  }\n\n  return options\n}\n\nexports.Har = Har\n"]}