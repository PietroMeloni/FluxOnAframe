{"version":3,"sources":["../../../../../node_modules/npm/node_modules/stringstream/example.js"],"names":["fs","require","zlib","strs","utf8Stream","createReadStream","pipe","createGunzip","process","stdout","hex64Stream","stream","base64Str","on","data","console","log","Buffer"],"mappings":";;AAAA,IAAIA,KAAOC,QAAQ,IAAR,CAAX;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,OAAOF,QAAQ,cAAR,CAAX;;AAEA,IAAIG,aAAaJ,GAAGK,gBAAH,CAAoB,mBAApB,EACdC,IADc,CACTJ,KAAKK,YAAL,EADS,EAEdD,IAFc,CAETH,KAAK,MAAL,CAFS,CAAjB;;AAIAC,WAAWE,IAAX,CAAgBE,QAAQC,MAAxB;;AAEA;AACA,IAAIC,cAAcV,GAAGK,gBAAH,CAAoB,QAApB,EACfC,IADe,CACVH,KAAK,MAAL,EAAa,KAAb,CADU,EAEfG,IAFe,CAEVH,KAAK,KAAL,EAAY,QAAZ,CAFU,CAAlB;;AAIAO,YAAYJ,IAAZ,CAAiBE,QAAQC,MAAzB;;AAEA;AACA,IAAIE,SAASX,GAAGK,gBAAH,CAAoB,QAApB,EAA8BC,IAA9B,CAAmCH,KAAK,QAAL,CAAnC,CAAb;;AAEA,IAAIS,YAAY,EAAhB;;AAEAD,OAAOE,EAAP,CAAU,MAAV,EAAkB,UAASC,IAAT,EAAe;AAAEF,eAAaE,IAAb;AAAmB,CAAtD;AACAH,OAAOE,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BE,UAAQC,GAAR,CAAY,gCAAgCJ,SAA5C,EAD0B,CAC6B;AACvDG,UAAQC,GAAR,CAAY,uBAAuB,IAAIC,MAAJ,CAAWL,SAAX,EAAsB,QAAtB,CAAnC;AACD,CAHD","file":"example.js","sourcesContent":["var fs   = require('fs')\nvar zlib = require('zlib')\nvar strs = require('stringstream')\n\nvar utf8Stream = fs.createReadStream('massiveLogFile.gz')\n  .pipe(zlib.createGunzip())\n  .pipe(strs('utf8'))\n\nutf8Stream.pipe(process.stdout)\n\n// Stream from utf8 to hex to base64... Why not, ay.\nvar hex64Stream = fs.createReadStream('myFile')\n  .pipe(strs('utf8', 'hex'))\n  .pipe(strs('hex', 'base64'))\n\nhex64Stream.pipe(process.stdout)\n\n// Deals with base64 correctly by aligning chunks\nvar stream = fs.createReadStream('myFile').pipe(strs('base64'))\n\nvar base64Str = ''\n\nstream.on('data', function(data) { base64Str += data })\nstream.on('end', function() {\n  console.log('My base64 encoded file is: ' + base64Str) // Wouldn't work with setEncoding()\n  console.log('Original file is: ' + new Buffer(base64Str, 'base64'))\n})\n"]}