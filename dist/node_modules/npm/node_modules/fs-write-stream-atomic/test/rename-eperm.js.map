{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/fs-write-stream-atomic/test/rename-eperm.js"],"names":["fs","require","path","test","rimraf","writeStream","target","resolve","__dirname","target2","target3","t","plan","_rename","rename","existsSync","src","dest","cb","e","err","Error","syscall","code","stream","isWin","hadError","calledFinish","on","er","console","log","is","end","writeFile","writeErr","sync"],"mappings":"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","file":"rename-eperm.js","sourcesContent":["'use strict'\nvar fs = require('graceful-fs')\nvar path = require('path')\nvar test = require('tap').test\nvar rimraf = require('rimraf')\nvar writeStream = require('../index.js')\n\nvar target = path.resolve(__dirname, 'test-rename-eperm1')\nvar target2 = path.resolve(__dirname, 'test-rename-eperm2')\nvar target3 = path.resolve(__dirname, 'test-rename-eperm3')\n\ntest('rename eperm none existing file', function (t) {\n  t.plan(2)\n\n  var _rename = fs.rename\n  fs.existsSync = function (src) {\n    return true\n  }\n  fs.rename = function (src, dest, cb) {\n    // simulate a failure during rename where the file\n    // is renamed successfully but the process encounters\n    // an EPERM error and the target file does not exist\n    _rename(src, dest, function (e) {\n      var err = new Error('TEST BREAK')\n      err.syscall = 'rename'\n      err.code = 'EPERM'\n      cb(err)\n    })\n  }\n\n  var stream = writeStream(target, { isWin: true })\n  var hadError = false\n  var calledFinish = false\n  stream.on('error', function (er) {\n    hadError = true\n    console.log('#', er)\n  })\n  stream.on('finish', function () {\n    calledFinish = true\n  })\n  stream.on('close', function () {\n    t.is(hadError, true, 'error was caught')\n    t.is(calledFinish, false, 'finish was called before close')\n  })\n  stream.end()\n})\n\n// test existing file with diff. content\ntest('rename eperm existing file different content', function (t) {\n  t.plan(2)\n\n  var _rename = fs.rename\n  fs.existsSync = function (src) {\n    return true\n  }\n  fs.rename = function (src, dest, cb) {\n    // simulate a failure during rename where the file\n    // is renamed successfully but the process encounters\n    // an EPERM error and the target file that has another content than the\n    // destination\n    _rename(src, dest, function (e) {\n      fs.writeFile(src, 'dest', function (writeErr) {\n        if (writeErr) {\n          return console.log('WRITEERR: ' + writeErr)\n        }\n\n        fs.writeFile(target2, 'target', function (writeErr) {\n          if (writeErr) {\n            return console.log('WRITEERR: ' + writeErr)\n          }\n\n          var err = new Error('TEST BREAK')\n          err.syscall = 'rename'\n          err.code = 'EPERM'\n          cb(err)\n        })\n      })\n    })\n  }\n\n  var stream = writeStream(target2, { isWin: true })\n  var hadError = false\n  var calledFinish = false\n  stream.on('error', function (er) {\n    hadError = true\n    console.log('#', er)\n  })\n  stream.on('finish', function () {\n    calledFinish = true\n  })\n  stream.on('close', function () {\n    t.is(hadError, true, 'error was caught')\n    t.is(calledFinish, false, 'finish was called before close')\n  })\n  stream.end()\n})\n\n// test existing file with the same content\n// test existing file with diff. content\ntest('rename eperm existing file different content', function (t) {\n  t.plan(2)\n\n  var _rename = fs.rename\n  fs.existsSync = function (src) {\n    return true\n  }\n  fs.rename = function (src, dest, cb) {\n    // simulate a failure during rename where the file\n    // is renamed successfully but the process encounters\n    // an EPERM error and the target file that has the same content than the\n    // destination\n    _rename(src, dest, function (e) {\n      fs.writeFile(src, 'target2', function (writeErr) {\n        if (writeErr) {\n          return console.log('WRITEERR: ' + writeErr)\n        }\n\n        fs.writeFile(target3, 'target2', function (writeErr) {\n          if (writeErr) {\n            return console.log('WRITEERR: ' + writeErr)\n          }\n\n          var err = new Error('TEST BREAK')\n          err.syscall = 'rename'\n          err.code = 'EPERM'\n          cb(err)\n        })\n      })\n    })\n  }\n\n  var stream = writeStream(target3, { isWin: true })\n  var hadError = false\n  var calledFinish = false\n  stream.on('error', function (er) {\n    hadError = true\n    console.log('#', er)\n  })\n  stream.on('finish', function () {\n    calledFinish = true\n  })\n  stream.on('close', function () {\n    t.is(hadError, false, 'error was caught')\n    t.is(calledFinish, true, 'finish was called before close')\n  })\n  stream.end()\n})\n\ntest('cleanup', function (t) {\n  rimraf.sync(target)\n  rimraf.sync(target2)\n  rimraf.sync(target3)\n  t.end()\n})\n"]}