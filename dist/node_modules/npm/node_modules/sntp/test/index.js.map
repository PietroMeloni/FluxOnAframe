{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/sntp/test/index.js"],"names":["Dns","require","Dgram","Lab","Sntp","internals","lab","exports","script","before","after","describe","experiment","it","test","expect","done","time","err","to","not","exist","t1","t","t2","Math","abs","is","below","host","resolveReference","referenceHost","port","timeout","message","equal","parallel","orig","createSocket","type","socket","setImmediate","emit","Error","Socket","prototype","send","buf","offset","length","address","callback","contain","server","on","remote","Buffer","bytes","close","bind","messup","i","il","version","leapIndicator","stratum","mode","offset1","stop","now","Date","start","clockSyncRefresh","setTimeout"],"mappings":"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","file":"index.js","sourcesContent":["// Load modules\n\nvar Dns = require('dns');\nvar Dgram = require('dgram');\nvar Lab = require('lab');\nvar Sntp = require('../lib');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar before = lab.before;\nvar after = lab.after;\nvar describe = lab.experiment;\nvar it = lab.test;\nvar expect = Lab.expect;\n\n\ndescribe('SNTP', function () {\n\n    describe('#time', function () {\n\n        it('returns consistent result over multiple tries', function (done) {\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                var t1 = time.t;\n\n                Sntp.time(function (err, time) {\n\n                    expect(err).to.not.exist;\n                    expect(time).to.exist;\n                    var t2 = time.t;\n                    expect(Math.abs(t1 - t2)).is.below(200);\n                    done();\n                });\n            });\n        });\n\n        it('resolves reference IP', function (done) {\n\n            Sntp.time({ host: 'ntp.exnet.com', resolveReference: true }, function (err, time) {\n\n                expect(err).to.not.exist;\n                expect(time).to.exist;\n                expect(time.referenceHost).to.exist;\n                done();\n            });\n        });\n\n        it('times out on no response', function (done) {\n\n            Sntp.time({ port: 124, timeout: 100 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Timeout');\n                done();\n            });\n        });\n\n        it('errors on error event', { parallel: false }, function (done) {\n\n            var orig = Dgram.createSocket;\n            Dgram.createSocket = function (type) {\n\n                Dgram.createSocket = orig;\n                var socket = Dgram.createSocket(type);\n                setImmediate(function () { socket.emit('error', new Error('Fake')) });\n                return socket;\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Fake');\n                done();\n            });\n        });\n\n        it('errors on incorrect sent size', { parallel: false }, function (done) {\n\n            var orig = Dgram.Socket.prototype.send;\n            Dgram.Socket.prototype.send = function (buf, offset, length, port, address, callback) {\n\n                Dgram.Socket.prototype.send = orig;\n                return callback(null, 40);\n            };\n\n            Sntp.time(function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.equal('Could not send entire message');\n                done();\n            });\n        });\n\n        it('times out on invalid host', function (done) {\n\n            Sntp.time({ host: 'error', timeout: 10000 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time).to.not.exist;\n                expect(err.message).to.contain('getaddrinfo');\n                done();\n            });\n        });\n\n        it('fails on bad response buffer size', function (done) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n                var message = new Buffer(10);\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        var messup = function (bytes) {\n\n            var server = Dgram.createSocket('udp4');\n            server.on('message', function (message, remote) {\n\n                var message = new Buffer([\n                    0x24, 0x01, 0x00, 0xe3,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x00, 0x00, 0x00, 0x00,\n                    0x41, 0x43, 0x54, 0x53,\n                    0xd4, 0xa8, 0x2d, 0xc7,\n                    0x1c, 0x5d, 0x49, 0x1b,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x67, 0xef, 0x9d, 0xb2,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xed, 0xb5, 0xfb,\n                    0xd4, 0xa8, 0x2d, 0xe6,\n                    0x71, 0xee, 0x6c, 0xc5\n                ]);\n\n                for (var i = 0, il = bytes.length; i < il; ++i) {\n                    message[bytes[i][0]] = bytes[i][1];\n                }\n\n                server.send(message, 0, message.length, remote.port, remote.address, function (err, bytes) {\n\n                    server.close();\n                });\n            });\n\n            server.bind(49123);\n        };\n\n        it('fails on bad version', function (done) {\n\n            messup([[0, (0 << 6) + (3 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.version).to.equal(3);\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originateTimestamp', function (done) {\n\n            messup([[24, 0x83], [25, 0xaa], [26, 0x7e], [27, 0x80], [28, 0], [29, 0], [30, 0], [31, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad receiveTimestamp', function (done) {\n\n            messup([[32, 0x83], [33, 0xaa], [34, 0x7e], [35, 0x80], [36, 0], [37, 0], [38, 0], [39, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Invalid server response');\n                done();\n            });\n        });\n\n        it('fails on bad originate timestamp and alarm li', function (done) {\n\n            messup([[0, (3 << 6) + (4 << 3) + (4 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(err.message).to.equal('Wrong originate timestamp');\n                expect(time.leapIndicator).to.equal('alarm');\n                done();\n            });\n        });\n\n        it('returns time with death stratum and last61 li', function (done) {\n\n            messup([[0, (1 << 6) + (4 << 3) + (4 << 0)], [1, 0]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('death');\n                expect(time.leapIndicator).to.equal('last-minute-61');\n                done();\n            });\n        });\n\n        it('returns time with reserved stratum and last59 li', function (done) {\n\n            messup([[0, (2 << 6) + (4 << 3) + (4 << 0)], [1, 0x1f]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(time.stratum).to.equal('reserved');\n                expect(time.leapIndicator).to.equal('last-minute-59');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-active)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (1 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-active');\n                done();\n            });\n        });\n\n        it('fails on bad mode (symmetric-passive)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (2 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('symmetric-passive');\n                done();\n            });\n        });\n\n        it('fails on bad mode (client)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (3 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('client');\n                done();\n            });\n        });\n\n        it('fails on bad mode (broadcast)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (5 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('broadcast');\n                done();\n            });\n        });\n\n        it('fails on bad mode (reserved)', function (done) {\n\n            messup([[0, (0 << 6) + (4 << 3) + (6 << 0)]]);\n\n            Sntp.time({ host: 'localhost', port: 49123 }, function (err, time) {\n\n                expect(err).to.exist;\n                expect(time.mode).to.equal('reserved');\n                done();\n            });\n        });\n    });\n\n    describe('#offset', function () {\n\n        it('gets the current offset', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                done();\n            });\n        });\n\n        it('gets the current offset from cache', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({}, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ host: 'nist1-sj.ustiming.org' }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('gets the new offset on different server', function (done) {\n\n            Sntp.offset(function (err, offset) {\n\n                expect(err).to.not.exist;\n                expect(offset).to.not.equal(0);\n                var offset1 = offset;\n                Sntp.offset({ port: 123 }, function (err, offset) {\n\n                    expect(err).to.not.exist;\n                    expect(offset).to.not.equal(offset1);\n                    done();\n                });\n            });\n        });\n\n        it('fails getting the current offset on invalid server', function (done) {\n\n            Sntp.offset({ host: 'error' }, function (err, offset) {\n\n                expect(err).to.exist;\n                expect(offset).to.equal(0);\n                done();\n            });\n        });\n    });\n\n    describe('#now', function () {\n\n        it('starts auto-sync, gets now, then stops', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start(function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                Sntp.stop();\n\n                done();\n            });\n        });\n\n        it('starts twice', function (done) {\n\n            Sntp.start(function () {\n\n                Sntp.start(function () {\n\n                    var now = Sntp.now();\n                    expect(now).to.not.equal(Date.now());\n                    Sntp.stop();\n\n                    done();\n                });\n            });\n        });\n\n        it('starts auto-sync, gets now, waits, gets again after timeout', function (done) {\n\n            Sntp.stop();\n\n            var before = Sntp.now();\n            expect(before).to.equal(Date.now());\n\n            Sntp.start({ clockSyncRefresh: 100 }, function () {\n\n                var now = Sntp.now();\n                expect(now).to.not.equal(Date.now());\n                expect(now).to.equal(Sntp.now());\n\n                setTimeout(function () {\n\n                    expect(Sntp.now()).to.not.equal(now);\n                    Sntp.stop();\n                    done();\n                }, 110);\n            });\n        });\n    });\n});\n\n"]}