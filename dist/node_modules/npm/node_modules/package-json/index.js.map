{"version":3,"sources":["../../../../../node_modules/npm/node_modules/package-json/index.js"],"names":["url","require","got","registryUrl","registryAuthToken","semver","module","exports","name","opts","scope","split","regUrl","pkgUrl","resolve","encodeURIComponent","replace","authInfo","recursive","Object","assign","version","headers","accept","fullMetadata","authorization","type","token","json","then","data","res","body","allVersions","versions","keys","maxSatisfying","Error","catch","err","statusCode"],"mappings":"AAAA;;AACA,IAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,cAAcF,QAAQ,cAAR,CAApB;AACA,IAAMG,oBAAoBH,QAAQ,qBAAR,CAA1B;AACA,IAAMI,SAASJ,QAAQ,QAAR,CAAf;;AAEAK,OAAOC,OAAP,GAAiB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAChC,KAAMC,QAAQF,KAAKG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,KAAMC,SAAST,YAAYO,KAAZ,CAAf;AACA,KAAMG,SAASb,IAAIc,OAAJ,CAAYF,MAAZ,EAAoBG,mBAAmBP,IAAnB,EAAyBQ,OAAzB,CAAiC,MAAjC,EAAyC,GAAzC,CAApB,CAAf;AACA,KAAMC,WAAWb,kBAAkBQ,MAAlB,EAA0B,EAACM,WAAW,IAAZ,EAA1B,CAAjB;;AAEAT,QAAOU,OAAOC,MAAP,CAAc;AACpBC,WAAS;AADW,EAAd,EAEJZ,IAFI,CAAP;;AAIA,KAAMa,UAAU;AACfC,UAAQ;AADO,EAAhB;;AAIA,KAAId,KAAKe,YAAT,EAAuB;AACtB,SAAOF,QAAQC,MAAf;AACA;;AAED,KAAIN,QAAJ,EAAc;AACbK,UAAQG,aAAR,GAA2BR,SAASS,IAApC,SAA4CT,SAASU,KAArD;AACA;;AAED,QAAOzB,IAAIW,MAAJ,EAAY,EAACe,MAAM,IAAP,EAAaN,gBAAb,EAAZ,EACLO,IADK,CACA,eAAO;AACZ,MAAIC,OAAOC,IAAIC,IAAf;AACA,MAAIX,UAAUZ,KAAKY,OAAnB;;AAEA,MAAIZ,KAAKwB,WAAT,EAAsB;AACrB,UAAOH,IAAP;AACA;;AAED,MAAIA,KAAK,WAAL,EAAkBT,OAAlB,CAAJ,EAAgC;AAC/BS,UAAOA,KAAKI,QAAL,CAAcJ,KAAK,WAAL,EAAkBT,OAAlB,CAAd,CAAP;AACA,GAFD,MAEO,IAAIA,OAAJ,EAAa;AACnB,OAAI,CAACS,KAAKI,QAAL,CAAcb,OAAd,CAAL,EAA6B;AAC5B,QAAMa,WAAWf,OAAOgB,IAAP,CAAYL,KAAKI,QAAjB,CAAjB;AACAb,cAAUhB,OAAO+B,aAAP,CAAqBF,QAArB,EAA+Bb,OAA/B,CAAV;;AAEA,QAAI,CAACA,OAAL,EAAc;AACb,WAAM,IAAIgB,KAAJ,CAAU,wBAAV,CAAN;AACA;AACD;;AAEDP,UAAOA,KAAKI,QAAL,CAAcb,OAAd,CAAP;;AAEA,OAAI,CAACS,IAAL,EAAW;AACV,UAAM,IAAIO,KAAJ,CAAU,wBAAV,CAAN;AACA;AACD;;AAED,SAAOP,IAAP;AACA,EA7BK,EA8BLQ,KA9BK,CA8BC,eAAO;AACb,MAAIC,IAAIC,UAAJ,KAAmB,GAAvB,EAA4B;AAC3B,SAAM,IAAIH,KAAJ,eAAuB7B,IAAvB,sBAAN;AACA;;AAED,QAAM+B,GAAN;AACA,EApCK,CAAP;AAqCA,CA3DD","file":"index.js","sourcesContent":["'use strict';\nconst url = require('url');\nconst got = require('got');\nconst registryUrl = require('registry-url');\nconst registryAuthToken = require('registry-auth-token');\nconst semver = require('semver');\n\nmodule.exports = (name, opts) => {\n\tconst scope = name.split('/')[0];\n\tconst regUrl = registryUrl(scope);\n\tconst pkgUrl = url.resolve(regUrl, encodeURIComponent(name).replace(/^%40/, '@'));\n\tconst authInfo = registryAuthToken(regUrl, {recursive: true});\n\n\topts = Object.assign({\n\t\tversion: 'latest'\n\t}, opts);\n\n\tconst headers = {\n\t\taccept: 'application/vnd.npm.install-v1+json; q=1.0, application/json; q=0.8, */*'\n\t};\n\n\tif (opts.fullMetadata) {\n\t\tdelete headers.accept;\n\t}\n\n\tif (authInfo) {\n\t\theaders.authorization = `${authInfo.type} ${authInfo.token}`;\n\t}\n\n\treturn got(pkgUrl, {json: true, headers})\n\t\t.then(res => {\n\t\t\tlet data = res.body;\n\t\t\tlet version = opts.version;\n\n\t\t\tif (opts.allVersions) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (data['dist-tags'][version]) {\n\t\t\t\tdata = data.versions[data['dist-tags'][version]];\n\t\t\t} else if (version) {\n\t\t\t\tif (!data.versions[version]) {\n\t\t\t\t\tconst versions = Object.keys(data.versions);\n\t\t\t\t\tversion = semver.maxSatisfying(versions, version);\n\n\t\t\t\t\tif (!version) {\n\t\t\t\t\t\tthrow new Error('Version doesn\\'t exist');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdata = data.versions[version];\n\n\t\t\t\tif (!data) {\n\t\t\t\t\tthrow new Error('Version doesn\\'t exist');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t})\n\t\t.catch(err => {\n\t\t\tif (err.statusCode === 404) {\n\t\t\t\tthrow new Error(`Package \\`${name}\\` doesn't exist`);\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t});\n};\n"]}