{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/qs/lib/parse.js"],"names":["utils","require","has","Object","prototype","hasOwnProperty","defaults","allowDots","allowPrototypes","arrayLimit","decoder","decode","delimiter","depth","parameterLimit","plainObjects","strictNullHandling","parseValues","parseQueryStringValues","str","options","obj","parts","split","Infinity","undefined","i","length","part","pos","indexOf","key","val","slice","call","concat","parseObject","parseObjectRecursive","chain","root","shift","create","cleanRoot","charAt","index","parseInt","isNaN","String","parseArrays","parseKeys","parseQueryStringKeys","givenKey","replace","brackets","child","segment","exec","parent","keys","push","module","exports","opts","TypeError","isRegExp","tempObj","newObj","merge","compact"],"mappings":"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","file":"parse.js","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"]}