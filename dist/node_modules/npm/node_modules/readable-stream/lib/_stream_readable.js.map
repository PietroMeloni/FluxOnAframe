{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/readable-stream/lib/_stream_readable.js"],"names":["pna","require","module","exports","Readable","isArray","Duplex","ReadableState","EE","EventEmitter","EElistenerCount","emitter","type","listeners","length","Stream","Buffer","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","chunk","from","_isUint8Array","obj","isBuffer","util","inherits","debugUtil","debug","debuglog","BufferList","destroyImpl","StringDecoder","kProxyEvents","prependListener","event","fn","_events","on","unshift","options","stream","isDuplex","objectMode","readableObjectMode","hwm","highWaterMark","readableHwm","readableHighWaterMark","defaultHwm","Math","floor","buffer","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","destroyed","defaultEncoding","awaitDrain","readingMore","decoder","encoding","_readableState","readable","read","_read","destroy","_destroy","call","Object","defineProperty","prototype","get","undefined","set","value","_undestroy","undestroy","err","cb","push","state","skipChunkCheck","readableAddChunk","addToFront","onEofChunk","er","chunkInvalid","emit","getPrototypeOf","Error","addChunk","write","maybeReadMore","needMoreData","emitReadable","TypeError","isPaused","setEncoding","enc","MAX_HWM","computeNewHighWaterMark","n","howMuchToRead","head","data","parseInt","nOrig","endReadable","doRead","ret","fromList","end","nextTick","emitReadable_","flow","maybeReadMore_","len","pipe","dest","pipeOpts","src","doEnd","process","stdout","stderr","endFn","onend","unpipe","once","onunpipe","unpipeInfo","hasUnpiped","cleanup","ondrain","pipeOnDrain","cleanedUp","removeListener","onclose","onfinish","onerror","ondata","_writableState","needDrain","increasedAwaitDrain","indexOf","pause","resume","dests","i","index","splice","ev","res","nReadingNextTick","addListener","self","resume_","wrap","_this","paused","method","apply","arguments","bind","enumerable","_fromList","shift","join","concat","clear","fromListPartial","list","hasStrings","slice","copyFromBufferString","copyFromBuffer","p","c","next","str","nb","tail","allocUnsafe","copy","buf","endReadableNT","xs","x","l"],"mappings":"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","file":"_stream_readable.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}"]}