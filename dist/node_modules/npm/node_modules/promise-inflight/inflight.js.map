{"version":3,"sources":["../../../../../node_modules/npm/node_modules/promise-inflight/inflight.js"],"names":["module","exports","inflight","Bluebird","require","_","Promise","active","unique","doFly","all","then","args","Array","isArray","uniqueArr","_inflight","join","cleanup","resolve"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiBC,QAAjB;;AAEA,IAAIC,iBAAJ;AACA,IAAI;AACFA,aAAWC,QAAQ,UAAR,CAAX;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;AACVF,aAAWG,OAAX;AACD;;AAED,IAAMC,SAAS,EAAf;AACAL,SAASK,MAAT,GAAkBA,MAAlB;AACA,SAASL,QAAT,CAAmBM,MAAnB,EAA2BC,KAA3B,EAAkC;AAChC,SAAON,SAASO,GAAT,CAAa,CAACF,MAAD,EAASC,KAAT,CAAb,EAA8BE,IAA9B,CAAmC,UAAUC,IAAV,EAAgB;AACxD,QAAMJ,SAASI,KAAK,CAAL,CAAf;AACA,QAAMH,QAAQG,KAAK,CAAL,CAAd;AACA,QAAIC,MAAMC,OAAN,CAAcN,MAAd,CAAJ,EAA2B;AACzB,aAAOL,SAASO,GAAT,CAAaF,MAAb,EAAqBG,IAArB,CAA0B,UAAUI,SAAV,EAAqB;AACpD,eAAOC,UAAUD,UAAUE,IAAV,CAAe,EAAf,CAAV,EAA8BR,KAA9B,CAAP;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,aAAOO,UAAUR,MAAV,EAAkBC,KAAlB,CAAP;AACD;AACF,GAVM,CAAP;;AAYA,WAASO,SAAT,CAAoBR,MAApB,EAA4BC,KAA5B,EAAmC;AACjC,QAAI,CAACF,OAAOC,MAAP,CAAL,EAAqB;AAAA,UAKVU,OALU,GAKnB,SAASA,OAAT,GAAmB;AAAE,eAAOX,OAAOC,MAAP,CAAP;AAAuB,OALzB;;AACnBD,aAAOC,MAAP,IAAkB,IAAIL,QAAJ,CAAa,UAAUgB,OAAV,EAAmB;AAChD,eAAOA,QAAQV,OAAR,CAAP;AACD,OAFiB,CAAlB;AAGAF,aAAOC,MAAP,EAAeG,IAAf,CAAoBO,OAApB,EAA6BA,OAA7B;AAED;AACD,WAAOX,OAAOC,MAAP,CAAP;AACD;AACF","file":"inflight.js","sourcesContent":["'use strict'\nmodule.exports = inflight\n\nlet Bluebird\ntry {\n  Bluebird = require('bluebird')\n} catch (_) {\n  Bluebird = Promise\n}\n\nconst active = {}\ninflight.active = active\nfunction inflight (unique, doFly) {\n  return Bluebird.all([unique, doFly]).then(function (args) {\n    const unique = args[0]\n    const doFly = args[1]\n    if (Array.isArray(unique)) {\n      return Bluebird.all(unique).then(function (uniqueArr) {\n        return _inflight(uniqueArr.join(''), doFly)\n      })\n    } else {\n      return _inflight(unique, doFly)\n    }\n  })\n\n  function _inflight (unique, doFly) {\n    if (!active[unique]) {\n      active[unique] = (new Bluebird(function (resolve) {\n        return resolve(doFly())\n      }))\n      active[unique].then(cleanup, cleanup)\n      function cleanup() { delete active[unique] }\n    }\n    return active[unique]\n  }\n}\n"]}