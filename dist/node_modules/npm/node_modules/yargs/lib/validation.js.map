{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/yargs/lib/validation.js"],"names":["argsert","require","objFilter","specialKeys","module","exports","validation","yargs","usage","y18n","__","__n","self","nonOptionCount","argv","demandedCommands","getDemandedCommands","_s","_","length","getContext","commands","min","max","minMsg","undefined","fail","replace","maxMsg","positionalCount","required","observed","requiredArguments","demandedOptions","getDemandedOptions","missing","Object","keys","forEach","key","hasOwnProperty","customMsgs","msg","indexOf","push","customMsg","join","unknownArguments","aliases","positionalMap","commandKeys","getCommandInstance","getCommands","unknown","currentContext","_getParseContext","slice","limitedChoices","options","getOptions","invalid","choices","concat","value","invalidKeys","stringifiedValues","checks","check","f","global","func","customChecks","i","result","err","message","toString","Error","implied","implies","arguments","k","Array","isArray","getImplied","implications","implyFail","origKey","num","origValue","Number","isNaN","match","conflicting","conflicts","getConflicting","conflictingFn","recommendCommands","cmd","potentialCommands","distance","threshold","sort","a","b","recommended","bestDistance","Infinity","candidate","d","reset","localLookup","v","filter","c","frozen","freeze","unfreeze"],"mappings":"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","file":"validation.js","sourcesContent":["'use strict'\nconst argsert = require('./argsert')\nconst objFilter = require('./obj-filter')\nconst specialKeys = ['$0', '--', '_']\n\n// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function validation (yargs, usage, y18n) {\n  const __ = y18n.__\n  const __n = y18n.__n\n  const self = {}\n\n  // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n  self.nonOptionCount = function nonOptionCount (argv) {\n    const demandedCommands = yargs.getDemandedCommands()\n    // don't count currently executing commands\n    const _s = argv._.length - yargs.getContext().commands.length\n\n    if (demandedCommands._ && (_s < demandedCommands._.min || _s > demandedCommands._.max)) {\n      if (_s < demandedCommands._.min) {\n        if (demandedCommands._.minMsg !== undefined) {\n          usage.fail(\n            // replace $0 with observed, $1 with expected.\n            demandedCommands._.minMsg ? demandedCommands._.minMsg.replace(/\\$0/g, _s).replace(/\\$1/, demandedCommands._.min) : null\n          )\n        } else {\n          usage.fail(\n            __('Not enough non-option arguments: got %s, need at least %s', _s, demandedCommands._.min)\n          )\n        }\n      } else if (_s > demandedCommands._.max) {\n        if (demandedCommands._.maxMsg !== undefined) {\n          usage.fail(\n            // replace $0 with observed, $1 with expected.\n            demandedCommands._.maxMsg ? demandedCommands._.maxMsg.replace(/\\$0/g, _s).replace(/\\$1/, demandedCommands._.max) : null\n          )\n        } else {\n          usage.fail(\n          __('Too many non-option arguments: got %s, maximum of %s', _s, demandedCommands._.max)\n          )\n        }\n      }\n    }\n  }\n\n  // validate the appropriate # of <required>\n  // positional arguments were provided:\n  self.positionalCount = function positionalCount (required, observed) {\n    if (observed < required) {\n      usage.fail(\n        __('Not enough non-option arguments: got %s, need at least %s', observed, required)\n      )\n    }\n  }\n\n  // make sure all the required arguments are present.\n  self.requiredArguments = function requiredArguments (argv) {\n    const demandedOptions = yargs.getDemandedOptions()\n    let missing = null\n\n    Object.keys(demandedOptions).forEach((key) => {\n      if (!argv.hasOwnProperty(key) || typeof argv[key] === 'undefined') {\n        missing = missing || {}\n        missing[key] = demandedOptions[key]\n      }\n    })\n\n    if (missing) {\n      const customMsgs = []\n      Object.keys(missing).forEach((key) => {\n        const msg = missing[key]\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg)\n        }\n      })\n\n      const customMsg = customMsgs.length ? `\\n${customMsgs.join('\\n')}` : ''\n\n      usage.fail(__n(\n        'Missing required argument: %s',\n        'Missing required arguments: %s',\n        Object.keys(missing).length,\n        Object.keys(missing).join(', ') + customMsg\n      ))\n    }\n  }\n\n  // check for unknown arguments (strict-mode).\n  self.unknownArguments = function unknownArguments (argv, aliases, positionalMap) {\n    const commandKeys = yargs.getCommandInstance().getCommands()\n    const unknown = []\n    const currentContext = yargs.getContext()\n\n    Object.keys(argv).forEach((key) => {\n      if (specialKeys.indexOf(key) === -1 &&\n        !positionalMap.hasOwnProperty(key) &&\n        !yargs._getParseContext().hasOwnProperty(key) &&\n        !aliases.hasOwnProperty(key)\n      ) {\n        unknown.push(key)\n      }\n    })\n\n    if (commandKeys.length > 0) {\n      argv._.slice(currentContext.commands.length).forEach((key) => {\n        if (commandKeys.indexOf(key) === -1) {\n          unknown.push(key)\n        }\n      })\n    }\n\n    if (unknown.length > 0) {\n      usage.fail(__n(\n        'Unknown argument: %s',\n        'Unknown arguments: %s',\n        unknown.length,\n        unknown.join(', ')\n      ))\n    }\n  }\n\n  // validate arguments limited to enumerated choices\n  self.limitedChoices = function limitedChoices (argv) {\n    const options = yargs.getOptions()\n    const invalid = {}\n\n    if (!Object.keys(options.choices).length) return\n\n    Object.keys(argv).forEach((key) => {\n      if (specialKeys.indexOf(key) === -1 &&\n        options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach((value) => {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1 &&\n              value !== undefined) {\n            invalid[key] = (invalid[key] || []).concat(value)\n          }\n        })\n      }\n    })\n\n    const invalidKeys = Object.keys(invalid)\n\n    if (!invalidKeys.length) return\n\n    let msg = __('Invalid values:')\n    invalidKeys.forEach((key) => {\n      msg += `\\n  ${__(\n        'Argument: %s, Given: %s, Choices: %s',\n        key,\n        usage.stringifiedValues(invalid[key]),\n        usage.stringifiedValues(options.choices[key])\n      )}`\n    })\n    usage.fail(msg)\n  }\n\n  // custom checks, added using the `check` option on yargs.\n  let checks = []\n  self.check = function check (f, global) {\n    checks.push({\n      func: f,\n      global\n    })\n  }\n\n  self.customChecks = function customChecks (argv, aliases) {\n    for (let i = 0, f; (f = checks[i]) !== undefined; i++) {\n      const func = f.func\n      let result = null\n      try {\n        result = func(argv, aliases)\n      } catch (err) {\n        usage.fail(err.message ? err.message : err, err)\n        continue\n      }\n\n      if (!result) {\n        usage.fail(__('Argument check failed: %s', func.toString()))\n      } else if (typeof result === 'string' || result instanceof Error) {\n        usage.fail(result.toString(), result)\n      }\n    }\n  }\n\n  // check implications, argument foo implies => argument bar.\n  let implied = {}\n  self.implies = function implies (key, value) {\n    argsert('<string|object> [array|number|string]', [key, value], arguments.length)\n\n    if (typeof key === 'object') {\n      Object.keys(key).forEach((k) => {\n        self.implies(k, key[k])\n      })\n    } else {\n      yargs.global(key)\n      if (!implied[key]) {\n        implied[key] = []\n      }\n      if (Array.isArray(value)) {\n        value.forEach((i) => self.implies(key, i))\n      } else {\n        implied[key].push(value)\n      }\n    }\n  }\n  self.getImplied = function getImplied () {\n    return implied\n  }\n\n  self.implications = function implications (argv) {\n    const implyFail = []\n\n    Object.keys(implied).forEach((key) => {\n      const origKey = key\n      ;(implied[key] || []).forEach((value) => {\n        let num\n        let key = origKey\n        const origValue = value\n\n        // convert string '1' to number 1\n        num = Number(key)\n        key = isNaN(num) ? key : num\n\n        if (typeof key === 'number') {\n          // check length of argv._\n          key = argv._.length >= key\n        } else if (key.match(/^--no-.+/)) {\n          // check if key doesn't exist\n          key = key.match(/^--no-(.+)/)[1]\n          key = !argv[key]\n        } else {\n          // check if key exists\n          key = argv[key]\n        }\n\n        num = Number(value)\n        value = isNaN(num) ? value : num\n\n        if (typeof value === 'number') {\n          value = argv._.length >= value\n        } else if (value.match(/^--no-.+/)) {\n          value = value.match(/^--no-(.+)/)[1]\n          value = !argv[value]\n        } else {\n          value = argv[value]\n        }\n        if (key && !value) {\n          implyFail.push(` ${origKey} -> ${origValue}`)\n        }\n      })\n    })\n\n    if (implyFail.length) {\n      let msg = `${__('Implications failed:')}\\n`\n\n      implyFail.forEach((value) => {\n        msg += (value)\n      })\n\n      usage.fail(msg)\n    }\n  }\n\n  let conflicting = {}\n  self.conflicts = function conflicts (key, value) {\n    argsert('<string|object> [array|string]', [key, value], arguments.length)\n\n    if (typeof key === 'object') {\n      Object.keys(key).forEach((k) => {\n        self.conflicts(k, key[k])\n      })\n    } else {\n      yargs.global(key)\n      if (!conflicting[key]) {\n        conflicting[key] = []\n      }\n      if (Array.isArray(value)) {\n        value.forEach((i) => self.conflicts(key, i))\n      } else {\n        conflicting[key].push(value)\n      }\n    }\n  }\n  self.getConflicting = () => conflicting\n\n  self.conflicting = function conflictingFn (argv) {\n    Object.keys(argv).forEach((key) => {\n      if (conflicting[key]) {\n        conflicting[key].forEach((value) => {\n          // we default keys to 'undefined' that have been configured, we should not\n          // apply conflicting check unless they are a value other than 'undefined'.\n          if (value && argv[key] !== undefined && argv[value] !== undefined) {\n            usage.fail(__(`Arguments ${key} and ${value} are mutually exclusive`))\n          }\n        })\n      }\n    })\n  }\n\n  self.recommendCommands = function recommendCommands (cmd, potentialCommands) {\n    const distance = require('./levenshtein')\n    const threshold = 3 // if it takes more than three edits, let's move on.\n    potentialCommands = potentialCommands.sort((a, b) => b.length - a.length)\n\n    let recommended = null\n    let bestDistance = Infinity\n    for (let i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n      const d = distance(cmd, candidate)\n      if (d <= threshold && d < bestDistance) {\n        bestDistance = d\n        recommended = candidate\n      }\n    }\n    if (recommended) usage.fail(__('Did you mean %s?', recommended))\n  }\n\n  self.reset = function reset (localLookup) {\n    implied = objFilter(implied, (k, v) => !localLookup[k])\n    conflicting = objFilter(conflicting, (k, v) => !localLookup[k])\n    checks = checks.filter(c => c.global)\n    return self\n  }\n\n  let frozen\n  self.freeze = function freeze () {\n    frozen = {}\n    frozen.implied = implied\n    frozen.checks = checks\n    frozen.conflicting = conflicting\n  }\n  self.unfreeze = function unfreeze () {\n    implied = frozen.implied\n    checks = frozen.checks\n    conflicting = frozen.conflicting\n    frozen = undefined\n  }\n\n  return self\n}\n"]}