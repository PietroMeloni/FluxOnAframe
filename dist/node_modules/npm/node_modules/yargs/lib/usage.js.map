{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/yargs/lib/usage.js"],"names":["stringWidth","require","objFilter","path","setBlocking","YError","module","exports","usage","yargs","y18n","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","showHelpOnFailFn","enabled","message","failureOutput","fail","msg","err","logger","_getLoggerInstance","length","i","getExitProcess","showHelp","error","exit","_hasParseCallback","usages","usageDisabled","description","getUsage","getUsageDisabled","getPositionalGroupName","examples","example","cmd","commands","command","isDefault","aliases","map","cmdArray","getCommands","descriptions","describe","key","desc","Object","keys","forEach","k","getDescriptions","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","defaultGroup","help","normalizeAliases","base$0","basename","$0","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","groups","getGroups","options","getOptions","concat","default","reduce","acc","theWrap","ui","width","div","replace","text","padding","u","_","context","getContext","parentCommands","join","commandString","span","maxWidth","hints","slice","align","aliasKeys","alias","parsed","newAliases","filter","every","indexOf","addUngroupedKeys","groupName","normalizedKeys","aliasKey","undefined","switches","sw","kswitch","type","lastIndexOf","substring","boolean","count","string","normalize","array","number","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","e","toString","table","modifier","Array","isArray","v","Math","max","min","parseInt","demandOption","groupedKeys","toCheck","group","some","level","emit","functionDescription","fn","name","values","separator","sep","value","JSON","stringify","process","stdout","columns","version","ver","showVersion","log","reset","localLookup","frozen","freeze","unfreeze"],"mappings":"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","file":"usage.js","sourcesContent":["'use strict'\n// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nconst stringWidth = require('string-width')\nconst objFilter = require('./obj-filter')\nconst path = require('path')\nconst setBlocking = require('set-blocking')\nconst YError = require('./yerror')\n\nmodule.exports = function usage (yargs, y18n) {\n  const __ = y18n.__\n  const self = {}\n\n  // methods for ouputting/building failure message.\n  const fails = []\n  self.failFn = function failFn (f) {\n    fails.push(f)\n  }\n\n  let failMessage = null\n  let showHelpOnFail = true\n  self.showHelpOnFail = function showHelpOnFailFn (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled\n      enabled = true\n    } else if (typeof enabled === 'undefined') {\n      enabled = true\n    }\n    failMessage = message\n    showHelpOnFail = enabled\n    return self\n  }\n\n  let failureOutput = false\n  self.fail = function fail (msg, err) {\n    const logger = yargs._getLoggerInstance()\n\n    if (fails.length) {\n      for (let i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self)\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true)\n\n      // don't output failure message more than once\n      if (!failureOutput) {\n        failureOutput = true\n        if (showHelpOnFail) yargs.showHelp('error')\n        if (msg || err) logger.error(msg || err)\n        if (failMessage) {\n          if (msg || err) logger.error('')\n          logger.error(failMessage)\n        }\n      }\n\n      err = err || new YError(msg)\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1)\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  // methods for ouputting/building help (usage) message.\n  let usages = []\n  let usageDisabled = false\n  self.usage = (msg, description) => {\n    if (msg === null) {\n      usageDisabled = true\n      usages = []\n      return\n    }\n    usageDisabled = false\n    usages.push([msg, description || ''])\n    return self\n  }\n  self.getUsage = () => {\n    return usages\n  }\n  self.getUsageDisabled = () => {\n    return usageDisabled\n  }\n\n  self.getPositionalGroupName = () => {\n    return __('Positionals:')\n  }\n\n  let examples = []\n  self.example = (cmd, description) => {\n    examples.push([cmd, description || ''])\n  }\n\n  let commands = []\n  self.command = function command (cmd, description, isDefault, aliases) {\n    // the last default wins, so cancel out any previously set default\n    if (isDefault) {\n      commands = commands.map((cmdArray) => {\n        cmdArray[2] = false\n        return cmdArray\n      })\n    }\n    commands.push([cmd, description || '', isDefault, aliases])\n  }\n  self.getCommands = () => commands\n\n  let descriptions = {}\n  self.describe = function describe (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach((k) => {\n        self.describe(k, key[k])\n      })\n    } else {\n      descriptions[key] = desc\n    }\n  }\n  self.getDescriptions = () => descriptions\n\n  let epilog\n  self.epilog = (msg) => {\n    epilog = msg\n  }\n\n  let wrapSet = false\n  let wrap\n  self.wrap = (cols) => {\n    wrapSet = true\n    wrap = cols\n  }\n\n  function getWrap () {\n    if (!wrapSet) {\n      wrap = windowWidth()\n      wrapSet = true\n    }\n\n    return wrap\n  }\n\n  const deferY18nLookupPrefix = '__yargsString__:'\n  self.deferY18nLookup = str => deferY18nLookupPrefix + str\n\n  const defaultGroup = 'Options:'\n  self.help = function help () {\n    normalizeAliases()\n\n    // handle old demanded API\n    const base$0 = path.basename(yargs.$0)\n    const demandedOptions = yargs.getDemandedOptions()\n    const demandedCommands = yargs.getDemandedCommands()\n    const groups = yargs.getGroups()\n    const options = yargs.getOptions()\n    let keys = Object.keys(\n      Object.keys(descriptions)\n      .concat(Object.keys(demandedOptions))\n      .concat(Object.keys(demandedCommands))\n      .concat(Object.keys(options.default))\n      .reduce((acc, key) => {\n        if (key !== '_') acc[key] = true\n        return acc\n      }, {})\n    )\n\n    const theWrap = getWrap()\n    const ui = require('cliui')({\n      width: theWrap,\n      wrap: !!theWrap\n    })\n\n    // the usage string.\n    if (!usageDisabled) {\n      if (usages.length) {\n        // user-defined usage.\n        usages.forEach((usage) => {\n          ui.div(`${usage[0].replace(/\\$0/g, base$0)}`)\n          if (usage[1]) {\n            ui.div({text: `${usage[1]}`, padding: [1, 0, 0, 0]})\n          }\n        })\n        ui.div()\n      } else if (commands.length) {\n        let u = null\n        // demonstrate how commands are used.\n        if (demandedCommands._) {\n          u = `${base$0} <${__('command')}>\\n`\n        } else {\n          u = `${base$0} [${__('command')}]\\n`\n        }\n        ui.div(`${u}`)\n      }\n    }\n\n    // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n    if (commands.length) {\n      ui.div(__('Commands:'))\n\n      const context = yargs.getContext()\n      const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : ''\n\n      commands.forEach((command) => {\n        const commandString = `${base$0} ${parentCommands}${command[0].replace(/^\\$0 ?/, '')}` // drop $0 from default commands.\n        ui.span(\n          {\n            text: commandString,\n            padding: [0, 2, 0, 2],\n            width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n          },\n          {text: command[1]}\n        )\n        const hints = []\n        if (command[2]) hints.push(`[${__('default:').slice(0, -1)}]`) // TODO hacking around i18n here\n        if (command[3] && command[3].length) {\n          hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`)\n        }\n        if (hints.length) {\n          ui.div({text: hints.join(' '), padding: [0, 0, 0, 2], align: 'right'})\n        } else {\n          ui.div()\n        }\n      })\n\n      ui.div()\n    }\n\n    // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n    const aliasKeys = (Object.keys(options.alias) || [])\n      .concat(Object.keys(yargs.parsed.newAliases) || [])\n\n    keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1))\n\n    // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n    if (!groups[defaultGroup]) groups[defaultGroup] = []\n    addUngroupedKeys(keys, options.alias, groups)\n\n    // display 'Options:' table along with any custom tables:\n    Object.keys(groups).forEach((groupName) => {\n      if (!groups[groupName].length) return\n\n      ui.div(__(groupName))\n\n      // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n      const normalizedKeys = groups[groupName].map((key) => {\n        if (~aliasKeys.indexOf(key)) return key\n        for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey\n        }\n        return key\n      })\n\n      // actually generate the switches string --foo, -f, --bar.\n      const switches = normalizedKeys.reduce((acc, key) => {\n        acc[key] = [ key ].concat(options.alias[key] || [])\n          .map(sw => {\n            // for the special positional group don't\n            // add '--' or '-' prefix.\n            if (groupName === self.getPositionalGroupName()) return sw\n            else return (sw.length > 1 ? '--' : '-') + sw\n          })\n          .join(', ')\n\n        return acc\n      }, {})\n\n      normalizedKeys.forEach((key) => {\n        const kswitch = switches[key]\n        let desc = descriptions[key] || ''\n        let type = null\n\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length))\n\n        if (~options.boolean.indexOf(key)) type = `[${__('boolean')}]`\n        if (~options.count.indexOf(key)) type = `[${__('count')}]`\n        if (~options.string.indexOf(key)) type = `[${__('string')}]`\n        if (~options.normalize.indexOf(key)) type = `[${__('string')}]`\n        if (~options.array.indexOf(key)) type = `[${__('array')}]`\n        if (~options.number.indexOf(key)) type = `[${__('number')}]`\n\n        const extra = [\n          type,\n          (key in demandedOptions) ? `[${__('required')}]` : null,\n          options.choices && options.choices[key] ? `[${__('choices:')} ${\n            self.stringifiedValues(options.choices[key])}]` : null,\n          defaultString(options.default[key], options.defaultDescription[key])\n        ].filter(Boolean).join(' ')\n\n        ui.span(\n          {text: kswitch, padding: [0, 2, 0, 2], width: maxWidth(switches, theWrap) + 4},\n          desc\n        )\n\n        if (extra) ui.div({text: extra, padding: [0, 0, 0, 2], align: 'right'})\n        else ui.div()\n      })\n\n      ui.div()\n    })\n\n    // describe some common use-cases for your application.\n    if (examples.length) {\n      ui.div(__('Examples:'))\n\n      examples.forEach((example) => {\n        example[0] = example[0].replace(/\\$0/g, base$0)\n      })\n\n      examples.forEach((example) => {\n        if (example[1] === '') {\n          ui.div(\n            {\n              text: example[0],\n              padding: [0, 2, 0, 2]\n            }\n          )\n        } else {\n          ui.div(\n            {\n              text: example[0],\n              padding: [0, 2, 0, 2],\n              width: maxWidth(examples, theWrap) + 4\n            }, {\n              text: example[1]\n            }\n          )\n        }\n      })\n\n      ui.div()\n    }\n\n    // the usage string.\n    if (epilog) {\n      const e = epilog.replace(/\\$0/g, base$0)\n      ui.div(`${e}\\n`)\n    }\n\n    return ui.toString()\n  }\n\n  // return the maximum width of a string\n  // in the left-hand column of a table.\n  function maxWidth (table, theWrap, modifier) {\n    let width = 0\n\n    // table might be of the form [leftColumn],\n    // or {key: leftColumn}\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(key => [table[key]])\n    }\n\n    table.forEach((v) => {\n      width = Math.max(\n        stringWidth(modifier ? `${modifier} ${v[0]}` : v[0]),\n        width\n      )\n    })\n\n    // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n    if (theWrap) width = Math.min(width, parseInt(theWrap * 0.5, 10))\n\n    return width\n  }\n\n  // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n  function normalizeAliases () {\n    // handle old demanded API\n    const demandedOptions = yargs.getDemandedOptions()\n    const options = yargs.getOptions()\n\n    ;(Object.keys(options.alias) || []).forEach((key) => {\n      options.alias[key].forEach((alias) => {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias])\n        // copy demanded.\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias])\n        // type messages.\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key)\n        if (~options.count.indexOf(alias)) yargs.count(key)\n        if (~options.string.indexOf(alias)) yargs.string(key)\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key)\n        if (~options.array.indexOf(alias)) yargs.array(key)\n        if (~options.number.indexOf(alias)) yargs.number(key)\n      })\n    })\n  }\n\n  // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n  function addUngroupedKeys (keys, aliases, groups) {\n    let groupedKeys = []\n    let toCheck = null\n    Object.keys(groups).forEach((group) => {\n      groupedKeys = groupedKeys.concat(groups[group])\n    })\n\n    keys.forEach((key) => {\n      toCheck = [key].concat(aliases[key])\n      if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n        groups[defaultGroup].push(key)\n      }\n    })\n    return groupedKeys\n  }\n\n  self.showHelp = (level) => {\n    const logger = yargs._getLoggerInstance()\n    if (!level) level = 'error'\n    const emit = typeof level === 'function' ? level : logger[level]\n    emit(self.help())\n  }\n\n  self.functionDescription = (fn) => {\n    const description = fn.name ? require('decamelize')(fn.name, '-') : __('generated-value')\n    return ['(', description, ')'].join('')\n  }\n\n  self.stringifiedValues = function stringifiedValues (values, separator) {\n    let string = ''\n    const sep = separator || ', '\n    const array = [].concat(values)\n\n    if (!values || !array.length) return string\n\n    array.forEach((value) => {\n      if (string.length) string += sep\n      string += JSON.stringify(value)\n    })\n\n    return string\n  }\n\n  // format the default-value-string displayed in\n  // the right-hand column.\n  function defaultString (value, defaultDescription) {\n    let string = `[${__('default:')} `\n\n    if (value === undefined && !defaultDescription) return null\n\n    if (defaultDescription) {\n      string += defaultDescription\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += `\"${value}\"`\n          break\n        case 'object':\n          string += JSON.stringify(value)\n          break\n        default:\n          string += value\n      }\n    }\n\n    return `${string}]`\n  }\n\n  // guess the width of the console window, max-width 80.\n  function windowWidth () {\n    const maxWidth = 80\n    if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n      return Math.min(maxWidth, process.stdout.columns)\n    } else {\n      return maxWidth\n    }\n  }\n\n  // logic for displaying application version.\n  let version = null\n  self.version = (ver) => {\n    version = ver\n  }\n\n  self.showVersion = () => {\n    const logger = yargs._getLoggerInstance()\n    logger.log(version)\n  }\n\n  self.reset = function reset (localLookup) {\n    // do not reset wrap here\n    // do not reset fails here\n    failMessage = null\n    failureOutput = false\n    usages = []\n    usageDisabled = false\n    epilog = undefined\n    examples = []\n    commands = []\n    descriptions = objFilter(descriptions, (k, v) => !localLookup[k])\n    return self\n  }\n\n  let frozen\n  self.freeze = function freeze () {\n    frozen = {}\n    frozen.failMessage = failMessage\n    frozen.failureOutput = failureOutput\n    frozen.usages = usages\n    frozen.usageDisabled = usageDisabled\n    frozen.epilog = epilog\n    frozen.examples = examples\n    frozen.commands = commands\n    frozen.descriptions = descriptions\n  }\n  self.unfreeze = function unfreeze () {\n    failMessage = frozen.failMessage\n    failureOutput = frozen.failureOutput\n    usages = frozen.usages\n    usageDisabled = frozen.usageDisabled\n    epilog = frozen.epilog\n    examples = frozen.examples\n    commands = frozen.commands\n    descriptions = frozen.descriptions\n    frozen = undefined\n  }\n\n  return self\n}\n"]}