{"version":3,"sources":["../../../../../node_modules/npm/node_modules/yargs/yargs.js"],"names":["argsert","require","fs","Command","Completion","Parser","path","Usage","Validation","Y18n","objFilter","setBlocking","applyExtends","YError","exports","module","Yargs","processArgs","cwd","parentRequire","self","command","completion","groups","output","preservedGroups","usage","validation","y18n","directory","resolve","__dirname","updateFiles","process","$0","argv","slice","map","x","i","test","b","rebase","match","length","join","trim","env","_","undefined","replace","dirname","execPath","context","resets","commands","fullCommands","files","getContext","options","resetOptions","reset","aliases","tmpOptions","local","configObjects","localLookup","forEach","l","a","Object","keys","reduce","acc","groupName","filter","key","arrayOptions","objectOptions","k","v","envPrefix","completionCommand","exitError","hasOutput","parsed","frozen","freeze","exitProcess","strict","unfreeze","parseFn","parseContext","boolean","arguments","populateParserHintArray","array","number","normalize","count","string","requiresArg","populateParserHintObject","nargs","skipValidation","type","value","concat","push","choices","alias","default","defaults","defaultDescription","functionDescription","call","describe","desc","demandOption","msg","coerce","builder","isArray","Array","temp","deleteFromParserHintObject","optionKey","hintKey","hint","indexOf","splice","getDescriptions","config","deferY18nLookup","example","cmd","description","handler","middlewares","addHandler","commandDir","dir","opts","req","addDirectory","demand","required","max","Infinity","demandCommand","min","minMsg","maxMsg","global","demandedCommands","getDemandedOptions","demandedOptions","getDemandedCommands","implies","conflicts","key1","key2","epilogue","epilog","fail","f","failFn","check","_global","globals","g","pkgConf","conf","obj","pkgUp","pkgs","npath","findUp","pkgJsonPath","sync","JSON","parse","readFileSync","noop","args","shortCircuit","_parseFn","_parseArgs","_getParseContext","_hasParseCallback","option","opt","configParser","group","hidden","getOptions","positional","supportedOpts","accept","fullCommand","parseOptions","cmdToParseOptions","pk","getPositionalGroupName","existing","seen","getGroups","assign","prefix","wrap","cols","enabled","getStrict","showHelp","level","hasDefaultCommand","runDefaultBuilderOn","versionOpt","version","ver","defaultVersionOpt","guessVersion","helpOpt","addHelpOpt","help","defaultHelpOpt","showHelpOnFail","message","getExitProcess","fn","registerFunction","showCompletionScript","_logger","log","generateCompletionScript","getCompletion","done","locale","guessLocale","getLocale","detectLocale","setLocale","updateStrings","updateLocale","detect","getDetectLocale","exit","code","err","console","apply","error","_getLoggerInstance","_hasOutput","_setHasOutput","recommendCommands","recommend","getUsageInstance","getValidationInstance","getCommandInstance","terminalWidth","stdout","columns","defineProperty","get","enumerable","parseArgs","_skipValidation","commandIndex","__","configuration","detailed","helpCmds","pop","handlerKeys","getCommands","skipDefaultCommand","firstUnknownCommand","String","setPlaceholderKeys","runCommand","completionKey","completionArgs","completions","showVersion","some","_runValidation","runValidation","positionalMap","parseErrors","nonOptionCount","requiredArguments","unknownArguments","customChecks","limitedChoices","implications","conflicting","osLocale","spawn","base","relative"],"mappings":"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","file":"yargs.js","sourcesContent":["'use strict'\nconst argsert = require('./lib/argsert')\nconst fs = require('fs')\nconst Command = require('./lib/command')\nconst Completion = require('./lib/completion')\nconst Parser = require('yargs-parser')\nconst path = require('path')\nconst Usage = require('./lib/usage')\nconst Validation = require('./lib/validation')\nconst Y18n = require('y18n')\nconst objFilter = require('./lib/obj-filter')\nconst setBlocking = require('set-blocking')\nconst applyExtends = require('./lib/apply-extends')\nconst YError = require('./lib/yerror')\n\nexports = module.exports = Yargs\nfunction Yargs (processArgs, cwd, parentRequire) {\n  processArgs = processArgs || [] // handle calling yargs().\n\n  const self = {}\n  let command = null\n  let completion = null\n  let groups = {}\n  let output = ''\n  let preservedGroups = {}\n  let usage = null\n  let validation = null\n\n  const y18n = Y18n({\n    directory: path.resolve(__dirname, './locales'),\n    updateFiles: false\n  })\n\n  if (!cwd) cwd = process.cwd()\n\n  self.$0 = process.argv\n    .slice(0, 2)\n    .map((x, i) => {\n      // ignore the node bin, specify this in your\n      // bin file with #!/usr/bin/env node\n      if (i === 0 && /\\b(node|iojs)(\\.exe)?$/.test(x)) return\n      const b = rebase(cwd, x)\n      return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x\n    })\n    .join(' ').trim()\n\n  if (process.env._ !== undefined && process.argv[1] === process.env._) {\n    self.$0 = process.env._.replace(\n      `${path.dirname(process.execPath)}/`, ''\n    )\n  }\n\n  // use context object to keep track of resets, subcommand execution, etc\n  // submodules should modify and check the state of context as necessary\n  const context = { resets: -1, commands: [], fullCommands: [], files: [] }\n  self.getContext = () => context\n\n  // puts yargs back into an initial state. any keys\n  // that have been set to \"global\" will not be reset\n  // by this action.\n  let options\n  self.resetOptions = self.reset = function resetOptions (aliases) {\n    context.resets++\n    aliases = aliases || {}\n    options = options || {}\n    // put yargs back into an initial state, this\n    // logic is used to build a nested command\n    // hierarchy.\n    const tmpOptions = {}\n    tmpOptions.local = options.local ? options.local : []\n    tmpOptions.configObjects = options.configObjects ? options.configObjects : []\n\n    // if a key has been explicitly set as local,\n    // we should reset it before passing options to command.\n    const localLookup = {}\n    tmpOptions.local.forEach((l) => {\n      localLookup[l] = true\n      ;(aliases[l] || []).forEach((a) => {\n        localLookup[a] = true\n      })\n    })\n\n    // preserve all groups not set to local.\n    preservedGroups = Object.keys(groups).reduce((acc, groupName) => {\n      const keys = groups[groupName].filter(key => !(key in localLookup))\n      if (keys.length > 0) {\n        acc[groupName] = keys\n      }\n      return acc\n    }, {})\n    // groups can now be reset\n    groups = {}\n\n    const arrayOptions = [\n      'array', 'boolean', 'string', 'skipValidation',\n      'count', 'normalize', 'number'\n    ]\n\n    const objectOptions = [\n      'narg', 'key', 'alias', 'default', 'defaultDescription',\n      'config', 'choices', 'demandedOptions', 'demandedCommands', 'coerce'\n    ]\n\n    arrayOptions.forEach((k) => {\n      tmpOptions[k] = (options[k] || []).filter(k => !localLookup[k])\n    })\n\n    objectOptions.forEach((k) => {\n      tmpOptions[k] = objFilter(options[k], (k, v) => !localLookup[k])\n    })\n\n    tmpOptions.envPrefix = options.envPrefix\n    options = tmpOptions\n\n    // if this is the first time being executed, create\n    // instances of all our helpers -- otherwise just reset.\n    usage = usage ? usage.reset(localLookup) : Usage(self, y18n)\n    validation = validation ? validation.reset(localLookup) : Validation(self, usage, y18n)\n    command = command ? command.reset() : Command(self, usage, validation)\n    if (!completion) completion = Completion(self, usage, command)\n\n    completionCommand = null\n    output = ''\n    exitError = null\n    hasOutput = false\n    self.parsed = false\n\n    return self\n  }\n  self.resetOptions()\n\n  // temporary hack: allow \"freezing\" of reset-able state for parse(msg, cb)\n  let frozen\n  function freeze () {\n    frozen = {}\n    frozen.options = options\n    frozen.configObjects = options.configObjects.slice(0)\n    frozen.exitProcess = exitProcess\n    frozen.groups = groups\n    usage.freeze()\n    validation.freeze()\n    command.freeze()\n    frozen.strict = strict\n    frozen.completionCommand = completionCommand\n    frozen.output = output\n    frozen.exitError = exitError\n    frozen.hasOutput = hasOutput\n    frozen.parsed = self.parsed\n  }\n  function unfreeze () {\n    options = frozen.options\n    options.configObjects = frozen.configObjects\n    exitProcess = frozen.exitProcess\n    groups = frozen.groups\n    output = frozen.output\n    exitError = frozen.exitError\n    hasOutput = frozen.hasOutput\n    self.parsed = frozen.parsed\n    usage.unfreeze()\n    validation.unfreeze()\n    command.unfreeze()\n    strict = frozen.strict\n    completionCommand = frozen.completionCommand\n    parseFn = null\n    parseContext = null\n    frozen = undefined\n  }\n\n  self.boolean = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('boolean', keys)\n    return self\n  }\n\n  self.array = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('array', keys)\n    return self\n  }\n\n  self.number = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('number', keys)\n    return self\n  }\n\n  self.normalize = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('normalize', keys)\n    return self\n  }\n\n  self.count = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('count', keys)\n    return self\n  }\n\n  self.string = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('string', keys)\n    return self\n  }\n\n  self.requiresArg = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintObject(self.nargs, false, 'narg', keys, 1)\n    return self\n  }\n\n  self.skipValidation = function (keys) {\n    argsert('<array|string>', [keys], arguments.length)\n    populateParserHintArray('skipValidation', keys)\n    return self\n  }\n\n  function populateParserHintArray (type, keys, value) {\n    keys = [].concat(keys)\n    keys.forEach((key) => {\n      options[type].push(key)\n    })\n  }\n\n  self.nargs = function (key, value) {\n    argsert('<string|object|array> [number]', [key, value], arguments.length)\n    populateParserHintObject(self.nargs, false, 'narg', key, value)\n    return self\n  }\n\n  self.choices = function (key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length)\n    populateParserHintObject(self.choices, true, 'choices', key, value)\n    return self\n  }\n\n  self.alias = function (key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length)\n    populateParserHintObject(self.alias, true, 'alias', key, value)\n    return self\n  }\n\n  // TODO: actually deprecate self.defaults.\n  self.default = self.defaults = function (key, value, defaultDescription) {\n    argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length)\n    if (defaultDescription) options.defaultDescription[key] = defaultDescription\n    if (typeof value === 'function') {\n      if (!options.defaultDescription[key]) options.defaultDescription[key] = usage.functionDescription(value)\n      value = value.call()\n    }\n    populateParserHintObject(self.default, false, 'default', key, value)\n    return self\n  }\n\n  self.describe = function (key, desc) {\n    argsert('<object|string|array> [string]', [key, desc], arguments.length)\n    populateParserHintObject(self.describe, false, 'key', key, true)\n    usage.describe(key, desc)\n    return self\n  }\n\n  self.demandOption = function (keys, msg) {\n    argsert('<object|string|array> [string]', [keys, msg], arguments.length)\n    populateParserHintObject(self.demandOption, false, 'demandedOptions', keys, msg)\n    return self\n  }\n\n  self.coerce = function (keys, value) {\n    argsert('<object|string|array> [function]', [keys, value], arguments.length)\n    populateParserHintObject(self.coerce, false, 'coerce', keys, value)\n    return self\n  }\n\n  function populateParserHintObject (builder, isArray, type, key, value) {\n    if (Array.isArray(key)) {\n      // an array of keys with one value ['x', 'y', 'z'], function parse () {}\n      const temp = {}\n      key.forEach((k) => {\n        temp[k] = value\n      })\n      builder(temp)\n    } else if (typeof key === 'object') {\n      // an object of key value pairs: {'x': parse () {}, 'y': parse() {}}\n      Object.keys(key).forEach((k) => {\n        builder(k, key[k])\n      })\n    } else {\n      // a single key value pair 'x', parse() {}\n      if (isArray) {\n        options[type][key] = (options[type][key] || []).concat(value)\n      } else {\n        options[type][key] = value\n      }\n    }\n  }\n\n  function deleteFromParserHintObject (optionKey) {\n    // delete from all parsing hints:\n    // boolean, array, key, alias, etc.\n    Object.keys(options).forEach((hintKey) => {\n      const hint = options[hintKey]\n      if (Array.isArray(hint)) {\n        if (~hint.indexOf(optionKey)) hint.splice(hint.indexOf(optionKey), 1)\n      } else if (typeof hint === 'object') {\n        delete hint[optionKey]\n      }\n    })\n    // now delete the description from usage.js.\n    delete usage.getDescriptions()[optionKey]\n  }\n\n  self.config = function config (key, msg, parseFn) {\n    argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length)\n    // allow a config object to be provided directly.\n    if (typeof key === 'object') {\n      key = applyExtends(key, cwd)\n      options.configObjects = (options.configObjects || []).concat(key)\n      return self\n    }\n\n    // allow for a custom parsing function.\n    if (typeof msg === 'function') {\n      parseFn = msg\n      msg = null\n    }\n\n    key = key || 'config'\n    self.describe(key, msg || usage.deferY18nLookup('Path to JSON config file'))\n    ;(Array.isArray(key) ? key : [key]).forEach((k) => {\n      options.config[k] = parseFn || true\n    })\n\n    return self\n  }\n\n  self.example = function (cmd, description) {\n    argsert('<string> [string]', [cmd, description], arguments.length)\n    usage.example(cmd, description)\n    return self\n  }\n\n  self.command = function (cmd, description, builder, handler, middlewares) {\n    argsert('<string|array|object> [string|boolean] [function|object] [function] [array]', [cmd, description, builder, handler, middlewares], arguments.length)\n    command.addHandler(cmd, description, builder, handler, middlewares)\n    return self\n  }\n\n  self.commandDir = function (dir, opts) {\n    argsert('<string> [object]', [dir, opts], arguments.length)\n    const req = parentRequire || require\n    command.addDirectory(dir, self.getContext(), req, require('get-caller-file')(), opts)\n    return self\n  }\n\n  // TODO: deprecate self.demand in favor of\n  // .demandCommand() .demandOption().\n  self.demand = self.required = self.require = function demand (keys, max, msg) {\n    // you can optionally provide a 'max' key,\n    // which will raise an exception if too many '_'\n    // options are provided.\n    if (Array.isArray(max)) {\n      max.forEach((key) => {\n        self.demandOption(key, msg)\n      })\n      max = Infinity\n    } else if (typeof max !== 'number') {\n      msg = max\n      max = Infinity\n    }\n\n    if (typeof keys === 'number') {\n      self.demandCommand(keys, max, msg, msg)\n    } else if (Array.isArray(keys)) {\n      keys.forEach((key) => {\n        self.demandOption(key, msg)\n      })\n    } else {\n      if (typeof msg === 'string') {\n        self.demandOption(keys, msg)\n      } else if (msg === true || typeof msg === 'undefined') {\n        self.demandOption(keys)\n      }\n    }\n\n    return self\n  }\n\n  self.demandCommand = function demandCommand (min, max, minMsg, maxMsg) {\n    argsert('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length)\n\n    if (typeof min === 'undefined') min = 1\n\n    if (typeof max !== 'number') {\n      minMsg = max\n      max = Infinity\n    }\n\n    self.global('_', false)\n\n    options.demandedCommands._ = {\n      min,\n      max,\n      minMsg,\n      maxMsg\n    }\n\n    return self\n  }\n\n  self.getDemandedOptions = () => {\n    argsert([], 0)\n    return options.demandedOptions\n  }\n\n  self.getDemandedCommands = () => {\n    argsert([], 0)\n    return options.demandedCommands\n  }\n\n  self.implies = function (key, value) {\n    argsert('<string|object> [number|string|array]', [key, value], arguments.length)\n    validation.implies(key, value)\n    return self\n  }\n\n  self.conflicts = function (key1, key2) {\n    argsert('<string|object> [string|array]', [key1, key2], arguments.length)\n    validation.conflicts(key1, key2)\n    return self\n  }\n\n  self.usage = function (msg, description, builder, handler) {\n    argsert('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length)\n\n    if (description !== undefined) {\n      // .usage() can be used as an alias for defining\n      // a default command.\n      if ((msg || '').match(/^\\$0( |$)/)) {\n        return self.command(msg, description, builder, handler)\n      } else {\n        throw new YError('.usage() description must start with $0 if being used as alias for .command()')\n      }\n    } else {\n      usage.usage(msg)\n      return self\n    }\n  }\n\n  self.epilogue = self.epilog = function (msg) {\n    argsert('<string>', [msg], arguments.length)\n    usage.epilog(msg)\n    return self\n  }\n\n  self.fail = function (f) {\n    argsert('<function>', [f], arguments.length)\n    usage.failFn(f)\n    return self\n  }\n\n  self.check = function (f, _global) {\n    argsert('<function> [boolean]', [f, _global], arguments.length)\n    validation.check(f, _global !== false)\n    return self\n  }\n\n  self.global = function global (globals, global) {\n    argsert('<string|array> [boolean]', [globals, global], arguments.length)\n    globals = [].concat(globals)\n    if (global !== false) {\n      options.local = options.local.filter(l => globals.indexOf(l) === -1)\n    } else {\n      globals.forEach((g) => {\n        if (options.local.indexOf(g) === -1) options.local.push(g)\n      })\n    }\n    return self\n  }\n\n  self.pkgConf = function pkgConf (key, path) {\n    argsert('<string> [string]', [key, path], arguments.length)\n    let conf = null\n    // prefer cwd to require-main-filename in this method\n    // since we're looking for e.g. \"nyc\" config in nyc consumer\n    // rather than \"yargs\" config in nyc (where nyc is the main filename)\n    const obj = pkgUp(path || cwd)\n\n    // If an object exists in the key, add it to options.configObjects\n    if (obj[key] && typeof obj[key] === 'object') {\n      conf = applyExtends(obj[key], path || cwd)\n      options.configObjects = (options.configObjects || []).concat(conf)\n    }\n\n    return self\n  }\n\n  const pkgs = {}\n  function pkgUp (path) {\n    const npath = path || '*'\n    if (pkgs[npath]) return pkgs[npath]\n    const findUp = require('find-up')\n\n    let obj = {}\n    try {\n      const pkgJsonPath = findUp.sync('package.json', {\n        cwd: path || require('path').dirname(require('require-main-filename')(parentRequire || require)),\n        normalize: false\n      })\n      obj = JSON.parse(fs.readFileSync(pkgJsonPath))\n    } catch (noop) {}\n\n    pkgs[npath] = obj || {}\n    return pkgs[npath]\n  }\n\n  let parseFn = null\n  let parseContext = null\n  self.parse = function parse (args, shortCircuit, _parseFn) {\n    argsert('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length)\n    if (typeof args === 'undefined') args = processArgs\n\n    // a context object can optionally be provided, this allows\n    // additional information to be passed to a command handler.\n    if (typeof shortCircuit === 'object') {\n      parseContext = shortCircuit\n      shortCircuit = _parseFn\n    }\n\n    // by providing a function as a second argument to\n    // parse you can capture output that would otherwise\n    // default to printing to stdout/stderr.\n    if (typeof shortCircuit === 'function') {\n      parseFn = shortCircuit\n      shortCircuit = null\n    }\n    // completion short-circuits the parsing process,\n    // skipping validation, etc.\n    if (!shortCircuit) processArgs = args\n\n    freeze()\n    if (parseFn) exitProcess = false\n\n    const parsed = self._parseArgs(args, shortCircuit)\n    if (parseFn) parseFn(exitError, parsed, output)\n    unfreeze()\n\n    return parsed\n  }\n\n  self._getParseContext = () => parseContext || {}\n\n  self._hasParseCallback = () => !!parseFn\n\n  self.option = self.options = function option (key, opt) {\n    argsert('<string|object> [object]', [key, opt], arguments.length)\n    if (typeof key === 'object') {\n      Object.keys(key).forEach((k) => {\n        self.options(k, key[k])\n      })\n    } else {\n      if (typeof opt !== 'object') {\n        opt = {}\n      }\n\n      options.key[key] = true // track manually set keys.\n\n      if (opt.alias) self.alias(key, opt.alias)\n\n      const demand = opt.demand || opt.required || opt.require\n\n      // deprecated, use 'demandOption' instead\n      if (demand) {\n        self.demand(key, demand)\n      }\n\n      if (opt.demandOption) {\n        self.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined)\n      }\n\n      if ('conflicts' in opt) {\n        self.conflicts(key, opt.conflicts)\n      }\n\n      if ('default' in opt) {\n        self.default(key, opt.default)\n      }\n\n      if ('implies' in opt) {\n        self.implies(key, opt.implies)\n      }\n\n      if ('nargs' in opt) {\n        self.nargs(key, opt.nargs)\n      }\n\n      if (opt.config) {\n        self.config(key, opt.configParser)\n      }\n\n      if (opt.normalize) {\n        self.normalize(key)\n      }\n\n      if ('choices' in opt) {\n        self.choices(key, opt.choices)\n      }\n\n      if ('coerce' in opt) {\n        self.coerce(key, opt.coerce)\n      }\n\n      if ('group' in opt) {\n        self.group(key, opt.group)\n      }\n\n      if (opt.boolean || opt.type === 'boolean') {\n        self.boolean(key)\n        if (opt.alias) self.boolean(opt.alias)\n      }\n\n      if (opt.array || opt.type === 'array') {\n        self.array(key)\n        if (opt.alias) self.array(opt.alias)\n      }\n\n      if (opt.number || opt.type === 'number') {\n        self.number(key)\n        if (opt.alias) self.number(opt.alias)\n      }\n\n      if (opt.string || opt.type === 'string') {\n        self.string(key)\n        if (opt.alias) self.string(opt.alias)\n      }\n\n      if (opt.count || opt.type === 'count') {\n        self.count(key)\n      }\n\n      if (typeof opt.global === 'boolean') {\n        self.global(key, opt.global)\n      }\n\n      if (opt.defaultDescription) {\n        options.defaultDescription[key] = opt.defaultDescription\n      }\n\n      if (opt.skipValidation) {\n        self.skipValidation(key)\n      }\n\n      const desc = opt.describe || opt.description || opt.desc\n      if (!opt.hidden) {\n        self.describe(key, desc)\n      }\n\n      if (opt.requiresArg) {\n        self.requiresArg(key)\n      }\n    }\n\n    return self\n  }\n  self.getOptions = () => options\n\n  self.positional = function (key, opts) {\n    argsert('<string> <object>', [key, opts], arguments.length)\n    if (context.resets === 0) {\n      throw new YError(\".positional() can only be called in a command's builder function\")\n    }\n\n    // .positional() only supports a subset of the configuration\n    // options availble to .option().\n    const supportedOpts = ['default', 'implies', 'normalize',\n      'choices', 'conflicts', 'coerce', 'type', 'describe',\n      'desc', 'description', 'alias']\n    opts = objFilter(opts, (k, v) => {\n      let accept = supportedOpts.indexOf(k) !== -1\n      // type can be one of string|number|boolean.\n      if (k === 'type' && ['string', 'number', 'boolean'].indexOf(v) === -1) accept = false\n      return accept\n    })\n\n    // copy over any settings that can be inferred from the command string.\n    const fullCommand = context.fullCommands[context.fullCommands.length - 1]\n    const parseOptions = fullCommand ? command.cmdToParseOptions(fullCommand) : {\n      array: [],\n      alias: {},\n      default: {},\n      demand: {}\n    }\n    Object.keys(parseOptions).forEach((pk) => {\n      if (Array.isArray(parseOptions[pk])) {\n        if (parseOptions[pk].indexOf(key) !== -1) opts[pk] = true\n      } else {\n        if (parseOptions[pk][key] && !(pk in opts)) opts[pk] = parseOptions[pk][key]\n      }\n    })\n    self.group(key, usage.getPositionalGroupName())\n    return self.option(key, opts)\n  }\n\n  self.group = function group (opts, groupName) {\n    argsert('<string|array> <string>', [opts, groupName], arguments.length)\n    const existing = preservedGroups[groupName] || groups[groupName]\n    if (preservedGroups[groupName]) {\n      // we now only need to track this group name in groups.\n      delete preservedGroups[groupName]\n    }\n\n    const seen = {}\n    groups[groupName] = (existing || []).concat(opts).filter((key) => {\n      if (seen[key]) return false\n      return (seen[key] = true)\n    })\n    return self\n  }\n  // combine explicit and preserved groups. explicit groups should be first\n  self.getGroups = () => Object.assign({}, groups, preservedGroups)\n\n  // as long as options.envPrefix is not undefined,\n  // parser will apply env vars matching prefix to argv\n  self.env = function (prefix) {\n    argsert('[string|boolean]', [prefix], arguments.length)\n    if (prefix === false) options.envPrefix = undefined\n    else options.envPrefix = prefix || ''\n    return self\n  }\n\n  self.wrap = function (cols) {\n    argsert('<number|null|undefined>', [cols], arguments.length)\n    usage.wrap(cols)\n    return self\n  }\n\n  let strict = false\n  self.strict = function (enabled) {\n    argsert('[boolean]', [enabled], arguments.length)\n    strict = enabled !== false\n    return self\n  }\n  self.getStrict = () => strict\n\n  self.showHelp = function (level) {\n    argsert('[string|function]', [level], arguments.length)\n    if (!self.parsed) self._parseArgs(processArgs) // run parser, if it has not already been executed.\n    if (command.hasDefaultCommand()) {\n      context.resets++ // override the restriction on top-level positoinals.\n      command.runDefaultBuilderOn(self, true)\n    }\n    usage.showHelp(level)\n    return self\n  }\n\n  let versionOpt = null\n  self.version = function version (opt, msg, ver) {\n    const defaultVersionOpt = 'version'\n    argsert('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length)\n\n    // nuke the key previously configured\n    // to return version #.\n    if (versionOpt) {\n      deleteFromParserHintObject(versionOpt)\n      usage.version(undefined)\n      versionOpt = null\n    }\n\n    if (arguments.length === 0) {\n      ver = guessVersion()\n      opt = defaultVersionOpt\n    } else if (arguments.length === 1) {\n      if (opt === false) { // disable default 'version' key.\n        return self\n      }\n      ver = opt\n      opt = defaultVersionOpt\n    } else if (arguments.length === 2) {\n      ver = msg\n      msg = null\n    }\n\n    versionOpt = typeof opt === 'string' ? opt : defaultVersionOpt\n    msg = msg || usage.deferY18nLookup('Show version number')\n\n    usage.version(ver || undefined)\n    self.boolean(versionOpt)\n    self.describe(versionOpt, msg)\n    return self\n  }\n\n  function guessVersion () {\n    const obj = pkgUp()\n\n    return obj.version || 'unknown'\n  }\n\n  let helpOpt = null\n  self.addHelpOpt = self.help = function addHelpOpt (opt, msg) {\n    const defaultHelpOpt = 'help'\n    argsert('[string|boolean] [string]', [opt, msg], arguments.length)\n\n    // nuke the key previously configured\n    // to return help.\n    if (helpOpt) {\n      deleteFromParserHintObject(helpOpt)\n      helpOpt = null\n    }\n\n    if (arguments.length === 1) {\n      if (opt === false) return self\n    }\n\n    // use arguments, fallback to defaults for opt and msg\n    helpOpt = typeof opt === 'string' ? opt : defaultHelpOpt\n    self.boolean(helpOpt)\n    self.describe(helpOpt, msg || usage.deferY18nLookup('Show help'))\n    return self\n  }\n\n  self.showHelpOnFail = function showHelpOnFail (enabled, message) {\n    argsert('[boolean|string] [string]', [enabled, message], arguments.length)\n    usage.showHelpOnFail(enabled, message)\n    return self\n  }\n\n  var exitProcess = true\n  self.exitProcess = function (enabled) {\n    argsert('[boolean]', [enabled], arguments.length)\n    if (typeof enabled !== 'boolean') {\n      enabled = true\n    }\n    exitProcess = enabled\n    return self\n  }\n  self.getExitProcess = () => exitProcess\n\n  var completionCommand = null\n  self.completion = function (cmd, desc, fn) {\n    argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length)\n\n    // a function to execute when generating\n    // completions can be provided as the second\n    // or third argument to completion.\n    if (typeof desc === 'function') {\n      fn = desc\n      desc = null\n    }\n\n    // register the completion command.\n    completionCommand = cmd || 'completion'\n    if (!desc && desc !== false) {\n      desc = 'generate bash completion script'\n    }\n    self.command(completionCommand, desc)\n\n    // a function can be provided\n    if (fn) completion.registerFunction(fn)\n\n    return self\n  }\n\n  self.showCompletionScript = function ($0) {\n    argsert('[string]', [$0], arguments.length)\n    $0 = $0 || self.$0\n    _logger.log(completion.generateCompletionScript($0, completionCommand))\n    return self\n  }\n\n  self.getCompletion = function (args, done) {\n    argsert('<array> <function>', [args, done], arguments.length)\n    completion.getCompletion(args, done)\n  }\n\n  self.locale = function (locale) {\n    argsert('[string]', [locale], arguments.length)\n    if (arguments.length === 0) {\n      guessLocale()\n      return y18n.getLocale()\n    }\n    detectLocale = false\n    y18n.setLocale(locale)\n    return self\n  }\n\n  self.updateStrings = self.updateLocale = function (obj) {\n    argsert('<object>', [obj], arguments.length)\n    detectLocale = false\n    y18n.updateLocale(obj)\n    return self\n  }\n\n  let detectLocale = true\n  self.detectLocale = function (detect) {\n    argsert('<boolean>', [detect], arguments.length)\n    detectLocale = detect\n    return self\n  }\n  self.getDetectLocale = () => detectLocale\n\n  var hasOutput = false\n  var exitError = null\n  // maybe exit, always capture\n  // context about why we wanted to exit.\n  self.exit = (code, err) => {\n    hasOutput = true\n    exitError = err\n    if (exitProcess) process.exit(code)\n  }\n\n  // we use a custom logger that buffers output,\n  // so that we can print to non-CLIs, e.g., chat-bots.\n  const _logger = {\n    log () {\n      const args = []\n      for (let i = 0; i < arguments.length; i++) args.push(arguments[i])\n      if (!self._hasParseCallback()) console.log.apply(console, args)\n      hasOutput = true\n      if (output.length) output += '\\n'\n      output += args.join(' ')\n    },\n    error () {\n      const args = []\n      for (let i = 0; i < arguments.length; i++) args.push(arguments[i])\n      if (!self._hasParseCallback()) console.error.apply(console, args)\n      hasOutput = true\n      if (output.length) output += '\\n'\n      output += args.join(' ')\n    }\n  }\n  self._getLoggerInstance = () => _logger\n  // has yargs output an error our help\n  // message in the current execution context.\n  self._hasOutput = () => hasOutput\n\n  self._setHasOutput = () => {\n    hasOutput = true\n  }\n\n  let recommendCommands\n  self.recommendCommands = function (recommend) {\n    argsert('[boolean]', [recommend], arguments.length)\n    recommendCommands = typeof recommend === 'boolean' ? recommend : true\n    return self\n  }\n\n  self.getUsageInstance = () => usage\n\n  self.getValidationInstance = () => validation\n\n  self.getCommandInstance = () => command\n\n  self.terminalWidth = () => {\n    argsert([], 0)\n    return typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  }\n\n  Object.defineProperty(self, 'argv', {\n    get: () => self._parseArgs(processArgs),\n    enumerable: true\n  })\n\n  self._parseArgs = function parseArgs (args, shortCircuit, _skipValidation, commandIndex) {\n    let skipValidation = !!_skipValidation\n    args = args || processArgs\n\n    options.__ = y18n.__\n    options.configuration = pkgUp()['yargs'] || {}\n\n    const parsed = Parser.detailed(args, options)\n    let argv = parsed.argv\n    if (parseContext) argv = Object.assign({}, argv, parseContext)\n    const aliases = parsed.aliases\n\n    argv.$0 = self.$0\n    self.parsed = parsed\n\n    try {\n      guessLocale() // guess locale lazily, so that it can be turned off in chain.\n\n      // while building up the argv object, there\n      // are two passes through the parser. If completion\n      // is being performed short-circuit on the first pass.\n      if (shortCircuit) {\n        return argv\n      }\n\n      // if there's a handler associated with a\n      // command defer processing to it.\n      if (helpOpt) {\n        // consider any multi-char helpOpt alias as a valid help command\n        // unless all helpOpt aliases are single-char\n        // note that parsed.aliases is a normalized bidirectional map :)\n        const helpCmds = [helpOpt]\n          .concat(aliases[helpOpt] || [])\n          .filter(k => k.length > 1)\n        // check if help should trigger and strip it from _.\n        if (~helpCmds.indexOf(argv._[argv._.length - 1])) {\n          argv._.pop()\n          argv[helpOpt] = true\n        }\n      }\n      const handlerKeys = command.getCommands()\n      const skipDefaultCommand = argv[helpOpt] && (handlerKeys.length > 1 || handlerKeys[0] !== '$0')\n\n      if (argv._.length) {\n        if (handlerKeys.length) {\n          let firstUnknownCommand\n          for (let i = (commandIndex || 0), cmd; argv._[i] !== undefined; i++) {\n            cmd = String(argv._[i])\n            if (~handlerKeys.indexOf(cmd) && cmd !== completionCommand) {\n              setPlaceholderKeys(argv)\n              // commands are executed using a recursive algorithm that executes\n              // the deepest command first; we keep track of the position in the\n              // argv._ array that is currently being executed.\n              return command.runCommand(cmd, self, parsed, i + 1)\n            } else if (!firstUnknownCommand && cmd !== completionCommand) {\n              firstUnknownCommand = cmd\n              break\n            }\n          }\n\n          // run the default command, if defined\n          if (command.hasDefaultCommand() && !skipDefaultCommand) {\n            setPlaceholderKeys(argv)\n            return command.runCommand(null, self, parsed)\n          }\n\n          // recommend a command if recommendCommands() has\n          // been enabled, and no commands were found to execute\n          if (recommendCommands && firstUnknownCommand && !argv[helpOpt]) {\n            validation.recommendCommands(firstUnknownCommand, handlerKeys)\n          }\n        }\n\n        // generate a completion script for adding to ~/.bashrc.\n        if (completionCommand && ~argv._.indexOf(completionCommand) && !argv[completion.completionKey]) {\n          if (exitProcess) setBlocking(true)\n          self.showCompletionScript()\n          self.exit(0)\n        }\n      } else if (command.hasDefaultCommand() && !skipDefaultCommand) {\n        setPlaceholderKeys(argv)\n        return command.runCommand(null, self, parsed)\n      }\n\n      // we must run completions first, a user might\n      // want to complete the --help or --version option.\n      if (completion.completionKey in argv) {\n        if (exitProcess) setBlocking(true)\n\n        // we allow for asynchronous completions,\n        // e.g., loading in a list of commands from an API.\n        const completionArgs = args.slice(args.indexOf(`--${completion.completionKey}`) + 1)\n        completion.getCompletion(completionArgs, (completions) => {\n          ;(completions || []).forEach((completion) => {\n            _logger.log(completion)\n          })\n\n          self.exit(0)\n        })\n        return setPlaceholderKeys(argv)\n      }\n\n      // Handle 'help' and 'version' options\n      // if we haven't already output help!\n      if (!hasOutput) {\n        Object.keys(argv).forEach((key) => {\n          if (key === helpOpt && argv[key]) {\n            if (exitProcess) setBlocking(true)\n\n            skipValidation = true\n            self.showHelp('log')\n            self.exit(0)\n          } else if (key === versionOpt && argv[key]) {\n            if (exitProcess) setBlocking(true)\n\n            skipValidation = true\n            usage.showVersion()\n            self.exit(0)\n          }\n        })\n      }\n\n      // Check if any of the options to skip validation were provided\n      if (!skipValidation && options.skipValidation.length > 0) {\n        skipValidation = Object.keys(argv).some(key => options.skipValidation.indexOf(key) >= 0 && argv[key] === true)\n      }\n\n      // If the help or version options where used and exitProcess is false,\n      // or if explicitly skipped, we won't run validations.\n      if (!skipValidation) {\n        if (parsed.error) throw new YError(parsed.error.message)\n\n        // if we're executed via bash completion, don't\n        // bother with validation.\n        if (!argv[completion.completionKey]) {\n          self._runValidation(argv, aliases, {}, parsed.error)\n        }\n      }\n    } catch (err) {\n      if (err instanceof YError) usage.fail(err.message, err)\n      else throw err\n    }\n\n    return setPlaceholderKeys(argv)\n  }\n\n  self._runValidation = function runValidation (argv, aliases, positionalMap, parseErrors) {\n    if (parseErrors) throw new YError(parseErrors.message)\n    validation.nonOptionCount(argv)\n    validation.requiredArguments(argv)\n    if (strict) validation.unknownArguments(argv, aliases, positionalMap)\n    validation.customChecks(argv, aliases)\n    validation.limitedChoices(argv)\n    validation.implications(argv)\n    validation.conflicting(argv)\n  }\n\n  function guessLocale () {\n    if (!detectLocale) return\n\n    try {\n      const osLocale = require('os-locale')\n      self.locale(osLocale.sync({ spawn: false }))\n    } catch (err) {\n      // if we explode looking up locale just noop\n      // we'll keep using the default language 'en'.\n    }\n  }\n\n  function setPlaceholderKeys (argv) {\n    Object.keys(options.key).forEach((key) => {\n      // don't set placeholder keys for dot\n      // notation options 'foo.bar'.\n      if (~key.indexOf('.')) return\n      if (typeof argv[key] === 'undefined') argv[key] = undefined\n    })\n    return argv\n  }\n\n  // an app should almost always have --version and --help,\n  // if you *really* want to disable this use .help(false)/.version(false).\n  self.help()\n  self.version()\n\n  return self\n}\n\n// rebase an absolute path to a relative one with respect to a base directory\n// exported for tests\nexports.rebase = rebase\nfunction rebase (base, dir) {\n  return path.relative(base, dir)\n}\n"]}