{"version":3,"sources":["../../../../../node_modules/npm/node_modules/from2/test.js"],"names":["test","require","path","from","fs","tmp","resolve","__dirname","fromString","string","size","next","length","chunk","slice","t","contents","readFileSync","__filename","stream","pipe","createWriteStream","on","equal","unlinkSync","end","buffer","data","process","nextTick","ok","destroy","input","output","letter","push","toString","deepEqual","foo","obj","Error","e","message","fail"],"mappings":"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","file":"test.js","sourcesContent":["var test = require('tape')\nvar path = require('path')\nvar from = require('./')\nvar fs   = require('fs')\n\nvar tmp = path.resolve(\n  __dirname, 'tmp.txt'\n)\n\nfunction fromString(string) {\n  return from(function(size, next) {\n    if (string.length <= 0) return next(null, null)\n    var chunk = string.slice(0, size)\n    string = string.slice(size)\n    next(null, chunk)\n  })\n}\n\ntest('from2', function(t) {\n  var contents = fs.readFileSync(__filename, 'utf8')\n  var stream = fromString(contents)\n\n  stream\n    .pipe(fs.createWriteStream(tmp))\n    .on('close', function() {\n      t.equal(fs.readFileSync(tmp, 'utf8'), contents)\n      fs.unlinkSync(tmp)\n      t.end()\n    })\n})\n\ntest('old mode', function(t) {\n  var contents = fs.readFileSync(__filename, 'utf8')\n  var stream = fromString(contents)\n  var buffer = ''\n\n  stream.on('data', function(data) {\n    buffer += data\n  }).on('end', function() {\n    t.equal(buffer, contents)\n    t.end()\n  })\n})\n\ntest('destroy', function(t) {\n  var stream = from(function(size, next) {\n    process.nextTick(function() {\n      next(null, 'no')\n    })\n  })\n\n  stream.on('data', function(data) {\n    t.ok(false)\n  }).on('close', function() {\n    t.ok(true)\n    t.end()\n  })\n\n  stream.destroy()\n})\n\ntest('arrays', function (t) {\n  var input = ['a', 'b', 'c']\n  var stream = from(input)\n  var output = []\n  stream.on('data', function (letter) {\n    output.push(letter.toString())\n  })\n  stream.on('end', function () {\n    t.deepEqual(input, output)\n    t.end()\n  })\n})\n\ntest('obj arrays', function (t) {\n  var input = [{foo:'a'}, {foo:'b'}, {foo:'c'}]\n  var stream = from.obj(input)\n  var output = []\n  stream.on('data', function (letter) {\n    output.push(letter)\n  })\n  stream.on('end', function () {\n    t.deepEqual(input, output)\n    t.end()\n  })\n})\n\n\ntest('arrays can emit errors', function (t) {\n  var input = ['a', 'b', new Error('ooops'), 'c']\n  var stream = from(input)\n  var output = []\n  stream.on('data', function (letter) {\n    output.push(letter.toString())\n  })\n  stream.on('error', function(e){\n    t.deepEqual(['a', 'b'], output)\n    t.equal('ooops', e.message)\n    t.end()\n  })  \n  stream.on('end', function () {\n    t.fail('the stream should have errored')\n  })\n})\n\ntest('obj arrays can emit errors', function (t) {\n  var input = [{foo:'a'}, {foo:'b'}, new Error('ooops'), {foo:'c'}]\n  var stream = from.obj(input)\n  var output = []\n  stream.on('data', function (letter) {\n    output.push(letter)\n  })\n  stream.on('error', function(e){\n    t.deepEqual([{foo:'a'}, {foo:'b'}], output)\n    t.equal('ooops', e.message)\n    t.end()\n  })\n  stream.on('end', function () {\n    t.fail('the stream should have errored')\n  })\n})\n\n\n"]}