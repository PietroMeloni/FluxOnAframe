{"version":3,"sources":["../../../../../node_modules/npm/node_modules/lodash._baseindexof/index.js"],"names":["baseIndexOf","array","value","fromIndex","indexOfNaN","index","length","fromRight","other","module","exports"],"mappings":";;AAAA;;;;;;;;;AASA;;;;;;;;;AASA,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;AAC5C,MAAID,UAAUA,KAAd,EAAqB;AACnB,WAAOE,WAAWH,KAAX,EAAkBE,SAAlB,CAAP;AACD;AACD,MAAIE,QAAQF,YAAY,CAAxB;AAAA,MACIG,SAASL,MAAMK,MADnB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIL,MAAMI,KAAN,MAAiBH,KAArB,EAA4B;AAC1B,aAAOG,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAED;;;;;;;;;;AAUA,SAASD,UAAT,CAAoBH,KAApB,EAA2BE,SAA3B,EAAsCI,SAAtC,EAAiD;AAC/C,MAAID,SAASL,MAAMK,MAAnB;AAAA,MACID,QAAQF,aAAaI,YAAY,CAAZ,GAAgB,CAAC,CAA9B,CADZ;;AAGA,SAAQA,YAAYF,OAAZ,GAAsB,EAAEA,KAAF,GAAUC,MAAxC,EAAiD;AAC/C,QAAIE,QAAQP,MAAMI,KAAN,CAAZ;AACA,QAAIG,UAAUA,KAAd,EAAqB;AACnB,aAAOH,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAEDI,OAAOC,OAAP,GAAiBV,WAAjB","file":"index.js","sourcesContent":["/**\n * lodash 3.1.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n * If `fromRight` is provided elements of `array` are iterated from right to left.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n"]}