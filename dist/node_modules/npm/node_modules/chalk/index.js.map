{"version":3,"sources":["../../../../../node_modules/npm/node_modules/chalk/index.js"],"names":["escapeStringRegexp","require","ansiStyles","stdoutColor","stdout","template","isSimpleWindowsTerm","process","platform","env","TERM","toLowerCase","startsWith","levelMapping","skipModels","Set","styles","Object","create","applyOptions","obj","options","scLevel","level","undefined","enabled","Chalk","chalk","args","slice","call","arguments","chalkTag","apply","concat","setPrototypeOf","prototype","constructor","blue","open","key","closeRe","RegExp","close","get","codes","build","_styles","_empty","keys","visible","color","model","has","ansi","bgColor","bgModel","toUpperCase","proto","defineProperties","builder","applyStyle","self","defineProperty","enumerable","set","hasGrey","__proto__","argsLen","length","str","String","a","originalDim","dim","reverse","code","replace","strings","Array","isArray","join","parts","raw","i","push","module","exports","supportsColor","default"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` â†’ `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n"]}