{"version":3,"sources":["../../../../../node_modules/npm/node_modules/p-limit/index.js"],"names":["pTry","require","module","exports","concurrency","TypeError","queue","activeCount","next","length","shift","Promise","resolve","reject","run","fn","then","val","err","push"],"mappings":"AAAA;;AACA,IAAMA,OAAOC,QAAQ,OAAR,CAAb;;AAEAC,OAAOC,OAAP,GAAiB,uBAAe;AAC/B,KAAIC,cAAc,CAAlB,EAAqB;AACpB,QAAM,IAAIC,SAAJ,CAAc,qDAAd,CAAN;AACA;;AAED,KAAMC,QAAQ,EAAd;AACA,KAAIC,cAAc,CAAlB;;AAEA,KAAMC,OAAO,SAAPA,IAAO,GAAM;AAClBD;;AAEA,MAAID,MAAMG,MAAN,GAAe,CAAnB,EAAsB;AACrBH,SAAMI,KAAN;AACA;AACD,EAND;;AAQA,QAAO;AAAA,SAAM,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,OAAMC,MAAM,SAANA,GAAM,GAAM;AACjBP;;AAEAP,SAAK;AAAA,YAAMe,IAAN;AAAA,KAAL,EAAiBC,IAAjB,CACC,eAAO;AACNJ,aAAQK,GAAR;AACAT;AACA,KAJF,EAKC,eAAO;AACNK,YAAOK,GAAP;AACAV;AACA,KARF;AAUA,IAbD;;AAeA,OAAID,cAAcH,WAAlB,EAA+B;AAC9BU;AACA,IAFD,MAEO;AACNR,UAAMa,IAAN,CAAWL,GAAX;AACA;AACD,GArBY,CAAN;AAAA,EAAP;AAsBA,CAtCD","file":"index.js","sourcesContent":["'use strict';\nconst pTry = require('p-try');\n\nmodule.exports = concurrency => {\n\tif (concurrency < 1) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = [];\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.length > 0) {\n\t\t\tqueue.shift()();\n\t\t}\n\t};\n\n\treturn fn => new Promise((resolve, reject) => {\n\t\tconst run = () => {\n\t\t\tactiveCount++;\n\n\t\t\tpTry(() => fn()).then(\n\t\t\t\tval => {\n\t\t\t\t\tresolve(val);\n\t\t\t\t\tnext();\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\treject(err);\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tif (activeCount < concurrency) {\n\t\t\trun();\n\t\t} else {\n\t\t\tqueue.push(run);\n\t\t}\n\t});\n};\n"]}