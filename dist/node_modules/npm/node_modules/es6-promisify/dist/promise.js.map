{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/es6-promisify/dist/promise.js"],"names":["module","exports","globalObject","isFunction","x","global","undefined","window","document","self","hasPromiseSupport","hasOwnProperty","P","Promise","resolve","p","r","require"],"mappings":"AAAA;;AAEA;;AACAA,OAAOC,OAAP,GAAiB,YAAY;;AAEzB;;AAEA,QAAIC,eAAe,KAAK,CAAxB;;AAEA,aAASC,UAAT,CAAoBC,CAApB,EAAuB;AACnB,eAAO,OAAOA,CAAP,KAAa,UAApB;AACH;;AAED;AACA,QAAIC,WAAWC,SAAf,EAA0B;AACtBJ,uBAAeG,MAAf;AACH,KAFD,MAEO,IAAIE,WAAWD,SAAX,IAAwBC,OAAOC,QAAnC,EAA6C;AAChDN,uBAAeK,MAAf;AACH,KAFM,MAEA;AACHL,uBAAeO,IAAf;AACH;;AAED;AACA;AACA;AACA;AACA,QAAIC,oBAAoB,YAAY;;AAEhC;AACA,YAAI,CAACR,aAAaS,cAAb,CAA4B,SAA5B,CAAL,EAA6C;AACzC,mBAAO,KAAP;AACH;;AAED;AACA,YAAIC,IAAIV,aAAaW,OAArB;;AAEA;AACA;AACA,YAAI,CAACD,EAAED,cAAF,CAAiB,SAAjB,CAAD,IAAgC,CAACC,EAAED,cAAF,CAAiB,QAAjB,CAArC,EAAiE;AAC7D,mBAAO,KAAP;AACH;;AAED,YAAI,CAACC,EAAED,cAAF,CAAiB,KAAjB,CAAD,IAA4B,CAACC,EAAED,cAAF,CAAiB,MAAjB,CAAjC,EAA2D;AACvD,mBAAO,KAAP;AACH;;AAED;AACA;AACA,eAAO,YAAY;;AAEf,gBAAIG,UAAU,KAAK,CAAnB;;AAEA,gBAAIC,IAAI,IAAIb,aAAaW,OAAjB,CAAyB,UAAUG,CAAV,EAAa;AAC1CF,0BAAUE,CAAV;AACH,aAFO,CAAR;;AAIA,gBAAID,CAAJ,EAAO;AACH,uBAAOZ,WAAWW,OAAX,CAAP;AACH;;AAED,mBAAO,KAAP;AACH,SAbM,EAAP;AAcH,KApCuB,EAAxB;;AAsCA;AACA;AACA,QAAIJ,iBAAJ,EAAuB;AACnB,eAAOR,aAAaW,OAApB;AACH;;AAED;AACA,WAAOI,QAAQ,aAAR,EAAuBJ,OAA9B;AACH,CArEgB,EAAjB","file":"promise.js","sourcesContent":["\"use strict\";\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return require(\"es6-promise\").Promise;\n}();"]}