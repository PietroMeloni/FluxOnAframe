{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/pumpify/node_modules/pump/index.js"],"names":["once","require","eos","fs","noop","ancient","test","process","version","isFn","fn","isFS","stream","ReadStream","WriteStream","close","isRequest","setHeader","abort","destroyer","reading","writing","callback","closed","on","readable","writable","err","destroyed","destroy","Error","call","pipe","from","to","pump","streams","Array","prototype","slice","arguments","length","pop","isArray","error","destroys","map","i","forEach","reduce","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["var once = require('once')\nvar eos = require('end-of-stream')\nvar fs = require('fs') // we only need fs to get the ReadStream and WriteStream prototypes\n\nvar noop = function () {}\nvar ancient = /^v?\\.0/.test(process.version)\n\nvar isFn = function (fn) {\n  return typeof fn === 'function'\n}\n\nvar isFS = function (stream) {\n  if (!ancient) return false // newer node version do not need to care about fs is a special way\n  if (!fs) return false // browser\n  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)\n}\n\nvar isRequest = function (stream) {\n  return stream.setHeader && isFn(stream.abort)\n}\n\nvar destroyer = function (stream, reading, writing, callback) {\n  callback = once(callback)\n\n  var closed = false\n  stream.on('close', function () {\n    closed = true\n  })\n\n  eos(stream, {readable: reading, writable: writing}, function (err) {\n    if (err) return callback(err)\n    closed = true\n    callback()\n  })\n\n  var destroyed = false\n  return function (err) {\n    if (closed) return\n    if (destroyed) return\n    destroyed = true\n\n    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks\n    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want\n\n    if (isFn(stream.destroy)) return stream.destroy()\n\n    callback(err || new Error('stream was destroyed'))\n  }\n}\n\nvar call = function (fn) {\n  fn()\n}\n\nvar pipe = function (from, to) {\n  return from.pipe(to)\n}\n\nvar pump = function () {\n  var streams = Array.prototype.slice.call(arguments)\n  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop\n\n  if (Array.isArray(streams[0])) streams = streams[0]\n  if (streams.length < 2) throw new Error('pump requires two streams per minimum')\n\n  var error\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1\n    var writing = i > 0\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err\n      if (err) destroys.forEach(call)\n      if (reading) return\n      destroys.forEach(call)\n      callback(error)\n    })\n  })\n\n  streams.reduce(pipe)\n}\n\nmodule.exports = pump\n"]}