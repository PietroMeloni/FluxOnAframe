{"version":3,"sources":["../../../../../node_modules/npm/node_modules/libnpmhook/index.js"],"names":["config","require","fetch","module","exports","add","name","endpoint","secret","opts","type","match","substr","method","body","json","rm","id","encodeURIComponent","ls","pkg","query","package","then","objects","update"],"mappings":"AAAA;;AAEA,IAAMA,SAASC,QAAQ,UAAR,CAAf;AACA,IAAMC,QAAQD,QAAQ,oBAAR,CAAd;;AAEAE,OAAOC,OAAP,GAAiB;AACfC,KADe,eACVC,IADU,EACJC,QADI,EACMC,MADN,EACcC,IADd,EACoB;AACjC,QAAIC,OAAO,SAAX;AACA,QAAIJ,QAAQA,KAAKK,KAAL,CAAW,UAAX,CAAZ,EAAoC;AAClCD,aAAO,OAAP;AACD;AACD,QAAIJ,QAAQA,KAAK,CAAL,MAAY,GAAxB,EAA6B;AAC3BI,aAAO,OAAP;AACAJ,aAAOA,KAAKM,MAAL,CAAY,CAAZ,CAAP;AACD;;AAEDH,WAAOT,OAAO;AACZa,cAAQ,MADI;AAEZC,YAAM,EAAEJ,UAAF,EAAQJ,UAAR,EAAcC,kBAAd,EAAwBC,cAAxB;AAFM,KAAP,EAGJC,IAHI,CAAP;AAIA,WAAOP,MAAMa,IAAN,CAAW,sBAAX,EAAmCN,IAAnC,CAAP;AACD,GAhBc;AAkBfO,IAlBe,cAkBXC,EAlBW,EAkBPR,IAlBO,EAkBD;AACZ,WAAOP,MAAMa,IAAN,2BAAmCG,mBAAmBD,EAAnB,CAAnC,EAA6DjB,OAAO;AACzEa,cAAQ;AADiE,KAAP,EAEjEJ,IAFiE,CAA7D,CAAP;AAGD,GAtBc;AAwBfU,IAxBe,cAwBXC,GAxBW,EAwBNX,IAxBM,EAwBA;AACb,WAAOP,MAAMa,IAAN,CAAW,iBAAX,EAA8Bf,OAAO,EAACqB,OAAOD,OAAO,EAACE,SAASF,GAAV,EAAf,EAAP,EAAuCX,IAAvC,CAA9B,EACJc,IADI,CACC;AAAA,aAAQR,KAAKS,OAAb;AAAA,KADD,CAAP;AAED,GA3Bc;AA6BfC,QA7Be,kBA6BPR,EA7BO,EA6BHV,QA7BG,EA6BOC,MA7BP,EA6BeC,IA7Bf,EA6BqB;AAClC,WAAOP,MAAMa,IAAN,2BAAmCG,mBAAmBD,EAAnB,CAAnC,EAA6DjB,OAAO;AACzEa,cAAQ,KADiE;AAEzEC,YAAM,EAACP,kBAAD,EAAWC,cAAX;AAFmE,KAAP,EAGjEC,IAHiE,CAA7D,CAAP;AAID;AAlCc,CAAjB","file":"index.js","sourcesContent":["'use strict'\n\nconst config = require('./config')\nconst fetch = require('npm-registry-fetch')\n\nmodule.exports = {\n  add (name, endpoint, secret, opts) {\n    let type = 'package'\n    if (name && name.match(/^@[^/]+$/)) {\n      type = 'scope'\n    }\n    if (name && name[0] === '~') {\n      type = 'owner'\n      name = name.substr(1)\n    }\n\n    opts = config({\n      method: 'POST',\n      body: { type, name, endpoint, secret }\n    }, opts)\n    return fetch.json('/-/npm/v1/hooks/hook', opts)\n  },\n\n  rm (id, opts) {\n    return fetch.json(`/-/npm/v1/hooks/hook/${encodeURIComponent(id)}`, config({\n      method: 'DELETE'\n    }, opts))\n  },\n\n  ls (pkg, opts) {\n    return fetch.json('/-/npm/v1/hooks', config({query: pkg && {package: pkg}}, opts))\n      .then(json => json.objects)\n  },\n\n  update (id, endpoint, secret, opts) {\n    return fetch.json(`/-/npm/v1/hooks/hook/${encodeURIComponent(id)}`, config({\n      method: 'PUT',\n      body: {endpoint, secret}\n    }, opts))\n  }\n}\n"]}