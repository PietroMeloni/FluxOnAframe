{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/libnpmhook/node_modules/npm-registry-fetch/errors.js"],"names":["HttpErrorBase","method","res","body","spec","headers","raw","statusCode","status","code","uri","url","Error","module","exports","HttpErrorGeneral","message","statusText","toUpperCase","error","captureStackTrace","HttpErrorAuthOTP","HttpErrorAuthIPAddress","HttpErrorAuthUnknown","get"],"mappings":"AAAA;;;;;;;;IAEMA,a;;;AACJ,yBAAaC,MAAb,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AAAA;;AAAA;;AAEpC,UAAKC,OAAL,GAAeH,IAAIG,OAAJ,CAAYC,GAAZ,EAAf;AACA,UAAKC,UAAL,GAAkBL,IAAIM,MAAtB;AACA,UAAKC,IAAL,SAAgBP,IAAIM,MAApB;AACA,UAAKP,MAAL,GAAcA,MAAd;AACA,UAAKS,GAAL,GAAWR,IAAIS,GAAf;AACA,UAAKR,IAAL,GAAYA,IAAZ;AAPoC;AAQrC;;;EATyBS,K;;AAW5BC,OAAOC,OAAP,CAAed,aAAf,GAA+BA,aAA/B;;IAEMe,gB;;;AACJ,4BAAad,MAAb,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AAAA;;AAAA,qIAC9BH,MAD8B,EACtBC,GADsB,EACjBC,IADiB,EACXC,IADW;;AAEpC,WAAKY,OAAL,GAAkBd,IAAIM,MAAtB,SAAgCN,IAAIe,UAApC,WACE,OAAKhB,MAAL,CAAYiB,WAAZ,EADF,UAGE,OAAKd,IAAL,IAAa,OAAKM,GAHpB,KAKGP,QAAQA,KAAKgB,KAAd,GAAuB,QAAQhB,KAAKgB,KAApC,GAA4C,EAL9C;AAOAP,UAAMQ,iBAAN,SAA8BL,gBAA9B;AAToC;AAUrC;;;EAX4Bf,a;;AAa/Ba,OAAOC,OAAP,CAAeC,gBAAf,GAAkCA,gBAAlC;;IAEMM,gB;;;AACJ,4BAAapB,MAAb,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AAAA;;AAAA,qIAC9BH,MAD8B,EACtBC,GADsB,EACjBC,IADiB,EACXC,IADW;;AAEpC,WAAKY,OAAL,GAAe,iCAAf;AACA,WAAKP,IAAL,GAAY,MAAZ;AACAG,UAAMQ,iBAAN,SAA8BC,gBAA9B;AAJoC;AAKrC;;;EAN4BrB,a;;AAQ/Ba,OAAOC,OAAP,CAAeO,gBAAf,GAAkCA,gBAAlC;;IAEMC,sB;;;AACJ,kCAAarB,MAAb,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AAAA;;AAAA,iJAC9BH,MAD8B,EACtBC,GADsB,EACjBC,IADiB,EACXC,IADW;;AAEpC,WAAKY,OAAL,GAAe,2CAAf;AACA,WAAKP,IAAL,GAAY,SAAZ;AACAG,UAAMQ,iBAAN,SAA8BE,sBAA9B;AAJoC;AAKrC;;;EANkCtB,a;;AAQrCa,OAAOC,OAAP,CAAeQ,sBAAf,GAAwCA,sBAAxC;;IAEMC,oB;;;AACJ,gCAAatB,MAAb,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AAAA;;AAAA,6IAC9BH,MAD8B,EACtBC,GADsB,EACjBC,IADiB,EACXC,IADW;;AAEpC,WAAKY,OAAL,GAAe,mCAAmCd,IAAIG,OAAJ,CAAYmB,GAAZ,CAAgB,kBAAhB,CAAlD;AACAZ,UAAMQ,iBAAN,SAA8BG,oBAA9B;AAHoC;AAIrC;;;EALgCvB,a;;AAOnCa,OAAOC,OAAP,CAAeS,oBAAf,GAAsCA,oBAAtC","file":"errors.js","sourcesContent":["'use strict'\n\nclass HttpErrorBase extends Error {\n  constructor (method, res, body, spec) {\n    super()\n    this.headers = res.headers.raw()\n    this.statusCode = res.status\n    this.code = `E${res.status}`\n    this.method = method\n    this.uri = res.url\n    this.body = body\n  }\n}\nmodule.exports.HttpErrorBase = HttpErrorBase\n\nclass HttpErrorGeneral extends HttpErrorBase {\n  constructor (method, res, body, spec) {\n    super(method, res, body, spec)\n    this.message = `${res.status} ${res.statusText} - ${\n      this.method.toUpperCase()\n    } ${\n      this.spec || this.uri\n    }${\n      (body && body.error) ? ' - ' + body.error : ''\n    }`\n    Error.captureStackTrace(this, HttpErrorGeneral)\n  }\n}\nmodule.exports.HttpErrorGeneral = HttpErrorGeneral\n\nclass HttpErrorAuthOTP extends HttpErrorBase {\n  constructor (method, res, body, spec) {\n    super(method, res, body, spec)\n    this.message = 'OTP required for authentication'\n    this.code = 'EOTP'\n    Error.captureStackTrace(this, HttpErrorAuthOTP)\n  }\n}\nmodule.exports.HttpErrorAuthOTP = HttpErrorAuthOTP\n\nclass HttpErrorAuthIPAddress extends HttpErrorBase {\n  constructor (method, res, body, spec) {\n    super(method, res, body, spec)\n    this.message = 'Login is not allowed from your IP address'\n    this.code = 'EAUTHIP'\n    Error.captureStackTrace(this, HttpErrorAuthIPAddress)\n  }\n}\nmodule.exports.HttpErrorAuthIPAddress = HttpErrorAuthIPAddress\n\nclass HttpErrorAuthUnknown extends HttpErrorBase {\n  constructor (method, res, body, spec) {\n    super(method, res, body, spec)\n    this.message = 'Unable to authenticate, need: ' + res.headers.get('www-authenticate')\n    Error.captureStackTrace(this, HttpErrorAuthUnknown)\n  }\n}\nmodule.exports.HttpErrorAuthUnknown = HttpErrorAuthUnknown\n"]}