{"version":3,"sources":["../../../../../node_modules/npm/node_modules/rc/index.js"],"names":["cc","require","join","deepExtend","etc","win","process","platform","home","env","USERPROFILE","HOME","module","exports","name","defaults","argv","parse","Error","slice","json","configs","configFiles","addConfigFile","file","indexOf","fileConfig","push","forEach","find","config","apply","concat","length","undefined"],"mappings":";;AAAA,IAAIA,KAAOC,QAAQ,aAAR,CAAX;AACA,IAAIC,OAAOD,QAAQ,MAAR,EAAgBC,IAA3B;AACA,IAAIC,aAAaF,QAAQ,aAAR,CAAjB;AACA,IAAIG,MAAM,MAAV;AACA,IAAIC,MAAMC,QAAQC,QAAR,KAAqB,OAA/B;AACA,IAAIC,OAAOH,MACEC,QAAQG,GAAR,CAAYC,WADd,GAEEJ,QAAQG,GAAR,CAAYE,IAFzB;;AAIAC,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACtD,MAAG,aAAa,OAAOH,IAAvB,EACE,MAAM,IAAII,KAAJ,CAAU,iCAAV,CAAN;AACF,MAAG,CAACF,IAAJ,EACEA,OAAOf,QAAQ,UAAR,EAAoBK,QAAQU,IAAR,CAAaG,KAAb,CAAmB,CAAnB,CAApB,CAAP;AACFJ,aAAW,CACP,aAAa,OAAOA,QAApB,GACAf,GAAGoB,IAAH,CAAQL,QAAR,CADA,GACoBA,QAFb,KAGJ,EAHP;;AAKAE,UAAQA,SAASjB,GAAGiB,KAApB;;AAEA,MAAIR,MAAMT,GAAGS,GAAH,CAAOK,OAAO,GAAd,CAAV;;AAEA,MAAIO,UAAU,CAACN,QAAD,CAAd;AACA,MAAIO,cAAc,EAAlB;AACA,WAASC,aAAT,CAAwBC,IAAxB,EAA8B;AAC5B,QAAIF,YAAYG,OAAZ,CAAoBD,IAApB,KAA6B,CAAjC,EAAoC;AACpC,QAAIE,aAAa1B,GAAGwB,IAAH,CAAQA,IAAR,CAAjB;AACA,QAAIE,UAAJ,EAAgB;AACdL,cAAQM,IAAR,CAAaV,MAAMS,UAAN,CAAb;AACAJ,kBAAYK,IAAZ,CAAiBH,IAAjB;AACD;AACF;;AAED;AACA,MAAI,CAACnB,GAAL,EACC,CAACH,KAAKE,GAAL,EAAUU,IAAV,EAAgB,QAAhB,CAAD,EACCZ,KAAKE,GAAL,EAAUU,OAAO,IAAjB,CADD,EACyBc,OADzB,CACiCL,aADjC;AAED,MAAIf,IAAJ,EACC,CAACN,KAAKM,IAAL,EAAW,SAAX,EAAsBM,IAAtB,EAA4B,QAA5B,CAAD,EACCZ,KAAKM,IAAL,EAAW,SAAX,EAAsBM,IAAtB,CADD,EAECZ,KAAKM,IAAL,EAAW,MAAMM,IAAjB,EAAuB,QAAvB,CAFD,EAGCZ,KAAKM,IAAL,EAAW,MAAMM,IAAN,GAAa,IAAxB,CAHD,EAGgCc,OAHhC,CAGwCL,aAHxC;AAIDA,gBAAcvB,GAAG6B,IAAH,CAAQ,MAAIf,IAAJ,GAAS,IAAjB,CAAd;AACA,MAAIL,IAAIqB,MAAR,EAAgBP,cAAcd,IAAIqB,MAAlB;AAChB,MAAId,KAAKc,MAAT,EAAiBP,cAAcP,KAAKc,MAAnB;;AAEjB,SAAO3B,WAAW4B,KAAX,CAAiB,IAAjB,EAAuBV,QAAQW,MAAR,CAAe,CAC3CvB,GAD2C,EAE3CO,IAF2C,EAG3CM,YAAYW,MAAZ,GAAqB,EAACZ,SAASC,WAAV,EAAuBQ,QAAQR,YAAYA,YAAYW,MAAZ,GAAqB,CAAjC,CAA/B,EAArB,GAA2FC,SAHhD,CAAf,CAAvB,CAAP;AAKD,CA3CD","file":"index.js","sourcesContent":["var cc   = require('./lib/utils')\nvar join = require('path').join\nvar deepExtend = require('deep-extend')\nvar etc = '/etc'\nvar win = process.platform === \"win32\"\nvar home = win\n           ? process.env.USERPROFILE\n           : process.env.HOME\n\nmodule.exports = function (name, defaults, argv, parse) {\n  if('string' !== typeof name)\n    throw new Error('rc(name): name *must* be string')\n  if(!argv)\n    argv = require('minimist')(process.argv.slice(2))\n  defaults = (\n      'string' === typeof defaults\n    ? cc.json(defaults) : defaults\n    ) || {}\n\n  parse = parse || cc.parse\n\n  var env = cc.env(name + '_')\n\n  var configs = [defaults]\n  var configFiles = []\n  function addConfigFile (file) {\n    if (configFiles.indexOf(file) >= 0) return\n    var fileConfig = cc.file(file)\n    if (fileConfig) {\n      configs.push(parse(fileConfig))\n      configFiles.push(file)\n    }\n  }\n\n  // which files do we look at?\n  if (!win)\n   [join(etc, name, 'config'),\n    join(etc, name + 'rc')].forEach(addConfigFile)\n  if (home)\n   [join(home, '.config', name, 'config'),\n    join(home, '.config', name),\n    join(home, '.' + name, 'config'),\n    join(home, '.' + name + 'rc')].forEach(addConfigFile)\n  addConfigFile(cc.find('.'+name+'rc'))\n  if (env.config) addConfigFile(env.config)\n  if (argv.config) addConfigFile(argv.config)\n\n  return deepExtend.apply(null, configs.concat([\n    env,\n    argv,\n    configFiles.length ? {configs: configFiles, config: configFiles[configFiles.length - 1]} : undefined,\n  ]))\n}\n"]}