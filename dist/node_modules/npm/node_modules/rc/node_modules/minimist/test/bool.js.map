{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/rc/node_modules/minimist/test/bool.js"],"names":["parse","require","test","t","argv","boolean","default","verbose","deepEqual","_","end","x","y","z","aliased","regular","opts","herp","alias","aliasedArgv","h","propertyArgv","expected","same","alt","altPropertyArgv","harp","parsed","boool","other"],"mappings":"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","file":"bool.js","sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('flag boolean default false', function (t) {\n    var argv = parse(['moo'], {\n        boolean: ['t', 'verbose'],\n        default: { verbose: false, t: false }\n    });\n    \n    t.deepEqual(argv, {\n        verbose: false,\n        t: false,\n        _: ['moo']\n    });\n    \n    t.deepEqual(typeof argv.verbose, 'boolean');\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n\n});\n\ntest('boolean groups', function (t) {\n    var argv = parse([ '-x', '-z', 'one', 'two', 'three' ], {\n        boolean: ['x','y','z']\n    });\n    \n    t.deepEqual(argv, {\n        x : true,\n        y : false,\n        z : true,\n        _ : [ 'one', 'two', 'three' ]\n    });\n    \n    t.deepEqual(typeof argv.x, 'boolean');\n    t.deepEqual(typeof argv.y, 'boolean');\n    t.deepEqual(typeof argv.z, 'boolean');\n    t.end();\n});\ntest('boolean and alias with chainable api', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp',  'derp' ];\n    var opts = {\n        herp: { alias: 'h', boolean: true }\n    };\n    var aliasedArgv = parse(aliased, {\n        boolean: 'herp',\n        alias: { h: 'herp' }\n    });\n    var propertyArgv = parse(regular, {\n        boolean: 'herp',\n        alias: { h: 'herp' }\n    });\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    \n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\ntest('boolean and alias with options hash', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp', 'derp' ];\n    var opts = {\n        alias: { 'h': 'herp' },\n        boolean: 'herp'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected);\n    t.end();\n});\n\ntest('boolean and alias array with options hash', function (t) {\n    var aliased = [ '-h', 'derp' ];\n    var regular = [ '--herp', 'derp' ];\n    var alt = [ '--harp', 'derp' ];\n    var opts = {\n        alias: { 'h': ['herp', 'harp'] },\n        boolean: 'h'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var altPropertyArgv = parse(alt, opts);\n    var expected = {\n        harp: true,\n        herp: true,\n        h: true,\n        '_': [ 'derp' ]\n    };\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected);\n    t.same(altPropertyArgv, expected);\n    t.end();\n});\n\ntest('boolean and alias using explicit true', function (t) {\n    var aliased = [ '-h', 'true' ];\n    var regular = [ '--herp',  'true' ];\n    var opts = {\n        alias: { h: 'herp' },\n        boolean: 'h'\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n    var expected = {\n        herp: true,\n        h: true,\n        '_': [ ]\n    };\n\n    t.same(aliasedArgv, expected);\n    t.same(propertyArgv, expected); \n    t.end();\n});\n\n// regression, see https://github.com/substack/node-optimist/issues/71\ntest('boolean and --x=true', function(t) {\n    var parsed = parse(['--boool', '--other=true'], {\n        boolean: 'boool'\n    });\n\n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'true');\n\n    parsed = parse(['--boool', '--other=false'], {\n        boolean: 'boool'\n    });\n    \n    t.same(parsed.boool, true);\n    t.same(parsed.other, 'false');\n    t.end();\n});\n\ntest('boolean --boool=true', function (t) {\n    var parsed = parse(['--boool=true'], {\n        default: {\n            boool: false\n        },\n        boolean: ['boool']\n    });\n\n    t.same(parsed.boool, true);\n    t.end();\n});\n\ntest('boolean --boool=false', function (t) {\n    var parsed = parse(['--boool=false'], {\n        default: {\n          boool: true\n        },\n        boolean: ['boool']\n    });\n\n    t.same(parsed.boool, false);\n    t.end();\n});\n"]}