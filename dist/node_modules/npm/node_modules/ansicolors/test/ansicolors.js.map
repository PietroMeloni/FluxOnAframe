{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/ansicolors/test/ansicolors.js"],"names":["assert","require","colors","open","close","console","log","equal","white","black","brightBlack","green","brightGreen","red","brightRed","bgBlack","bgYellow","bgBrightYellow","bgWhite","blue"],"mappings":"AAAA;;AAEA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AAAA,IACIC,SAASD,QAAQ,IAAR,CADb;AAAA,IAEIE,OAAOD,OAAOC,IAFlB;AAAA,IAGIC,QAAQF,OAAOE,KAHnB;;AAKAC,QAAQC,GAAR,CAAY,sBAAZ;;AAEAN,OAAOO,KAAP,CAAaL,OAAOM,KAAP,CAAa,kBAAb,CAAb,EAA+C,kCAA/C;;AAEAR,OAAOO,KAAP,CAAaL,OAAOO,KAAP,CAAa,kBAAb,CAAb,EAA+C,kCAA/C;AACAT,OAAOO,KAAP,CAAaL,OAAOQ,WAAP,CAAmB,yBAAnB,CAAb,EAA4D,yCAA5D;;AAEAV,OAAOO,KAAP,CAAaL,OAAOS,KAAP,CAAa,kBAAb,CAAb,EAA+C,kCAA/C;AACAX,OAAOO,KAAP,CAAaL,OAAOU,WAAP,CAAmB,yBAAnB,CAAb,EAA4D,yCAA5D;;AAEAZ,OAAOO,KAAP,CAAaL,OAAOW,GAAP,CAAW,gBAAX,CAAb,EAA2C,gCAA3C;AACAb,OAAOO,KAAP,CAAaL,OAAOY,SAAP,CAAiB,uBAAjB,CAAb,EAAwD,uCAAxD;;AAEAT,QAAQC,GAAR,CAAY,IAAZ;;AAEAD,QAAQC,GAAR,CAAY,sBAAZ;;AAEAN,OAAOO,KAAP,CACIL,OAAOa,OAAP,CAAe,+BAAf,CADJ,EAEI,+CAFJ;;AAKAf,OAAOO,KAAP,CACIL,OAAOc,QAAP,CAAgB,gCAAhB,CADJ,EAEI,gDAFJ;AAIAhB,OAAOO,KAAP,CACIL,OAAOe,cAAP,CAAsB,uCAAtB,CADJ,EAEI,wDAFJ;;AAKAjB,OAAOO,KAAP,CACIL,OAAOgB,OAAP,CAAe,+BAAf,CADJ,EAEI,+CAFJ;;AAKAb,QAAQC,GAAR,CAAY,IAAZ;;AAEAD,QAAQC,GAAR,CAAY,4CAAZ;;AAEAN,OAAOO,KAAP,CACIL,OAAOiB,IAAP,CAAYjB,OAAOc,QAAP,CAAgB,wCAAhB,CAAZ,CADJ,EAEI,wEAFJ;AAIAhB,OAAOO,KAAP,CACIL,OAAOc,QAAP,CAAgBd,OAAOiB,IAAP,CAAY,8CAAZ,CAAhB,CADJ,EAEI,8EAFJ;;AAKAd,QAAQC,GAAR,CAAY,IAAZ;;AAEAD,QAAQC,GAAR,CAAY,UAAZ;;AAEAN,OAAOO,KAAP,CAAaJ,KAAKM,KAAlB,EAAyB,UAAzB;AACAT,OAAOO,KAAP,CAAaJ,KAAKa,QAAlB,EAA4B,UAA5B;;AAEAX,QAAQC,GAAR,CAAY,IAAZ;;AAEAD,QAAQC,GAAR,CAAY,WAAZ;;AAEAN,OAAOO,KAAP,CAAaH,MAAMK,KAAnB,EAA0B,UAA1B;AACAT,OAAOO,KAAP,CAAaH,MAAMY,QAAnB,EAA6B,UAA7B;;AAEAX,QAAQC,GAAR,CAAY,IAAZ","file":"ansicolors.js","sourcesContent":["'use strict';\n\nvar assert = require('assert')\n  , colors = require('..')\n  , open = colors.open\n  , close = colors.close\n\nconsole.log('Foreground colors ..');\n\nassert.equal(colors.white('printed in white'), '\\u001b[37mprinted in white\\u001b[39m');\n\nassert.equal(colors.black('printed in black'), '\\u001b[30mprinted in black\\u001b[39m');\nassert.equal(colors.brightBlack('printed in bright black'), '\\u001b[90mprinted in bright black\\u001b[39m');\n\nassert.equal(colors.green('printed in green'), '\\u001b[32mprinted in green\\u001b[39m');\nassert.equal(colors.brightGreen('printed in bright green'), '\\u001b[92mprinted in bright green\\u001b[39m');\n\nassert.equal(colors.red('printed in red'), '\\u001b[31mprinted in red\\u001b[39m');\nassert.equal(colors.brightRed('printed in bright red'), '\\u001b[91mprinted in bright red\\u001b[39m');\n\nconsole.log('OK');\n\nconsole.log('Background colors ..');\n\nassert.equal(\n    colors.bgBlack('printed with black background')\n  , '\\u001b[40mprinted with black background\\u001b[49m'\n);\n\nassert.equal(\n    colors.bgYellow('printed with yellow background')\n  , '\\u001b[43mprinted with yellow background\\u001b[49m'\n);\nassert.equal(\n    colors.bgBrightYellow('printed with bright yellow background')\n  , '\\u001b[103mprinted with bright yellow background\\u001b[49m'\n);\n\nassert.equal(\n    colors.bgWhite('printed with white background')\n  , '\\u001b[47mprinted with white background\\u001b[49m'\n);\n\nconsole.log('OK');\n\nconsole.log('Mixing background and foreground colors ..');\n\nassert.equal(\n    colors.blue(colors.bgYellow('printed in blue with yellow background'))\n  , '\\u001b[34m\\u001b[43mprinted in blue with yellow background\\u001b[49m\\u001b[39m'\n);\nassert.equal(\n    colors.bgYellow(colors.blue('printed in blue with yellow background again'))\n  , '\\u001b[43m\\u001b[34mprinted in blue with yellow background again\\u001b[39m\\u001b[49m'\n);\n\nconsole.log('OK');\n\nconsole.log('Open ...');\n\nassert.equal(open.black, '\\u001b[30m');\nassert.equal(open.bgYellow, '\\u001b[43m');\n\nconsole.log('OK');\n\nconsole.log('Close ...');\n\nassert.equal(close.black, '\\u001b[39m');\nassert.equal(close.bgYellow, '\\u001b[49m');\n\nconsole.log('OK');\n"]}