{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/lockfile/test/retry-time.js"],"names":["lockFile","require","touch","test","fs","RETRYWAIT","WAIT","RETRIES","EXPECTTIME","TOOLONG","t","sync","end","pollPeriods","forEach","pp","ended","timer","setTimeout","fail","unref","start","Date","now","lock","wait","retries","retryWait","pollPeriod","er","time","ok","clearTimeout","unlinkSync","process","exit"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,WAAWC,QAAQ,KAAR,CAAf;AACA,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;AACA,IAAIE,OAAOF,QAAQ,KAAR,EAAeE,IAA1B;AACA,IAAIC,KAAKH,QAAQ,IAAR,CAAT;;AAEA,IAAII,YAAY,GAAhB;AACA,IAAIC,OAAO,GAAX;AACA,IAAIC,UAAU,CAAd;AACA,IAAIC,aAAcH,YAAYE,OAAb,GAAyBD,QAAQC,UAAU,CAAlB,CAA1C;AACA,IAAIE,UAAUD,aAAa,GAA3B;;AAEAL,KAAK,OAAL,EAAc,UAAUO,CAAV,EAAa;AACzBR,QAAMS,IAAN,CAAW,WAAX;AACAD,IAAEE,GAAF;AACD,CAHD;;AAKA,IAAIC,cAAc,CAAC,EAAD,EAAK,GAAL,EAAU,KAAV,CAAlB;AACAA,YAAYC,OAAZ,CAAoB,UAAUC,EAAV,EAAc;AAChCZ,OAAK,sBAAsBY,EAA3B,EAA+B,UAAUL,CAAV,EAAa;AAC1C,QAAIM,QAAQ,KAAZ;AACA,QAAIC,QAAQC,WAAW,YAAW;AAChCR,QAAES,IAAF,CAAO,kBAAP;AACAH,cAAQ,IAAR;AACAN,QAAEE,GAAF;AACD,KAJW,EAIT,IAJS,CAAZ;;AAMA,QAAIK,MAAMG,KAAV,EACEH,MAAMG,KAAN;;AAEF,QAAIC,QAAQC,KAAKC,GAAL,EAAZ;AACAvB,aAASwB,IAAT,CAAc,WAAd,EAA2B;AACzBC,YAAMnB,IADmB;AAEzBoB,eAASnB,OAFgB;AAGzBoB,iBAAWtB,SAHc;AAIzBuB,kBAAYb;AAJa,KAA3B,EAKG,UAAUc,EAAV,EAAc;AACf,UAAIb,KAAJ,EAAW;AACX,UAAIc,OAAOR,KAAKC,GAAL,KAAaF,KAAxB;AACAX,QAAEqB,EAAF,CAAKD,QAAQtB,UAAb,EAAyB,0BAA0BA,UAAnD;AACAE,QAAEqB,EAAF,CAAKD,OAAOrB,OAAZ,EAAqB,2BAA2BA,OAAhD;AACAuB,mBAAaf,KAAb;AACAP,QAAEE,GAAF;AACD,KAZD;AAaD,GAzBD;AA0BD,CA3BD;;AA6BAT,KAAK,SAAL,EAAgB,UAAUO,CAAV,EAAa;AAC3BN,KAAG6B,UAAH,CAAc,WAAd;AACAvB,IAAEE,GAAF;AACA,MAAIK,QAAQC,WAAW,YAAW;AAChCgB,YAAQC,IAAR,CAAa,CAAb;AACD,GAFW,EAET,GAFS,CAAZ;AAGA,MAAIlB,MAAMG,KAAV,EACEH,MAAMG,KAAN,GADF,KAGEY,aAAaf,KAAb;AACH,CAVD","file":"retry-time.js","sourcesContent":["// In these tests, we do the following:\n// try for 200ms (rt=2)\n// wait for 300ms\n// try for 200ms (rt=1)\n// wait for 300ms\n// try for 200ms (rt=0)\n// fail after 1200\n// Actual time will be more like 1220-ish for setTimeout irregularity\n// But it should NOT be as slow as 2000.\n\nvar lockFile = require('../')\nvar touch = require('touch')\nvar test = require('tap').test\nvar fs = require('fs')\n\nvar RETRYWAIT = 100\nvar WAIT = 100\nvar RETRIES = 2\nvar EXPECTTIME = (RETRYWAIT * RETRIES) + (WAIT * (RETRIES + 1))\nvar TOOLONG = EXPECTTIME * 1.5\n\ntest('setup', function (t) {\n  touch.sync('file.lock')\n  t.end()\n})\n\nvar pollPeriods = [10, 100, 10000]\npollPeriods.forEach(function (pp) {\n  test('retry+wait, poll=' + pp, function (t) {\n    var ended = false\n    var timer = setTimeout(function() {\n      t.fail('taking too long!')\n      ended = true\n      t.end()\n    }, 2000)\n\n    if (timer.unref)\n      timer.unref()\n\n    var start = Date.now()\n    lockFile.lock('file.lock', {\n      wait: WAIT,\n      retries: RETRIES,\n      retryWait: RETRYWAIT,\n      pollPeriod: pp\n    }, function (er) {\n      if (ended) return\n      var time = Date.now() - start\n      t.ok(time >= EXPECTTIME, 'should take at least ' + EXPECTTIME)\n      t.ok(time < TOOLONG, 'should take less than ' + TOOLONG)\n      clearTimeout(timer)\n      t.end()\n    })\n  })\n})\n\ntest('cleanup', function (t) {\n  fs.unlinkSync('file.lock')\n  t.end()\n  var timer = setTimeout(function() {\n    process.exit(1)\n  }, 500)\n  if (timer.unref)\n    timer.unref()\n  else\n    clearTimeout(timer)\n})\n"]}