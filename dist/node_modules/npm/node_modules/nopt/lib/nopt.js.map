{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/nopt/lib/nopt.js"],"names":["debug","process","env","DEBUG_NOPT","NOPT_DEBUG","console","error","apply","arguments","url","require","path","Stream","abbrev","osenv","module","exports","nopt","clean","typeDefs","String","type","validate","validateString","Boolean","validateBoolean","validateUrl","Number","validateNumber","validatePath","validateStream","Date","validateDate","types","shorthands","args","slice","argv","data","key","remain","cooked","original","parse","Object","defineProperty","value","map","JSON","stringify","join","enumerable","remove","typeDefault","Array","keys","forEach","k","val","isArray","concat","trim","indexOf","isNaN","hasOwnProperty","d","invalidHandler","filter","length","isWin","platform","homePattern","home","match","resolve","substr","s","valueOf","host","href","i","l","ok","t","name","abbrevs","shortAbbr","arg","push","hadEq","charAt","at","v","splice","shRes","resolveShort","replace","no","toLowerCase","argType","isTypeArray","la","isBool","undefined","split","singles","___singles","reduce","r","chrs","c"],"mappings":"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","file":"nopt.js","sourcesContent":["// info about each config option.\n\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG\n  ? function () { console.error.apply(console, arguments) }\n  : function () {}\n\nvar url = require(\"url\")\n  , path = require(\"path\")\n  , Stream = require(\"stream\").Stream\n  , abbrev = require(\"abbrev\")\n  , osenv = require(\"osenv\")\n\nmodule.exports = exports = nopt\nexports.clean = clean\n\nexports.typeDefs =\n  { String  : { type: String,  validate: validateString  }\n  , Boolean : { type: Boolean, validate: validateBoolean }\n  , url     : { type: url,     validate: validateUrl     }\n  , Number  : { type: Number,  validate: validateNumber  }\n  , path    : { type: path,    validate: validatePath    }\n  , Stream  : { type: Stream,  validate: validateStream  }\n  , Date    : { type: Date,    validate: validateDate    }\n  }\n\nfunction nopt (types, shorthands, args, slice) {\n  args = args || process.argv\n  types = types || {}\n  shorthands = shorthands || {}\n  if (typeof slice !== \"number\") slice = 2\n\n  debug(types, shorthands, args, slice)\n\n  args = args.slice(slice)\n  var data = {}\n    , key\n    , argv = {\n        remain: [],\n        cooked: args,\n        original: args.slice(0)\n      }\n\n  parse(args, data, argv.remain, types, shorthands)\n  // now data is full\n  clean(data, types, exports.typeDefs)\n  data.argv = argv\n  Object.defineProperty(data.argv, 'toString', { value: function () {\n    return this.original.map(JSON.stringify).join(\" \")\n  }, enumerable: false })\n  return data\n}\n\nfunction clean (data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs\n  var remove = {}\n    , typeDefault = [false, true, null, String, Array]\n\n  Object.keys(data).forEach(function (k) {\n    if (k === \"argv\") return\n    var val = data[k]\n      , isArray = Array.isArray(val)\n      , type = types[k]\n    if (!isArray) val = [val]\n    if (!type) type = typeDefault\n    if (type === Array) type = typeDefault.concat(Array)\n    if (!Array.isArray(type)) type = [type]\n\n    debug(\"val=%j\", val)\n    debug(\"types=\", type)\n    val = val.map(function (val) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof val === \"string\") {\n        debug(\"string %j\", val)\n        val = val.trim()\n        if ((val === \"null\" && ~type.indexOf(null))\n            || (val === \"true\" &&\n               (~type.indexOf(true) || ~type.indexOf(Boolean)))\n            || (val === \"false\" &&\n               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {\n          val = JSON.parse(val)\n          debug(\"jsonable %j\", val)\n        } else if (~type.indexOf(Number) && !isNaN(val)) {\n          debug(\"convert to number\", val)\n          val = +val\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n          debug(\"convert to date\", val)\n          val = new Date(val)\n        }\n      }\n\n      if (!types.hasOwnProperty(k)) {\n        return val\n      }\n\n      // allow `--no-blah` to set 'blah' to null if null is allowed\n      if (val === false && ~type.indexOf(null) &&\n          !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        val = null\n      }\n\n      var d = {}\n      d[k] = val\n      debug(\"prevalidated val\", d, val, types[k])\n      if (!validate(d, k, val, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, val, types[k], data)\n        } else if (exports.invalidHandler !== false) {\n          debug(\"invalid: \"+k+\"=\"+val, types[k])\n        }\n        return remove\n      }\n      debug(\"validated val\", d, val, types[k])\n      return d[k]\n    }).filter(function (val) { return val !== remove })\n\n    if (!val.length) delete data[k]\n    else if (isArray) {\n      debug(isArray, data[k], val)\n      data[k] = val\n    } else data[k] = val[0]\n\n    debug(\"k=%s val=%j\", k, val, data[k])\n  })\n}\n\nfunction validateString (data, k, val) {\n  data[k] = String(val)\n}\n\nfunction validatePath (data, k, val) {\n  if (val === true) return false\n  if (val === null) return true\n\n  val = String(val)\n\n  var isWin       = process.platform === 'win32'\n    , homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//\n    , home        = osenv.home()\n\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.substr(2))\n  } else {\n    data[k] = path.resolve(val)\n  }\n  return true\n}\n\nfunction validateNumber (data, k, val) {\n  debug(\"validate Number %j %j %j\", k, val, isNaN(val))\n  if (isNaN(val)) return false\n  data[k] = +val\n}\n\nfunction validateDate (data, k, val) {\n  var s = Date.parse(val)\n  debug(\"validate Date %j %j %j\", k, val, s)\n  if (isNaN(s)) return false\n  data[k] = new Date(val)\n}\n\nfunction validateBoolean (data, k, val) {\n  if (val instanceof Boolean) val = val.valueOf()\n  else if (typeof val === \"string\") {\n    if (!isNaN(val)) val = !!(+val)\n    else if (val === \"null\" || val === \"false\") val = false\n    else val = true\n  } else val = !!val\n  data[k] = val\n}\n\nfunction validateUrl (data, k, val) {\n  val = url.parse(String(val))\n  if (!val.host) return false\n  data[k] = val.href\n}\n\nfunction validateStream (data, k, val) {\n  if (!(val instanceof Stream)) return false\n  data[k] = val\n}\n\nfunction validate (data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (var i = 0, l = type.length; i < l; i ++) {\n      if (type[i] === Array) continue\n      if (validate(data, k, val, type[i], typeDefs)) return true\n    }\n    delete data[k]\n    return false\n  }\n\n  // an array of anything?\n  if (type === Array) return true\n\n  // NaN is poisonous.  Means that something is not allowed.\n  if (type !== type) {\n    debug(\"Poison NaN\", k, val, type)\n    delete data[k]\n    return false\n  }\n\n  // explicit list of values\n  if (val === type) {\n    debug(\"Explicitly allowed %j\", val)\n    // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n    data[k] = val\n    return true\n  }\n\n  // now go through the list of typeDefs, validate against each one.\n  var ok = false\n    , types = Object.keys(typeDefs)\n  for (var i = 0, l = types.length; i < l; i ++) {\n    debug(\"test type %j %j %j\", k, val, types[i])\n    var t = typeDefs[types[i]]\n    if (t &&\n      ((type && type.name && t.type && t.type.name) ? (type.name === t.type.name) : (type === t.type))) {\n      var d = {}\n      ok = false !== t.validate(d, k, val)\n      val = d[k]\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val\n        break\n      }\n    }\n  }\n  debug(\"OK? %j (%j %j %j)\", ok, k, val, types[i])\n\n  if (!ok) delete data[k]\n  return ok\n}\n\nfunction parse (args, data, remain, types, shorthands) {\n  debug(\"parse\", args, data, remain)\n\n  var key = null\n    , abbrevs = abbrev(Object.keys(types))\n    , shortAbbr = abbrev(Object.keys(shorthands))\n\n  for (var i = 0; i < args.length; i ++) {\n    var arg = args[i]\n    debug(\"arg\", arg)\n\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1))\n      args[i] = \"--\"\n      break\n    }\n    var hadEq = false\n    if (arg.charAt(0) === \"-\" && arg.length > 1) {\n      var at = arg.indexOf('=')\n      if (at > -1) {\n        hadEq = true\n        var v = arg.substr(at + 1)\n        arg = arg.substr(0, at)\n        args.splice(i, 1, arg, v)\n      }\n\n      // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs)\n      debug(\"arg=%j shRes=%j\", arg, shRes)\n      if (shRes) {\n        debug(arg, shRes)\n        args.splice.apply(args, [i, 1].concat(shRes))\n        if (arg !== shRes[0]) {\n          i --\n          continue\n        }\n      }\n      arg = arg.replace(/^-+/, \"\")\n      var no = null\n      while (arg.toLowerCase().indexOf(\"no-\") === 0) {\n        no = !no\n        arg = arg.substr(3)\n      }\n\n      if (abbrevs[arg]) arg = abbrevs[arg]\n\n      var argType = types[arg]\n      var isTypeArray = Array.isArray(argType)\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false\n        argType = argType[0]\n      }\n\n      var isArray = argType === Array ||\n        isTypeArray && argType.indexOf(Array) !== -1\n\n      // allow unknown things to be arrays if specified multiple times.\n      if (!types.hasOwnProperty(arg) && data.hasOwnProperty(arg)) {\n        if (!Array.isArray(data[arg]))\n          data[arg] = [data[arg]]\n        isArray = true\n      }\n\n      var val\n        , la = args[i + 1]\n\n      var isBool = typeof no === 'boolean' ||\n        argType === Boolean ||\n        isTypeArray && argType.indexOf(Boolean) !== -1 ||\n        (typeof argType === 'undefined' && !hadEq) ||\n        (la === \"false\" &&\n         (argType === null ||\n          isTypeArray && ~argType.indexOf(null)))\n\n      if (isBool) {\n        // just set and move along\n        val = !no\n        // however, also support --bool true or --bool false\n        if (la === \"true\" || la === \"false\") {\n          val = JSON.parse(la)\n          la = null\n          if (no) val = !val\n          i ++\n        }\n\n        // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la\n            i ++\n          } else if ( la === \"null\" && ~argType.indexOf(null) ) {\n            // null allowed\n            val = null\n            i ++\n          } else if ( !la.match(/^-{2,}[^-]/) &&\n                      !isNaN(la) &&\n                      ~argType.indexOf(Number) ) {\n            // number\n            val = +la\n            i ++\n          } else if ( !la.match(/^-[^-]/) && ~argType.indexOf(String) ) {\n            // string\n            val = la\n            i ++\n          }\n        }\n\n        if (isArray) (data[arg] = data[arg] || []).push(val)\n        else data[arg] = val\n\n        continue\n      }\n\n      if (argType === String) {\n        if (la === undefined) {\n          la = \"\"\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = \"\"\n          i --\n        }\n      }\n\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined\n        i --\n      }\n\n      val = la === undefined ? true : la\n      if (isArray) (data[arg] = data[arg] || []).push(val)\n      else data[arg] = val\n\n      i ++\n      continue\n    }\n    remain.push(arg)\n  }\n}\n\nfunction resolveShort (arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, '')\n\n  // if it's an exact known option, then don't go any further\n  if (abbrevs[arg] === arg)\n    return null\n\n  // if it's an exact known shortopt, same deal\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg]))\n      shorthands[arg] = shorthands[arg].split(/\\s+/)\n\n    return shorthands[arg]\n  }\n\n  // first check to see if this arg is a set of single-char shorthands\n  var singles = shorthands.___singles\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1\n    }).reduce(function (l,r) {\n      l[r] = true\n      return l\n    }, {})\n    shorthands.___singles = singles\n    debug('shorthand singles', singles)\n  }\n\n  var chrs = arg.split(\"\").filter(function (c) {\n    return singles[c]\n  })\n\n  if (chrs.join(\"\") === arg) return chrs.map(function (c) {\n    return shorthands[c]\n  }).reduce(function (l, r) {\n    return l.concat(r)\n  }, [])\n\n\n  // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n  if (abbrevs[arg] && !shorthands[arg])\n    return null\n\n  // if it's an abbr for a shorthand, then use that\n  if (shortAbbr[arg])\n    arg = shortAbbr[arg]\n\n  // make it an array, if it's a list of words\n  if (shorthands[arg] && !Array.isArray(shorthands[arg]))\n    shorthands[arg] = shorthands[arg].split(/\\s+/)\n\n  return shorthands[arg]\n}\n"]}