{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/gentle-fs/lib/rm.js"],"names":["path","require","validate","fs","isInside","vacuum","chain","asyncMap","readCmdShim","iferr","exports","module","rm","target","opts","cb","targetPath","normalize","resolve","prefix","prefixes","indexOf","Error","options","force","purge","base","gently","parent","isEverInside","log","readLinkOrShim","er","results","code","parentInfo","managed","targetInfo","symlink","inParent","isSafeToRm","name","thenRemove","toRemove","removeBase","_isSafeToRm","pkgName","silly","info","clobberFail","actualTarget","targetsParent","dirname","warn","msg","arguments","isENOENT","err","notENOENT","skipENOENT","value","errorsToValues","fn","args","Array","prototype","slice","call","pop","push","apply","isNotError","_isEverInside","paths","readAllLinks","resolvedPaths","errorFree","filter","length","badErrors","targets","areAnyInsideAny","_areAnyInsideAny","toCheck","forEach","ii","inside","_readAllLinks","seen","Object","keys","resolveSymlink","_resolveSymlink","cached","symlinkTarget","_readLinkOrShim","lstat","stat","isSymbolicLink","readlink","source"],"mappings":"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","file":"rm.js","sourcesContent":["'use strict'\n\nconst path = require('path')\nconst validate = require('aproba')\nconst fs = require('graceful-fs')\nconst isInside = require('path-is-inside')\nconst vacuum = require('fs-vacuum')\nconst chain = require('slide').chain\nconst asyncMap = require('slide').asyncMap\nconst readCmdShim = require('read-cmd-shim')\nconst iferr = require('iferr')\n\nexports = module.exports = rm\n\nfunction rm (target, opts, cb) {\n  var targetPath = path.normalize(path.resolve(opts.prefix, target))\n  if (opts.prefixes.indexOf(targetPath) !== -1) {\n    return cb(new Error('May not delete: ' + targetPath))\n  }\n  var options = {}\n  if (opts.force) { options.purge = true }\n  if (opts.base) options.base = path.normalize(path.resolve(opts.prefix, opts.base))\n\n  if (!opts.gently) {\n    options.purge = true\n    return vacuum(targetPath, options, cb)\n  }\n\n  var parent = options.base = options.base || path.normalize(opts.prefix)\n\n  // Do all the async work we'll need to do in order to tell if this is a\n  // safe operation\n  chain([\n    [isEverInside, parent, opts.prefixes, opts.log],\n    [readLinkOrShim, targetPath],\n    [isEverInside, targetPath, opts.prefixes, opts.log],\n    [isEverInside, targetPath, [parent], opts.log]\n  ], function (er, results) {\n    if (er) {\n      if (er.code === 'ENOENT') return cb()\n      return cb(er)\n    }\n    var parentInfo = {\n      path: parent,\n      managed: results[0]\n    }\n    var targetInfo = {\n      path: targetPath,\n      symlink: results[1],\n      managed: results[2],\n      inParent: results[3]\n    }\n\n    isSafeToRm(parentInfo, targetInfo, opts.name, opts.log, iferr(cb, thenRemove))\n\n    function thenRemove (toRemove, removeBase) {\n      if (!toRemove) return cb()\n      if (removeBase) options.base = removeBase\n      return vacuum(toRemove, options, cb)\n    }\n  })\n}\n\nexports._isSafeToRm = isSafeToRm\nfunction isSafeToRm (parent, target, pkgName, log, cb) {\n  log.silly('gentlyRm', 'parent.path =', parent.path)\n  log.silly('gentlyRm', 'parent.managed =',\n    parent.managed && parent.managed.target + ' is in ' + parent.managed.path)\n  log.silly('gentlyRm', 'target.path = ', target.path)\n  log.silly('gentlyRm', 'target.symlink =', target.symlink)\n  log.silly('gentlyRm', 'target.managed =',\n    target.managed && target.managed.target + ' is in ' + target.managed.path)\n  log.silly('gentlyRm', 'target.inParent = ', target.inParent)\n\n  // The parent directory or something it symlinks to must eventually be in\n  // a folder that we maintain.\n  if (!parent.managed) {\n    log.info('gentlyRm', parent.path,\n      'is not contained in any directory ' + pkgName + ' is known to control or ' +\n      'any place they link to')\n    return cb(clobberFail(target.path, 'containing path ' + parent.path +\n      \" isn't under \" + pkgName + \"'s control\"))\n  }\n\n  // The target or something it symlinks to must eventually be in the parent\n  // or something the parent symlinks to\n  if (target.inParent) {\n    var actualTarget = target.inParent.target\n    var targetsParent = target.inParent.path\n    // if the target.path was what we found in some version of parent, remove\n    // using that parent as the base\n    if (target.path === actualTarget) {\n      return cb(null, target.path, targetsParent)\n    } else {\n      // If something the target.path links to was what was found, just\n      // remove target.path in the location it was found.\n      return cb(null, target.path, path.dirname(target.path))\n    }\n  }\n\n  // If the target is in a managed directory and is in a symlink, but was\n  // not in our parent that usually means someone else installed a bin file\n  // with the same name as one of our bin files.\n  if (target.managed && target.symlink) {\n    log.warn('rm', 'not removing', target.path,\n      \"as it wasn't installed by\", parent.path)\n    return cb()\n  }\n\n  if (target.symlink) {\n    return cb(clobberFail(target.path, target.symlink +\n      ' symlink target is not controlled by ' + pkgName + ' ' + parent.path))\n  } else {\n    return cb(clobberFail(target.path, 'is outside ' + parent.path +\n      ' and not a link'))\n  }\n}\n\nfunction clobberFail (target, msg) {\n  validate('SS', arguments)\n  var er = new Error('Refusing to delete ' + target + ': ' + msg)\n  er.code = 'EEXIST'\n  er.path = target\n  return er\n}\n\nfunction isENOENT (err) {\n  return err && err.code === 'ENOENT'\n}\n\nfunction notENOENT (err) {\n  return !isENOENT(err)\n}\n\nfunction skipENOENT (cb) {\n  return function (err, value) {\n    if (isENOENT(err)) {\n      return cb(null, false)\n    } else {\n      return cb(err, value)\n    }\n  }\n}\n\nfunction errorsToValues (fn) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments)\n    var cb = args.pop()\n    args.push(function (err, value) {\n      if (err) {\n        return cb(null, err)\n      } else {\n        return cb(null, value)\n      }\n    })\n    fn.apply(null, args)\n  }\n}\n\nfunction isNotError (value) {\n  return !(value instanceof Error)\n}\n\nexports._isEverInside = isEverInside\n// return the first of path, where target (or anything it symlinks to)\n// isInside the path (or anything it symlinks to)\nfunction isEverInside (target, paths, log, cb) {\n  validate('SAOF', arguments)\n  asyncMap(paths, errorsToValues(readAllLinks), iferr(cb, function (resolvedPaths) {\n    var errorFree = resolvedPaths.filter(isNotError)\n    if (errorFree.length === 0) {\n      var badErrors = resolvedPaths.filter(notENOENT)\n      if (badErrors.length === 0) {\n        return cb(null, false)\n      } else {\n        return cb(badErrors[0])\n      }\n    }\n    readAllLinks(target, iferr(skipENOENT(cb), function (targets) {\n      cb(null, areAnyInsideAny(targets, errorFree, log))\n    }))\n  }))\n}\n\nexports._areAnyInsideAny = areAnyInsideAny\n// Return the first path found that any target is inside\nfunction areAnyInsideAny (targets, paths, log) {\n  validate('AAO', arguments)\n  var toCheck = []\n  paths.forEach(function (path) {\n    targets.forEach(function (target) {\n      toCheck.push([target, path])\n    })\n  })\n  for (var ii = 0; ii < toCheck.length; ++ii) {\n    var target = toCheck[ii][0]\n    var path = toCheck[ii][1]\n    var inside = isInside(target, path)\n    if (!inside) log.silly('isEverInside', target, 'is not inside', path)\n    if (inside && path) return inside && path && {target: target, path: path}\n  }\n  return false\n}\n\nexports._readAllLinks = readAllLinks\n// resolves chains of symlinks of unlimited depth, returning a list of paths\n// it's seen in the process when it hits either a symlink cycle or a\n// non-symlink\nfunction readAllLinks (path, cb) {\n  validate('SF', arguments)\n  var seen = {}\n  _readAllLinks(path)\n\n  function _readAllLinks (path) {\n    if (seen[path]) return cb(null, Object.keys(seen))\n    seen[path] = true\n    resolveSymlink(path, iferr(cb, _readAllLinks))\n  }\n}\n\nexports._resolveSymlink = resolveSymlink\nvar resolvedPaths = {}\nfunction resolveSymlink (symlink, cb) {\n  validate('SF', arguments)\n  var cached = resolvedPaths[symlink]\n  if (cached) return cb(null, cached)\n\n  readLinkOrShim(symlink, iferr(cb, function (symlinkTarget) {\n    if (symlinkTarget) {\n      resolvedPaths[symlink] = path.resolve(path.dirname(symlink), symlinkTarget)\n    } else {\n      resolvedPaths[symlink] = symlink\n    }\n    return cb(null, resolvedPaths[symlink])\n  }))\n}\n\nexports._readLinkOrShim = readLinkOrShim\nfunction readLinkOrShim (path, cb) {\n  validate('SF', arguments)\n  fs.lstat(path, iferr(cb, function (stat) {\n    if (stat.isSymbolicLink()) {\n      fs.readlink(path, cb)\n    } else {\n      readCmdShim(path, function (er, source) {\n        if (!er) return cb(null, source)\n        // lstat wouldn't return an error on these, so we don't either.\n        if (er.code === 'ENOTASHIM' || er.code === 'EISDIR') {\n          return cb(null, null)\n        } else {\n          return cb(er)\n        }\n      })\n    }\n  }))\n}\n"]}