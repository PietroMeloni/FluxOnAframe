{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/cli-table3/src/utils.js"],"names":["objectAssign","require","stringWidth","codeRegex","capture","strlen","str","code","stripped","replace","split","reduce","memo","s","repeat","times","Array","join","pad","len","dir","length","padlen","right","Math","ceil","left","codeCache","addToCodeCache","name","on","off","set","to","updateState","state","controlChars","controlCode","parseInt","lastForegroundAdded","lastBackgroundAdded","i","hasOwnProperty","info","readState","line","exec","unwindState","ret","Object","keys","forEach","key","rewindState","truncateWidth","desiredLength","substr","slice","truncateWidthWithAnsi","splitIndex","retLen","myArray","toAdd","truncate","truncateChar","lengthOfStr","defaultOptions","chars","top","bottom","mid","middle","colWidths","rowHeights","colAligns","rowAligns","style","head","border","compact","mergeOptions","options","defaults","wordWrap","maxLength","input","lines","lineLength","whitespace","word","newLength","push","multiLineWordWrap","output","apply","colorizeLines","temp","module","exports"],"mappings":"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","file":"utils.js","sourcesContent":["const objectAssign = require('object-assign');\nconst stringWidth = require('string-width');\n\nfunction codeRegex(capture) {\n  return capture ? /\\u001b\\[((?:\\d*;){0,5}\\d*)m/g : /\\u001b\\[(?:\\d*;){0,5}\\d*m/g;\n}\n\nfunction strlen(str) {\n  let code = codeRegex();\n  let stripped = ('' + str).replace(code, '');\n  let split = stripped.split('\\n');\n  return split.reduce(function(memo, s) {\n    return stringWidth(s) > memo ? stringWidth(s) : memo;\n  }, 0);\n}\n\nfunction repeat(str, times) {\n  return Array(times + 1).join(str);\n}\n\nfunction pad(str, len, pad, dir) {\n  let length = strlen(str);\n  if (len + 1 >= length) {\n    let padlen = len - length;\n    switch (dir) {\n      case 'right': {\n        str = repeat(pad, padlen) + str;\n        break;\n      }\n      case 'center': {\n        let right = Math.ceil(padlen / 2);\n        let left = padlen - right;\n        str = repeat(pad, left) + str + repeat(pad, right);\n        break;\n      }\n      default: {\n        str = str + repeat(pad, padlen);\n        break;\n      }\n    }\n  }\n  return str;\n}\n\nlet codeCache = {};\n\nfunction addToCodeCache(name, on, off) {\n  on = '\\u001b[' + on + 'm';\n  off = '\\u001b[' + off + 'm';\n  codeCache[on] = { set: name, to: true };\n  codeCache[off] = { set: name, to: false };\n  codeCache[name] = { on: on, off: off };\n}\n\n//https://github.com/Marak/colors.js/blob/master/lib/styles.js\naddToCodeCache('bold', 1, 22);\naddToCodeCache('italics', 3, 23);\naddToCodeCache('underline', 4, 24);\naddToCodeCache('inverse', 7, 27);\naddToCodeCache('strikethrough', 9, 29);\n\nfunction updateState(state, controlChars) {\n  let controlCode = controlChars[1] ? parseInt(controlChars[1].split(';')[0]) : 0;\n  if ((controlCode >= 30 && controlCode <= 39) || (controlCode >= 90 && controlCode <= 97)) {\n    state.lastForegroundAdded = controlChars[0];\n    return;\n  }\n  if ((controlCode >= 40 && controlCode <= 49) || (controlCode >= 100 && controlCode <= 107)) {\n    state.lastBackgroundAdded = controlChars[0];\n    return;\n  }\n  if (controlCode === 0) {\n    for (let i in state) {\n      /* istanbul ignore else */\n      if (state.hasOwnProperty(i)) {\n        delete state[i];\n      }\n    }\n    return;\n  }\n  let info = codeCache[controlChars[0]];\n  if (info) {\n    state[info.set] = info.to;\n  }\n}\n\nfunction readState(line) {\n  let code = codeRegex(true);\n  let controlChars = code.exec(line);\n  let state = {};\n  while (controlChars !== null) {\n    updateState(state, controlChars);\n    controlChars = code.exec(line);\n  }\n  return state;\n}\n\nfunction unwindState(state, ret) {\n  let lastBackgroundAdded = state.lastBackgroundAdded;\n  let lastForegroundAdded = state.lastForegroundAdded;\n\n  delete state.lastBackgroundAdded;\n  delete state.lastForegroundAdded;\n\n  Object.keys(state).forEach(function(key) {\n    if (state[key]) {\n      ret += codeCache[key].off;\n    }\n  });\n\n  if (lastBackgroundAdded && lastBackgroundAdded != '\\u001b[49m') {\n    ret += '\\u001b[49m';\n  }\n  if (lastForegroundAdded && lastForegroundAdded != '\\u001b[39m') {\n    ret += '\\u001b[39m';\n  }\n\n  return ret;\n}\n\nfunction rewindState(state, ret) {\n  let lastBackgroundAdded = state.lastBackgroundAdded;\n  let lastForegroundAdded = state.lastForegroundAdded;\n\n  delete state.lastBackgroundAdded;\n  delete state.lastForegroundAdded;\n\n  Object.keys(state).forEach(function(key) {\n    if (state[key]) {\n      ret = codeCache[key].on + ret;\n    }\n  });\n\n  if (lastBackgroundAdded && lastBackgroundAdded != '\\u001b[49m') {\n    ret = lastBackgroundAdded + ret;\n  }\n  if (lastForegroundAdded && lastForegroundAdded != '\\u001b[39m') {\n    ret = lastForegroundAdded + ret;\n  }\n\n  return ret;\n}\n\nfunction truncateWidth(str, desiredLength) {\n  if (str.length === strlen(str)) {\n    return str.substr(0, desiredLength);\n  }\n\n  while (strlen(str) > desiredLength) {\n    str = str.slice(0, -1);\n  }\n\n  return str;\n}\n\nfunction truncateWidthWithAnsi(str, desiredLength) {\n  let code = codeRegex(true);\n  let split = str.split(codeRegex());\n  let splitIndex = 0;\n  let retLen = 0;\n  let ret = '';\n  let myArray;\n  let state = {};\n\n  while (retLen < desiredLength) {\n    myArray = code.exec(str);\n    let toAdd = split[splitIndex];\n    splitIndex++;\n    if (retLen + strlen(toAdd) > desiredLength) {\n      toAdd = truncateWidth(toAdd, desiredLength - retLen);\n    }\n    ret += toAdd;\n    retLen += strlen(toAdd);\n\n    if (retLen < desiredLength) {\n      if (!myArray) {\n        break;\n      } // full-width chars may cause a whitespace which cannot be filled\n      ret += myArray[0];\n      updateState(state, myArray);\n    }\n  }\n\n  return unwindState(state, ret);\n}\n\nfunction truncate(str, desiredLength, truncateChar) {\n  truncateChar = truncateChar || '…';\n  let lengthOfStr = strlen(str);\n  if (lengthOfStr <= desiredLength) {\n    return str;\n  }\n  desiredLength -= strlen(truncateChar);\n\n  let ret = truncateWidthWithAnsi(str, desiredLength);\n\n  return ret + truncateChar;\n}\n\nfunction defaultOptions() {\n  return {\n    chars: {\n      top: '─',\n      'top-mid': '┬',\n      'top-left': '┌',\n      'top-right': '┐',\n      bottom: '─',\n      'bottom-mid': '┴',\n      'bottom-left': '└',\n      'bottom-right': '┘',\n      left: '│',\n      'left-mid': '├',\n      mid: '─',\n      'mid-mid': '┼',\n      right: '│',\n      'right-mid': '┤',\n      middle: '│',\n    },\n    truncate: '…',\n    colWidths: [],\n    rowHeights: [],\n    colAligns: [],\n    rowAligns: [],\n    style: {\n      'padding-left': 1,\n      'padding-right': 1,\n      head: ['red'],\n      border: ['grey'],\n      compact: false,\n    },\n    head: [],\n  };\n}\n\nfunction mergeOptions(options, defaults) {\n  options = options || {};\n  defaults = defaults || defaultOptions();\n  let ret = objectAssign({}, defaults, options);\n  ret.chars = objectAssign({}, defaults.chars, options.chars);\n  ret.style = objectAssign({}, defaults.style, options.style);\n  return ret;\n}\n\nfunction wordWrap(maxLength, input) {\n  let lines = [];\n  let split = input.split(/(\\s+)/g);\n  let line = [];\n  let lineLength = 0;\n  let whitespace;\n  for (let i = 0; i < split.length; i += 2) {\n    let word = split[i];\n    let newLength = lineLength + strlen(word);\n    if (lineLength > 0 && whitespace) {\n      newLength += whitespace.length;\n    }\n    if (newLength > maxLength) {\n      if (lineLength !== 0) {\n        lines.push(line.join(''));\n      }\n      line = [word];\n      lineLength = strlen(word);\n    } else {\n      line.push(whitespace || '', word);\n      lineLength = newLength;\n    }\n    whitespace = split[i + 1];\n  }\n  if (lineLength) {\n    lines.push(line.join(''));\n  }\n  return lines;\n}\n\nfunction multiLineWordWrap(maxLength, input) {\n  let output = [];\n  input = input.split('\\n');\n  for (let i = 0; i < input.length; i++) {\n    output.push.apply(output, wordWrap(maxLength, input[i]));\n  }\n  return output;\n}\n\nfunction colorizeLines(input) {\n  let state = {};\n  let output = [];\n  for (let i = 0; i < input.length; i++) {\n    let line = rewindState(state, input[i]);\n    state = readState(line);\n    let temp = objectAssign({}, state);\n    output.push(unwindState(temp, line));\n  }\n  return output;\n}\n\nmodule.exports = {\n  strlen: strlen,\n  repeat: repeat,\n  pad: pad,\n  truncate: truncate,\n  mergeOptions: mergeOptions,\n  wordWrap: multiLineWordWrap,\n  colorizeLines: colorizeLines,\n};\n"]}