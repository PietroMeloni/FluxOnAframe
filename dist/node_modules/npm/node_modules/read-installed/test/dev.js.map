{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/read-installed/test/dev.js"],"names":["readInstalled","require","test","json","path","known","concat","Object","keys","dependencies","optionalDependencies","devDependencies","sort","t","join","__dirname","log","console","error","dev","er","map","notOk","ok","stack","message","deps","equal","length","deepEqual","tap","extraneous","end"],"mappings":";;AAAA,IAAIA,gBAAgBC,QAAQ,sBAAR,CAApB;AACA,IAAIC,OAAOD,QAAQ,KAAR,EAAeC,IAA1B;AACA,IAAIC,OAAOF,QAAQ,iBAAR,CAAX;AACA,IAAIG,OAAOH,QAAQ,MAAR,CAAX;AACA,IAAII,QAAQ,GAAGC,MAAH,CAAUC,OAAOC,IAAP,CAAYL,KAAKM,YAAjB,CAAV,EACRF,OAAOC,IAAP,CAAYL,KAAKO,oBAAjB,CADQ,EAERH,OAAOC,IAAP,CAAYL,KAAKQ,eAAjB,CAFQ,EAE2BC,IAF3B,EAAZ;;AAIAV,KAAK,0CAAL,EAAiD,UAAUW,CAAV,EAAa;AAC5Db,gBAAcI,KAAKU,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAd,EAA2C;AACzCC,SAAKC,QAAQC,KAD4B;AAEzCC,SAAK;AAFoC,GAA3C,EAGG,UAAUC,EAAV,EAAcC,GAAd,EAAmB;AACpBR,MAAES,KAAF,CAAQF,EAAR,EAAY,mBAAZ;AACAP,MAAEU,EAAF,CAAKF,GAAL,EAAU,oBAAV;AACA,QAAID,EAAJ,EAAQ,OAAOH,QAAQC,KAAR,CAAcE,GAAGI,KAAH,IAAYJ,GAAGK,OAA7B,CAAP;AACR,QAAIC,OAAOnB,OAAOC,IAAP,CAAYa,IAAIZ,YAAhB,EAA8BG,IAA9B,EAAX;AACAC,MAAEc,KAAF,CAAQD,KAAKE,MAAb,EAAqBvB,MAAMuB,MAA3B,EAAmC,yBAAnC;AACAf,MAAEgB,SAAF,CAAYH,IAAZ,EAAkBrB,KAAlB,EAAyB,wBAAzB;AACAQ,MAAEU,EAAF,CAAKF,IAAIZ,YAAJ,CAAiBqB,GAAjB,CAAqBC,UAA1B,EAAsC,6BAAtC;AACAlB,MAAEmB,GAAF;AACD,GAZD;AAaD,CAdD","file":"dev.js","sourcesContent":["var readInstalled = require(\"../read-installed.js\")\nvar test = require(\"tap\").test\nvar json = require(\"../package.json\")\nvar path = require(\"path\")\nvar known = [].concat(Object.keys(json.dependencies)\n  , Object.keys(json.optionalDependencies)\n  , Object.keys(json.devDependencies)).sort()\n\ntest(\"make sure that it works without dev deps\", function (t) {\n  readInstalled(path.join(__dirname, \"../\"), {\n    log: console.error,\n    dev: false\n  }, function (er, map) {\n    t.notOk(er, \"er should be bull\")\n    t.ok(map, \"map should be data\")\n    if (er) return console.error(er.stack || er.message)\n    var deps = Object.keys(map.dependencies).sort()\n    t.equal(deps.length, known.length, \"array lengths are equal\")\n    t.deepEqual(deps, known, \"arrays should be equal\")\n    t.ok(map.dependencies.tap.extraneous, \"extraneous is set on devDep\")\n    t.end()\n  })\n})\n"]}