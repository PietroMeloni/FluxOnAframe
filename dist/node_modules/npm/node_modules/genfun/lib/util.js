'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

module.exports.isObjectProto = isObjectProto;
function isObjectProto(obj) {
  return obj === Object.prototype;
}

var _null = {};
var _undefined = {};
var Bool = Boolean;
var Num = Number;
var Str = String;
var boolCache = {
  true: new Bool(true),
  false: new Bool(false)
};
var numCache = {};
var strCache = {};

/*
 * Returns a useful dispatch object for value using a process similar to
 * the ToObject operation specified in http://es5.github.com/#x9.9
 */
module.exports.dispatchableObject = dispatchableObject;
function dispatchableObject(value) {
  // To shut up jshint, which doesn't let me turn off this warning.
  var Obj = Object;
  if (value === null) {
    return _null;
  }
  if (value === undefined) {
    return _undefined;
  }
  switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {
    case 'object':
      return value;
    case 'boolean':
      return boolCache[value];
    case 'number':
      return numCache[value] || (numCache[value] = new Num(value));
    case 'string':
      return strCache[value] || (strCache[value] = new Str(value));
    default:
      return new Obj(value);
  }
}
//# sourceMappingURL=util.js.map