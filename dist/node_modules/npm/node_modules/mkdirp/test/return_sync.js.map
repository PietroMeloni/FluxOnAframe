{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/mkdirp/test/return_sync.js"],"names":["mkdirp","require","path","fs","test","t","plan","x","Math","floor","random","pow","toString","y","z","file","join","made","sync","equal"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,KAAR,CAAb;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,KAAKF,QAAQ,IAAR,CAAT;AACA,IAAIG,OAAOH,QAAQ,KAAR,EAAeG,IAA1B;;AAEAA,KAAK,cAAL,EAAqB,UAAUC,CAAV,EAAa;AAC9BA,MAAEC,IAAF,CAAO,CAAP;AACA,QAAIC,IAAIC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBF,KAAKG,GAAL,CAAS,EAAT,EAAY,CAAZ,CAA3B,EAA2CC,QAA3C,CAAoD,EAApD,CAAR;AACA,QAAIC,IAAIL,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBF,KAAKG,GAAL,CAAS,EAAT,EAAY,CAAZ,CAA3B,EAA2CC,QAA3C,CAAoD,EAApD,CAAR;AACA,QAAIE,IAAIN,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBF,KAAKG,GAAL,CAAS,EAAT,EAAY,CAAZ,CAA3B,EAA2CC,QAA3C,CAAoD,EAApD,CAAR;;AAEA,QAAIG,OAAO,UAAU,CAACR,CAAD,EAAGM,CAAH,EAAKC,CAAL,EAAQE,IAAR,CAAa,GAAb,CAArB;;AAEA;AACA;AACA;AACA;AACA,QAAIC,OAAOjB,OAAOkB,IAAP,CAAYH,IAAZ,CAAX;AACAV,MAAEc,KAAF,CAAQF,IAAR,EAAc,UAAUV,CAAxB;;AAEA;AACAU,WAAOjB,OAAOkB,IAAP,CAAYH,IAAZ,CAAP;AACAV,MAAEc,KAAF,CAAQF,IAAR,EAAc,IAAd;AACH,CAlBD","file":"return_sync.js","sourcesContent":["var mkdirp = require('../');\nvar path = require('path');\nvar fs = require('fs');\nvar test = require('tap').test;\n\ntest('return value', function (t) {\n    t.plan(2);\n    var x = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n    var y = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n    var z = Math.floor(Math.random() * Math.pow(16,4)).toString(16);\n\n    var file = '/tmp/' + [x,y,z].join('/');\n\n    // should return the first dir created.\n    // By this point, it would be profoundly surprising if /tmp didn't\n    // already exist, since every other test makes things in there.\n    // Note that this will throw on failure, which will fail the test.\n    var made = mkdirp.sync(file);\n    t.equal(made, '/tmp/' + x);\n\n    // making the same file again should have no effect.\n    made = mkdirp.sync(file);\n    t.equal(made, null);\n});\n"]}