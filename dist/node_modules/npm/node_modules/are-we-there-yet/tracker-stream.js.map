{"version":3,"sources":["../../../../../node_modules/npm/node_modules/are-we-there-yet/tracker-stream.js"],"names":["util","require","stream","delegate","Tracker","TrackerStream","module","exports","name","size","options","Transform","call","tracker","id","on","delegateChange","inherits","trackerStream","completion","emit","prototype","_transform","data","encoding","cb","completeWork","length","push","_flush","finish","method"],"mappings":"AAAA;;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,SAASD,QAAQ,iBAAR,CAAb;AACA,IAAIE,WAAWF,QAAQ,WAAR,CAAf;AACA,IAAIG,UAAUH,QAAQ,cAAR,CAAd;;AAEA,IAAII,gBAAgBC,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAClER,SAAOS,SAAP,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BF,OAA5B;AACA,OAAKG,OAAL,GAAe,IAAIT,OAAJ,CAAYI,IAAZ,EAAkBC,IAAlB,CAAf;AACA,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKM,EAAL,GAAU,KAAKD,OAAL,CAAaC,EAAvB;AACA,OAAKD,OAAL,CAAaE,EAAb,CAAgB,QAAhB,EAA0BC,eAAe,IAAf,CAA1B;AACD,CAND;AAOAhB,KAAKiB,QAAL,CAAcZ,aAAd,EAA6BH,OAAOS,SAApC;;AAEA,SAASK,cAAT,CAAyBE,aAAzB,EAAwC;AACtC,SAAO,UAAUV,IAAV,EAAgBW,UAAhB,EAA4BN,OAA5B,EAAqC;AAC1CK,kBAAcE,IAAd,CAAmB,QAAnB,EAA6BZ,IAA7B,EAAmCW,UAAnC,EAA+CD,aAA/C;AACD,GAFD;AAGD;;AAEDb,cAAcgB,SAAd,CAAwBC,UAAxB,GAAqC,UAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,EAA1B,EAA8B;AACjE,OAAKZ,OAAL,CAAaa,YAAb,CAA0BH,KAAKI,MAAL,GAAcJ,KAAKI,MAAnB,GAA4B,CAAtD;AACA,OAAKC,IAAL,CAAUL,IAAV;AACAE;AACD,CAJD;;AAMApB,cAAcgB,SAAd,CAAwBQ,MAAxB,GAAiC,UAAUJ,EAAV,EAAc;AAC7C,OAAKZ,OAAL,CAAaiB,MAAb;AACAL;AACD,CAHD;;AAKAtB,SAASE,cAAcgB,SAAvB,EAAkC,SAAlC,EACGU,MADH,CACU,WADV,EAEGA,MAFH,CAEU,SAFV","file":"tracker-stream.js","sourcesContent":["'use strict'\nvar util = require('util')\nvar stream = require('readable-stream')\nvar delegate = require('delegates')\nvar Tracker = require('./tracker.js')\n\nvar TrackerStream = module.exports = function (name, size, options) {\n  stream.Transform.call(this, options)\n  this.tracker = new Tracker(name, size)\n  this.name = name\n  this.id = this.tracker.id\n  this.tracker.on('change', delegateChange(this))\n}\nutil.inherits(TrackerStream, stream.Transform)\n\nfunction delegateChange (trackerStream) {\n  return function (name, completion, tracker) {\n    trackerStream.emit('change', name, completion, trackerStream)\n  }\n}\n\nTrackerStream.prototype._transform = function (data, encoding, cb) {\n  this.tracker.completeWork(data.length ? data.length : 1)\n  this.push(data)\n  cb()\n}\n\nTrackerStream.prototype._flush = function (cb) {\n  this.tracker.finish()\n  cb()\n}\n\ndelegate(TrackerStream.prototype, 'tracker')\n  .method('completed')\n  .method('addWork')\n"]}