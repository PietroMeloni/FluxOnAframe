{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/fstream/lib/link-writer.js"],"names":["module","exports","LinkWriter","fs","require","Writer","inherits","path","rimraf","props","self","Error","type","Link","SymbolicLink","linkpath","error","call","prototype","_create","hard","process","platform","link","lp","resolve","dirname","clobber","readlink","_path","er","p","finish","create","code","ready","emit","end","_finish","_ended","_finished"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,UAAjB;;AAEA,IAAIC,KAAKC,QAAQ,aAAR,CAAT;AACA,IAAIC,SAASD,QAAQ,aAAR,CAAb;AACA,IAAIE,WAAWF,QAAQ,UAAR,CAAf;AACA,IAAIG,OAAOH,QAAQ,MAAR,CAAX;AACA,IAAII,SAASJ,QAAQ,QAAR,CAAb;;AAEAE,SAASJ,UAAT,EAAqBG,MAArB;;AAEA,SAASH,UAAT,CAAqBO,KAArB,EAA4B;AAC1B,MAAIC,OAAO,IAAX;AACA,MAAI,EAAEA,gBAAgBR,UAAlB,CAAJ,EAAmC;AACjC,UAAM,IAAIS,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED;AACA,MAAI,EAAGF,MAAMG,IAAN,KAAe,MAAf,IAAyBH,MAAMI,IAAhC,IACHJ,MAAMG,IAAN,KAAe,cAAf,IAAiCH,MAAMK,YADtC,CAAJ,EAC0D;AACxD,UAAM,IAAIH,KAAJ,CAAU,mBAAmBF,MAAMG,IAAnC,CAAN;AACD;;AAED,MAAIH,MAAMM,QAAN,KAAmB,EAAvB,EAA2BN,MAAMM,QAAN,GAAiB,GAAjB;AAC3B,MAAI,CAACN,MAAMM,QAAX,EAAqB;AACnBL,SAAKM,KAAL,CAAW,sCAAsCP,MAAMG,IAAvD;AACD;;AAEDP,SAAOY,IAAP,CAAY,IAAZ,EAAkBR,KAAlB;AACD;;AAEDP,WAAWgB,SAAX,CAAqBC,OAArB,GAA+B,YAAY;AACzC;AACA,MAAIT,OAAO,IAAX;AACA,MAAIU,OAAOV,KAAKE,IAAL,KAAc,MAAd,IAAwBS,QAAQC,QAAR,KAAqB,OAAxD;AACA,MAAIC,OAAOH,OAAO,MAAP,GAAgB,SAA3B;AACA,MAAII,KAAKJ,OAAOb,KAAKkB,OAAL,CAAaf,KAAKgB,OAAlB,EAA2BhB,KAAKK,QAAhC,CAAP,GAAmDL,KAAKK,QAAjE;;AAEA;AACA;AACA;AACA,MAAIK,IAAJ,EAAU,OAAOO,QAAQjB,IAAR,EAAcc,EAAd,EAAkBD,IAAlB,CAAP;;AAEVpB,KAAGyB,QAAH,CAAYlB,KAAKmB,KAAjB,EAAwB,UAAUC,EAAV,EAAcC,CAAd,EAAiB;AACvC;AACA,QAAIA,KAAKA,MAAMP,EAAf,EAAmB,OAAOQ,OAAOtB,IAAP,CAAP;AACnBiB,YAAQjB,IAAR,EAAcc,EAAd,EAAkBD,IAAlB;AACD,GAJD;AAKD,CAjBD;;AAmBA,SAASI,OAAT,CAAkBjB,IAAlB,EAAwBc,EAAxB,EAA4BD,IAA5B,EAAkC;AAChCf,SAAOE,KAAKmB,KAAZ,EAAmB,UAAUC,EAAV,EAAc;AAC/B,QAAIA,EAAJ,EAAQ,OAAOpB,KAAKM,KAAL,CAAWc,EAAX,CAAP;AACRG,WAAOvB,IAAP,EAAac,EAAb,EAAiBD,IAAjB;AACD,GAHD;AAID;;AAED,SAASU,MAAT,CAAiBvB,IAAjB,EAAuBc,EAAvB,EAA2BD,IAA3B,EAAiC;AAC/BpB,KAAGoB,IAAH,EAASC,EAAT,EAAad,KAAKmB,KAAlB,EAAyB,UAAUC,EAAV,EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIA,EAAJ,EAAQ;AACN,UAAI,CAACA,GAAGI,IAAH,KAAY,QAAZ,IACHJ,GAAGI,IAAH,KAAY,QADT,IAEHJ,GAAGI,IAAH,KAAY,OAFV,KAEsBb,QAAQC,QAAR,KAAqB,OAF/C,EAEwD;AACtDZ,aAAKyB,KAAL,GAAa,IAAb;AACAzB,aAAK0B,IAAL,CAAU,OAAV;AACA1B,aAAK0B,IAAL,CAAU,KAAV;AACA1B,aAAK0B,IAAL,CAAU,OAAV;AACA1B,aAAK2B,GAAL,GAAW3B,KAAK4B,OAAL,GAAe,YAAY,CAAE,CAAxC;AACD,OARD,MAQO,OAAO5B,KAAKM,KAAL,CAAWc,EAAX,CAAP;AACR;AACDE,WAAOtB,IAAP;AACD,GArBD;AAsBD;;AAED,SAASsB,MAAT,CAAiBtB,IAAjB,EAAuB;AACrBA,OAAKyB,KAAL,GAAa,IAAb;AACAzB,OAAK0B,IAAL,CAAU,OAAV;AACA,MAAI1B,KAAK6B,MAAL,IAAe,CAAC7B,KAAK8B,SAAzB,EAAoC9B,KAAK4B,OAAL;AACrC;;AAEDpC,WAAWgB,SAAX,CAAqBmB,GAArB,GAA2B,YAAY;AACrC;AACA,OAAKE,MAAL,GAAc,IAAd;AACA,MAAI,KAAKJ,KAAT,EAAgB;AACd,SAAKK,SAAL,GAAiB,IAAjB;AACA,SAAKF,OAAL;AACD;AACF,CAPD","file":"link-writer.js","sourcesContent":["module.exports = LinkWriter\n\nvar fs = require('graceful-fs')\nvar Writer = require('./writer.js')\nvar inherits = require('inherits')\nvar path = require('path')\nvar rimraf = require('rimraf')\n\ninherits(LinkWriter, Writer)\n\nfunction LinkWriter (props) {\n  var self = this\n  if (!(self instanceof LinkWriter)) {\n    throw new Error('LinkWriter must be called as constructor.')\n  }\n\n  // should already be established as a Link type\n  if (!((props.type === 'Link' && props.Link) ||\n    (props.type === 'SymbolicLink' && props.SymbolicLink))) {\n    throw new Error('Non-link type ' + props.type)\n  }\n\n  if (props.linkpath === '') props.linkpath = '.'\n  if (!props.linkpath) {\n    self.error('Need linkpath property to create ' + props.type)\n  }\n\n  Writer.call(this, props)\n}\n\nLinkWriter.prototype._create = function () {\n  // console.error(\" LW _create\")\n  var self = this\n  var hard = self.type === 'Link' || process.platform === 'win32'\n  var link = hard ? 'link' : 'symlink'\n  var lp = hard ? path.resolve(self.dirname, self.linkpath) : self.linkpath\n\n  // can only change the link path by clobbering\n  // For hard links, let's just assume that's always the case, since\n  // there's no good way to read them if we don't already know.\n  if (hard) return clobber(self, lp, link)\n\n  fs.readlink(self._path, function (er, p) {\n    // only skip creation if it's exactly the same link\n    if (p && p === lp) return finish(self)\n    clobber(self, lp, link)\n  })\n}\n\nfunction clobber (self, lp, link) {\n  rimraf(self._path, function (er) {\n    if (er) return self.error(er)\n    create(self, lp, link)\n  })\n}\n\nfunction create (self, lp, link) {\n  fs[link](lp, self._path, function (er) {\n    // if this is a hard link, and we're in the process of writing out a\n    // directory, it's very possible that the thing we're linking to\n    // doesn't exist yet (especially if it was intended as a symlink),\n    // so swallow ENOENT errors here and just soldier in.\n    // Additionally, an EPERM or EACCES can happen on win32 if it's trying\n    // to make a link to a directory.  Again, just skip it.\n    // A better solution would be to have fs.symlink be supported on\n    // windows in some nice fashion.\n    if (er) {\n      if ((er.code === 'ENOENT' ||\n        er.code === 'EACCES' ||\n        er.code === 'EPERM') && process.platform === 'win32') {\n        self.ready = true\n        self.emit('ready')\n        self.emit('end')\n        self.emit('close')\n        self.end = self._finish = function () {}\n      } else return self.error(er)\n    }\n    finish(self)\n  })\n}\n\nfunction finish (self) {\n  self.ready = true\n  self.emit('ready')\n  if (self._ended && !self._finished) self._finish()\n}\n\nLinkWriter.prototype.end = function () {\n  // console.error(\"LW finish in end\")\n  this._ended = true\n  if (this.ready) {\n    this._finished = true\n    this._finish()\n  }\n}\n"]}