{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/fstream/lib/dir-writer.js"],"names":["module","exports","DirWriter","Writer","require","inherits","mkdir","path","collect","props","self","error","type","Directory","JSON","stringify","call","prototype","_create","_path","dirmode","er","ready","emit","_process","write","end","_ended","add","entry","_currentEntry","_buffer","push","length","_processing","shift","_finish","p","pp","root","indexOf","_collected","pipe","parent","depth","substr","join","filter","Object","keys","forEach","k","hasOwnProperty","child","_currentChild","on","resume","_swallowErrors","warn","onend","ended"],"mappings":"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","file":"dir-writer.js","sourcesContent":["// It is expected that, when .add() returns false, the consumer\n// of the DirWriter will pause until a \"drain\" event occurs. Note\n// that this is *almost always going to be the case*, unless the\n// thing being written is some sort of unsupported type, and thus\n// skipped over.\n\nmodule.exports = DirWriter\n\nvar Writer = require('./writer.js')\nvar inherits = require('inherits')\nvar mkdir = require('mkdirp')\nvar path = require('path')\nvar collect = require('./collect.js')\n\ninherits(DirWriter, Writer)\n\nfunction DirWriter (props) {\n  var self = this\n  if (!(self instanceof DirWriter)) {\n    self.error('DirWriter must be called as constructor.', null, true)\n  }\n\n  // should already be established as a Directory type\n  if (props.type !== 'Directory' || !props.Directory) {\n    self.error('Non-directory type ' + props.type + ' ' +\n      JSON.stringify(props), null, true)\n  }\n\n  Writer.call(this, props)\n}\n\nDirWriter.prototype._create = function () {\n  var self = this\n  mkdir(self._path, Writer.dirmode, function (er) {\n    if (er) return self.error(er)\n    // ready to start getting entries!\n    self.ready = true\n    self.emit('ready')\n    self._process()\n  })\n}\n\n// a DirWriter has an add(entry) method, but its .write() doesn't\n// do anything.  Why a no-op rather than a throw?  Because this\n// leaves open the door for writing directory metadata for\n// gnu/solaris style dumpdirs.\nDirWriter.prototype.write = function () {\n  return true\n}\n\nDirWriter.prototype.end = function () {\n  this._ended = true\n  this._process()\n}\n\nDirWriter.prototype.add = function (entry) {\n  var self = this\n\n  // console.error('\\tadd', entry._path, '->', self._path)\n  collect(entry)\n  if (!self.ready || self._currentEntry) {\n    self._buffer.push(entry)\n    return false\n  }\n\n  // create a new writer, and pipe the incoming entry into it.\n  if (self._ended) {\n    return self.error('add after end')\n  }\n\n  self._buffer.push(entry)\n  self._process()\n\n  return this._buffer.length === 0\n}\n\nDirWriter.prototype._process = function () {\n  var self = this\n\n  // console.error('DW Process p=%j', self._processing, self.basename)\n\n  if (self._processing) return\n\n  var entry = self._buffer.shift()\n  if (!entry) {\n    // console.error(\"DW Drain\")\n    self.emit('drain')\n    if (self._ended) self._finish()\n    return\n  }\n\n  self._processing = true\n  // console.error(\"DW Entry\", entry._path)\n\n  self.emit('entry', entry)\n\n  // ok, add this entry\n  //\n  // don't allow recursive copying\n  var p = entry\n  var pp\n  do {\n    pp = p._path || p.path\n    if (pp === self.root._path || pp === self._path ||\n      (pp && pp.indexOf(self._path) === 0)) {\n      // console.error('DW Exit (recursive)', entry.basename, self._path)\n      self._processing = false\n      if (entry._collected) entry.pipe()\n      return self._process()\n    }\n    p = p.parent\n  } while (p)\n\n  // console.error(\"DW not recursive\")\n\n  // chop off the entry's root dir, replace with ours\n  var props = {\n    parent: self,\n    root: self.root || self,\n    type: entry.type,\n    depth: self.depth + 1\n  }\n\n  pp = entry._path || entry.path || entry.props.path\n  if (entry.parent) {\n    pp = pp.substr(entry.parent._path.length + 1)\n  }\n  // get rid of any ../../ shenanigans\n  props.path = path.join(self.path, path.join('/', pp))\n\n  // if i have a filter, the child should inherit it.\n  props.filter = self.filter\n\n  // all the rest of the stuff, copy over from the source.\n  Object.keys(entry.props).forEach(function (k) {\n    if (!props.hasOwnProperty(k)) {\n      props[k] = entry.props[k]\n    }\n  })\n\n  // not sure at this point what kind of writer this is.\n  var child = self._currentChild = new Writer(props)\n  child.on('ready', function () {\n    // console.error(\"DW Child Ready\", child.type, child._path)\n    // console.error(\"  resuming\", entry._path)\n    entry.pipe(child)\n    entry.resume()\n  })\n\n  // XXX Make this work in node.\n  // Long filenames should not break stuff.\n  child.on('error', function (er) {\n    if (child._swallowErrors) {\n      self.warn(er)\n      child.emit('end')\n      child.emit('close')\n    } else {\n      self.emit('error', er)\n    }\n  })\n\n  // we fire _end internally *after* end, so that we don't move on\n  // until any \"end\" listeners have had their chance to do stuff.\n  child.on('close', onend)\n  var ended = false\n  function onend () {\n    if (ended) return\n    ended = true\n    // console.error(\"* DW Child end\", child.basename)\n    self._currentChild = null\n    self._processing = false\n    self._process()\n  }\n}\n"]}