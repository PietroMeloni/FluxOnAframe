{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/fstream/examples/reader.js"],"names":["fstream","require","tap","fs","path","dir","dirname","__dirname","test","t","children","gotReady","ended","r","Reader","filter","parent","on","readdirSync","length","console","error","equal","type","entry","fail","er","end","process","exit","closed","ok","notOk","once"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,eAAR,CAAd;AACA,IAAIC,MAAMD,QAAQ,KAAR,CAAV;AACA,IAAIE,KAAKF,QAAQ,IAAR,CAAT;AACA,IAAIG,OAAOH,QAAQ,MAAR,CAAX;AACA,IAAII,MAAMD,KAAKE,OAAL,CAAaC,SAAb,CAAV;;AAEAL,IAAIM,IAAJ,CAAS,aAAT,EAAwB,UAAUC,CAAV,EAAa;AACnC,MAAIC,WAAW,CAAC,CAAhB;AACA,MAAIC,WAAW,KAAf;AACA,MAAIC,QAAQ,KAAZ;;AAEA,MAAIC,IAAIb,QAAQc,MAAR,CAAe;AACrBV,UAAMC,GADe;AAErBU,YAAQ,kBAAY;AAClB;AACA,aAAO,KAAKC,MAAL,KAAgBH,CAAhB,IAAqB,SAASA,CAArC;AACD;AALoB,GAAf,CAAR;;AAQAA,IAAEI,EAAF,CAAK,OAAL,EAAc,YAAY;AACxBN,eAAW,IAAX;AACAD,eAAWP,GAAGe,WAAH,CAAeb,GAAf,EAAoBc,MAA/B;AACAC,YAAQC,KAAR,CAAc,kCAAkCX,QAAhD;AACAD,MAAEa,KAAF,CAAQT,EAAEU,IAAV,EAAgB,WAAhB,EAA6B,uBAA7B;AACD,GALD;;AAOAV,IAAEI,EAAF,CAAK,OAAL,EAAc,UAAUO,KAAV,EAAiB;AAC7Bd;AACA,QAAI,CAACC,QAAL,EAAe;AACbF,QAAEgB,IAAF,CAAO,wBAAP;AACD;AACDhB,MAAEa,KAAF,CAAQE,MAAMlB,OAAd,EAAuBO,EAAET,IAAzB,EAA+B,wBAA/B;AACD,GAND;;AAQAS,IAAEI,EAAF,CAAK,OAAL,EAAc,UAAUS,EAAV,EAAc;AAC1BjB,MAAEgB,IAAF,CAAOC,EAAP;AACAjB,MAAEkB,GAAF;AACAC,YAAQC,IAAR,CAAa,CAAb;AACD,GAJD;;AAMAhB,IAAEI,EAAF,CAAK,KAAL,EAAY,YAAY;AACtBR,MAAEa,KAAF,CAAQZ,QAAR,EAAkB,CAAlB,EAAqB,+BAArB;AACAE,YAAQ,IAAR;AACD,GAHD;;AAKA,MAAIkB,SAAS,KAAb;AACAjB,IAAEI,EAAF,CAAK,OAAL,EAAc,YAAY;AACxBR,MAAEsB,EAAF,CAAKnB,KAAL,EAAY,sBAAZ;AACAH,MAAEuB,KAAF,CAAQF,MAAR,EAAgB,+BAAhB;AACAA,aAAS,IAAT;AACArB,MAAEkB,GAAF;AACD,GALD;AAMD,CA9CD;;AAgDAzB,IAAIM,IAAJ,CAAS,mBAAT,EAA8B,UAAUC,CAAV,EAAa;AACzC;AACA,MAAII,IAAIb,QAAQc,MAAR,CAAe,EAAEV,MAAM,aAAR,EAAf,CAAR;;AAEAS,IAAEoB,IAAF,CAAO,OAAP,EAAgB,UAAUP,EAAV,EAAc;AAC5BjB,MAAEsB,EAAF,CAAK,IAAL;AACAtB,MAAEkB,GAAF;AACD,GAHD;;AAKAd,IAAEI,EAAF,CAAK,KAAL,EAAY,YAAY;AACtBR,MAAEgB,IAAF,CAAO,4BAAP;AACAhB,MAAEkB,GAAF;AACD,GAHD;AAID,CAbD","file":"reader.js","sourcesContent":["var fstream = require('../fstream.js')\nvar tap = require('tap')\nvar fs = require('fs')\nvar path = require('path')\nvar dir = path.dirname(__dirname)\n\ntap.test('reader test', function (t) {\n  var children = -1\n  var gotReady = false\n  var ended = false\n\n  var r = fstream.Reader({\n    path: dir,\n    filter: function () {\n      // return this.parent === r\n      return this.parent === r || this === r\n    }\n  })\n\n  r.on('ready', function () {\n    gotReady = true\n    children = fs.readdirSync(dir).length\n    console.error('Setting expected children to ' + children)\n    t.equal(r.type, 'Directory', 'should be a directory')\n  })\n\n  r.on('entry', function (entry) {\n    children--\n    if (!gotReady) {\n      t.fail('children before ready!')\n    }\n    t.equal(entry.dirname, r.path, 'basename is parent dir')\n  })\n\n  r.on('error', function (er) {\n    t.fail(er)\n    t.end()\n    process.exit(1)\n  })\n\n  r.on('end', function () {\n    t.equal(children, 0, 'should have seen all children')\n    ended = true\n  })\n\n  var closed = false\n  r.on('close', function () {\n    t.ok(ended, 'saw end before close')\n    t.notOk(closed, 'close should only happen once')\n    closed = true\n    t.end()\n  })\n})\n\ntap.test('reader error test', function (t) {\n  // assumes non-root on a *nix system\n  var r = fstream.Reader({ path: '/etc/shadow' })\n\n  r.once('error', function (er) {\n    t.ok(true)\n    t.end()\n  })\n\n  r.on('end', function () {\n    t.fail('reader ended without error')\n    t.end()\n  })\n})\n"]}