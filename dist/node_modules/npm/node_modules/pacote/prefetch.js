'use strict';

var BB = require('bluebird');

var cacache = require('cacache');
var finished = BB.promisify(require('mississippi').finished);
var optCheck = require('./lib/util/opt-check');
var npa = require('npm-package-arg');

module.exports = prefetch;
function prefetch(spec, opts) {
  opts = optCheck(opts);
  spec = npa(spec, opts.where);
  opts.log.warn('prefetch', 'pacote.prefetch() is deprecated. Please use pacote.tarball() instead.');
  var startTime = Date.now();
  if (!opts.cache) {
    opts.log.info('prefetch', 'skipping prefetch: no cache provided');
    return BB.resolve({ spec: spec });
  }
  if (opts.integrity && !opts.preferOnline) {
    opts.log.silly('prefetch', 'checking if', opts.integrity, 'is already cached');
    return cacache.get.hasContent(opts.cache, opts.integrity).then(function (info) {
      if (info) {
        opts.log.silly('prefetch', 'content already exists for ' + spec + ' (' + (Date.now() - startTime) + 'ms)');
        return {
          spec: spec,
          integrity: info.integrity,
          size: info.size,
          byDigest: true
        };
      } else {
        return prefetchByManifest(startTime, spec, opts);
      }
    });
  } else {
    opts.log.silly('prefetch', 'no integrity hash provided for ' + spec + ' - fetching by manifest');
    return prefetchByManifest(startTime, spec, opts);
  }
}

var fetch = void 0;
function prefetchByManifest(start, spec, opts) {
  var manifest = void 0;
  var integrity = void 0;
  return BB.resolve().then(function () {
    if (!fetch) {
      fetch = require('./lib/fetch');
    }
    var stream = fetch.tarball(spec, opts);
    if (!stream) {
      return;
    }
    stream.on('data', function () {});
    stream.on('manifest', function (m) {
      manifest = m;
    });
    stream.on('integrity', function (i) {
      integrity = i;
    });
    return finished(stream);
  }).then(function () {
    opts.log.silly('prefetch', spec + ' done in ' + (Date.now() - start) + 'ms');
    return {
      manifest: manifest,
      spec: spec,
      integrity: integrity || manifest && manifest._integrity,
      byDigest: false
    };
  });
}
//# sourceMappingURL=prefetch.js.map