{"version":3,"sources":["../../../../../node_modules/npm/node_modules/pacote/manifest.js"],"names":["fetchManifest","require","manifest","finalizeManifest","optCheck","pinflight","npa","module","exports","spec","opts","where","label","name","saveSpec","fetchSpec","type","cache","registry","scope","join","startTime","Date","now","then","rawManifest","annotate","_from","raw","_requested","_spec","_where","elapsedTime","log","silly"],"mappings":"AAAA;;AAEA,IAAMA,gBAAgBC,QAAQ,aAAR,EAAuBC,QAA7C;AACA,IAAMC,mBAAmBF,QAAQ,yBAAR,CAAzB;AACA,IAAMG,WAAWH,QAAQ,sBAAR,CAAjB;AACA,IAAMI,YAAYJ,QAAQ,kBAAR,CAAlB;AACA,IAAMK,MAAML,QAAQ,iBAAR,CAAZ;;AAEAM,OAAOC,OAAP,GAAiBN,QAAjB;AACA,SAASA,QAAT,CAAmBO,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7BA,SAAON,SAASM,IAAT,CAAP;AACAD,SAAOH,IAAIG,IAAJ,EAAUC,KAAKC,KAAf,CAAP;;AAEA,MAAMC,QAAQ,CACZH,KAAKI,IADO,EAEZJ,KAAKK,QAAL,IAAiBL,KAAKM,SAFV,EAGZN,KAAKO,IAHO,EAIZN,KAAKO,KAJO,EAKZP,KAAKQ,QALO,EAMZR,KAAKS,KANO,EAOZC,IAPY,CAOP,GAPO,CAAd;AAQA,SAAOf,UAAUO,KAAV,EAAiB,YAAM;AAC5B,QAAMS,YAAYC,KAAKC,GAAL,EAAlB;AACA,WAAOvB,cAAcS,IAAd,EAAoBC,IAApB,EAA0Bc,IAA1B,CAA+B,uBAAe;AACnD,aAAOrB,iBAAiBsB,WAAjB,EAA8BhB,IAA9B,EAAoCC,IAApC,CAAP;AACD,KAFM,EAEJc,IAFI,CAEC,oBAAY;AAClB,UAAId,KAAKgB,QAAT,EAAmB;AACjBxB,iBAASyB,KAAT,GAAiBlB,KAAKK,QAAL,IAAiBL,KAAKmB,GAAvC;AACA1B,iBAAS2B,UAAT,GAAsBpB,IAAtB;AACAP,iBAAS4B,KAAT,GAAiBrB,KAAKmB,GAAtB;AACA1B,iBAAS6B,MAAT,GAAkBrB,KAAKC,KAAvB;AACD;AACD,UAAMqB,cAAcV,KAAKC,GAAL,KAAaF,SAAjC;AACAX,WAAKuB,GAAL,CAASC,KAAT,CAAe,QAAf,EAA4BzB,KAAKO,IAAjC,sBAAsDP,KAAKI,IAA3D,UAAmEJ,KAAKK,QAAL,IAAiBL,KAAKM,SAAzF,qBAAiHiB,WAAjH;AACA,aAAO9B,QAAP;AACD,KAZM,CAAP;AAaD,GAfM,CAAP;AAgBD","file":"manifest.js","sourcesContent":["'use strict'\n\nconst fetchManifest = require('./lib/fetch').manifest\nconst finalizeManifest = require('./lib/finalize-manifest')\nconst optCheck = require('./lib/util/opt-check')\nconst pinflight = require('promise-inflight')\nconst npa = require('npm-package-arg')\n\nmodule.exports = manifest\nfunction manifest (spec, opts) {\n  opts = optCheck(opts)\n  spec = npa(spec, opts.where)\n\n  const label = [\n    spec.name,\n    spec.saveSpec || spec.fetchSpec,\n    spec.type,\n    opts.cache,\n    opts.registry,\n    opts.scope\n  ].join(':')\n  return pinflight(label, () => {\n    const startTime = Date.now()\n    return fetchManifest(spec, opts).then(rawManifest => {\n      return finalizeManifest(rawManifest, spec, opts)\n    }).then(manifest => {\n      if (opts.annotate) {\n        manifest._from = spec.saveSpec || spec.raw\n        manifest._requested = spec\n        manifest._spec = spec.raw\n        manifest._where = opts.where\n      }\n      const elapsedTime = Date.now() - startTime\n      opts.log.silly('pacote', `${spec.type} manifest for ${spec.name}@${spec.saveSpec || spec.fetchSpec} fetched in ${elapsedTime}ms`)\n      return manifest\n    })\n  })\n}\n"]}