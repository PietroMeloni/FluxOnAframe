{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/pacote/lib/fetchers/registry/tarball.js"],"names":["BB","require","fetch","manifest","optCheck","PassThrough","pickRegistry","ssri","url","module","exports","tarball","spec","opts","registry","stream","mani","resolved","indexOf","resolve","name","version","fetchSpec","_integrity","integrity","_resolved","_fakeChild","then","emit","fetchStream","fromManifest","on","i","err","pipe","catch","scope","uri","getTarballUrl","Object","assign","headers","algorithms","parse","pickAlgorithm","hash","res","get","decodeURIComponent","body","reg","hostname","protocol","port","host","href","format"],"mappings":"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","file":"tarball.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst fetch = require('./fetch')\nconst manifest = require('./manifest')\nconst optCheck = require('../../util/opt-check')\nconst PassThrough = require('stream').PassThrough\nconst pickRegistry = require('./pick-registry')\nconst ssri = require('ssri')\nconst url = require('url')\n\nmodule.exports = tarball\nfunction tarball (spec, opts) {\n  opts = optCheck(opts)\n  const registry = pickRegistry(spec, opts)\n  const stream = new PassThrough()\n  let mani\n  if (\n    opts.resolved &&\n    // spec.type === 'version' &&\n    opts.resolved.indexOf(registry) === 0\n  ) {\n    // fakeChild is a shortcut to avoid looking up a manifest!\n    mani = BB.resolve({\n      name: spec.name,\n      version: spec.fetchSpec,\n      _integrity: opts.integrity,\n      _resolved: opts.resolved,\n      _fakeChild: true\n    })\n  } else {\n    // We can't trust opts.resolved if it's going to a separate host.\n    mani = manifest(spec, opts)\n  }\n\n  mani.then(mani => {\n    !mani._fakeChild && stream.emit('manifest', mani)\n    const fetchStream = fromManifest(mani, spec, opts).on(\n      'integrity', i => stream.emit('integrity', i)\n    )\n    fetchStream.on('error', err => stream.emit('error', err))\n    fetchStream.pipe(stream)\n    return null\n  }).catch(err => stream.emit('error', err))\n  return stream\n}\n\nmodule.exports.fromManifest = fromManifest\nfunction fromManifest (manifest, spec, opts) {\n  opts = optCheck(opts)\n  opts.scope = spec.scope || opts.scope\n  const stream = new PassThrough()\n  const registry = pickRegistry(spec, opts)\n  const uri = getTarballUrl(spec, registry, manifest, opts)\n  fetch(uri, registry, Object.assign({\n    headers: {\n      'pacote-req-type': 'tarball',\n      'pacote-pkg-id': `registry:${manifest.name}@${uri}`\n    },\n    integrity: manifest._integrity,\n    algorithms: [\n      manifest._integrity\n        ? ssri.parse(manifest._integrity).pickAlgorithm()\n        : 'sha1'\n    ],\n    spec\n  }, opts))\n    .then(res => {\n      const hash = res.headers.get('x-local-cache-hash')\n      if (hash) {\n        stream.emit('integrity', decodeURIComponent(hash))\n      }\n      res.body.on('error', err => stream.emit('error', err))\n      res.body.pipe(stream)\n      return null\n    })\n    .catch(err => stream.emit('error', err))\n  return stream\n}\n\nfunction getTarballUrl (spec, registry, mani, opts) {\n  const reg = url.parse(registry)\n  const tarball = url.parse(mani._resolved)\n  // https://github.com/npm/npm/pull/9471\n  //\n  // TL;DR: Some alternative registries host tarballs on http and packuments\n  // on https, and vice-versa. There's also a case where people who can't use\n  // SSL to access the npm registry, for example, might use\n  // `--registry=http://registry.npmjs.org/`. In this case, we need to\n  // rewrite `tarball` to match the protocol.\n  //\n  if (reg.hostname === tarball.hostname && reg.protocol !== tarball.protocol) {\n    tarball.protocol = reg.protocol\n    // Ports might be same host different protocol!\n    if (reg.port !== tarball.port) {\n      delete tarball.host\n      tarball.port = reg.port\n    }\n    delete tarball.href\n  }\n  return url.format(tarball)\n}\n"]}