{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/pacote/lib/fetchers/registry/manifest.js"],"names":["BB","require","fetch","LRU","optCheck","pickManifest","pickRegistry","ssri","url","CORGI_DOC","JSON_DOC","module","exports","manifest","spec","opts","registry","uri","metadataUrl","escapedName","getManifest","then","annotateManifest","name","normalized","slice","resolve","fetchPackument","packument","fetchSpec","defaultTag","includeDeprecated","err","code","_cached","offline","log","silly","preferOffline","preferOnline","MEMO","length","m","_contentLength","max","maxAge","clearMemoized","reset","mem","pickMem","has","get","Object","assign","headers","accept","fullMetadata","integrity","res","json","decodeURIComponent","set","ObjProxy","key","obj","val","PROX","memoize","shasum","dist","_integrity","_shasum","fromHex","toString","_resolved","tarball","Error","version","_warnings","push","message"],"mappings":"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","file":"manifest.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst fetch = require('./fetch')\nconst LRU = require('lru-cache')\nconst optCheck = require('../../util/opt-check')\nconst pickManifest = require('npm-pick-manifest')\nconst pickRegistry = require('./pick-registry')\nconst ssri = require('ssri')\nconst url = require('url')\n\n// Corgis are cute. 🐕🐶\nconst CORGI_DOC = 'application/vnd.npm.install-v1+json; q=1.0, application/json; q=0.8, */*'\nconst JSON_DOC = 'application/json'\n\nmodule.exports = manifest\nfunction manifest (spec, opts) {\n  opts = optCheck(opts)\n\n  const registry = pickRegistry(spec, opts)\n  const uri = metadataUrl(registry, spec.escapedName)\n\n  return getManifest(uri, registry, spec, opts).then(manifest => {\n    return annotateManifest(uri, registry, manifest)\n  })\n}\n\nfunction metadataUrl (registry, name) {\n  const normalized = registry.slice(-1) !== '/'\n    ? registry + '/'\n    : registry\n  return url.resolve(normalized, name)\n}\n\nfunction getManifest (uri, registry, spec, opts) {\n  return fetchPackument(uri, spec, registry, opts).then(packument => {\n    try {\n      return pickManifest(packument, spec.fetchSpec, {\n        defaultTag: opts.defaultTag,\n        includeDeprecated: opts.includeDeprecated\n      })\n    } catch (err) {\n      if (err.code === 'ETARGET' && packument._cached && !opts.offline) {\n        opts.log.silly(\n          'registry:manifest',\n          `no matching version for ${spec.name}@${spec.fetchSpec} in the cache. Forcing revalidation`\n        )\n        opts.preferOffline = false\n        opts.preferOnline = true\n        return fetchPackument(uri, spec, registry, opts).then(packument => {\n          return pickManifest(packument, spec.fetchSpec, {\n            defaultTag: opts.defaultTag\n          })\n        })\n      } else {\n        throw err\n      }\n    }\n  })\n}\n\n// TODO - make this an opt\nconst MEMO = new LRU({\n  length: m => m._contentLength,\n  max: 200 * 1024 * 1024, // 200MB\n  maxAge: 30 * 1000 // 30s\n})\n\nmodule.exports.clearMemoized = clearMemoized\nfunction clearMemoized () {\n  MEMO.reset()\n}\n\nfunction fetchPackument (uri, spec, registry, opts) {\n  const mem = pickMem(opts)\n  if (mem && !opts.preferOnline && mem.has(uri)) {\n    return BB.resolve(mem.get(uri))\n  }\n\n  return fetch(uri, registry, Object.assign({\n    headers: {\n      'pacote-req-type': 'packument',\n      'pacote-pkg-id': `registry:${manifest.name}`,\n      accept: opts.fullMetadata ? JSON_DOC : CORGI_DOC\n    },\n    spec\n  }, opts, {\n    // Force integrity to null: we never check integrity hashes for manifests\n    integrity: null\n  })).then(res => res.json().then(packument => {\n    packument._cached = decodeURIComponent(res.headers.has('x-local-cache'))\n    packument._contentLength = +res.headers.get('content-length')\n    // NOTE - we need to call pickMem again because proxy\n    //        objects get reused!\n    const mem = pickMem(opts)\n    if (mem) {\n      mem.set(uri, packument)\n    }\n    return packument\n  }))\n}\n\nclass ObjProxy {\n  get (key) { return this.obj[key] }\n  set (key, val) { this.obj[key] = val }\n}\n\n// This object is used synchronously and immediately, so\n// we can safely reuse it instead of consing up new ones\nconst PROX = new ObjProxy()\nfunction pickMem (opts) {\n  if (!opts || !opts.memoize) {\n    return MEMO\n  } else if (opts.memoize.get && opts.memoize.set) {\n    return opts.memoize\n  } else if (typeof opts.memoize === 'object') {\n    PROX.obj = opts.memoize\n    return PROX\n  } else {\n    return null\n  }\n}\n\nfunction annotateManifest (uri, registry, manifest) {\n  const shasum = manifest.dist && manifest.dist.shasum\n  manifest._integrity = manifest.dist && manifest.dist.integrity\n  manifest._shasum = shasum\n  if (!manifest._integrity && shasum) {\n    // Use legacy dist.shasum field if available.\n    manifest._integrity = ssri.fromHex(shasum, 'sha1').toString()\n  }\n  manifest._resolved = (\n    manifest.dist && manifest.dist.tarball\n  )\n  if (!manifest._resolved) {\n    const err = new Error(\n      `Manifest for ${manifest.name}@${manifest.version} from ${uri} is missing a tarball url (pkg.dist.tarball). Guessing a default.`\n    )\n    err.code = 'ENOTARBALL'\n    err.manifest = manifest\n    if (!manifest._warnings) { manifest._warnings = [] }\n    manifest._warnings.push(err.message)\n    manifest._resolved =\n    `${registry}/${manifest.name}/-/${manifest.name}-${manifest.version}.tgz`\n  }\n  return manifest\n}\n"]}