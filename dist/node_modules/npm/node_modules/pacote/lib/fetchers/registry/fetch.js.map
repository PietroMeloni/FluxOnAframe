{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/pacote/lib/fetchers/registry/fetch.js"],"names":["BB","require","Buffer","checkWarnings","fetch","registryKey","url","module","exports","regFetch","uri","registry","opts","startTime","Date","now","agent","algorithms","cache","getCacheMode","cacheManager","ca","cert","headers","getHeaders","integrity","key","localAddress","maxSockets","memoize","noProxy","Promise","proxy","referer","refer","retry","strictSSL","timeout","uid","gid","then","res","has","log","warn","get","status","err","Error","statusText","spec","code","response","logRequest","body","on","elapsedTime","attempt","attemptStr","cacheStr","http","offline","preferOffline","preferOnline","Object","assign","isFromCI","projectScope","npmSession","userAgent","auth","shouldAuth","alwaysAuth","parse","host","token","authorization","username","password","encoded","from","toString","_auth"],"mappings":"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","file":"fetch.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\nconst Buffer = require('safe-buffer').Buffer\n\nconst checkWarnings = require('./check-warning-header')\nconst fetch = require('make-fetch-happen')\nconst registryKey = require('./registry-key')\nconst url = require('url')\n\nmodule.exports = regFetch\nfunction regFetch (uri, registry, opts) {\n  const startTime = Date.now()\n  return fetch(uri, {\n    agent: opts.agent,\n    algorithms: opts.algorithms,\n    cache: getCacheMode(opts),\n    cacheManager: opts.cache,\n    ca: opts.ca,\n    cert: opts.cert,\n    headers: getHeaders(uri, registry, opts),\n    integrity: opts.integrity,\n    key: opts.key,\n    localAddress: opts.localAddress,\n    maxSockets: opts.maxSockets,\n    memoize: opts.memoize,\n    noProxy: opts.noProxy,\n    Promise: BB,\n    proxy: opts.proxy,\n    referer: opts.refer,\n    retry: opts.retry,\n    strictSSL: !!opts.strictSSL,\n    timeout: opts.timeout,\n    uid: opts.uid,\n    gid: opts.gid\n  }).then(res => {\n    if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) {\n      opts.log.warn('notice', res.headers.get('npm-notice'))\n    }\n    checkWarnings(res, registry, opts)\n    if (res.status >= 400) {\n      const err = new Error(`${res.status} ${res.statusText}: ${\n        opts.spec ? opts.spec : uri\n      }`)\n      err.code = `E${res.status}`\n      err.uri = uri\n      err.response = res\n      err.spec = opts.spec\n      logRequest(uri, res, startTime, opts)\n      throw err\n    } else {\n      res.body.on('end', () => logRequest(uri, res, startTime, opts))\n      return res\n    }\n  })\n}\n\nfunction logRequest (uri, res, startTime, opts) {\n  const elapsedTime = Date.now() - startTime\n  const attempt = res.headers.get('x-fetch-attempts')\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n  const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\n  opts.log.http(\n    'fetch',\n    `GET ${res.status} ${uri} ${elapsedTime}ms${attemptStr}${cacheStr}`\n  )\n}\n\nfunction getCacheMode (opts) {\n  return opts.offline\n    ? 'only-if-cached'\n    : opts.preferOffline\n      ? 'force-cache'\n      : opts.preferOnline\n        ? 'no-cache'\n        : 'default'\n}\n\nfunction getHeaders (uri, registry, opts) {\n  const headers = Object.assign({\n    'npm-in-ci': opts.isFromCI,\n    'npm-scope': opts.projectScope,\n    'npm-session': opts.npmSession,\n    'user-agent': opts.userAgent,\n    'referer': opts.refer\n  }, opts.headers)\n  // check for auth settings specific to this registry\n  let auth = (\n    opts.auth &&\n    opts.auth[registryKey(registry)]\n  ) || opts.auth\n  // If a tarball is hosted on a different place than the manifest, only send\n  // credentials on `alwaysAuth`\n  const shouldAuth = auth && (\n    auth.alwaysAuth ||\n    url.parse(uri).host === url.parse(registry).host\n  )\n  if (shouldAuth && auth.token) {\n    headers.authorization = `Bearer ${auth.token}`\n  } else if (shouldAuth && auth.username && auth.password) {\n    const encoded = Buffer.from(\n      `${auth.username}:${auth.password}`, 'utf8'\n    ).toString('base64')\n    headers.authorization = `Basic ${encoded}`\n  } else if (shouldAuth && auth._auth) {\n    headers.authorization = `Basic ${auth._auth}`\n  }\n  return headers\n}\n"]}