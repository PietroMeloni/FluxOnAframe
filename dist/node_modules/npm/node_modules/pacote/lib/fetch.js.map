{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/pacote/lib/fetch.js"],"names":["duck","require","Fetcher","define","manifest","tarball","fromManifest","clearMemoized","name","module","exports","spec","opts","fetcher","getFetcher","type","fetchers","Object","keys","forEach","k","Error"],"mappings":"AAAA;;AAEA,IAAMA,OAAOC,QAAQ,WAAR,CAAb;;AAEA,IAAMC,UAAUF,KAAKG,MAAL,CAAY,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB,CAAZ,EAA0C;AACxDC,YAAU,CAAC,MAAD,EAAS,MAAT,CAD8C;AAExDC,WAAS,CAAC,MAAD,EAAS,MAAT,CAF+C;AAGxDC,gBAAc,CAAC,UAAD,EAAa,MAAb,EAAqB,MAArB,CAH0C;AAIxDC,eAJwD,2BAIvC,CAAE;AAJqC,CAA1C,EAKb,EAACC,MAAM,SAAP,EALa,CAAhB;AAMAC,OAAOC,OAAP,GAAiBR,OAAjB;;AAEAO,OAAOC,OAAP,CAAeN,QAAf,GAA0BA,QAA1B;AACA,SAASA,QAAT,CAAmBO,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7B,MAAMC,UAAUC,WAAWH,KAAKI,IAAhB,CAAhB;AACA,SAAOF,QAAQT,QAAR,CAAiBO,IAAjB,EAAuBC,IAAvB,CAAP;AACD;;AAEDH,OAAOC,OAAP,CAAeL,OAAf,GAAyBA,OAAzB;AACA,SAASA,OAAT,CAAkBM,IAAlB,EAAwBC,IAAxB,EAA8B;AAC5B,SAAOE,WAAWH,KAAKI,IAAhB,EAAsBV,OAAtB,CAA8BM,IAA9B,EAAoCC,IAApC,CAAP;AACD;;AAEDH,OAAOC,OAAP,CAAeJ,YAAf,GAA8BA,YAA9B;AACA,SAASA,YAAT,CAAuBF,QAAvB,EAAiCO,IAAjC,EAAuCC,IAAvC,EAA6C;AAC3C,SAAOE,WAAWH,KAAKI,IAAhB,EAAsBT,YAAtB,CAAmCF,QAAnC,EAA6CO,IAA7C,EAAmDC,IAAnD,CAAP;AACD;;AAED,IAAMI,WAAW,EAAjB;;AAEAP,OAAOC,OAAP,CAAeH,aAAf,GAA+BA,aAA/B;AACA,SAASA,aAAT,GAA0B;AACxBU,SAAOC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA8B,aAAK;AACjCH,aAASI,CAAT,EAAYb,aAAZ;AACD,GAFD;AAGD;;AAED,SAASO,UAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAI,CAACC,SAASD,IAAT,CAAL,EAAqB;AACnB;AACA;AACA,YAAQA,IAAR;AACE,WAAK,WAAL;AACEC,iBAASD,IAAT,IAAiBd,QAAQ,sBAAR,CAAjB;AACA;AACF,WAAK,MAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,iBAAR,CAAjB;AACA;AACF,WAAK,KAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,gBAAR,CAAjB;AACA;AACF,WAAK,QAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,mBAAR,CAAjB;AACA;AACF,WAAK,OAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,kBAAR,CAAjB;AACA;AACF,WAAK,QAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,mBAAR,CAAjB;AACA;AACF,WAAK,KAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,gBAAR,CAAjB;AACA;AACF,WAAK,SAAL;AACEe,iBAASD,IAAT,IAAiBd,QAAQ,oBAAR,CAAjB;AACA;AACF;AACE,cAAM,IAAIoB,KAAJ,yCAAgDN,IAAhD,CAAN;AA1BJ;AA4BD;AACD,SAAOC,SAASD,IAAT,CAAP;AACD","file":"fetch.js","sourcesContent":["'use strict'\n\nconst duck = require('protoduck')\n\nconst Fetcher = duck.define(['spec', 'opts', 'manifest'], {\n  manifest: ['spec', 'opts'],\n  tarball: ['spec', 'opts'],\n  fromManifest: ['manifest', 'spec', 'opts'],\n  clearMemoized () {}\n}, {name: 'Fetcher'})\nmodule.exports = Fetcher\n\nmodule.exports.manifest = manifest\nfunction manifest (spec, opts) {\n  const fetcher = getFetcher(spec.type)\n  return fetcher.manifest(spec, opts)\n}\n\nmodule.exports.tarball = tarball\nfunction tarball (spec, opts) {\n  return getFetcher(spec.type).tarball(spec, opts)\n}\n\nmodule.exports.fromManifest = fromManifest\nfunction fromManifest (manifest, spec, opts) {\n  return getFetcher(spec.type).fromManifest(manifest, spec, opts)\n}\n\nconst fetchers = {}\n\nmodule.exports.clearMemoized = clearMemoized\nfunction clearMemoized () {\n  Object.keys(fetchers).forEach(k => {\n    fetchers[k].clearMemoized()\n  })\n}\n\nfunction getFetcher (type) {\n  if (!fetchers[type]) {\n    // This is spelled out both to prevent sketchy stuff and to make life\n    // easier for bundlers/preprocessors.\n    switch (type) {\n      case 'directory':\n        fetchers[type] = require('./fetchers/directory')\n        break\n      case 'file':\n        fetchers[type] = require('./fetchers/file')\n        break\n      case 'git':\n        fetchers[type] = require('./fetchers/git')\n        break\n      case 'hosted':\n        fetchers[type] = require('./fetchers/hosted')\n        break\n      case 'range':\n        fetchers[type] = require('./fetchers/range')\n        break\n      case 'remote':\n        fetchers[type] = require('./fetchers/remote')\n        break\n      case 'tag':\n        fetchers[type] = require('./fetchers/tag')\n        break\n      case 'version':\n        fetchers[type] = require('./fetchers/version')\n        break\n      default:\n        throw new Error(`Invalid dependency type requested: ${type}`)\n    }\n  }\n  return fetchers[type]\n}\n"]}