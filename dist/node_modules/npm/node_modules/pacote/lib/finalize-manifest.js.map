{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/pacote/lib/finalize-manifest.js"],"names":["BB","require","cacache","cacheKey","fetchFromManifest","fromManifest","finished","minimatch","normalize","optCheck","path","pipe","promisify","ssri","tar","module","exports","finalizeManifest","pkg","spec","opts","key","finalKey","cachedManifest","cache","preferOnline","fullMetadata","get","info","resolve","then","cached","metadata","manifest","Manifest","tarballedProps","name","props","id","_id","type","put","fromTarball","Object","assign","version","engines","cpu","os","dependencies","optionalDependencies","devDependencies","bundled","bundledDependencies","bundleDependencies","peerDependencies","deprecated","_resolved","_integrity","_shasum","_shrinkwrap","bin","Array","isArray","m","directories","reduce","acc","mf","charAt","f","basename","join","readme","needsShrinkwrap","_hasShrinkwrap","needsBin","needsIntegrity","needsShasum","needsHash","needsManifest","needsExtract","tarStream","extracted","Parse","jsonFromStream","getPaths","fromStream","algorithms","sr","mani","paths","hash","err","Error","code","extraProps","resume","length","dirBin","forEach","filePath","relative","fetchSpec","sha512","toString","sha1","hexDigest","filename","dataStream","fromNode","on","cb","entry","header","replace","data","JSON","parse","d","handler","push","_uniqueResolved","stringify"],"mappings":"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","file":"finalize-manifest.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst cacache = require('cacache')\nconst cacheKey = require('./util/cache-key')\nconst fetchFromManifest = require('./fetch').fromManifest\nconst finished = require('./util/finished')\nconst minimatch = require('minimatch')\nconst normalize = require('normalize-package-data')\nconst optCheck = require('./util/opt-check')\nconst path = require('path')\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst ssri = require('ssri')\nconst tar = require('tar')\n\n// `finalizeManifest` takes as input the various kinds of manifests that\n// manifest handlers ('lib/fetchers/*.js#manifest()') return, and makes sure\n// they are:\n//\n// * filled out with any required data that the handler couldn't fill in\n// * formatted consistently\n// * cached so we don't have to repeat this work more than necessary\n//\n// The biggest thing this package might do is do a full tarball extraction in\n// order to find missing bits of metadata required by the npm installer. For\n// example, it will fill in `_shrinkwrap`, `_integrity`, and other details that\n// the plain manifest handlers would require a tarball to fill out. If a\n// handler returns everything necessary, this process is skipped.\n//\n// If we get to the tarball phase, the corresponding tarball handler for the\n// requested type will be invoked and the entire tarball will be read from the\n// stream.\n//\nmodule.exports = finalizeManifest\nfunction finalizeManifest (pkg, spec, opts) {\n  const key = finalKey(pkg, spec)\n  opts = optCheck(opts)\n\n  const cachedManifest = (opts.cache && key && !opts.preferOnline && !opts.fullMetadata)\n    ? cacache.get.info(opts.cache, key, opts)\n    : BB.resolve(null)\n\n  return cachedManifest.then(cached => {\n    if (cached && cached.metadata.manifest) {\n      return new Manifest(cached.metadata.manifest)\n    } else {\n      return tarballedProps(pkg, spec, opts).then(props => {\n        return pkg && pkg.name\n          ? new Manifest(pkg, props, opts.fullMetadata)\n          : new Manifest(props, null, opts.fullMetadata)\n      }).then(manifest => {\n        const cacheKey = key || finalKey(manifest, spec)\n        if (!opts.cache || !cacheKey) {\n          return manifest\n        } else {\n          opts.metadata = {\n            id: manifest._id,\n            manifest,\n            type: 'finalized-manifest'\n          }\n          return cacache.put(\n            opts.cache, cacheKey, '.', opts\n          ).then(() => manifest)\n        }\n      })\n    }\n  })\n}\n\nmodule.exports.Manifest = Manifest\nfunction Manifest (pkg, fromTarball, fullMetadata) {\n  fromTarball = fromTarball || {}\n  if (fullMetadata) {\n    Object.assign(this, pkg)\n  }\n  this.name = pkg.name\n  this.version = pkg.version\n  this.engines = pkg.engines || fromTarball.engines\n  this.cpu = pkg.cpu || fromTarball.cpu\n  this.os = pkg.os || fromTarball.os\n  this.dependencies = pkg.dependencies || {}\n  this.optionalDependencies = pkg.optionalDependencies || {}\n  this.devDependencies = pkg.devDependencies || {}\n  const bundled = (\n    pkg.bundledDependencies ||\n    pkg.bundleDependencies ||\n    false\n  )\n  this.bundleDependencies = bundled\n  this.peerDependencies = pkg.peerDependencies || {}\n  this.deprecated = pkg.deprecated || false\n\n  // These depend entirely on each handler\n  this._resolved = pkg._resolved\n\n  // Not all handlers (or registries) provide these out of the box,\n  // and if they don't, we need to extract and read the tarball ourselves.\n  // These are details required by the installer.\n  this._integrity = pkg._integrity || fromTarball._integrity || null\n  this._shasum = pkg._shasum || fromTarball._shasum || null\n  this._shrinkwrap = pkg._shrinkwrap || fromTarball._shrinkwrap || null\n  this.bin = pkg.bin || fromTarball.bin || null\n\n  if (this.bin && Array.isArray(this.bin)) {\n    // Code yanked from read-package-json.\n    const m = (pkg.directories && pkg.directories.bin) || '.'\n    this.bin = this.bin.reduce((acc, mf) => {\n      if (mf && mf.charAt(0) !== '.') {\n        const f = path.basename(mf)\n        acc[f] = path.join(m, mf)\n      }\n      return acc\n    }, {})\n  }\n\n  this._id = null\n\n  // TODO - freezing and inextensibility pending npm changes. See test suite.\n  // Object.preventExtensions(this)\n  normalize(this)\n\n  // I don't want this why did you give it to me. Go away. 🔥🔥🔥🔥\n  delete this.readme\n\n  // Object.freeze(this)\n}\n\n// Some things aren't filled in by standard manifest fetching.\n// If this function needs to do its work, it will grab the\n// package tarball, extract it, and take whatever it needs\n// from the stream.\nfunction tarballedProps (pkg, spec, opts) {\n  const needsShrinkwrap = (!pkg || (\n    pkg._hasShrinkwrap !== false &&\n    !pkg._shrinkwrap\n  ))\n  const needsBin = !!(!pkg || (\n    !pkg.bin &&\n    pkg.directories &&\n    pkg.directories.bin\n  ))\n  const needsIntegrity = !pkg || (!pkg._integrity && pkg._integrity !== false)\n  const needsShasum = !pkg || (!pkg._shasum && pkg._shasum !== false)\n  const needsHash = needsIntegrity || needsShasum\n  const needsManifest = !pkg || !pkg.name\n  const needsExtract = needsShrinkwrap || needsBin || needsManifest\n  if (!needsShrinkwrap && !needsBin && !needsHash && !needsManifest) {\n    return BB.resolve({})\n  } else {\n    opts = optCheck(opts)\n    const tarStream = fetchFromManifest(pkg, spec, opts)\n    const extracted = needsExtract && new tar.Parse()\n    return BB.join(\n      needsShrinkwrap && jsonFromStream('npm-shrinkwrap.json', extracted),\n      needsManifest && jsonFromStream('package.json', extracted),\n      needsBin && getPaths(extracted),\n      needsHash && ssri.fromStream(tarStream, {algorithms: ['sha1', 'sha512']}),\n      needsExtract && pipe(tarStream, extracted),\n      (sr, mani, paths, hash) => {\n        if (needsManifest && !mani) {\n          const err = new Error(`Non-registry package missing package.json: ${spec}.`)\n          err.code = 'ENOPACKAGEJSON'\n          throw err\n        }\n        const extraProps = mani || {}\n        delete extraProps._resolved\n        // drain out the rest of the tarball\n        tarStream.resume()\n        // if we have directories.bin, we need to collect any matching files\n        // to add to bin\n        if (paths && paths.length) {\n          const dirBin = mani\n            ? (mani && mani.directories && mani.directories.bin)\n            : (pkg && pkg.directories && pkg.directories.bin)\n          if (dirBin) {\n            extraProps.bin = {}\n            paths.forEach(filePath => {\n              if (minimatch(filePath, dirBin + '/**')) {\n                const relative = path.relative(dirBin, filePath)\n                if (relative && relative[0] !== '.') {\n                  extraProps.bin[path.basename(relative)] = path.join(dirBin, relative)\n                }\n              }\n            })\n          }\n        }\n        return Object.assign(extraProps, {\n          _shrinkwrap: sr,\n          _resolved: (mani && mani._resolved) ||\n          (pkg && pkg._resolved) ||\n          spec.fetchSpec,\n          _integrity: needsIntegrity && hash && hash.sha512 && hash.sha512[0].toString(),\n          _shasum: needsShasum && hash && hash.sha1 && hash.sha1[0].hexDigest()\n        })\n      }\n    )\n  }\n}\n\nfunction jsonFromStream (filename, dataStream) {\n  return BB.fromNode(cb => {\n    dataStream.on('error', cb)\n    dataStream.on('close', cb)\n    dataStream.on('entry', entry => {\n      const filePath = entry.header.path.replace(/[^/]+\\//, '')\n      if (filePath !== filename) {\n        entry.resume()\n      } else {\n        let data = ''\n        entry.on('error', cb)\n        finished(entry).then(() => {\n          try {\n            cb(null, JSON.parse(data))\n          } catch (err) {\n            cb(err)\n          }\n        }, err => {\n          cb(err)\n        })\n        entry.on('data', d => { data += d })\n      }\n    })\n  })\n}\n\nfunction getPaths (dataStream) {\n  return BB.fromNode(cb => {\n    let paths = []\n    dataStream.on('error', cb)\n    dataStream.on('close', () => cb(null, paths))\n    dataStream.on('entry', function handler (entry) {\n      const filePath = entry.header.path.replace(/[^/]+\\//, '')\n      entry.resume()\n      paths.push(filePath)\n    })\n  })\n}\n\nfunction finalKey (pkg, spec) {\n  if (pkg && pkg._uniqueResolved) {\n    // git packages have a unique, identifiable id, but no tar sha\n    return cacheKey(`${spec.type}-manifest`, pkg._uniqueResolved)\n  } else {\n    return (\n      pkg && pkg._integrity &&\n      cacheKey(\n        `${spec.type}-manifest`,\n        `${pkg._resolved}:${ssri.stringify(pkg._integrity)}`\n      )\n    )\n  }\n}\n"]}