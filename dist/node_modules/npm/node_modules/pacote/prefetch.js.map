{"version":3,"sources":["../../../../../node_modules/npm/node_modules/pacote/prefetch.js"],"names":["BB","require","cacache","finished","promisify","optCheck","npa","module","exports","prefetch","spec","opts","where","log","warn","startTime","Date","now","cache","info","resolve","integrity","preferOnline","silly","get","hasContent","then","size","byDigest","prefetchByManifest","fetch","start","manifest","stream","tarball","on","m","i","_integrity"],"mappings":"AAAA;;AAEA,IAAMA,KAAKC,QAAQ,UAAR,CAAX;;AAEA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,WAAWH,GAAGI,SAAH,CAAaH,QAAQ,aAAR,EAAuBE,QAApC,CAAjB;AACA,IAAME,WAAWJ,QAAQ,sBAAR,CAAjB;AACA,IAAMK,MAAML,QAAQ,iBAAR,CAAZ;;AAEAM,OAAOC,OAAP,GAAiBC,QAAjB;AACA,SAASA,QAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7BA,SAAON,SAASM,IAAT,CAAP;AACAD,SAAOJ,IAAII,IAAJ,EAAUC,KAAKC,KAAf,CAAP;AACAD,OAAKE,GAAL,CAASC,IAAT,CAAc,UAAd,EAA0B,uEAA1B;AACA,MAAMC,YAAYC,KAAKC,GAAL,EAAlB;AACA,MAAI,CAACN,KAAKO,KAAV,EAAiB;AACfP,SAAKE,GAAL,CAASM,IAAT,CAAc,UAAd,EAA0B,sCAA1B;AACA,WAAOnB,GAAGoB,OAAH,CAAW,EAACV,UAAD,EAAX,CAAP;AACD;AACD,MAAIC,KAAKU,SAAL,IAAkB,CAACV,KAAKW,YAA5B,EAA0C;AACxCX,SAAKE,GAAL,CAASU,KAAT,CAAe,UAAf,EAA2B,aAA3B,EAA0CZ,KAAKU,SAA/C,EAA0D,mBAA1D;AACA,WAAOnB,QAAQsB,GAAR,CAAYC,UAAZ,CAAuBd,KAAKO,KAA5B,EAAmCP,KAAKU,SAAxC,EAAmDK,IAAnD,CAAwD,gBAAQ;AACrE,UAAIP,IAAJ,EAAU;AACRR,aAAKE,GAAL,CAASU,KAAT,CAAe,UAAf,kCAAyDb,IAAzD,WAAkEM,KAAKC,GAAL,KAAaF,SAA/E;AACA,eAAO;AACLL,oBADK;AAELW,qBAAWF,KAAKE,SAFX;AAGLM,gBAAMR,KAAKQ,IAHN;AAILC,oBAAU;AAJL,SAAP;AAMD,OARD,MAQO;AACL,eAAOC,mBAAmBd,SAAnB,EAA8BL,IAA9B,EAAoCC,IAApC,CAAP;AACD;AACF,KAZM,CAAP;AAaD,GAfD,MAeO;AACLA,SAAKE,GAAL,CAASU,KAAT,CAAe,UAAf,sCAA6Db,IAA7D;AACA,WAAOmB,mBAAmBd,SAAnB,EAA8BL,IAA9B,EAAoCC,IAApC,CAAP;AACD;AACF;;AAED,IAAImB,cAAJ;AACA,SAASD,kBAAT,CAA6BE,KAA7B,EAAoCrB,IAApC,EAA0CC,IAA1C,EAAgD;AAC9C,MAAIqB,iBAAJ;AACA,MAAIX,kBAAJ;AACA,SAAOrB,GAAGoB,OAAH,GAAaM,IAAb,CAAkB,YAAM;AAC7B,QAAI,CAACI,KAAL,EAAY;AACVA,cAAQ7B,QAAQ,aAAR,CAAR;AACD;AACD,QAAMgC,SAASH,MAAMI,OAAN,CAAcxB,IAAd,EAAoBC,IAApB,CAAf;AACA,QAAI,CAACsB,MAAL,EAAa;AAAE;AAAQ;AACvBA,WAAOE,EAAP,CAAU,MAAV,EAAkB,YAAY,CAAE,CAAhC;AACAF,WAAOE,EAAP,CAAU,UAAV,EAAsB,aAAK;AAAEH,iBAAWI,CAAX;AAAc,KAA3C;AACAH,WAAOE,EAAP,CAAU,WAAV,EAAuB,aAAK;AAAEd,kBAAYgB,CAAZ;AAAe,KAA7C;AACA,WAAOlC,SAAS8B,MAAT,CAAP;AACD,GAVM,EAUJP,IAVI,CAUC,YAAM;AACZf,SAAKE,GAAL,CAASU,KAAT,CAAe,UAAf,EAA8Bb,IAA9B,kBAA8CM,KAAKC,GAAL,KAAac,KAA3D;AACA,WAAO;AACLC,wBADK;AAELtB,gBAFK;AAGLW,iBAAWA,aAAcW,YAAYA,SAASM,UAHzC;AAILV,gBAAU;AAJL,KAAP;AAMD,GAlBM,CAAP;AAmBD","file":"prefetch.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst cacache = require('cacache')\nconst finished = BB.promisify(require('mississippi').finished)\nconst optCheck = require('./lib/util/opt-check')\nconst npa = require('npm-package-arg')\n\nmodule.exports = prefetch\nfunction prefetch (spec, opts) {\n  opts = optCheck(opts)\n  spec = npa(spec, opts.where)\n  opts.log.warn('prefetch', 'pacote.prefetch() is deprecated. Please use pacote.tarball() instead.')\n  const startTime = Date.now()\n  if (!opts.cache) {\n    opts.log.info('prefetch', 'skipping prefetch: no cache provided')\n    return BB.resolve({spec})\n  }\n  if (opts.integrity && !opts.preferOnline) {\n    opts.log.silly('prefetch', 'checking if', opts.integrity, 'is already cached')\n    return cacache.get.hasContent(opts.cache, opts.integrity).then(info => {\n      if (info) {\n        opts.log.silly('prefetch', `content already exists for ${spec} (${Date.now() - startTime}ms)`)\n        return {\n          spec,\n          integrity: info.integrity,\n          size: info.size,\n          byDigest: true\n        }\n      } else {\n        return prefetchByManifest(startTime, spec, opts)\n      }\n    })\n  } else {\n    opts.log.silly('prefetch', `no integrity hash provided for ${spec} - fetching by manifest`)\n    return prefetchByManifest(startTime, spec, opts)\n  }\n}\n\nlet fetch\nfunction prefetchByManifest (start, spec, opts) {\n  let manifest\n  let integrity\n  return BB.resolve().then(() => {\n    if (!fetch) {\n      fetch = require('./lib/fetch')\n    }\n    const stream = fetch.tarball(spec, opts)\n    if (!stream) { return }\n    stream.on('data', function () {})\n    stream.on('manifest', m => { manifest = m })\n    stream.on('integrity', i => { integrity = i })\n    return finished(stream)\n  }).then(() => {\n    opts.log.silly('prefetch', `${spec} done in ${Date.now() - start}ms`)\n    return {\n      manifest,\n      spec,\n      integrity: integrity || (manifest && manifest._integrity),\n      byDigest: false\n    }\n  })\n}\n"]}