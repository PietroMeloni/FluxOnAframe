{"version":3,"sources":["../../../../../node_modules/npm/node_modules/pacote/tarball.js"],"names":["BB","require","fs","getStream","mkdirp","promisify","npa","optCheck","PassThrough","path","rimraf","withTarballStream","module","exports","tarball","spec","opts","where","buffer","stream","tarballStream","output","hasTouchedOutput","lastError","Error","resolve","reject","on","pipe","once","catch","err","emit","toFile","tarballToFile","dest","dirname","then","writer","createWriteStream"],"mappings":"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","file":"tarball.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst fs = require('fs')\nconst getStream = require('get-stream')\nconst mkdirp = BB.promisify(require('mkdirp'))\nconst npa = require('npm-package-arg')\nconst optCheck = require('./lib/util/opt-check.js')\nconst PassThrough = require('stream').PassThrough\nconst path = require('path')\nconst rimraf = BB.promisify(require('rimraf'))\nconst withTarballStream = require('./lib/with-tarball-stream.js')\n\nmodule.exports = tarball\nfunction tarball (spec, opts) {\n  opts = optCheck(opts)\n  spec = npa(spec, opts.where)\n  return withTarballStream(spec, opts, stream => getStream.buffer(stream))\n}\n\nmodule.exports.stream = tarballStream\nfunction tarballStream (spec, opts) {\n  opts = optCheck(opts)\n  spec = npa(spec, opts.where)\n  const output = new PassThrough()\n  let hasTouchedOutput = false\n  let lastError = null\n  withTarballStream(spec, opts, stream => {\n    if (hasTouchedOutput && lastError) {\n      throw lastError\n    } else if (hasTouchedOutput) {\n      throw new Error('abort, abort!')\n    } else {\n      return new BB((resolve, reject) => {\n        stream.on('error', reject)\n        output.on('error', reject)\n        output.on('error', () => { hasTouchedOutput = true })\n        output.on('finish', resolve)\n        stream.pipe(output)\n        stream.once('data', () => { hasTouchedOutput = true })\n      }).catch(err => {\n        lastError = err\n        throw err\n      })\n    }\n  })\n    .catch(err => output.emit('error', err))\n  return output\n}\n\nmodule.exports.toFile = tarballToFile\nfunction tarballToFile (spec, dest, opts) {\n  opts = optCheck(opts)\n  spec = npa(spec, opts.where)\n  return mkdirp(path.dirname(dest))\n    .then(() => withTarballStream(spec, opts, stream => {\n      return rimraf(dest)\n        .then(() => new BB((resolve, reject) => {\n          const writer = fs.createWriteStream(dest)\n          stream.on('error', reject)\n          writer.on('error', reject)\n          writer.on('close', resolve)\n          stream.pipe(writer)\n        }))\n    }))\n}\n"]}