{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/socks/build/common/helpers.js"],"names":["Object","defineProperty","exports","value","util_1","require","constants_1","net","stream","validateSocksClientOptions","options","acceptedCommands","SocksCommand","command","SocksClientError","ERRORS","InvalidSocksCommand","indexOf","InvalidSocksCommandForOperation","isValidSocksRemoteHost","destination","InvalidSocksClientOptionsDestination","isValidSocksProxy","proxy","InvalidSocksClientOptionsProxy","timeout","isValidTimeoutValue","InvalidSocksClientOptionsTimeout","existing_socket","Duplex","InvalidSocksClientOptionsExistingSocket","validateSocksClientChainOptions","InvalidSocksCommandChain","proxies","Array","isArray","length","InvalidSocksClientOptionsProxiesLength","forEach","remoteHost","host","port","isIP","ipaddress","type"],"mappings":"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","file":"helpers.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"./util\");\nconst constants_1 = require(\"./constants\");\nconst net = require(\"net\");\nconst stream = require(\"stream\");\n/**\n * Validates the provided SocksClientOptions\n * @param options { SocksClientOptions }\n * @param acceptedCommands { string[] } A list of accepted SocksProxy commands.\n */\nfunction validateSocksClientOptions(options, acceptedCommands = ['connect', 'bind', 'associate']) {\n    // Check SOCKs command option.\n    if (!constants_1.SocksCommand[options.command]) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommand, options);\n    }\n    // Check SocksCommand for acceptable command.\n    if (acceptedCommands.indexOf(options.command) === -1) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandForOperation, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Check SOCKS proxy to use\n    if (!isValidSocksProxy(options.proxy)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n    }\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n    // Check existing_socket (if provided)\n    if (options.existing_socket &&\n        !(options.existing_socket instanceof stream.Duplex)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsExistingSocket, options);\n    }\n}\nexports.validateSocksClientOptions = validateSocksClientOptions;\n/**\n * Validates the SocksClientChainOptions\n * @param options { SocksClientChainOptions }\n */\nfunction validateSocksClientChainOptions(options) {\n    // Only connect is supported when chaining.\n    if (options.command !== 'connect') {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandChain, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Validate proxies (length)\n    if (!(options.proxies &&\n        Array.isArray(options.proxies) &&\n        options.proxies.length >= 2)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxiesLength, options);\n    }\n    // Validate proxies\n    options.proxies.forEach((proxy) => {\n        if (!isValidSocksProxy(proxy)) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n        }\n    });\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n}\nexports.validateSocksClientChainOptions = validateSocksClientChainOptions;\n/**\n * Validates a SocksRemoteHost\n * @param remoteHost { SocksRemoteHost }\n */\nfunction isValidSocksRemoteHost(remoteHost) {\n    return (remoteHost &&\n        typeof remoteHost.host === 'string' &&\n        typeof remoteHost.port === 'number' &&\n        remoteHost.port >= 0 &&\n        remoteHost.port <= 65535);\n}\n/**\n * Validates a SocksProxy\n * @param proxy { SocksProxy }\n */\nfunction isValidSocksProxy(proxy) {\n    return (proxy &&\n        net.isIP(proxy.ipaddress) &&\n        typeof proxy.port === 'number' &&\n        proxy.port >= 0 &&\n        proxy.port <= 65535 &&\n        (proxy.type === 4 || proxy.type === 5));\n}\n/**\n * Validates a timeout value.\n * @param value { Number }\n */\nfunction isValidTimeoutValue(value) {\n    return typeof value === 'number' && value > 0;\n}\n//# sourceMappingURL=helpers.js.map"]}