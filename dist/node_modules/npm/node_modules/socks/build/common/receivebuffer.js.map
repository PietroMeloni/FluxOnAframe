{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/socks/build/common/receivebuffer.js"],"names":["Object","defineProperty","exports","value","ReceiveBuffer","size","_buffer","Buffer","allocUnsafe","_offset","_originalSize","data","isBuffer","Error","length","tmp","Math","max","copy","slice","copyWithin"],"mappings":"AAAA;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;;IACMC,a;AACF,6BAAyB;AAAA,YAAbC,IAAa,uEAAN,IAAM;;AAAA;;AACrB,aAAKC,OAAL,GAAeC,OAAOC,WAAP,CAAmBH,IAAnB,CAAf;AACA,aAAKI,OAAL,GAAe,CAAf;AACA,aAAKC,aAAL,GAAqBL,IAArB;AACH;;;;+BAIMM,I,EAAM;AACT,gBAAI,CAACJ,OAAOK,QAAP,CAAgBD,IAAhB,CAAL,EAA4B;AACxB,sBAAM,IAAIE,KAAJ,CAAU,6DAAV,CAAN;AACH;AACD,gBAAI,KAAKJ,OAAL,GAAeE,KAAKG,MAApB,IAA8B,KAAKR,OAAL,CAAaQ,MAA/C,EAAuD;AACnD,oBAAMC,MAAM,KAAKT,OAAjB;AACA,qBAAKA,OAAL,GAAeC,OAAOC,WAAP,CAAmBQ,KAAKC,GAAL,CAAS,KAAKX,OAAL,CAAaQ,MAAb,GAAsB,KAAKJ,aAApC,EAAmD,KAAKJ,OAAL,CAAaQ,MAAb,GAAsBH,KAAKG,MAA9E,CAAnB,CAAf;AACAC,oBAAIG,IAAJ,CAAS,KAAKZ,OAAd;AACH;AACDK,iBAAKO,IAAL,CAAU,KAAKZ,OAAf,EAAwB,KAAKG,OAA7B;AACA,mBAAQ,KAAKA,OAAL,IAAgBE,KAAKG,MAA7B;AACH;;;6BACIA,M,EAAQ;AACT,gBAAIA,SAAS,KAAKL,OAAlB,EAA2B;AACvB,sBAAM,IAAII,KAAJ,CAAU,mEAAV,CAAN;AACH;AACD,mBAAO,KAAKP,OAAL,CAAaa,KAAb,CAAmB,CAAnB,EAAsBL,MAAtB,CAAP;AACH;;;4BACGA,M,EAAQ;AACR,gBAAIA,SAAS,KAAKL,OAAlB,EAA2B;AACvB,sBAAM,IAAII,KAAJ,CAAU,mEAAV,CAAN;AACH;AACD,gBAAMV,QAAQI,OAAOC,WAAP,CAAmBM,MAAnB,CAAd;AACA,iBAAKR,OAAL,CAAaa,KAAb,CAAmB,CAAnB,EAAsBL,MAAtB,EAA8BI,IAA9B,CAAmCf,KAAnC;AACA,iBAAKG,OAAL,CAAac,UAAb,CAAwB,CAAxB,EAA2BN,MAA3B,EAAmCA,SAAS,KAAKL,OAAd,GAAwBK,MAA3D;AACA,iBAAKL,OAAL,IAAgBK,MAAhB;AACA,mBAAOX,KAAP;AACH;;;4BA9BY;AACT,mBAAO,KAAKM,OAAZ;AACH;;;;;;AA8BLP,QAAQE,aAAR,GAAwBA,aAAxB;AACA","file":"receivebuffer.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ReceiveBuffer {\n    constructor(size = 4096) {\n        this._buffer = Buffer.allocUnsafe(size);\n        this._offset = 0;\n        this._originalSize = size;\n    }\n    get length() {\n        return this._offset;\n    }\n    append(data) {\n        if (!Buffer.isBuffer(data)) {\n            throw new Error('Attempted to append a non-buffer instance to ReceiveBuffer.');\n        }\n        if (this._offset + data.length >= this._buffer.length) {\n            const tmp = this._buffer;\n            this._buffer = Buffer.allocUnsafe(Math.max(this._buffer.length + this._originalSize, this._buffer.length + data.length));\n            tmp.copy(this._buffer);\n        }\n        data.copy(this._buffer, this._offset);\n        return (this._offset += data.length);\n    }\n    peek(length) {\n        if (length > this._offset) {\n            throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n        }\n        return this._buffer.slice(0, length);\n    }\n    get(length) {\n        if (length > this._offset) {\n            throw new Error('Attempted to read beyond the bounds of the managed internal data.');\n        }\n        const value = Buffer.allocUnsafe(length);\n        this._buffer.slice(0, length).copy(value);\n        this._buffer.copyWithin(0, length, length + this._offset - length);\n        this._offset -= length;\n        return value;\n    }\n}\nexports.ReceiveBuffer = ReceiveBuffer;\n//# sourceMappingURL=receivebuffer.js.map"]}