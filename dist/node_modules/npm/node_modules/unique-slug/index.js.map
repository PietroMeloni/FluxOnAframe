{"version":3,"sources":["../../../../../node_modules/npm/node_modules/unique-slug/index.js"],"names":["crypto","require","MurmurHash3","module","exports","uniq","hash","result","toString","substr","pseudoRandomBytes"],"mappings":"AAAA;;AACA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,cAAcD,QAAQ,aAAR,CAAlB;;AAEAE,OAAOC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAIA,IAAJ,EAAU;AACR,QAAIC,OAAO,IAAIJ,WAAJ,CAAgBG,IAAhB,CAAX;AACA,WAAO,CAAC,aAAaC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,CAAd,EAA0CC,MAA1C,CAAiD,CAAC,CAAlD,CAAP;AACD,GAHD,MAGO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAOT,OAAOU,iBAAP,CAAyB,CAAzB,EAA4BF,QAA5B,CAAqC,KAArC,CAAP;AACD;AACF,CAdD","file":"index.js","sourcesContent":["'use strict'\nvar crypto = require('crypto')\nvar MurmurHash3 = require('imurmurhash')\n\nmodule.exports = function (uniq) {\n  if (uniq) {\n    var hash = new MurmurHash3(uniq)\n    return ('00000000' + hash.result().toString(16)).substr(-8)\n  } else {\n    // Called without a callback, because this interface should neither block\n    // nor error (by contrast with randomBytes which will throw an exception\n    // without enough entropy).\n    //\n    // However, due to a change in Node 0.10.27+, pseudoRandomBytes is now the\n    // same as randomBytes, and may in fact block in situations where\n    // insufficent entropy is available.\n    return crypto.pseudoRandomBytes(4).toString('hex')\n  }\n}\n"]}