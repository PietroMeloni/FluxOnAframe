{"version":3,"sources":["../../../../../node_modules/npm/node_modules/npm-pick-manifest/index.js"],"names":["npa","require","semver","module","exports","pickManifest","packument","wanted","opts","spec","resolve","name","type","clean","distTags","versions","Object","keys","filter","valid","v","undeprecated","deprecated","err","length","Error","code","target","tagVersion","defaultTag","satisfies","includeDeprecated","maxSatisfying","manifest"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nconst npa = require('npm-package-arg')\nconst semver = require('semver')\n\nmodule.exports = pickManifest\nfunction pickManifest (packument, wanted, opts) {\n  opts = opts || {}\n  const spec = npa.resolve(packument.name, wanted)\n  const type = spec.type\n  if (type === 'version' || type === 'range') {\n    wanted = semver.clean(wanted, true) || wanted\n  }\n  const distTags = packument['dist-tags'] || {}\n  const versions = Object.keys(packument.versions || {}).filter(v => semver.valid(v, true))\n  const undeprecated = versions.filter(v => !packument.versions[v].deprecated)\n  let err\n\n  if (!versions.length) {\n    err = new Error(`No valid versions available for ${packument.name}`)\n    err.code = 'ENOVERSIONS'\n    err.name = packument.name\n    err.type = type\n    err.wanted = wanted\n    throw err\n  }\n\n  let target\n\n  if (type === 'tag') {\n    target = distTags[wanted]\n  } else if (type === 'version') {\n    target = wanted\n  } else if (type !== 'range') {\n    throw new Error('Only tag, version, and range are supported')\n  }\n\n  const tagVersion = distTags[opts.defaultTag || 'latest']\n\n  if (\n    !target &&\n    tagVersion &&\n    packument.versions[tagVersion] &&\n    semver.satisfies(tagVersion, wanted, true)\n  ) {\n    target = tagVersion\n  }\n\n  if (!target && !opts.includeDeprecated) {\n    target = semver.maxSatisfying(undeprecated, wanted, true)\n  }\n  if (!target) {\n    target = semver.maxSatisfying(versions, wanted, true)\n  }\n\n  if (!target && wanted === '*') {\n    // This specific corner is meant for the case where\n    // someone is using `*` as a selector, but all versions\n    // are pre-releases, which don't match ranges at all.\n    target = tagVersion\n  }\n\n  const manifest = target && packument.versions[target]\n  if (!manifest) {\n    err = new Error(\n      `No matching version found for ${packument.name}@${wanted}`\n    )\n    err.code = 'ETARGET'\n    err.name = packument.name\n    err.type = type\n    err.wanted = wanted\n    err.versions = versions\n    err.distTags = distTags\n    err.defaultTag = opts.defaultTag\n    throw err\n  } else {\n    return manifest\n  }\n}\n"]}