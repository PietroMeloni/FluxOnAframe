{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/registry-auth-token/test/auth-token.test.js"],"names":["fs","require","path","mocha","assert","requireUncached","npmRcPath","join","__dirname","afterEach","describe","it","base64","decodeBase64","encodeBase64","done","unlink","getAuthToken","writeFile","err","content","deepEqual","token","type","npmrc","environmentVariable","process","env","undef","opts","recursive","undefined","equal","username","password"],"mappings":"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","file":"auth-token.test.js","sourcesContent":["var fs = require('fs')\nvar path = require('path')\nvar mocha = require('mocha')\nvar assert = require('assert')\nvar requireUncached = require('require-uncached')\n\nvar npmRcPath = path.join(__dirname, '..', '.npmrc')\nvar afterEach = mocha.afterEach\nvar describe = mocha.describe\nvar it = mocha.it\n\nvar base64 = require('../base64')\nvar decodeBase64 = base64.decodeBase64\nvar encodeBase64 = base64.encodeBase64\n\n/* eslint max-nested-callbacks: [\"error\", 4] */\n\ndescribe('auth-token', function () {\n  afterEach(function (done) {\n    fs.unlink(npmRcPath, function () {\n      done()\n    })\n  })\n\n  it('should read global if no local is found', function () {\n    var getAuthToken = requireUncached('../index')\n    getAuthToken()\n  })\n\n  it('should return undefined if no auth token is given for registry', function (done) {\n    fs.writeFile(npmRcPath, 'registry=http://registry.npmjs.eu/', function (err) {\n      var getAuthToken = requireUncached('../index')\n      assert(!err, err)\n      assert(!getAuthToken())\n      done()\n    })\n  })\n\n  describe('legacy auth token', function () {\n    it('should return auth token if it is defined in the legacy way via the `_auth` key', function (done) {\n      var content = [\n        '_auth=foobar',\n        'registry=http://registry.foobar.eu/'\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Basic'})\n        done()\n      })\n    })\n  })\n\n  describe('bearer token', function () {\n    it('should return auth token if registry is defined', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_authToken=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should use npmrc passed in', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_authToken=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        const npmrc = {\n          'registry': 'http://registry.foobar.eu/',\n          '//registry.foobar.eu/:_authToken': 'qar'\n        }\n        assert.deepEqual(getAuthToken({npmrc: npmrc}), {token: 'qar', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should return auth token if registry url has port specified', function (done) {\n      var content = [\n        'registry=http://localhost:8770/',\n        // before the patch this token was selected.\n        '//localhost/:_authToken=ohno',\n        '//localhost:8770/:_authToken=beepboop', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'beepboop', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should return auth token defined by reference to an environment variable (with curly braces)', function (done) {\n      var environmentVariable = '__REGISTRY_AUTH_TOKEN_NPM_TOKEN__'\n      var content = [\n        'registry=http://registry.foobar.cc/',\n        '//registry.foobar.cc/:_authToken=${' + environmentVariable + '}', ''\n      ].join('\\n')\n      process.env[environmentVariable] = 'foobar'\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Bearer'})\n        delete process.env[environmentVariable]\n        done()\n      })\n    })\n\n    it('should return auth token defined by reference to an environment variable (without curly braces)', function (done) {\n      var environmentVariable = '__REGISTRY_AUTH_TOKEN_NPM_TOKEN__'\n      var content = [\n        'registry=http://registry.foobar.cc/',\n        '//registry.foobar.cc/:_authToken=$' + environmentVariable, ''\n      ].join('\\n')\n      process.env[environmentVariable] = 'foobar'\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'foobar', type: 'Bearer'})\n        delete process.env[environmentVariable]\n        done()\n      })\n    })\n\n    it('should try with and without a slash at the end of registry url', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu',\n        '//registry.foobar.eu:_authToken=barbaz', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken(), {token: 'barbaz', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should fetch for the registry given (if defined)', function (done) {\n      var content = [\n        '//registry.foobar.eu:_authToken=barbaz',\n        '//registry.blah.foo:_authToken=whatev',\n        '//registry.last.thing:_authToken=yep', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('//registry.blah.foo'), {token: 'whatev', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('recursively finds registries for deep url if option is set', function (done, undef) {\n      var opts = {recursive: true}\n      var content = [\n        '//registry.blah.com/foo:_authToken=whatev',\n        '//registry.blah.org/foo/bar:_authToken=recurseExactlyOneLevel',\n        '//registry.blah.edu/foo/bar/baz:_authToken=recurseNoLevel',\n        '//registry.blah.eu:_authToken=yep', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('https://registry.blah.edu/foo/bar/baz', opts), {token: 'recurseNoLevel', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('https://registry.blah.org/foo/bar/baz', opts), {token: 'recurseExactlyOneLevel', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('https://registry.blah.com/foo/bar/baz', opts), {token: 'whatev', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('http://registry.blah.eu/what/ever', opts), {token: 'yep', type: 'Bearer'})\n        assert.deepEqual(getAuthToken('http://registry.blah.eu//what/ever', opts), undefined, 'does not hang')\n        assert.equal(getAuthToken('//some.registry', opts), undef)\n        done()\n      })\n    })\n\n    it('should try both with and without trailing slash', function (done) {\n      fs.writeFile(npmRcPath, '//registry.blah.com:_authToken=whatev', function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('https://registry.blah.com'), {token: 'whatev', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('should prefer bearer token over basic token', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_authToken=bearerToken',\n        '//registry.foobar.eu/:_password=' + encodeBase64('foobar'),\n        '//registry.foobar.eu/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(getAuthToken('//registry.foobar.eu'), {token: 'bearerToken', type: 'Bearer'})\n        done()\n      })\n    })\n\n    it('\"nerf darts\" registry urls', function (done, undef) {\n      fs.writeFile(npmRcPath, '//contoso.pkgs.visualstudio.com/_packaging/MyFeed/npm/:_authToken=heider', function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.deepEqual(\n          getAuthToken('https://contoso.pkgs.visualstudio.com/_packaging/MyFeed/npm/registry'),\n          {token: 'heider', type: 'Bearer'}\n        )\n        done()\n      })\n    })\n  })\n\n  describe('basic token', function () {\n    it('should return undefined if password or username are missing', function (done, undef) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_password=' + encodeBase64('foobar'),\n        '//registry.foobar.com/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        assert.equal(getAuthToken('//registry.foobar.eu'), undef)\n        assert.equal(getAuthToken('//registry.foobar.com'), undef)\n        done()\n      })\n    })\n\n    it('should return basic token if username and password are defined', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu/',\n        '//registry.foobar.eu/:_password=' + encodeBase64('foobar'),\n        '//registry.foobar.eu/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          token: 'Zm9vYmFyOmZvb2Jhcg==',\n          type: 'Basic',\n          username: 'foobar',\n          password: 'foobar'\n        })\n        assert.equal(decodeBase64(token.token), 'foobar:foobar')\n        done()\n      })\n    })\n\n    it('should return basic token if registry url has port specified', function (done) {\n      var content = [\n        'registry=http://localhost:8770/',\n        // before the patch this token was selected.\n        '//localhost/:_authToken=ohno',\n        '//localhost:8770/:_password=' + encodeBase64('foobar'),\n        '//localhost:8770/:username=foobar', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          token: 'Zm9vYmFyOmZvb2Jhcg==',\n          type: 'Basic',\n          username: 'foobar',\n          password: 'foobar'\n        })\n        assert.equal(decodeBase64(token.token), 'foobar:foobar')\n        done()\n      })\n    })\n\n    it('should return password defined by reference to an environment variable (with curly braces)', function (done) {\n      var environmentVariable = '__REGISTRY_PASSWORD__'\n      var content = [\n        'registry=http://registry.foobar.cc/',\n        '//registry.foobar.cc/:username=username',\n        '//registry.foobar.cc/:_password=${' + environmentVariable + '}', ''\n      ].join('\\n')\n      process.env[environmentVariable] = encodeBase64('password')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          type: 'Basic',\n          username: 'username',\n          password: 'password',\n          token: 'dXNlcm5hbWU6cGFzc3dvcmQ='\n        })\n        assert.equal(decodeBase64(token.token), 'username:password')\n        delete process.env[environmentVariable]\n        done()\n      })\n    })\n\n    it('should return password defined by reference to an environment variable (without curly braces)', function (done) {\n      var environmentVariable = '__REGISTRY_PASSWORD__'\n      var content = [\n        'registry=http://registry.foobar.cc/',\n        '//registry.foobar.cc/:username=username',\n        '//registry.foobar.cc/:_password=$' + environmentVariable, ''\n      ].join('\\n')\n      process.env[environmentVariable] = encodeBase64('password')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          type: 'Basic',\n          username: 'username',\n          password: 'password',\n          token: 'dXNlcm5hbWU6cGFzc3dvcmQ='\n        })\n        assert.equal(decodeBase64(token.token), 'username:password')\n        delete process.env[environmentVariable]\n        done()\n      })\n    })\n\n    it('should try with and without a slash at the end of registry url', function (done) {\n      var content = [\n        'registry=http://registry.foobar.eu',\n        '//registry.foobar.eu:_password=' + encodeBase64('barbay'),\n        '//registry.foobar.eu:username=barbaz', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken()\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmJhcmJheQ==',\n          type: 'Basic',\n          password: 'barbay',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:barbay')\n        done()\n      })\n    })\n\n    it('should fetch for the registry given (if defined)', function (done) {\n      var content = [\n        '//registry.foobar.eu:_authToken=barbaz',\n        '//registry.blah.foo:_password=' + encodeBase64('barbay'),\n        '//registry.blah.foo:username=barbaz',\n        '//registry.last.thing:_authToken=yep', ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken('//registry.blah.foo')\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmJhcmJheQ==',\n          type: 'Basic',\n          password: 'barbay',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:barbay')\n        done()\n      })\n    })\n\n    it('recursively finds registries for deep url if option is set', function (done, undef) {\n      var opts = {recursive: true}\n      var content = [\n        '//registry.blah.com/foo:_password=' + encodeBase64('barbay'),\n        '//registry.blah.com/foo:username=barbaz',\n        '//registry.blah.eu:username=barbaz',\n        '//registry.blah.eu:_password=' + encodeBase64('foobaz'), ''\n      ].join('\\n')\n\n      fs.writeFile(npmRcPath, content, function (err) {\n        var getAuthToken = requireUncached('../index')\n        assert(!err, err)\n        var token = getAuthToken('https://registry.blah.com/foo/bar/baz', opts)\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmJhcmJheQ==',\n          type: 'Basic',\n          password: 'barbay',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:barbay')\n        token = getAuthToken('https://registry.blah.eu/foo/bar/baz', opts)\n        assert.deepEqual(token, {\n          token: 'YmFyYmF6OmZvb2Jheg==',\n          type: 'Basic',\n          password: 'foobaz',\n          username: 'barbaz'\n        })\n        assert.equal(decodeBase64(token.token), 'barbaz:foobaz')\n        assert.equal(getAuthToken('//some.registry', opts), undef)\n        done()\n      })\n    })\n  })\n})\n"]}