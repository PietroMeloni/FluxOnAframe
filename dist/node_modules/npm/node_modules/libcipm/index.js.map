{"version":3,"sources":["../../../../../node_modules/npm/node_modules/libcipm/index.js"],"names":["BB","require","binLink","buildLogicalTree","extract","fs","getPrefix","lifecycle","lockVerify","mkdirp","promisify","npa","path","readPkgJson","rimraf","readFileAsync","readFile","statAsync","stat","symlinkAsync","symlink","writeFileAsync","writeFile","Installer","opts","config","startTime","Date","now","runTime","timings","scripts","pkgCount","log","pkg","tree","failedDeps","Set","name","start","resolve","apply","slice","call","arguments","tap","info","timedStage","then","pkgJsons","prefix","catch","err","message","match","level","get","verbose","startWorkers","process","argv","some","arg","cwd","join","readJson","lock","shrink","_shrinkwrap","code","warn","checkLock","silly","expectedTotal","forEach","dep","next","stopWorkers","lockfileVersion","reject","Error","result","status","warnings","w","map","errors","cg","newItem","forEachAsync","checkDepEnv","depPath","spec","version","isRoot","type","relative","dirname","fetchSpec","completeWork","bundled","wasBundled","child","concurrency","Promise","finish","includeDev","test","includeProd","dev","Map","registry","updateFromField","install","updateInstallScript","set","runScript","bin","man","directories","force","ignoreScripts","Object","assign","pkgId","prefixes","umask","e","stack","optional","add","depPkgPath","parent","requiredBy","values","value","ppkg","dependencies","devDependencies","optionalDependencies","from","_from","toString","JSON","stringify","size","sweep","mark","purgedDeps","purged","stage","pkgPath","_id","toLifecycle","module","exports","CipmConfig","failed","liveDeps","has","stripBOM","str","replace","_readJson","jsonPath","ignoreMissing","parse"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst binLink = require('bin-links')\nconst buildLogicalTree = require('npm-logical-tree')\nconst extract = require('./lib/extract.js')\nconst fs = require('graceful-fs')\nconst getPrefix = require('find-npm-prefix')\nconst lifecycle = require('npm-lifecycle')\nconst lockVerify = require('lock-verify')\nconst mkdirp = BB.promisify(require('mkdirp'))\nconst npa = require('npm-package-arg')\nconst path = require('path')\nconst readPkgJson = BB.promisify(require('read-package-json'))\nconst rimraf = BB.promisify(require('rimraf'))\n\nconst readFileAsync = BB.promisify(fs.readFile)\nconst statAsync = BB.promisify(fs.stat)\nconst symlinkAsync = BB.promisify(fs.symlink)\nconst writeFileAsync = BB.promisify(fs.writeFile)\n\nclass Installer {\n  constructor (opts) {\n    this.opts = opts\n    this.config = opts.config\n\n    // Stats\n    this.startTime = Date.now()\n    this.runTime = 0\n    this.timings = { scripts: 0 }\n    this.pkgCount = 0\n\n    // Misc\n    this.log = this.opts.log || require('./lib/silentlog.js')\n    this.pkg = null\n    this.tree = null\n    this.failedDeps = new Set()\n  }\n\n  timedStage (name) {\n    const start = Date.now()\n    return BB.resolve(this[name].apply(this, [].slice.call(arguments, 1)))\n      .tap(() => {\n        this.timings[name] = Date.now() - start\n        this.log.info(name, `Done in ${this.timings[name] / 1000}s`)\n      })\n  }\n\n  run () {\n    return this.timedStage('prepare')\n      .then(() => this.timedStage('extractTree', this.tree))\n      .then(() => this.timedStage('updateJson', this.tree))\n      .then(pkgJsons => this.timedStage('buildTree', this.tree, pkgJsons))\n      .then(() => this.timedStage('garbageCollect', this.tree))\n      .then(() => this.timedStage('runScript', 'prepublish', this.pkg, this.prefix))\n      .then(() => this.timedStage('runScript', 'prepare', this.pkg, this.prefix))\n      .then(() => this.timedStage('teardown'))\n      .then(() => {\n        this.runTime = Date.now() - this.startTime\n        this.log.info(\n          'run-scripts',\n          `total script time: ${this.timings.scripts / 1000}s`\n        )\n        this.log.info(\n          'run-time',\n          `total run time: ${this.runTime / 1000}s`\n        )\n      })\n      .catch(err => {\n        this.timedStage('teardown')\n        if (err.message.match(/aggregate error/)) {\n          throw err[0]\n        } else {\n          throw err\n        }\n      })\n      .then(() => this)\n  }\n\n  prepare () {\n    this.log.info('prepare', 'initializing installer')\n    this.log.level = this.config.get('loglevel')\n    this.log.verbose('prepare', 'starting workers')\n    extract.startWorkers()\n\n    return (\n      this.config.get('prefix') && this.config.get('global')\n        ? BB.resolve(this.config.get('prefix'))\n        // There's some Special™ logic around the `--prefix` config when it\n        // comes from a config file or env vs when it comes from the CLI\n        : process.argv.some(arg => arg.match(/^\\s*--prefix\\s*/i))\n          ? BB.resolve(this.config.get('prefix'))\n          : getPrefix(process.cwd())\n    )\n      .then(prefix => {\n        this.prefix = prefix\n        this.log.verbose('prepare', 'installation prefix: ' + prefix)\n        return BB.join(\n          readJson(prefix, 'package.json'),\n          readJson(prefix, 'package-lock.json', true),\n          readJson(prefix, 'npm-shrinkwrap.json', true),\n          (pkg, lock, shrink) => {\n            if (shrink) {\n              this.log.verbose('prepare', 'using npm-shrinkwrap.json')\n            } else if (lock) {\n              this.log.verbose('prepare', 'using package-lock.json')\n            }\n            pkg._shrinkwrap = shrink || lock\n            this.pkg = pkg\n          }\n        )\n      })\n      .then(() => statAsync(\n        path.join(this.prefix, 'node_modules')\n      ).catch(err => { if (err.code !== 'ENOENT') { throw err } }))\n      .then(stat => {\n        stat && this.log.warn(\n          'prepare', 'removing existing node_modules/ before installation'\n        )\n        return BB.join(\n          this.checkLock(),\n          stat && rimraf(path.join(this.prefix, 'node_modules'))\n        )\n      }).then(() => {\n      // This needs to happen -after- we've done checkLock()\n        this.tree = buildLogicalTree(this.pkg, this.pkg._shrinkwrap)\n        this.log.silly('tree', this.tree)\n        this.expectedTotal = 0\n        this.tree.forEach((dep, next) => {\n          this.expectedTotal++\n          next()\n        })\n      })\n  }\n\n  teardown () {\n    this.log.verbose('teardown', 'shutting down workers.')\n    return extract.stopWorkers()\n  }\n\n  checkLock () {\n    this.log.verbose('checkLock', 'verifying package-lock data')\n    const pkg = this.pkg\n    const prefix = this.prefix\n    if (!pkg._shrinkwrap || !pkg._shrinkwrap.lockfileVersion) {\n      return BB.reject(\n        new Error(`cipm can only install packages with an existing package-lock.json or npm-shrinkwrap.json with lockfileVersion >= 1. Run an install with npm@5 or later to generate it, then try again.`)\n      )\n    }\n    return lockVerify(prefix).then(result => {\n      if (result.status) {\n        result.warnings.forEach(w => this.log.warn('lockfile', w))\n      } else {\n        throw new Error(\n          'cipm can only install packages when your package.json and package-lock.json or ' +\n          'npm-shrinkwrap.json are in sync. Please update your lock file with `npm install` ' +\n          'before continuing.\\n\\n' +\n          result.warnings.map(w => 'Warning: ' + w).join('\\n') + '\\n' +\n          result.errors.join('\\n') + '\\n'\n        )\n      }\n    }).catch(err => {\n      throw err\n    })\n  }\n\n  extractTree (tree) {\n    this.log.verbose('extractTree', 'extracting dependencies to node_modules/')\n    const cg = this.log.newItem('extractTree', this.expectedTotal)\n    return tree.forEachAsync((dep, next) => {\n      if (!this.checkDepEnv(dep)) { return }\n      const depPath = dep.path(this.prefix)\n      const spec = npa.resolve(dep.name, dep.version, this.prefix)\n      if (dep.isRoot) {\n        return next()\n      } else if (spec.type === 'directory') {\n        const relative = path.relative(path.dirname(depPath), spec.fetchSpec)\n        this.log.silly('extractTree', `${dep.name}@${spec.fetchSpec} -> ${depPath} (symlink)`)\n        return mkdirp(path.dirname(depPath))\n          .then(() => symlinkAsync(relative, depPath, 'junction'))\n          .catch(\n            () => rimraf(depPath)\n              .then(() => symlinkAsync(relative, depPath, 'junction'))\n          ).then(() => next())\n          .then(() => {\n            this.pkgCount++\n            cg.completeWork(1)\n          })\n      } else {\n        this.log.silly('extractTree', `${dep.name}@${dep.version} -> ${depPath}`)\n        return (\n          dep.bundled\n            ? statAsync(path.join(depPath, 'package.json')).catch(err => {\n              if (err.code !== 'ENOENT') { throw err }\n            })\n            : BB.resolve(false)\n        )\n          .then(wasBundled => {\n          // Don't extract if a bundled dep is actually present\n            if (wasBundled) {\n              cg.completeWork(1)\n              return next()\n            } else {\n              return BB.resolve(extract.child(\n                dep.name, dep, depPath, this.config, this.opts\n              ))\n                .then(() => cg.completeWork(1))\n                .then(() => { this.pkgCount++ })\n                .then(next)\n            }\n          })\n      }\n    }, {concurrency: 50, Promise: BB})\n      .then(() => cg.finish())\n  }\n\n  checkDepEnv (dep) {\n    const includeDev = (\n      // Covers --dev and --development (from npm config itself)\n      this.config.get('dev') ||\n      (\n        !/^prod(uction)?$/.test(this.config.get('only')) &&\n        !this.config.get('production')\n      ) ||\n      /^dev(elopment)?$/.test(this.config.get('only')) ||\n      /^dev(elopment)?$/.test(this.config.get('also'))\n    )\n    const includeProd = !/^dev(elopment)?$/.test(this.config.get('only'))\n    return (dep.dev && includeDev) || (!dep.dev && includeProd)\n  }\n\n  updateJson (tree) {\n    this.log.verbose('updateJson', 'updating json deps to include _from')\n    const pkgJsons = new Map()\n    return tree.forEachAsync((dep, next) => {\n      if (!this.checkDepEnv(dep)) { return }\n      const spec = npa.resolve(dep.name, dep.version)\n      const depPath = dep.path(this.prefix)\n      return next()\n        .then(() => readJson(depPath, 'package.json'))\n        .then(pkg => (spec.registry || spec.type === 'directory')\n          ? pkg\n          : this.updateFromField(dep, pkg).then(() => pkg)\n        )\n        .then(pkg => (pkg.scripts && pkg.scripts.install)\n          ? pkg\n          : this.updateInstallScript(dep, pkg).then(() => pkg)\n        )\n        .tap(pkg => { pkgJsons.set(dep, pkg) })\n    }, {concurrency: 100, Promise: BB})\n      .then(() => pkgJsons)\n  }\n\n  buildTree (tree, pkgJsons) {\n    this.log.verbose('buildTree', 'finalizing tree and running scripts')\n    return tree.forEachAsync((dep, next) => {\n      if (!this.checkDepEnv(dep)) { return }\n      const spec = npa.resolve(dep.name, dep.version)\n      const depPath = dep.path(this.prefix)\n      const pkg = pkgJsons.get(dep)\n      this.log.silly('buildTree', `linking ${spec}`)\n      return this.runScript('preinstall', pkg, depPath)\n        .then(next) // build children between preinstall and binLink\n      // Don't link root bins\n        .then(() => {\n          if (\n            dep.isRoot ||\n          !(pkg.bin || pkg.man || (pkg.directories && pkg.directories.bin))\n          ) {\n          // We skip the relatively expensive readPkgJson if there's no way\n          // we'll actually be linking any bins or mans\n            return\n          }\n          return readPkgJson(path.join(depPath, 'package.json'))\n            .then(pkg => binLink(pkg, depPath, false, {\n              force: this.config.get('force'),\n              ignoreScripts: this.config.get('ignore-scripts'),\n              log: Object.assign({}, this.log, { info: () => {} }),\n              name: pkg.name,\n              pkgId: pkg.name + '@' + pkg.version,\n              prefix: this.prefix,\n              prefixes: [this.prefix],\n              umask: this.config.get('umask')\n            }), e => {\n              this.log.verbose('buildTree', `error linking ${spec}: ${e.message} ${e.stack}`)\n            })\n        })\n        .then(() => this.runScript('install', pkg, depPath))\n        .then(() => this.runScript('postinstall', pkg, depPath))\n        .then(() => this)\n        .catch(e => {\n          if (dep.optional) {\n            this.failedDeps.add(dep)\n          } else {\n            throw e\n          }\n        })\n    }, {concurrency: 1, Promise: BB})\n  }\n\n  updateFromField (dep, pkg) {\n    const depPath = dep.path(this.prefix)\n    const depPkgPath = path.join(depPath, 'package.json')\n    const parent = dep.requiredBy.values().next().value\n    return readJson(parent.path(this.prefix), 'package.json')\n      .then(ppkg =>\n        (ppkg.dependencies && ppkg.dependencies[dep.name]) ||\n      (ppkg.devDependencies && ppkg.devDependencies[dep.name]) ||\n      (ppkg.optionalDependencies && ppkg.optionalDependencies[dep.name])\n      )\n      .then(from => npa.resolve(dep.name, from))\n      .then(from => { pkg._from = from.toString() })\n      .then(() => writeFileAsync(depPkgPath, JSON.stringify(pkg, null, 2)))\n      .then(pkg)\n  }\n\n  updateInstallScript (dep, pkg) {\n    const depPath = dep.path(this.prefix)\n    return statAsync(path.join(depPath, 'binding.gyp'))\n      .catch(err => { if (err.code !== 'ENOENT') { throw err } })\n      .then(stat => {\n        if (stat) {\n          if (!pkg.scripts) {\n            pkg.scripts = {}\n          }\n          pkg.scripts.install = 'node-gyp rebuild'\n        }\n      })\n      .then(pkg)\n  }\n\n  // A cute little mark-and-sweep collector!\n  garbageCollect (tree) {\n    if (!this.failedDeps.size) { return }\n    return sweep(\n      tree,\n      this.prefix,\n      mark(tree, this.failedDeps)\n    )\n      .then(purged => {\n        this.purgedDeps = purged\n        this.pkgCount -= purged.size\n      })\n  }\n\n  runScript (stage, pkg, pkgPath) {\n    const start = Date.now()\n    if (!this.config.get('ignore-scripts')) {\n      // TODO(mikesherov): remove pkg._id when npm-lifecycle no longer relies on it\n      pkg._id = pkg.name + '@' + pkg.version\n      const opts = this.config.toLifecycle()\n      return BB.resolve(lifecycle(pkg, stage, pkgPath, opts))\n        .tap(() => { this.timings.scripts += Date.now() - start })\n    }\n    return BB.resolve()\n  }\n}\nmodule.exports = Installer\nmodule.exports.CipmConfig = require('./lib/config/npm-config.js').CipmConfig\n\nfunction mark (tree, failed) {\n  const liveDeps = new Set()\n  tree.forEach((dep, next) => {\n    if (!failed.has(dep)) {\n      liveDeps.add(dep)\n      next()\n    }\n  })\n  return liveDeps\n}\n\nfunction sweep (tree, prefix, liveDeps) {\n  const purged = new Set()\n  return tree.forEachAsync((dep, next) => {\n    return next().then(() => {\n      if (\n        !dep.isRoot && // never purge root! 🙈\n        !liveDeps.has(dep) &&\n        !purged.has(dep)\n      ) {\n        purged.add(dep)\n        return rimraf(dep.path(prefix))\n      }\n    })\n  }, {concurrency: 50, Promise: BB}).then(() => purged)\n}\n\nfunction stripBOM (str) {\n  return str.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports._readJson = readJson\nfunction readJson (jsonPath, name, ignoreMissing) {\n  return readFileAsync(path.join(jsonPath, name), 'utf8')\n    .then(str => JSON.parse(stripBOM(str)))\n    .catch({code: 'ENOENT'}, err => {\n      if (!ignoreMissing) {\n        throw err\n      }\n    })\n}\n"]}