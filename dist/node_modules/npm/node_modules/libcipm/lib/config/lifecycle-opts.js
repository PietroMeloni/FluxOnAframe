'use strict';

var log = require('npmlog');

module.exports = lifecycleOpts;
function lifecycleOpts(opts) {
  var objConfig = {};
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = opts.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var key = _step.value;

      var val = opts.get(key);
      if (val != null) {
        objConfig[key] = val;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return {
    config: objConfig,
    scriptShell: opts.get('script-shell'),
    force: opts.get('force'),
    user: opts.get('user'),
    group: opts.get('group'),
    ignoreScripts: opts.get('ignore-scripts'),
    ignorePrepublish: opts.get('ignore-prepublish'),
    scriptsPrependNodePath: opts.get('scripts-prepend-node-path'),
    unsafePerm: opts.get('unsafe-perm'),
    log: log,
    dir: opts.get('prefix'),
    failOk: false,
    production: opts.get('production')
  };
}
//# sourceMappingURL=lifecycle-opts.js.map