{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/libcipm/lib/config/npm-config.js"],"names":["BB","require","lifecycleOpts","pacoteOpts","protoduck","spawn","NpmConfig","Map","CipmConfig","define","get","set","toPacote","toLifecycle","name","module","exports","impl","prototype","opts","fromObject","fromObj","obj","map","Object","keys","forEach","k","fromNpm","getNpmConfig","argv","resolve","reject","npmBin","process","platform","child","concat","env","cwd","stdio","stdout","on","chunk","code","Error","JSON","parse","e"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,KAAKC,QAAQ,UAAR,CAAX;AACA,IAAMC,gBAAgBD,QAAQ,qBAAR,CAAtB;AACA,IAAME,aAAaF,QAAQ,kBAAR,CAAnB;AACA,IAAMG,YAAYH,QAAQ,WAAR,CAAlB;AACA,IAAMI,QAAQJ,QAAQ,eAAR,EAAyBI,KAAvC;;IAEMC,S;;;;;;;;;;EAAkBC,G;;AAExB,IAAMC,aAAaJ,UAAUK,MAAV,CAAiB;AAClCC,OAAK,EAD6B;AAElCC,OAAK,EAF6B;AAGlCC,YAAU,EAHwB;AAIlCC,eAAa;AAJqB,CAAjB,EAKhB;AACDC,QAAM;AADL,CALgB,CAAnB;AAQAC,OAAOC,OAAP,CAAeR,UAAf,GAA4BA,UAA5B;;AAEAA,WAAWS,IAAX,CAAgBX,SAAhB,EAA2B;AACzBI,OAAKH,IAAIW,SAAJ,CAAcR,GADM;AAEzBC,OAAKJ,IAAIW,SAAJ,CAAcP,GAFM;AAGzBC,UAHyB,oBAGfO,IAHe,EAGT;AACd,WAAOhB,WAAW,IAAX,EAAiBgB,IAAjB,CAAP;AACD,GALwB;AAMzBN,aANyB,yBAMV;AACb,WAAOX,cAAc,IAAd,CAAP;AACD;AARwB,CAA3B;;AAWAa,OAAOC,OAAP,CAAeI,UAAf,GAA4BC,OAA5B;AACA,SAASA,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAMC,MAAM,IAAIjB,SAAJ,EAAZ;AACAkB,SAAOC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyB;AAAA,WAAKH,IAAIZ,GAAJ,CAAQgB,CAAR,EAAWL,IAAIK,CAAJ,CAAX,CAAL;AAAA,GAAzB;AACA,SAAOJ,GAAP;AACD;;AAEDR,OAAOC,OAAP,CAAeY,OAAf,GAAyBC,YAAzB;AACA,SAASA,YAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO,IAAI9B,EAAJ,CAAO,UAAC+B,OAAD,EAAUC,MAAV,EAAqB;AACjC,QAAMC,SAASC,QAAQC,QAAR,KAAqB,OAArB,GAA+B,SAA/B,GAA2C,KAA1D;AACA,QAAMC,QAAQ/B,MAAM4B,MAAN,EAAc,CAC1B,QAD0B,EAChB,IADgB,EACV,QADU,EACA;AAC1B;AAF0B,MAG1BI,MAH0B,CAGnBP,QAAQ,EAHW,CAAd,EAGQ;AACpBQ,WAAKJ,QAAQI,GADO;AAEpBC,WAAKL,QAAQK,GAAR,EAFe;AAGpBC,aAAO,CAAC,CAAD,EAAI,MAAJ,EAAY,CAAZ;AAHa,KAHR,CAAd;;AASA,QAAIC,SAAS,EAAb;AACA,QAAIL,MAAMK,MAAV,EAAkB;AAChBL,YAAMK,MAAN,CAAaC,EAAb,CAAgB,MAAhB,EAAwB,UAACC,KAAD,EAAW;AACjCF,kBAAUE,KAAV;AACD,OAFD;AAGD;;AAEDP,UAAMM,EAAN,CAAS,OAAT,EAAkBV,MAAlB;AACAI,UAAMM,EAAN,CAAS,OAAT,EAAkB,UAACE,IAAD,EAAU;AAC1B,UAAIA,SAAS,GAAb,EAAkB;AAChBZ,eAAO,IAAIa,KAAJ,CAAU,+EAAV,CAAP;AACD,OAFD,MAEO;AACL,YAAI;AACFd,kBAAQV,QAAQyB,KAAKC,KAAL,CAAWN,MAAX,CAAR,CAAR;AACD,SAFD,CAEE,OAAOO,CAAP,EAAU;AACVhB,iBAAO,IAAIa,KAAJ,CAAU,oGAAV,CAAP;AACD;AACF;AACF,KAVD;AAWD,GA9BM,CAAP;AA+BD","file":"npm-config.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\nconst lifecycleOpts = require('./lifecycle-opts.js')\nconst pacoteOpts = require('./pacote-opts.js')\nconst protoduck = require('protoduck')\nconst spawn = require('child_process').spawn\n\nclass NpmConfig extends Map {}\n\nconst CipmConfig = protoduck.define({\n  get: [],\n  set: [],\n  toPacote: [],\n  toLifecycle: []\n}, {\n  name: 'CipmConfig'\n})\nmodule.exports.CipmConfig = CipmConfig\n\nCipmConfig.impl(NpmConfig, {\n  get: Map.prototype.get,\n  set: Map.prototype.set,\n  toPacote (opts) {\n    return pacoteOpts(this, opts)\n  },\n  toLifecycle () {\n    return lifecycleOpts(this)\n  }\n})\n\nmodule.exports.fromObject = fromObj\nfunction fromObj (obj) {\n  const map = new NpmConfig()\n  Object.keys(obj).forEach(k => map.set(k, obj[k]))\n  return map\n}\n\nmodule.exports.fromNpm = getNpmConfig\nfunction getNpmConfig (argv) {\n  return new BB((resolve, reject) => {\n    const npmBin = process.platform === 'win32' ? 'npm.cmd' : 'npm'\n    const child = spawn(npmBin, [\n      'config', 'ls', '--json', '-l'\n      // We add argv here to get npm to parse those options for us :D\n    ].concat(argv || []), {\n      env: process.env,\n      cwd: process.cwd(),\n      stdio: [0, 'pipe', 2]\n    })\n\n    let stdout = ''\n    if (child.stdout) {\n      child.stdout.on('data', (chunk) => {\n        stdout += chunk\n      })\n    }\n\n    child.on('error', reject)\n    child.on('close', (code) => {\n      if (code === 127) {\n        reject(new Error('`npm` command not found. Please ensure you have npm@5.4.0 or later installed.'))\n      } else {\n        try {\n          resolve(fromObj(JSON.parse(stdout)))\n        } catch (e) {\n          reject(new Error('`npm config ls --json` failed to output json. Please ensure you have npm@5.4.0 or later installed.'))\n        }\n      }\n    })\n  })\n}\n"]}