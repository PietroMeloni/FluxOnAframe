{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/sshpk/bin/sshpk-sign"],"names":["dashdash","require","sshpk","fs","path","getPassword","getPass","options","names","type","help","parseOpts","main","module","parser","createParser","opts","parse","process","argv","e","console","error","message","exit","_args","length","trimRight","identity","keyData","readFileSync","filename","run","key","parsePrivateKey","name","err","pw","passphrase","hash","defaultHashAlgorithm","signer","createSign","verbose","size","inFile","stdin","inFileName","inFilePath","file","basename","accessSync","R_OK","createReadStream","outFile","stdout","out","identify","dirname","W_OK","createWriteStream","pipe","on","sig","sign","fmt","format","output","toBuffer","binary","toString","write","once"],"mappings":"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","file":"sshpk-sign.js","sourcesContent":["\n// -*- mode: js -*-\n// vim: set filetype=javascript :\n// Copyright 2015 Joyent, Inc.  All rights reserved.\n\nvar dashdash = require('dashdash');\nvar sshpk = require('../lib/index');\nvar fs = require('fs');\nvar path = require('path');\nvar getPassword = require('getpass').getPass;\n\nvar options = [\n\t{\n\t\tnames: ['hash', 'H'],\n\t\ttype: 'string',\n\t\thelp: 'Hash algorithm (sha1, sha256, sha384, sha512)'\n\t},\n\t{\n\t\tnames: ['verbose', 'v'],\n\t\ttype: 'bool',\n\t\thelp: 'Display verbose info about key and hash used'\n\t},\n\t{\n\t\tnames: ['identity', 'i'],\n\t\ttype: 'string',\n\t\thelp: 'Path to key to use'\n\t},\n\t{\n\t\tnames: ['file', 'f'],\n\t\ttype: 'string',\n\t\thelp: 'Input filename'\n\t},\n\t{\n\t\tnames: ['out', 'o'],\n\t\ttype: 'string',\n\t\thelp: 'Output filename'\n\t},\n\t{\n\t\tnames: ['format', 't'],\n\t\ttype: 'string',\n\t\thelp: 'Signature format (asn1, ssh, raw)'\n\t},\n\t{\n\t\tnames: ['binary', 'b'],\n\t\ttype: 'bool',\n\t\thelp: 'Output raw binary instead of base64'\n\t},\n\t{\n\t\tnames: ['help', 'h'],\n\t\ttype: 'bool',\n\t\thelp: 'Shows this help text'\n\t}\n];\n\nvar parseOpts = {};\n\nif (require.main === module) {\n\tvar parser = dashdash.createParser({\n\t\toptions: options\n\t});\n\n\ttry {\n\t\tvar opts = parser.parse(process.argv);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error: %s', e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.help || opts._args.length > 1) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-sign: sign data using an SSH key\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(1);\n\t}\n\n\tif (!opts.identity) {\n\t\tvar help = parser.help({}).trimRight();\n\t\tconsole.error('sshpk-sign: the -i or --identity option ' +\n\t\t    'is required\\n');\n\t\tconsole.error(help);\n\t\tprocess.exit(1);\n\t}\n\n\tvar keyData = fs.readFileSync(opts.identity);\n\tparseOpts.filename = opts.identity;\n\n\trun();\n}\n\nfunction run() {\n\tvar key;\n\ttry {\n\t\tkey = sshpk.parsePrivateKey(keyData, 'auto', parseOpts);\n\t} catch (e) {\n\t\tif (e.name === 'KeyEncryptedError') {\n\t\t\tgetPassword(function (err, pw) {\n\t\t\t\tparseOpts.passphrase = pw;\n\t\t\t\trun();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconsole.error('sshpk-sign: error loading private key \"' +\n\t\t    opts.identity + '\": ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar hash = opts.hash || key.defaultHashAlgorithm();\n\n\tvar signer;\n\ttry {\n\t\tsigner = key.createSign(hash);\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error creating signer: ' +\n\t\t    e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tif (opts.verbose) {\n\t\tconsole.error('sshpk-sign: using %s-%s with a %d bit key',\n\t\t    key.type, hash, key.size);\n\t}\n\n\tvar inFile = process.stdin;\n\tvar inFileName = 'stdin';\n\n\tvar inFilePath;\n\tif (opts.file) {\n\t\tinFilePath = opts.file;\n\t} else if (opts._args.length === 1) {\n\t\tinFilePath = opts._args[0];\n\t}\n\n\tif (inFilePath)\n\t\tinFileName = path.basename(inFilePath);\n\n\ttry {\n\t\tif (inFilePath) {\n\t\t\tfs.accessSync(inFilePath, fs.R_OK);\n\t\t\tinFile = fs.createReadStream(inFilePath);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error opening input file' +\n\t\t     ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tvar outFile = process.stdout;\n\n\ttry {\n\t\tif (opts.out && !opts.identify) {\n\t\t\tfs.accessSync(path.dirname(opts.out), fs.W_OK);\n\t\t\toutFile = fs.createWriteStream(opts.out);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('sshpk-sign: error opening output file' +\n\t\t    ': ' + e.name + ': ' + e.message);\n\t\tprocess.exit(1);\n\t}\n\n\tinFile.pipe(signer);\n\tinFile.on('end', function () {\n\t\tvar sig;\n\t\ttry {\n\t\t\tsig = signer.sign();\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-sign: error signing data: ' +\n\t\t\t    e.name + ': ' + e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tvar fmt = opts.format || 'asn1';\n\t\tvar output;\n\t\ttry {\n\t\t\toutput = sig.toBuffer(fmt);\n\t\t\tif (!opts.binary)\n\t\t\t\toutput = output.toString('base64');\n\t\t} catch (e) {\n\t\t\tconsole.error('sshpk-sign: error converting signature' +\n\t\t\t    ' to ' + fmt + ' format: ' + e.name + ': ' +\n\t\t\t    e.message);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\toutFile.write(output);\n\t\tif (!opts.binary)\n\t\t\toutFile.write('\\n');\n\t\toutFile.once('drain', function () {\n\t\t\tprocess.exit(0);\n\t\t});\n\t});\n}\n"]}