{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/sshpk/lib/dhe.js"],"names":["module","exports","DiffieHellman","generateECDSA","generateED25519","assert","require","crypto","Buffer","algs","utils","nacl","Key","PrivateKey","CRYPTO_HAVE_ECDH","createECDH","undefined","ecdh","ec","jsbn","key","assertCompatible","_isPriv","isPrivateKey","_algo","type","_curve","curve","_key","Error","_dh","createDiffieHellman","part","p","data","g","_p","_g","setPrivateKey","x","setPublicKey","y","BigInteger","_ecParams","X9ECParameters","_priv","ECPrivate","d","call","Q","k","prototype","getPublicKey","toPublic","getPrivateKey","getKey","_keyCheck","pk","isPub","object","deepEqual","setKey","r","slice","computeSecret","otherpk","pub","ECPublic","deriveSharedSecret","A","length","priv","strictEqual","secret","box","before","Uint8Array","from","generateKey","parts","generateKeys","push","name","q","n","getN","randomBytes","bitLength","n1","subtract","ONE","mod","add","getG","multiply","toByteArray","getCurve","encodePointHex","pair","keyPair","secretKey","publicKey","concat","params","curves","a","b","h","ECCurveFp","G","decodePointHex","toString","getH","buffer","_params","_pub","mpNormalize","pubKey","ok","S","getX","toBigInteger","sign","osCurve","dh","ecParams","cByteLen","Math","ceil","c"],"mappings":"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","file":"dhe.js","sourcesContent":["// Copyright 2017 Joyent, Inc.\n\nmodule.exports = {\n\tDiffieHellman: DiffieHellman,\n\tgenerateECDSA: generateECDSA,\n\tgenerateED25519: generateED25519\n};\n\nvar assert = require('assert-plus');\nvar crypto = require('crypto');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('./algs');\nvar utils = require('./utils');\nvar nacl;\n\nvar Key = require('./key');\nvar PrivateKey = require('./private-key');\n\nvar CRYPTO_HAVE_ECDH = (crypto.createECDH !== undefined);\n\nvar ecdh, ec, jsbn;\n\nfunction DiffieHellman(key) {\n\tutils.assertCompatible(key, Key, [1, 4], 'key');\n\tthis._isPriv = PrivateKey.isPrivateKey(key, [1, 3]);\n\tthis._algo = key.type;\n\tthis._curve = key.curve;\n\tthis._key = key;\n\tif (key.type === 'dsa') {\n\t\tif (!CRYPTO_HAVE_ECDH) {\n\t\t\tthrow (new Error('Due to bugs in the node 0.10 ' +\n\t\t\t    'crypto API, node 0.12.x or later is required ' +\n\t\t\t    'to use DH'));\n\t\t}\n\t\tthis._dh = crypto.createDiffieHellman(\n\t\t    key.part.p.data, undefined,\n\t\t    key.part.g.data, undefined);\n\t\tthis._p = key.part.p;\n\t\tthis._g = key.part.g;\n\t\tif (this._isPriv)\n\t\t\tthis._dh.setPrivateKey(key.part.x.data);\n\t\tthis._dh.setPublicKey(key.part.y.data);\n\n\t} else if (key.type === 'ecdsa') {\n\t\tif (!CRYPTO_HAVE_ECDH) {\n\t\t\tif (ecdh === undefined)\n\t\t\t\tecdh = require('ecc-jsbn');\n\t\t\tif (ec === undefined)\n\t\t\t\tec = require('ecc-jsbn/lib/ec');\n\t\t\tif (jsbn === undefined)\n\t\t\t\tjsbn = require('jsbn').BigInteger;\n\n\t\t\tthis._ecParams = new X9ECParameters(this._curve);\n\n\t\t\tif (this._isPriv) {\n\t\t\t\tthis._priv = new ECPrivate(\n\t\t\t\t    this._ecParams, key.part.d.data);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar curve = {\n\t\t\t'nistp256': 'prime256v1',\n\t\t\t'nistp384': 'secp384r1',\n\t\t\t'nistp521': 'secp521r1'\n\t\t}[key.curve];\n\t\tthis._dh = crypto.createECDH(curve);\n\t\tif (typeof (this._dh) !== 'object' ||\n\t\t    typeof (this._dh.setPrivateKey) !== 'function') {\n\t\t\tCRYPTO_HAVE_ECDH = false;\n\t\t\tDiffieHellman.call(this, key);\n\t\t\treturn;\n\t\t}\n\t\tif (this._isPriv)\n\t\t\tthis._dh.setPrivateKey(key.part.d.data);\n\t\tthis._dh.setPublicKey(key.part.Q.data);\n\n\t} else if (key.type === 'curve25519') {\n\t\tif (nacl === undefined)\n\t\t\tnacl = require('tweetnacl');\n\n\t\tif (this._isPriv) {\n\t\t\tutils.assertCompatible(key, PrivateKey, [1, 5], 'key');\n\t\t\tthis._priv = key.part.k.data;\n\t\t}\n\n\t} else {\n\t\tthrow (new Error('DH not supported for ' + key.type + ' keys'));\n\t}\n}\n\nDiffieHellman.prototype.getPublicKey = function () {\n\tif (this._isPriv)\n\t\treturn (this._key.toPublic());\n\treturn (this._key);\n};\n\nDiffieHellman.prototype.getPrivateKey = function () {\n\tif (this._isPriv)\n\t\treturn (this._key);\n\telse\n\t\treturn (undefined);\n};\nDiffieHellman.prototype.getKey = DiffieHellman.prototype.getPrivateKey;\n\nDiffieHellman.prototype._keyCheck = function (pk, isPub) {\n\tassert.object(pk, 'key');\n\tif (!isPub)\n\t\tutils.assertCompatible(pk, PrivateKey, [1, 3], 'key');\n\tutils.assertCompatible(pk, Key, [1, 4], 'key');\n\n\tif (pk.type !== this._algo) {\n\t\tthrow (new Error('A ' + pk.type + ' key cannot be used in ' +\n\t\t    this._algo + ' Diffie-Hellman'));\n\t}\n\n\tif (pk.curve !== this._curve) {\n\t\tthrow (new Error('A key from the ' + pk.curve + ' curve ' +\n\t\t    'cannot be used with a ' + this._curve +\n\t\t    ' Diffie-Hellman'));\n\t}\n\n\tif (pk.type === 'dsa') {\n\t\tassert.deepEqual(pk.part.p, this._p,\n\t\t    'DSA key prime does not match');\n\t\tassert.deepEqual(pk.part.g, this._g,\n\t\t    'DSA key generator does not match');\n\t}\n};\n\nDiffieHellman.prototype.setKey = function (pk) {\n\tthis._keyCheck(pk);\n\n\tif (pk.type === 'dsa') {\n\t\tthis._dh.setPrivateKey(pk.part.x.data);\n\t\tthis._dh.setPublicKey(pk.part.y.data);\n\n\t} else if (pk.type === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\tthis._dh.setPrivateKey(pk.part.d.data);\n\t\t\tthis._dh.setPublicKey(pk.part.Q.data);\n\t\t} else {\n\t\t\tthis._priv = new ECPrivate(\n\t\t\t    this._ecParams, pk.part.d.data);\n\t\t}\n\n\t} else if (pk.type === 'curve25519') {\n\t\tvar k = pk.part.k;\n\t\tif (!pk.part.k)\n\t\t\tk = pk.part.r;\n\t\tthis._priv = k.data;\n\t\tif (this._priv[0] === 0x00)\n\t\t\tthis._priv = this._priv.slice(1);\n\t\tthis._priv = this._priv.slice(0, 32);\n\t}\n\tthis._key = pk;\n\tthis._isPriv = true;\n};\nDiffieHellman.prototype.setPrivateKey = DiffieHellman.prototype.setKey;\n\nDiffieHellman.prototype.computeSecret = function (otherpk) {\n\tthis._keyCheck(otherpk, true);\n\tif (!this._isPriv)\n\t\tthrow (new Error('DH exchange has not been initialized with ' +\n\t\t    'a private key yet'));\n\n\tvar pub;\n\tif (this._algo === 'dsa') {\n\t\treturn (this._dh.computeSecret(\n\t\t    otherpk.part.y.data));\n\n\t} else if (this._algo === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\treturn (this._dh.computeSecret(\n\t\t\t    otherpk.part.Q.data));\n\t\t} else {\n\t\t\tpub = new ECPublic(\n\t\t\t    this._ecParams, otherpk.part.Q.data);\n\t\t\treturn (this._priv.deriveSharedSecret(pub));\n\t\t}\n\n\t} else if (this._algo === 'curve25519') {\n\t\tpub = otherpk.part.A.data;\n\t\twhile (pub[0] === 0x00 && pub.length > 32)\n\t\t\tpub = pub.slice(1);\n\t\tvar priv = this._priv;\n\t\tassert.strictEqual(pub.length, 32);\n\t\tassert.strictEqual(priv.length, 32);\n\n\t\tvar secret = nacl.box.before(new Uint8Array(pub),\n\t\t    new Uint8Array(priv));\n\n\t\treturn (Buffer.from(secret));\n\t}\n\n\tthrow (new Error('Invalid algorithm: ' + this._algo));\n};\n\nDiffieHellman.prototype.generateKey = function () {\n\tvar parts = [];\n\tvar priv, pub;\n\tif (this._algo === 'dsa') {\n\t\tthis._dh.generateKeys();\n\n\t\tparts.push({name: 'p', data: this._p.data});\n\t\tparts.push({name: 'q', data: this._key.part.q.data});\n\t\tparts.push({name: 'g', data: this._g.data});\n\t\tparts.push({name: 'y', data: this._dh.getPublicKey()});\n\t\tparts.push({name: 'x', data: this._dh.getPrivateKey()});\n\t\tthis._key = new PrivateKey({\n\t\t\ttype: 'dsa',\n\t\t\tparts: parts\n\t\t});\n\t\tthis._isPriv = true;\n\t\treturn (this._key);\n\n\t} else if (this._algo === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\tthis._dh.generateKeys();\n\n\t\t\tparts.push({name: 'curve',\n\t\t\t    data: Buffer.from(this._curve)});\n\t\t\tparts.push({name: 'Q', data: this._dh.getPublicKey()});\n\t\t\tparts.push({name: 'd', data: this._dh.getPrivateKey()});\n\t\t\tthis._key = new PrivateKey({\n\t\t\t\ttype: 'ecdsa',\n\t\t\t\tcurve: this._curve,\n\t\t\t\tparts: parts\n\t\t\t});\n\t\t\tthis._isPriv = true;\n\t\t\treturn (this._key);\n\n\t\t} else {\n\t\t\tvar n = this._ecParams.getN();\n\t\t\tvar r = new jsbn(crypto.randomBytes(n.bitLength()));\n\t\t\tvar n1 = n.subtract(jsbn.ONE);\n\t\t\tpriv = r.mod(n1).add(jsbn.ONE);\n\t\t\tpub = this._ecParams.getG().multiply(priv);\n\n\t\t\tpriv = Buffer.from(priv.toByteArray());\n\t\t\tpub = Buffer.from(this._ecParams.getCurve().\n\t\t\t    encodePointHex(pub), 'hex');\n\n\t\t\tthis._priv = new ECPrivate(this._ecParams, priv);\n\n\t\t\tparts.push({name: 'curve',\n\t\t\t    data: Buffer.from(this._curve)});\n\t\t\tparts.push({name: 'Q', data: pub});\n\t\t\tparts.push({name: 'd', data: priv});\n\n\t\t\tthis._key = new PrivateKey({\n\t\t\t\ttype: 'ecdsa',\n\t\t\t\tcurve: this._curve,\n\t\t\t\tparts: parts\n\t\t\t});\n\t\t\tthis._isPriv = true;\n\t\t\treturn (this._key);\n\t\t}\n\n\t} else if (this._algo === 'curve25519') {\n\t\tvar pair = nacl.box.keyPair();\n\t\tpriv = Buffer.from(pair.secretKey);\n\t\tpub = Buffer.from(pair.publicKey);\n\t\tpriv = Buffer.concat([priv, pub]);\n\t\tassert.strictEqual(priv.length, 64);\n\t\tassert.strictEqual(pub.length, 32);\n\n\t\tparts.push({name: 'A', data: pub});\n\t\tparts.push({name: 'k', data: priv});\n\t\tthis._key = new PrivateKey({\n\t\t\ttype: 'curve25519',\n\t\t\tparts: parts\n\t\t});\n\t\tthis._isPriv = true;\n\t\treturn (this._key);\n\t}\n\n\tthrow (new Error('Invalid algorithm: ' + this._algo));\n};\nDiffieHellman.prototype.generateKeys = DiffieHellman.prototype.generateKey;\n\n/* These are helpers for using ecc-jsbn (for node 0.10 compatibility). */\n\nfunction X9ECParameters(name) {\n\tvar params = algs.curves[name];\n\tassert.object(params);\n\n\tvar p = new jsbn(params.p);\n\tvar a = new jsbn(params.a);\n\tvar b = new jsbn(params.b);\n\tvar n = new jsbn(params.n);\n\tvar h = jsbn.ONE;\n\tvar curve = new ec.ECCurveFp(p, a, b);\n\tvar G = curve.decodePointHex(params.G.toString('hex'));\n\n\tthis.curve = curve;\n\tthis.g = G;\n\tthis.n = n;\n\tthis.h = h;\n}\nX9ECParameters.prototype.getCurve = function () { return (this.curve); };\nX9ECParameters.prototype.getG = function () { return (this.g); };\nX9ECParameters.prototype.getN = function () { return (this.n); };\nX9ECParameters.prototype.getH = function () { return (this.h); };\n\nfunction ECPublic(params, buffer) {\n\tthis._params = params;\n\tif (buffer[0] === 0x00)\n\t\tbuffer = buffer.slice(1);\n\tthis._pub = params.getCurve().decodePointHex(buffer.toString('hex'));\n}\n\nfunction ECPrivate(params, buffer) {\n\tthis._params = params;\n\tthis._priv = new jsbn(utils.mpNormalize(buffer));\n}\nECPrivate.prototype.deriveSharedSecret = function (pubKey) {\n\tassert.ok(pubKey instanceof ECPublic);\n\tvar S = pubKey._pub.multiply(this._priv);\n\treturn (Buffer.from(S.getX().toBigInteger().toByteArray()));\n};\n\nfunction generateED25519() {\n\tif (nacl === undefined)\n\t\tnacl = require('tweetnacl');\n\n\tvar pair = nacl.sign.keyPair();\n\tvar priv = Buffer.from(pair.secretKey);\n\tvar pub = Buffer.from(pair.publicKey);\n\tassert.strictEqual(priv.length, 64);\n\tassert.strictEqual(pub.length, 32);\n\n\tvar parts = [];\n\tparts.push({name: 'A', data: pub});\n\tparts.push({name: 'k', data: priv.slice(0, 32)});\n\tvar key = new PrivateKey({\n\t\ttype: 'ed25519',\n\t\tparts: parts\n\t});\n\treturn (key);\n}\n\n/* Generates a new ECDSA private key on a given curve. */\nfunction generateECDSA(curve) {\n\tvar parts = [];\n\tvar key;\n\n\tif (CRYPTO_HAVE_ECDH) {\n\t\t/*\n\t\t * Node crypto doesn't expose key generation directly, but the\n\t\t * ECDH instances can generate keys. It turns out this just\n\t\t * calls into the OpenSSL generic key generator, and we can\n\t\t * read its output happily without doing an actual DH. So we\n\t\t * use that here.\n\t\t */\n\t\tvar osCurve = {\n\t\t\t'nistp256': 'prime256v1',\n\t\t\t'nistp384': 'secp384r1',\n\t\t\t'nistp521': 'secp521r1'\n\t\t}[curve];\n\n\t\tvar dh = crypto.createECDH(osCurve);\n\t\tdh.generateKeys();\n\n\t\tparts.push({name: 'curve',\n\t\t    data: Buffer.from(curve)});\n\t\tparts.push({name: 'Q', data: dh.getPublicKey()});\n\t\tparts.push({name: 'd', data: dh.getPrivateKey()});\n\n\t\tkey = new PrivateKey({\n\t\t\ttype: 'ecdsa',\n\t\t\tcurve: curve,\n\t\t\tparts: parts\n\t\t});\n\t\treturn (key);\n\t} else {\n\t\tif (ecdh === undefined)\n\t\t\tecdh = require('ecc-jsbn');\n\t\tif (ec === undefined)\n\t\t\tec = require('ecc-jsbn/lib/ec');\n\t\tif (jsbn === undefined)\n\t\t\tjsbn = require('jsbn').BigInteger;\n\n\t\tvar ecParams = new X9ECParameters(curve);\n\n\t\t/* This algorithm taken from FIPS PUB 186-4 (section B.4.1) */\n\t\tvar n = ecParams.getN();\n\t\t/*\n\t\t * The crypto.randomBytes() function can only give us whole\n\t\t * bytes, so taking a nod from X9.62, we round up.\n\t\t */\n\t\tvar cByteLen = Math.ceil((n.bitLength() + 64) / 8);\n\t\tvar c = new jsbn(crypto.randomBytes(cByteLen));\n\n\t\tvar n1 = n.subtract(jsbn.ONE);\n\t\tvar priv = c.mod(n1).add(jsbn.ONE);\n\t\tvar pub = ecParams.getG().multiply(priv);\n\n\t\tpriv = Buffer.from(priv.toByteArray());\n\t\tpub = Buffer.from(ecParams.getCurve().\n\t\t    encodePointHex(pub), 'hex');\n\n\t\tparts.push({name: 'curve', data: Buffer.from(curve)});\n\t\tparts.push({name: 'Q', data: pub});\n\t\tparts.push({name: 'd', data: priv});\n\n\t\tkey = new PrivateKey({\n\t\t\ttype: 'ecdsa',\n\t\t\tcurve: curve,\n\t\t\tparts: parts\n\t\t});\n\t\treturn (key);\n\t}\n}\n"]}