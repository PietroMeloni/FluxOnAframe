{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/sshpk/lib/ssh-buffer.js"],"names":["module","exports","SSHBuffer","assert","require","Buffer","opts","object","buffer","undefined","_size","length","_buffer","alloc","_offset","prototype","toBuffer","slice","atEnd","remainder","skip","n","expand","buf","copy","readPart","data","readBuffer","len","readUInt32BE","ok","toString","readString","readCString","offset","str","readInt","v","readInt64","readChar","writeBuffer","writeUInt32BE","writeString","from","writeCString","write","writeInt","writeInt64","lead","i","strictEqual","writeChar","writePart","p"],"mappings":"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","file":"ssh-buffer.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = SSHBuffer;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\n\nfunction SSHBuffer(opts) {\n\tassert.object(opts, 'options');\n\tif (opts.buffer !== undefined)\n\t\tassert.buffer(opts.buffer, 'options.buffer');\n\n\tthis._size = opts.buffer ? opts.buffer.length : 1024;\n\tthis._buffer = opts.buffer || Buffer.alloc(this._size);\n\tthis._offset = 0;\n}\n\nSSHBuffer.prototype.toBuffer = function () {\n\treturn (this._buffer.slice(0, this._offset));\n};\n\nSSHBuffer.prototype.atEnd = function () {\n\treturn (this._offset >= this._buffer.length);\n};\n\nSSHBuffer.prototype.remainder = function () {\n\treturn (this._buffer.slice(this._offset));\n};\n\nSSHBuffer.prototype.skip = function (n) {\n\tthis._offset += n;\n};\n\nSSHBuffer.prototype.expand = function () {\n\tthis._size *= 2;\n\tvar buf = Buffer.alloc(this._size);\n\tthis._buffer.copy(buf, 0);\n\tthis._buffer = buf;\n};\n\nSSHBuffer.prototype.readPart = function () {\n\treturn ({data: this.readBuffer()});\n};\n\nSSHBuffer.prototype.readBuffer = function () {\n\tvar len = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\tassert.ok(this._offset + len <= this._buffer.length,\n\t    'length out of bounds at +0x' + this._offset.toString(16) +\n\t    ' (data truncated?)');\n\tvar buf = this._buffer.slice(this._offset, this._offset + len);\n\tthis._offset += len;\n\treturn (buf);\n};\n\nSSHBuffer.prototype.readString = function () {\n\treturn (this.readBuffer().toString());\n};\n\nSSHBuffer.prototype.readCString = function () {\n\tvar offset = this._offset;\n\twhile (offset < this._buffer.length &&\n\t    this._buffer[offset] !== 0x00)\n\t\toffset++;\n\tassert.ok(offset < this._buffer.length, 'c string does not terminate');\n\tvar str = this._buffer.slice(this._offset, offset).toString();\n\tthis._offset = offset + 1;\n\treturn (str);\n};\n\nSSHBuffer.prototype.readInt = function () {\n\tvar v = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readInt64 = function () {\n\tassert.ok(this._offset + 8 < this._buffer.length,\n\t    'buffer not long enough to read Int64');\n\tvar v = this._buffer.slice(this._offset, this._offset + 8);\n\tthis._offset += 8;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readChar = function () {\n\tvar v = this._buffer[this._offset++];\n\treturn (v);\n};\n\nSSHBuffer.prototype.writeBuffer = function (buf) {\n\twhile (this._offset + 4 + buf.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(buf.length, this._offset);\n\tthis._offset += 4;\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n\nSSHBuffer.prototype.writeString = function (str) {\n\tthis.writeBuffer(Buffer.from(str, 'utf8'));\n};\n\nSSHBuffer.prototype.writeCString = function (str) {\n\twhile (this._offset + 1 + str.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.write(str, this._offset);\n\tthis._offset += str.length;\n\tthis._buffer[this._offset++] = 0;\n};\n\nSSHBuffer.prototype.writeInt = function (v) {\n\twhile (this._offset + 4 > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(v, this._offset);\n\tthis._offset += 4;\n};\n\nSSHBuffer.prototype.writeInt64 = function (v) {\n\tassert.buffer(v, 'value');\n\tif (v.length > 8) {\n\t\tvar lead = v.slice(0, v.length - 8);\n\t\tfor (var i = 0; i < lead.length; ++i) {\n\t\t\tassert.strictEqual(lead[i], 0,\n\t\t\t    'must fit in 64 bits of precision');\n\t\t}\n\t\tv = v.slice(v.length - 8, v.length);\n\t}\n\twhile (this._offset + 8 > this._size)\n\t\tthis.expand();\n\tv.copy(this._buffer, this._offset);\n\tthis._offset += 8;\n};\n\nSSHBuffer.prototype.writeChar = function (v) {\n\twhile (this._offset + 1 > this._size)\n\t\tthis.expand();\n\tthis._buffer[this._offset++] = v;\n};\n\nSSHBuffer.prototype.writePart = function (p) {\n\tthis.writeBuffer(p.data);\n};\n\nSSHBuffer.prototype.write = function (buf) {\n\twhile (this._offset + buf.length > this._size)\n\t\tthis.expand();\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n"]}