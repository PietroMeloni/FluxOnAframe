{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/sshpk/lib/key.js"],"names":["module","exports","Key","assert","require","algs","crypto","Fingerprint","Signature","DiffieHellman","errs","utils","PrivateKey","edCompat","e","InvalidAlgorithmError","KeyParseError","formats","opts","object","arrayOfObject","parts","string","type","optionalString","comment","algInfo","info","partLookup","i","length","part","name","undefined","source","_rfc4253Cache","_hashCache","sz","curve","data","toString","curves","size","szPart","sizePart","countZeros","prototype","toBuffer","format","options","optionalObject","write","hash","algo","toLowerCase","hashAlgs","createHash","update","digest","fingerprint","algorithm","defaultHashAlgorithm","hashAlgo","createVerify","Verifier","Error","v","nm","err","toUpperCase","message","match","ok","oldVerify","verify","bind","key","self","signature","fmt","isSignature","hashAlgorithm","Buffer","isBuffer","TypeError","createDiffieHellman","createDH","parse","buffer","filename","k","read","toPublic","isKey","obj","ver","isCompatible","_sshpkApiVersion","_oldVersionDetect","func"],"mappings":"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","file":"key.js","sourcesContent":["// Copyright 2017 Joyent, Inc.\n\nmodule.exports = Key;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar DiffieHellman = require('./dhe').DiffieHellman;\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar PrivateKey = require('./private-key');\nvar edCompat;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh'] = require('./formats/ssh');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\nformats['dnssec'] = require('./formats/dnssec');\n\nfunction Key(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\tassert.optionalString(opts.comment, 'options.comment');\n\n\tvar algInfo = algs.info[opts.type];\n\tif (typeof (algInfo) !== 'object')\n\t\tthrow (new InvalidAlgorithmError(opts.type));\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n\tthis.comment = undefined;\n\tthis.source = opts.source;\n\n\t/* for speeding up hashing/fingerprint operations */\n\tthis._rfc4253Cache = opts._rfc4253Cache;\n\tthis._hashCache = {};\n\n\tvar sz;\n\tthis.curve = undefined;\n\tif (this.type === 'ecdsa') {\n\t\tvar curve = this.part.curve.data.toString();\n\t\tthis.curve = curve;\n\t\tsz = algs.curves[curve].size;\n\t} else if (this.type === 'ed25519' || this.type === 'curve25519') {\n\t\tsz = 256;\n\t\tthis.curve = 'curve25519';\n\t} else {\n\t\tvar szPart = this.part[algInfo.sizePart];\n\t\tsz = szPart.data.length;\n\t\tsz = sz * 8 - utils.countZeros(szPart.data);\n\t}\n\tthis.size = sz;\n}\n\nKey.formats = formats;\n\nKey.prototype.toBuffer = function (format, options) {\n\tif (format === undefined)\n\t\tformat = 'ssh';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\tassert.optionalObject(options, 'options');\n\n\tif (format === 'rfc4253') {\n\t\tif (this._rfc4253Cache === undefined)\n\t\t\tthis._rfc4253Cache = formats['rfc4253'].write(this);\n\t\treturn (this._rfc4253Cache);\n\t}\n\n\treturn (formats[format].write(this, options));\n};\n\nKey.prototype.toString = function (format, options) {\n\treturn (this.toBuffer(format, options).toString());\n};\n\nKey.prototype.hash = function (algo) {\n\tassert.string(algo, 'algorithm');\n\talgo = algo.toLowerCase();\n\tif (algs.hashAlgs[algo] === undefined)\n\t\tthrow (new InvalidAlgorithmError(algo));\n\n\tif (this._hashCache[algo])\n\t\treturn (this._hashCache[algo]);\n\tvar hash = crypto.createHash(algo).\n\t    update(this.toBuffer('rfc4253')).digest();\n\tthis._hashCache[algo] = hash;\n\treturn (hash);\n};\n\nKey.prototype.fingerprint = function (algo) {\n\tif (algo === undefined)\n\t\talgo = 'sha256';\n\tassert.string(algo, 'algorithm');\n\tvar opts = {\n\t\ttype: 'key',\n\t\thash: this.hash(algo),\n\t\talgorithm: algo\n\t};\n\treturn (new Fingerprint(opts));\n};\n\nKey.prototype.defaultHashAlgorithm = function () {\n\tvar hashAlgo = 'sha1';\n\tif (this.type === 'rsa')\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'dsa' && this.size > 1024)\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'ed25519')\n\t\thashAlgo = 'sha512';\n\tif (this.type === 'ecdsa') {\n\t\tif (this.size <= 256)\n\t\t\thashAlgo = 'sha256';\n\t\telse if (this.size <= 384)\n\t\t\thashAlgo = 'sha384';\n\t\telse\n\t\t\thashAlgo = 'sha512';\n\t}\n\treturn (hashAlgo);\n};\n\nKey.prototype.createVerify = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Verifier(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldVerify = v.verify.bind(v);\n\tvar key = this.toBuffer('pkcs8');\n\tvar curve = this.curve;\n\tvar self = this;\n\tv.verify = function (signature, fmt) {\n\t\tif (Signature.isSignature(signature, [2, 0])) {\n\t\t\tif (signature.type !== self.type)\n\t\t\t\treturn (false);\n\t\t\tif (signature.hashAlgorithm &&\n\t\t\t    signature.hashAlgorithm !== hashAlgo)\n\t\t\t\treturn (false);\n\t\t\tif (signature.curve && self.type === 'ecdsa' &&\n\t\t\t    signature.curve !== curve)\n\t\t\t\treturn (false);\n\t\t\treturn (oldVerify(key, signature.toBuffer('asn1')));\n\n\t\t} else if (typeof (signature) === 'string' ||\n\t\t    Buffer.isBuffer(signature)) {\n\t\t\treturn (oldVerify(key, signature, fmt));\n\n\t\t/*\n\t\t * Avoid doing this on valid arguments, walking the prototype\n\t\t * chain can be quite slow.\n\t\t */\n\t\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\t\tthrow (new Error('signature was created by too old ' +\n\t\t\t    'a version of sshpk and cannot be verified'));\n\n\t\t} else {\n\t\t\tthrow (new TypeError('signature must be a string, ' +\n\t\t\t    'Buffer, or Signature object'));\n\t\t}\n\t};\n\treturn (v);\n};\n\nKey.prototype.createDiffieHellman = function () {\n\tif (this.type === 'rsa')\n\t\tthrow (new Error('RSA keys do not support Diffie-Hellman'));\n\n\treturn (new DiffieHellman(this));\n};\nKey.prototype.createDH = Key.prototype.createDiffieHellman;\n\nKey.parse = function (data, format, options) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (typeof (options) === 'string')\n\t\toptions = { filename: options };\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalString(options.filename, 'options.filename');\n\tif (options.filename === undefined)\n\t\toptions.filename = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data, options);\n\t\tif (k instanceof PrivateKey)\n\t\t\tk = k.toPublic();\n\t\tif (!k.comment)\n\t\t\tk.comment = options.filename;\n\t\treturn (k);\n\t} catch (e) {\n\t\tif (e.name === 'KeyEncryptedError')\n\t\t\tthrow (e);\n\t\tthrow (new KeyParseError(options.filename, format, e));\n\t}\n};\n\nKey.isKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Key, ver));\n};\n\n/*\n * API versions for Key:\n * [1,0] -- initial ver, may take Signature for createVerify or may not\n * [1,1] -- added pkcs1, pkcs8 formats\n * [1,2] -- added auto, ssh-private, openssh formats\n * [1,3] -- added defaultHashAlgorithm\n * [1,4] -- added ed support, createDH\n * [1,5] -- first explicitly tagged version\n * [1,6] -- changed ed25519 part names\n */\nKey.prototype._sshpkApiVersion = [1, 6];\n\nKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tassert.func(obj.fingerprint);\n\tif (obj.createDH)\n\t\treturn ([1, 4]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 3]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 2]);\n\tif (obj.formats['pkcs1'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n"]}