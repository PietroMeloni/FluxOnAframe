{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/sshpk/lib/formats/auto.js"],"names":["module","exports","read","write","assert","require","Buffer","utils","Key","PrivateKey","pem","ssh","rfc4253","dnssec","DNSSEC_PRIVKEY_HEADER_PREFIX","buf","options","trim","match","findDNSSECHeader","from","buffer","findPEMHeader","findSSHHeader","readUInt32BE","length","Error","offset","slice","toString","headerCheck","lines","split","line","key"],"mappings":"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","file":"auto.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\nvar dnssec = require('./dnssec');\n\nvar DNSSEC_PRIVKEY_HEADER_PREFIX = 'Private-key-format: v1';\n\nfunction read(buf, options) {\n\tif (typeof (buf) === 'string') {\n\t\tif (buf.trim().match(/^[-]+[ ]*BEGIN/))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (buf.match(/^\\s*ssh-[a-z]/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^\\s*ecdsa-/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t\tbuf = Buffer.from(buf, 'binary');\n\t} else {\n\t\tassert.buffer(buf);\n\t\tif (findPEMHeader(buf))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (findSSHHeader(buf))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t}\n\tif (buf.readUInt32BE(0) < buf.length)\n\t\treturn (rfc4253.read(buf, options));\n\tthrow (new Error('Failed to auto-detect format of key'));\n}\n\nfunction findSSHHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 4 <= buf.length &&\n\t    buf.slice(offset, offset + 4).toString('ascii') === 'ssh-')\n\t\treturn (true);\n\tif (offset + 6 <= buf.length &&\n\t    buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findPEMHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10))\n\t\t++offset;\n\tif (buf[offset] !== 45)\n\t\treturn (false);\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 45))\n\t\t++offset;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32))\n\t\t++offset;\n\tif (offset + 5 > buf.length ||\n\t    buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN')\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction findDNSSECHeader(buf) {\n\t// private case first\n\tif (buf.length <= DNSSEC_PRIVKEY_HEADER_PREFIX.length)\n\t\treturn (false);\n\tvar headerCheck = buf.slice(0, DNSSEC_PRIVKEY_HEADER_PREFIX.length);\n\tif (headerCheck.toString('ascii') === DNSSEC_PRIVKEY_HEADER_PREFIX)\n\t\treturn (true);\n\n\t// public-key RFC3110 ?\n\t// 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'\n\t// skip any comment-lines\n\tif (typeof (buf) !== 'string') {\n\t\tbuf = buf.toString('ascii');\n\t}\n\tvar lines = buf.split('\\n');\n\tvar line = 0;\n\t/* JSSTYLED */\n\twhile (lines[line].match(/^\\;/))\n\t\tline++;\n\tif (lines[line].toString('ascii').match(/\\. IN KEY /))\n\t\treturn (true);\n\tif (lines[line].toString('ascii').match(/\\. IN DNSKEY /))\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction write(key, options) {\n\tthrow (new Error('\"auto\" format cannot be used for writing'));\n}\n"]}