{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/sshpk/lib/formats/pkcs8.js"],"names":["module","exports","read","readPkcs8","write","writePkcs8","readECDSACurve","writeECDSACurve","assert","require","asn1","Buffer","algs","utils","Key","PrivateKey","pem","buf","options","key","readMPInt","der","nm","strictEqual","peek","Ber","Integer","mpNormalize","readString","alg","type","readSequence","next","offset","length","oid","readOID","_offset","readPkcs8RSAPublic","readPkcs8RSAPrivate","readPkcs8DSAPublic","readPkcs8DSAPrivate","readPkcs8ECDSAPublic","readPkcs8ECDSAPrivate","readPkcs8EdDSAPublic","readPkcs8EdDSAPrivate","readPkcs8X25519Public","readPkcs8X25519Private","Error","BitString","readByte","n","e","source","originalInput","parts","name","data","OctetString","ver","equal","d","p","q","dmodp","dmodq","iqmp","g","y","x","calculateDSAPublic","curveName","curveNames","j","c","cd","OID","Object","keys","curves","pkcs8oid","version","curve","fieldTypeOid","size","countZeros","a","b","s","G","h","ks","i","k","undefined","equals","isBuffer","toString","string","Q","ecNormalize","from","A","readBitString","zeroPadToLength","calculateED25519Public","calculateX25519Public","startSequence","isPrivateKey","sillyInt","writeBuffer","writeOID","writePkcs8RSAPrivate","writePkcs8RSAPublic","writePkcs8DSAPrivate","writePkcs8DSAPublic","writePkcs8ECDSAPrivate","writePkcs8ECDSAPublic","writePkcs8EdDSAPublic","endSequence","writeNull","part","addRSAMissing","writeByte","slice","writeBitString","writePkcs8EdDSAPrivate"],"mappings":"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","file":"pkcs8.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadPkcs8: readPkcs8,\n\twrite: write,\n\twritePkcs8: writePkcs8,\n\n\treadECDSACurve: readECDSACurve,\n\twriteECDSACurve: writeECDSACurve\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\n\nfunction read(buf, options) {\n\treturn (pem.read(buf, options, 'pkcs8'));\n}\n\nfunction write(key, options) {\n\treturn (pem.write(key, options, 'pkcs8'));\n}\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction readPkcs8(alg, type, der) {\n\t/* Private keys in pkcs#8 format have a weird extra int */\n\tif (der.peek() === asn1.Ber.Integer) {\n\t\tassert.strictEqual(type, 'private',\n\t\t    'unexpected Integer at start of public key');\n\t\tder.readString(asn1.Ber.Integer, true);\n\t}\n\n\tder.readSequence();\n\tvar next = der.offset + der.length;\n\n\tvar oid = der.readOID();\n\tswitch (oid) {\n\tcase '1.2.840.113549.1.1.1':\n\t\tder._offset = next;\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8RSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8RSAPrivate(der));\n\tcase '1.2.840.10040.4.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8DSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8DSAPrivate(der));\n\tcase '1.2.840.10045.2.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8ECDSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8ECDSAPrivate(der));\n\tcase '1.3.101.112':\n\t\tif (type === 'public') {\n\t\t\treturn (readPkcs8EdDSAPublic(der));\n\t\t} else {\n\t\t\treturn (readPkcs8EdDSAPrivate(der));\n\t\t}\n\tcase '1.3.101.110':\n\t\tif (type === 'public') {\n\t\t\treturn (readPkcs8X25519Public(der));\n\t\t} else {\n\t\t\treturn (readPkcs8X25519Private(der));\n\t\t}\n\tdefault:\n\t\tthrow (new Error('Unknown key type OID ' + oid));\n\t}\n}\n\nfunction readPkcs8RSAPublic(der) {\n\t// bit string sequence\n\tder.readSequence(asn1.Ber.BitString);\n\tder.readByte();\n\tder.readSequence();\n\n\t// modulus\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'exponent');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tsource: der.originalInput,\n\t\tparts: [\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'n', data: n }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8RSAPrivate(der) {\n\tder.readSequence(asn1.Ber.OctetString);\n\tder.readSequence();\n\n\tvar ver = readMPInt(der, 'version');\n\tassert.equal(ver[0], 0x0, 'unknown RSA private key version');\n\n\t// modulus then public exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'public exponent');\n\tvar d = readMPInt(der, 'private exponent');\n\tvar p = readMPInt(der, 'prime1');\n\tvar q = readMPInt(der, 'prime2');\n\tvar dmodp = readMPInt(der, 'exponent1');\n\tvar dmodq = readMPInt(der, 'exponent2');\n\tvar iqmp = readMPInt(der, 'iqmp');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'n', data: n },\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'd', data: d },\n\t\t\t{ name: 'iqmp', data: iqmp },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'dmodp', data: dmodp },\n\t\t\t{ name: 'dmodq', data: dmodq }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8DSAPublic(der) {\n\tder.readSequence();\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\t// bit string sequence\n\tder.readSequence(asn1.Ber.BitString);\n\tder.readByte();\n\n\tvar y = readMPInt(der, 'y');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8DSAPrivate(der) {\n\tder.readSequence();\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar x = readMPInt(der, 'x');\n\n\t/* The pkcs#8 format does not include the public key */\n\tvar y = utils.calculateDSAPublic(g, p, x);\n\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'x', data: x }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readECDSACurve(der) {\n\tvar curveName, curveNames;\n\tvar j, c, cd;\n\n\tif (der.peek() === asn1.Ber.OID) {\n\t\tvar oid = der.readOID();\n\n\t\tcurveNames = Object.keys(algs.curves);\n\t\tfor (j = 0; j < curveNames.length; ++j) {\n\t\t\tc = curveNames[j];\n\t\t\tcd = algs.curves[c];\n\t\t\tif (cd.pkcs8oid === oid) {\n\t\t\t\tcurveName = c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t} else {\n\t\t// ECParameters sequence\n\t\tder.readSequence();\n\t\tvar version = der.readString(asn1.Ber.Integer, true);\n\t\tassert.strictEqual(version[0], 1, 'ECDSA key not version 1');\n\n\t\tvar curve = {};\n\n\t\t// FieldID sequence\n\t\tder.readSequence();\n\t\tvar fieldTypeOid = der.readOID();\n\t\tassert.strictEqual(fieldTypeOid, '1.2.840.10045.1.1',\n\t\t    'ECDSA key is not from a prime-field');\n\t\tvar p = curve.p = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\t/*\n\t\t * p always starts with a 1 bit, so count the zeros to get its\n\t\t * real size.\n\t\t */\n\t\tcurve.size = p.length * 8 - utils.countZeros(p);\n\n\t\t// Curve sequence\n\t\tder.readSequence();\n\t\tcurve.a = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.OctetString, true));\n\t\tcurve.b = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.OctetString, true));\n\t\tif (der.peek() === asn1.Ber.BitString)\n\t\t\tcurve.s = der.readString(asn1.Ber.BitString, true);\n\n\t\t// Combined Gx and Gy\n\t\tcurve.G = der.readString(asn1.Ber.OctetString, true);\n\t\tassert.strictEqual(curve.G[0], 0x4,\n\t\t    'uncompressed G is required');\n\n\t\tcurve.n = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\tcurve.h = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\tassert.strictEqual(curve.h[0], 0x1, 'a cofactor=1 curve is ' +\n\t\t    'required');\n\n\t\tcurveNames = Object.keys(algs.curves);\n\t\tvar ks = Object.keys(curve);\n\t\tfor (j = 0; j < curveNames.length; ++j) {\n\t\t\tc = curveNames[j];\n\t\t\tcd = algs.curves[c];\n\t\t\tvar equal = true;\n\t\t\tfor (var i = 0; i < ks.length; ++i) {\n\t\t\t\tvar k = ks[i];\n\t\t\t\tif (cd[k] === undefined)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (typeof (cd[k]) === 'object' &&\n\t\t\t\t    cd[k].equals !== undefined) {\n\t\t\t\t\tif (!cd[k].equals(curve[k])) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (Buffer.isBuffer(cd[k])) {\n\t\t\t\t\tif (cd[k].toString('binary')\n\t\t\t\t\t    !== curve[k].toString('binary')) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (cd[k] !== curve[k]) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (equal) {\n\t\t\t\tcurveName = c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn (curveName);\n}\n\nfunction readPkcs8ECDSAPrivate(der) {\n\tvar curveName = readECDSACurve(der);\n\tassert.string(curveName, 'a known elliptic curve');\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tder.readSequence();\n\n\tvar version = readMPInt(der, 'version');\n\tassert.equal(version[0], 1, 'unknown version of ECDSA key');\n\n\tvar d = der.readString(asn1.Ber.OctetString, true);\n\tder.readSequence(0xa1);\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curveName) },\n\t\t\t{ name: 'Q', data: Q },\n\t\t\t{ name: 'd', data: d }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8ECDSAPublic(der) {\n\tvar curveName = readECDSACurve(der);\n\tassert.string(curveName, 'a known elliptic curve');\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curveName) },\n\t\t\t{ name: 'Q', data: Q }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8EdDSAPublic(der) {\n\tif (der.peek() === 0x00)\n\t\tder.readByte();\n\n\tvar A = utils.readBitString(der);\n\n\tvar key = {\n\t\ttype: 'ed25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8X25519Public(der) {\n\tvar A = utils.readBitString(der);\n\n\tvar key = {\n\t\ttype: 'curve25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8EdDSAPrivate(der) {\n\tif (der.peek() === 0x00)\n\t\tder.readByte();\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar k = der.readString(asn1.Ber.OctetString, true);\n\tk = utils.zeroPadToLength(k, 32);\n\n\tvar A;\n\tif (der.peek() === asn1.Ber.BitString) {\n\t\tA = utils.readBitString(der);\n\t\tA = utils.zeroPadToLength(A, 32);\n\t} else {\n\t\tA = utils.calculateED25519Public(k);\n\t}\n\n\tvar key = {\n\t\ttype: 'ed25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) },\n\t\t\t{ name: 'k', data: utils.zeroPadToLength(k, 32) }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8X25519Private(der) {\n\tif (der.peek() === 0x00)\n\t\tder.readByte();\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar k = der.readString(asn1.Ber.OctetString, true);\n\tk = utils.zeroPadToLength(k, 32);\n\n\tvar A = utils.calculateX25519Public(k);\n\n\tvar key = {\n\t\ttype: 'curve25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) },\n\t\t\t{ name: 'k', data: utils.zeroPadToLength(k, 32) }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction writePkcs8(der, key) {\n\tder.startSequence();\n\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tvar sillyInt = Buffer.from([0]);\n\t\tder.writeBuffer(sillyInt, asn1.Ber.Integer);\n\t}\n\n\tder.startSequence();\n\tswitch (key.type) {\n\tcase 'rsa':\n\t\tder.writeOID('1.2.840.113549.1.1.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8RSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8RSAPublic(key, der);\n\t\tbreak;\n\tcase 'dsa':\n\t\tder.writeOID('1.2.840.10040.4.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8DSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8DSAPublic(key, der);\n\t\tbreak;\n\tcase 'ecdsa':\n\t\tder.writeOID('1.2.840.10045.2.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8ECDSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8ECDSAPublic(key, der);\n\t\tbreak;\n\tcase 'ed25519':\n\t\tder.writeOID('1.3.101.112');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\tthrow (new Error('Ed25519 private keys in pkcs8 ' +\n\t\t\t    'format are not supported'));\n\t\twritePkcs8EdDSAPublic(key, der);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unsupported key type: ' + key.type));\n\t}\n\n\tder.endSequence();\n}\n\nfunction writePkcs8RSAPrivate(key, der) {\n\tder.writeNull();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.startSequence();\n\n\tvar version = Buffer.from([0]);\n\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.d.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tif (!key.part.dmodp || !key.part.dmodq)\n\t\tutils.addRSAMissing(key);\n\tder.writeBuffer(key.part.dmodp.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.dmodq.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.iqmp.data, asn1.Ber.Integer);\n\n\tder.endSequence();\n\tder.endSequence();\n}\n\nfunction writePkcs8RSAPublic(key, der) {\n\tder.writeNull();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.BitString);\n\tder.writeByte(0x00);\n\n\tder.startSequence();\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.endSequence();\n\n\tder.endSequence();\n}\n\nfunction writePkcs8DSAPrivate(key, der) {\n\tder.startSequence();\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.endSequence();\n\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.writeBuffer(key.part.x.data, asn1.Ber.Integer);\n\tder.endSequence();\n}\n\nfunction writePkcs8DSAPublic(key, der) {\n\tder.startSequence();\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.endSequence();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.BitString);\n\tder.writeByte(0x00);\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.endSequence();\n}\n\nfunction writeECDSACurve(key, der) {\n\tvar curve = algs.curves[key.curve];\n\tif (curve.pkcs8oid) {\n\t\t/* This one has a name in pkcs#8, so just write the oid */\n\t\tder.writeOID(curve.pkcs8oid);\n\n\t} else {\n\t\t// ECParameters sequence\n\t\tder.startSequence();\n\n\t\tvar version = Buffer.from([1]);\n\t\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\t\t// FieldID sequence\n\t\tder.startSequence();\n\t\tder.writeOID('1.2.840.10045.1.1'); // prime-field\n\t\tder.writeBuffer(curve.p, asn1.Ber.Integer);\n\t\tder.endSequence();\n\n\t\t// Curve sequence\n\t\tder.startSequence();\n\t\tvar a = curve.p;\n\t\tif (a[0] === 0x0)\n\t\t\ta = a.slice(1);\n\t\tder.writeBuffer(a, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.b, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.s, asn1.Ber.BitString);\n\t\tder.endSequence();\n\n\t\tder.writeBuffer(curve.G, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.n, asn1.Ber.Integer);\n\t\tvar h = curve.h;\n\t\tif (!h) {\n\t\t\th = Buffer.from([1]);\n\t\t}\n\t\tder.writeBuffer(h, asn1.Ber.Integer);\n\n\t\t// ECParameters\n\t\tder.endSequence();\n\t}\n}\n\nfunction writePkcs8ECDSAPublic(key, der) {\n\twriteECDSACurve(key, der);\n\tder.endSequence();\n\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n}\n\nfunction writePkcs8ECDSAPrivate(key, der) {\n\twriteECDSACurve(key, der);\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.startSequence();\n\n\tvar version = Buffer.from([1]);\n\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.d.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa1);\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n\tder.endSequence();\n\n\tder.endSequence();\n\tder.endSequence();\n}\n\nfunction writePkcs8EdDSAPublic(key, der) {\n\tder.endSequence();\n\n\tutils.writeBitString(der, key.part.A.data);\n}\n\nfunction writePkcs8EdDSAPrivate(key, der) {\n\tder.endSequence();\n\n\tvar k = utils.mpNormalize(key.part.k.data, true);\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.writeBuffer(k, asn1.Ber.OctetString);\n\tder.endSequence();\n}\n"]}