{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/sshpk/lib/formats/pkcs1.js"],"names":["module","exports","read","readPkcs1","write","writePkcs1","assert","require","asn1","Buffer","algs","utils","Key","PrivateKey","pem","pkcs8","readECDSACurve","buf","options","key","readMPInt","der","nm","strictEqual","peek","Ber","Integer","mpNormalize","readString","alg","type","readPkcs1RSAPublic","readPkcs1RSAPrivate","Error","readPkcs1DSAPublic","readPkcs1DSAPrivate","readPkcs1ECDSAPrivate","readPkcs1ECDSAPublic","readPkcs1EdDSAPrivate","n","e","parts","name","data","version","d","p","q","dmodp","dmodq","iqmp","readUInt8","g","y","x","k","OctetString","readSequence","oid","readOID","A","readBitString","zeroPadToLength","curveOid","curve","curves","Object","keys","j","length","c","cd","pkcs8oid","string","Q","BitString","ecNormalize","from","startSequence","isPrivateKey","writePkcs1RSAPrivate","writePkcs1RSAPublic","writePkcs1DSAPrivate","writePkcs1DSAPublic","writePkcs1ECDSAPrivate","writePkcs1ECDSAPublic","writePkcs1EdDSAPrivate","writePkcs1EdDSAPublic","endSequence","writeBuffer","part","ver","addRSAMissing","writeOID","toString","writeBitString"],"mappings":"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","file":"pkcs1.js","sourcesContent":["// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadPkcs1: readPkcs1,\n\twrite: write,\n\twritePkcs1: writePkcs1\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\n\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\n\nvar pkcs8 = require('./pkcs8');\nvar readECDSACurve = pkcs8.readECDSACurve;\n\nfunction read(buf, options) {\n\treturn (pem.read(buf, options, 'pkcs1'));\n}\n\nfunction write(key, options) {\n\treturn (pem.write(key, options, 'pkcs1'));\n}\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction readPkcs1(alg, type, der) {\n\tswitch (alg) {\n\tcase 'RSA':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs1RSAPublic(der));\n\t\telse if (type === 'private')\n\t\t\treturn (readPkcs1RSAPrivate(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'DSA':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs1DSAPublic(der));\n\t\telse if (type === 'private')\n\t\t\treturn (readPkcs1DSAPrivate(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'EC':\n\tcase 'ECDSA':\n\t\tif (type === 'private')\n\t\t\treturn (readPkcs1ECDSAPrivate(der));\n\t\telse if (type === 'public')\n\t\t\treturn (readPkcs1ECDSAPublic(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'EDDSA':\n\tcase 'EdDSA':\n\t\tif (type === 'private')\n\t\t\treturn (readPkcs1EdDSAPrivate(der));\n\t\tthrow (new Error(type + ' keys not supported with EdDSA'));\n\tdefault:\n\t\tthrow (new Error('Unknown key algo: ' + alg));\n\t}\n}\n\nfunction readPkcs1RSAPublic(der) {\n\t// modulus and exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'exponent');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'n', data: n }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1RSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version[0], 0);\n\n\t// modulus then public exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'public exponent');\n\tvar d = readMPInt(der, 'private exponent');\n\tvar p = readMPInt(der, 'prime1');\n\tvar q = readMPInt(der, 'prime2');\n\tvar dmodp = readMPInt(der, 'exponent1');\n\tvar dmodq = readMPInt(der, 'exponent2');\n\tvar iqmp = readMPInt(der, 'iqmp');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'n', data: n },\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'd', data: d },\n\t\t\t{ name: 'iqmp', data: iqmp },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'dmodp', data: dmodp },\n\t\t\t{ name: 'dmodq', data: dmodq }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1DSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 0);\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\tvar y = readMPInt(der, 'y');\n\tvar x = readMPInt(der, 'x');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'x', data: x }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1EdDSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 1);\n\n\t// private key\n\tvar k = der.readString(asn1.Ber.OctetString, true);\n\n\tder.readSequence(0xa0);\n\tvar oid = der.readOID();\n\tassert.strictEqual(oid, '1.3.101.112', 'the ed25519 curve identifier');\n\n\tder.readSequence(0xa1);\n\tvar A = utils.readBitString(der);\n\n\tvar key = {\n\t\ttype: 'ed25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) },\n\t\t\t{ name: 'k', data: k }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1DSAPublic(der) {\n\tvar y = readMPInt(der, 'y');\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1ECDSAPublic(der) {\n\tder.readSequence();\n\n\tvar oid = der.readOID();\n\tassert.strictEqual(oid, '1.2.840.10045.2.1', 'must be ecPublicKey');\n\n\tvar curveOid = der.readOID();\n\n\tvar curve;\n\tvar curves = Object.keys(algs.curves);\n\tfor (var j = 0; j < curves.length; ++j) {\n\t\tvar c = curves[j];\n\t\tvar cd = algs.curves[c];\n\t\tif (cd.pkcs8oid === curveOid) {\n\t\t\tcurve = c;\n\t\t\tbreak;\n\t\t}\n\t}\n\tassert.string(curve, 'a known ECDSA named curve');\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curve) },\n\t\t\t{ name: 'Q', data: Q }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1ECDSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 1);\n\n\t// private key\n\tvar d = der.readString(asn1.Ber.OctetString, true);\n\n\tder.readSequence(0xa0);\n\tvar curve = readECDSACurve(der);\n\tassert.string(curve, 'a known elliptic curve');\n\n\tder.readSequence(0xa1);\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curve) },\n\t\t\t{ name: 'Q', data: Q },\n\t\t\t{ name: 'd', data: d }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction writePkcs1(der, key) {\n\tder.startSequence();\n\n\tswitch (key.type) {\n\tcase 'rsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1RSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1RSAPublic(der, key);\n\t\tbreak;\n\tcase 'dsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1DSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1DSAPublic(der, key);\n\t\tbreak;\n\tcase 'ecdsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1ECDSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1ECDSAPublic(der, key);\n\t\tbreak;\n\tcase 'ed25519':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1EdDSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1EdDSAPublic(der, key);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unknown key algo: ' + key.type));\n\t}\n\n\tder.endSequence();\n}\n\nfunction writePkcs1RSAPublic(der, key) {\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1RSAPrivate(der, key) {\n\tvar ver = Buffer.from([0]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.d.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tif (!key.part.dmodp || !key.part.dmodq)\n\t\tutils.addRSAMissing(key);\n\tder.writeBuffer(key.part.dmodp.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.dmodq.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.iqmp.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1DSAPrivate(der, key) {\n\tvar ver = Buffer.from([0]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.x.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1DSAPublic(der, key) {\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1ECDSAPublic(der, key) {\n\tder.startSequence();\n\n\tder.writeOID('1.2.840.10045.2.1'); /* ecPublicKey */\n\tvar curve = key.part.curve.data.toString();\n\tvar curveOid = algs.curves[curve].pkcs8oid;\n\tassert.string(curveOid, 'a known ECDSA named curve');\n\tder.writeOID(curveOid);\n\n\tder.endSequence();\n\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n}\n\nfunction writePkcs1ECDSAPrivate(der, key) {\n\tvar ver = Buffer.from([1]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.d.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa0);\n\tvar curve = key.part.curve.data.toString();\n\tvar curveOid = algs.curves[curve].pkcs8oid;\n\tassert.string(curveOid, 'a known ECDSA named curve');\n\tder.writeOID(curveOid);\n\tder.endSequence();\n\n\tder.startSequence(0xa1);\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n\tder.endSequence();\n}\n\nfunction writePkcs1EdDSAPrivate(der, key) {\n\tvar ver = Buffer.from([1]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.k.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa0);\n\tder.writeOID('1.3.101.112');\n\tder.endSequence();\n\n\tder.startSequence(0xa1);\n\tutils.writeBitString(der, key.part.A.data);\n\tder.endSequence();\n}\n\nfunction writePkcs1EdDSAPublic(der, key) {\n\tthrow (new Error('Public keys are not supported for EdDSA PKCS#1'));\n}\n"]}