{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/slide/lib/async-map.js"],"names":["module","exports","asyncMap","steps","Array","prototype","slice","call","arguments","list","shift","cb_","pop","Error","isArray","n","length","data","errState","l","a","cb","er","argLen","i","undefined","concat","newList","process","nextTick","forEach","ar","fn","apply"],"mappings":";;AACA;;;;;;;;;;AAUAA,OAAOC,OAAP,GAAiBC,QAAjB;;AAEA,SAASA,QAAT,GAAqB;AACnB,MAAIC,QAAQC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAZ;AAAA,MACIC,OAAON,MAAMO,KAAN,MAAiB,EAD5B;AAAA,MAEIC,MAAMR,MAAMS,GAAN,EAFV;AAGA,MAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B,MAAM,IAAIE,KAAJ,CACnC,kCADmC,CAAN;AAE/B,MAAI,CAACJ,IAAL,EAAW,OAAOE,IAAI,IAAJ,EAAU,EAAV,CAAP;AACX,MAAI,CAACP,MAAMU,OAAN,CAAcL,IAAd,CAAL,EAA0BA,OAAO,CAACA,IAAD,CAAP;AAC1B,MAAIM,IAAIZ,MAAMa,MAAd;AAAA,MACIC,OAAO,EADX,CACc;AADd;AAAA,MAEIC,WAAW,IAFf;AAAA,MAGIC,IAAIV,KAAKO,MAHb;AAAA,MAIII,IAAID,IAAIJ,CAJZ;AAKA,MAAI,CAACK,CAAL,EAAQ,OAAOT,IAAI,IAAJ,EAAU,EAAV,CAAP;AACR,WAASU,EAAT,CAAaC,EAAb,EAAiB;AACf,QAAIA,MAAM,CAACJ,QAAX,EAAqBA,WAAWI,EAAX;;AAErB,QAAIC,SAASf,UAAUQ,MAAvB;AACA,SAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAID,MAApB,EAA4BC,GAA5B;AAAkC,UAAIhB,UAAUgB,CAAV,MAAiBC,SAArB,EAAgC;AAChER,aAAKO,IAAI,CAAT,IAAc,CAACP,KAAKO,IAAI,CAAT,KAAe,EAAhB,EAAoBE,MAApB,CAA2BlB,UAAUgB,CAAV,CAA3B,CAAd;AACD;AAFD,KAJe,CAOf;AACA,QAAIf,KAAKO,MAAL,GAAcG,CAAlB,EAAqB;AACnB,UAAIQ,UAAUlB,KAAKH,KAAL,CAAWa,CAAX,CAAd;AACAC,WAAK,CAACX,KAAKO,MAAL,GAAcG,CAAf,IAAoBJ,CAAzB;AACAI,UAAIV,KAAKO,MAAT;AACAY,cAAQC,QAAR,CAAiB,YAAY;AAC3BF,gBAAQG,OAAR,CAAgB,UAAUC,EAAV,EAAc;AAC5B5B,gBAAM2B,OAAN,CAAc,UAAUE,EAAV,EAAc;AAAEA,eAAGD,EAAH,EAAOV,EAAP;AAAY,WAA1C;AACD,SAFD;AAGD,OAJD;AAKD;;AAED,QAAI,EAAED,CAAF,KAAQ,CAAZ,EAAeT,IAAIsB,KAAJ,CAAU,IAAV,EAAgB,CAACf,QAAD,EAAWQ,MAAX,CAAkBT,IAAlB,CAAhB;AAChB;AACD;AACA;AACAR,OAAKqB,OAAL,CAAa,UAAUC,EAAV,EAAc;AACzB5B,UAAM2B,OAAN,CAAc,UAAUE,EAAV,EAAc;AAAEA,SAAGD,EAAH,EAAOV,EAAP;AAAY,KAA1C;AACD,GAFD;AAGD","file":"async-map.js","sourcesContent":["\n/*\nusage:\n\n// do something to a list of things\nasyncMap(myListOfStuff, function (thing, cb) { doSomething(thing.foo, cb) }, cb)\n// do more than one thing to each item\nasyncMap(list, fooFn, barFn, cb)\n\n*/\n\nmodule.exports = asyncMap\n\nfunction asyncMap () {\n  var steps = Array.prototype.slice.call(arguments)\n    , list = steps.shift() || []\n    , cb_ = steps.pop()\n  if (typeof cb_ !== \"function\") throw new Error(\n    \"No callback provided to asyncMap\")\n  if (!list) return cb_(null, [])\n  if (!Array.isArray(list)) list = [list]\n  var n = steps.length\n    , data = [] // 2d array\n    , errState = null\n    , l = list.length\n    , a = l * n\n  if (!a) return cb_(null, [])\n  function cb (er) {\n    if (er && !errState) errState = er\n\n    var argLen = arguments.length\n    for (var i = 1; i < argLen; i ++) if (arguments[i] !== undefined) {\n      data[i - 1] = (data[i - 1] || []).concat(arguments[i])\n    }\n    // see if any new things have been added.\n    if (list.length > l) {\n      var newList = list.slice(l)\n      a += (list.length - l) * n\n      l = list.length\n      process.nextTick(function () {\n        newList.forEach(function (ar) {\n          steps.forEach(function (fn) { fn(ar, cb) })\n        })\n      })\n    }\n\n    if (--a === 0) cb_.apply(null, [errState].concat(data))\n  }\n  // expect the supplied cb function to be called\n  // \"n\" times for each thing in the array.\n  list.forEach(function (ar) {\n    steps.forEach(function (fn) { fn(ar, cb) })\n  })\n}\n"]}