{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/https-proxy-agent/test/test.js"],"names":["fs","require","url","http","https","assert","Proxy","HttpsProxyAgent","describe","server","serverPort","sslServer","sslServerPort","proxy","proxyPort","sslProxy","sslProxyPort","before","done","createServer","listen","address","port","options","key","readFileSync","__dirname","cert","after","once","close","it","throws","agent","equal","host","opts","parse","defaultPort","secureProxy","protocol","beforeEach","authenticate","req","res","end","JSON","stringify","headers","process","env","HTTP_PROXY","http_proxy","get","data","setEncoding","on","b","HTTPS_PROXY","https_proxy","rejectUnauthorized","fn","proxyUri","statusCode","err","code","abort","socket","head","method","foo","destroy","uri","proxyOpts"],"mappings":"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","file":"test.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar url = require('url');\nvar http = require('http');\nvar https = require('https');\nvar assert = require('assert');\nvar Proxy = require('proxy');\nvar HttpsProxyAgent = require('../');\n\ndescribe('HttpsProxyAgent', function () {\n\n  var server;\n  var serverPort;\n\n  var sslServer;\n  var sslServerPort;\n\n  var proxy;\n  var proxyPort;\n\n  var sslProxy;\n  var sslProxyPort;\n\n  before(function (done) {\n    // setup target HTTP server\n    server = http.createServer();\n    server.listen(function () {\n      serverPort = server.address().port;\n      done();\n    });\n  });\n\n  before(function (done) {\n    // setup HTTP proxy server\n    proxy = Proxy();\n    proxy.listen(function () {\n      proxyPort = proxy.address().port;\n      done();\n    });\n  });\n\n  before(function (done) {\n    // setup target HTTPS server\n    var options = {\n      key: fs.readFileSync(__dirname + '/ssl-cert-snakeoil.key'),\n      cert: fs.readFileSync(__dirname + '/ssl-cert-snakeoil.pem')\n    };\n    sslServer = https.createServer(options);\n    sslServer.listen(function () {\n      sslServerPort = sslServer.address().port;\n      done();\n    });\n  });\n\n  before(function (done) {\n    // setup SSL HTTP proxy server\n    var options = {\n      key: fs.readFileSync(__dirname + '/ssl-cert-snakeoil.key'),\n      cert: fs.readFileSync(__dirname + '/ssl-cert-snakeoil.pem')\n    };\n    sslProxy = Proxy(https.createServer(options));\n    sslProxy.listen(function () {\n      sslProxyPort = sslProxy.address().port;\n      done();\n    });\n  });\n\n  // shut down test HTTP server\n  after(function (done) {\n    server.once('close', function () { done(); });\n    server.close();\n  });\n\n  after(function (done) {\n    proxy.once('close', function () { done(); });\n    proxy.close();\n  });\n\n  after(function (done) {\n    sslServer.once('close', function () { done(); });\n    sslServer.close();\n  });\n\n  after(function (done) {\n    sslProxy.once('close', function () { done(); });\n    sslProxy.close();\n  });\n\n  describe('constructor', function () {\n    it('should throw an Error if no \"proxy\" argument is given', function () {\n      assert.throws(function () {\n        new HttpsProxyAgent();\n      });\n    });\n    it('should accept a \"string\" proxy argument', function () {\n      var agent = new HttpsProxyAgent('http://127.0.0.1:' + proxyPort);\n      assert.equal('127.0.0.1', agent.proxy.host);\n      assert.equal(proxyPort, agent.proxy.port);\n    });\n    it('should accept a `url.parse()` result object argument', function () {\n      var opts = url.parse('http://127.0.0.1:' + proxyPort);\n      var agent = new HttpsProxyAgent(opts);\n      assert.equal('127.0.0.1', agent.proxy.host);\n      assert.equal(proxyPort, agent.proxy.port);\n    });\n    it('should set a `defaultPort` property', function () {\n      var opts = url.parse(\"http://127.0.0.1:\" + proxyPort);\n      var agent = new HttpsProxyAgent(opts);\n      assert.equal(443, agent.defaultPort);\n    });\n    describe('secureProxy', function () {\n      it('should default to `false`', function () {\n        var agent = new HttpsProxyAgent({ port: proxyPort });\n        assert.equal(false, agent.secureProxy);\n      });\n      it('should be `false` when \"http:\" protocol is used', function () {\n        var agent = new HttpsProxyAgent({ port: proxyPort, protocol: 'http:' });\n        assert.equal(false, agent.secureProxy);\n      });\n      it('should be `true` when \"https:\" protocol is used', function () {\n        var agent = new HttpsProxyAgent({ port: proxyPort, protocol: 'https:' });\n        assert.equal(true, agent.secureProxy);\n      });\n      it('should be `true` when \"https\" protocol is used', function () {\n        var agent = new HttpsProxyAgent({ port: proxyPort, protocol: 'https' });\n        assert.equal(true, agent.secureProxy);\n      });\n    });\n  });\n\n  describe('\"http\" module', function () {\n\n    beforeEach(function () {\n      delete proxy.authenticate;\n    });\n\n    it('should work over an HTTP proxy', function (done) {\n      server.once('request', function (req, res) {\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var proxy = process.env.HTTP_PROXY || process.env.http_proxy || 'http://127.0.0.1:' + proxyPort;\n      var agent = new HttpsProxyAgent(proxy);\n\n      var opts = url.parse('http://127.0.0.1:' + serverPort);\n      opts.agent = agent;\n\n      var req = http.get(opts, function (res) {\n        var data = '';\n        res.setEncoding('utf8');\n        res.on('data', function (b) {\n          data += b;\n        });\n        res.on('end', function () {\n          data = JSON.parse(data);\n          assert.equal('127.0.0.1:' + serverPort, data.host);\n          done();\n        });\n      });\n      req.once('error', done);\n    });\n    it('should work over an HTTPS proxy', function (done) {\n      server.once('request', function (req, res) {\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var proxy = process.env.HTTPS_PROXY || process.env.https_proxy || 'https://127.0.0.1:' + sslProxyPort;\n      proxy = url.parse(proxy);\n      proxy.rejectUnauthorized = false;\n      var agent = new HttpsProxyAgent(proxy);\n\n      var opts = url.parse('http://127.0.0.1:' + serverPort);\n      opts.agent = agent;\n\n      http.get(opts, function (res) {\n        var data = '';\n        res.setEncoding('utf8');\n        res.on('data', function (b) {\n          data += b;\n        });\n        res.on('end', function () {\n          data = JSON.parse(data);\n          assert.equal('127.0.0.1:' + serverPort, data.host);\n          done();\n        });\n      });\n    });\n    it('should receive the 407 authorization code on the `http.ClientResponse`', function (done) {\n      // set a proxy authentication function for this test\n      proxy.authenticate = function (req, fn) {\n        // reject all requests\n        fn(null, false);\n      };\n\n      var proxyUri = process.env.HTTP_PROXY || process.env.http_proxy || 'http://127.0.0.1:' + proxyPort;\n      var agent = new HttpsProxyAgent(proxyUri);\n\n      var opts = {};\n      // `host` and `port` don't really matter since the proxy will reject anyways\n      opts.host = '127.0.0.1';\n      opts.port = 80;\n      opts.agent = agent;\n\n      var req = http.get(opts, function (res) {\n        assert.equal(407, res.statusCode);\n        assert('proxy-authenticate' in res.headers);\n        done();\n      });\n    });\n    it('should emit an \"error\" event on the `http.ClientRequest` if the proxy does not exist', function (done) {\n      // port 4 is a reserved, but \"unassigned\" port\n      var proxyUri = 'http://127.0.0.1:4';\n      var agent = new HttpsProxyAgent(proxyUri);\n\n      var opts = url.parse('http://nodejs.org');\n      opts.agent = agent;\n\n      var req = http.get(opts);\n      req.once('error', function (err) {\n        assert.equal('ECONNREFUSED', err.code);\n        req.abort();\n        done();\n      });\n    });\n\n    it('should allow custom proxy \"headers\"', function (done) {\n      server.once('connect', function (req, socket, head) {\n        assert.equal('CONNECT', req.method);\n        assert.equal('bar', req.headers.foo);\n        socket.destroy();\n        done();\n      });\n\n      var uri = 'http://127.0.0.1:' + serverPort;\n      var proxyOpts = url.parse(uri);\n      proxyOpts.headers = {\n        'Foo': 'bar'\n      };\n      var agent = new HttpsProxyAgent(proxyOpts);\n\n      var opts = {};\n      // `host` and `port` don't really matter since the proxy will reject anyways\n      opts.host = '127.0.0.1';\n      opts.port = 80;\n      opts.agent = agent;\n\n      http.get(opts);\n    });\n\n  });\n\n  describe('\"https\" module', function () {\n    it('should work over an HTTP proxy', function (done) {\n      sslServer.once('request', function (req, res) {\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var proxy = process.env.HTTP_PROXY || process.env.http_proxy || 'http://127.0.0.1:' + proxyPort;\n      var agent = new HttpsProxyAgent(proxy);\n\n      var opts = url.parse('https://127.0.0.1:' + sslServerPort);\n      opts.rejectUnauthorized = false;\n      opts.agent = agent;\n\n      https.get(opts, function (res) {\n        var data = '';\n        res.setEncoding('utf8');\n        res.on('data', function (b) {\n          data += b;\n        });\n        res.on('end', function () {\n          data = JSON.parse(data);\n          assert.equal('127.0.0.1:' + sslServerPort, data.host);\n          done();\n        });\n      });\n    });\n\n    it('should work over an HTTPS proxy', function (done) {\n      sslServer.once('request', function (req, res) {\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var proxy = process.env.HTTPS_PROXY || process.env.https_proxy || 'https://127.0.0.1:' + sslProxyPort;\n      proxy = url.parse(proxy);\n      proxy.rejectUnauthorized = false;\n      var agent = new HttpsProxyAgent(proxy);\n\n      var opts = url.parse('https://127.0.0.1:' + sslServerPort);\n      opts.agent = agent;\n      opts.rejectUnauthorized = false;\n\n      https.get(opts, function (res) {\n        var data = '';\n        res.setEncoding('utf8');\n        res.on('data', function (b) {\n          data += b;\n        });\n        res.on('end', function () {\n          data = JSON.parse(data);\n          assert.equal('127.0.0.1:' + sslServerPort, data.host);\n          done();\n        });\n      });\n    });\n\n    it('should not send a port number for the default port', function (done) {\n      sslServer.once('request', function (req, res) {\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var proxy = process.env.HTTPS_PROXY || process.env.https_proxy || \"https://127.0.0.1:\" + sslProxyPort;\n      proxy = url.parse(proxy);\n      proxy.rejectUnauthorized = false;\n      var agent = new HttpsProxyAgent(proxy);\n      agent.defaultPort = sslServerPort;\n\n      var opts = url.parse(\"https://127.0.0.1:\" + sslServerPort);\n      opts.agent = agent;\n      opts.rejectUnauthorized = false;\n\n      https.get(opts, function(res) {\n        var data = \"\";\n        res.setEncoding(\"utf8\");\n        res.on(\"data\", function(b) {\n          data += b;\n        });\n        res.on(\"end\", function() {\n          data = JSON.parse(data);\n          assert.equal(\"127.0.0.1\", data.host);\n          done();\n        });\n      });\n    });\n\n  });\n\n});\n"]}