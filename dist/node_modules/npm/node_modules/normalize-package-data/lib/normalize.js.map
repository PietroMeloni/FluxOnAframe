{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/normalize-package-data/lib/normalize.js"],"names":["module","exports","normalize","fixer","require","makeWarning","fieldsToFix","otherThingsToFix","thingsToFix","map","fieldName","ucFirst","concat","data","warn","strict","private","msg","scripts","install","preinstall","gypfile","apply","arguments","forEach","thingName","_id","name","version","string","charAt","toUpperCase","slice"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,SAAjB;;AAEA,IAAIC,QAAQC,QAAQ,SAAR,CAAZ;AACAF,UAAUC,KAAV,GAAkBA,KAAlB;;AAEA,IAAIE,cAAcD,QAAQ,gBAAR,CAAlB;;AAEA,IAAIE,cAAc,CAAC,MAAD,EAAQ,SAAR,EAAkB,aAAlB,EAAgC,YAAhC,EAA6C,SAA7C,EAAuD,SAAvD,EACC,OADD,EACS,KADT,EACe,KADf,EACqB,MADrB,EAC4B,UAD5B,EACuC,QADvC,EACgD,UADhD,EAC2D,SAD3D,CAAlB;AAEA,IAAIC,mBAAmB,CAAC,cAAD,EAAgB,QAAhB,EAA0B,OAA1B,CAAvB;;AAEA,IAAIC,cAAcF,YAAYG,GAAZ,CAAgB,UAASC,SAAT,EAAoB;AACpD,SAAOC,QAAQD,SAAR,IAAqB,OAA5B;AACD,CAFiB,CAAlB;AAGA;AACA;AACA;AACAF,cAAcA,YAAYI,MAAZ,CAAmBL,gBAAnB,CAAd;;AAEA,SAASL,SAAT,CAAoBW,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;AACtC,MAAGD,SAAS,IAAZ,EAAkBA,OAAO,IAAP,EAAaC,SAAS,IAAtB;AAClB,MAAG,CAACA,MAAJ,EAAYA,SAAS,KAAT;AACZ,MAAG,CAACD,IAAD,IAASD,KAAKG,OAAjB,EAA0BF,OAAO,cAASG,GAAT,EAAc,CAAE,UAAY,CAAnC;;AAE1B,MAAIJ,KAAKK,OAAL,IACAL,KAAKK,OAAL,CAAaC,OAAb,KAAyB,kBADzB,IAEA,CAACN,KAAKK,OAAL,CAAaE,UAFlB,EAE8B;AAC5BP,SAAKQ,OAAL,GAAe,IAAf;AACD;AACDlB,QAAMW,IAAN,GAAa,YAAW;AAAEA,SAAKT,YAAYiB,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,CAAL;AAA0C,GAApE;AACAf,cAAYgB,OAAZ,CAAoB,UAASC,SAAT,EAAoB;AACtCtB,UAAM,QAAQQ,QAAQc,SAAR,CAAd,EAAkCZ,IAAlC,EAAwCE,MAAxC;AACD,GAFD;AAGAF,OAAKa,GAAL,GAAWb,KAAKc,IAAL,GAAY,GAAZ,GAAkBd,KAAKe,OAAlC;AACD;;AAED,SAASjB,OAAT,CAAkBkB,MAAlB,EAA0B;AACxB,SAAOA,OAAOC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,OAAOG,KAAP,CAAa,CAAb,CAAxC;AACD","file":"normalize.js","sourcesContent":["module.exports = normalize\n\nvar fixer = require(\"./fixer\")\nnormalize.fixer = fixer\n\nvar makeWarning = require(\"./make_warning\")\n\nvar fieldsToFix = ['name','version','description','repository','modules','scripts'\n                  ,'files','bin','man','bugs','keywords','readme','homepage','license']\nvar otherThingsToFix = ['dependencies','people', 'typos']\n\nvar thingsToFix = fieldsToFix.map(function(fieldName) {\n  return ucFirst(fieldName) + \"Field\"\n})\n// two ways to do this in CoffeeScript on only one line, sub-70 chars:\n// thingsToFix = fieldsToFix.map (name) -> ucFirst(name) + \"Field\"\n// thingsToFix = (ucFirst(name) + \"Field\" for name in fieldsToFix)\nthingsToFix = thingsToFix.concat(otherThingsToFix)\n\nfunction normalize (data, warn, strict) {\n  if(warn === true) warn = null, strict = true\n  if(!strict) strict = false\n  if(!warn || data.private) warn = function(msg) { /* noop */ }\n\n  if (data.scripts &&\n      data.scripts.install === \"node-gyp rebuild\" &&\n      !data.scripts.preinstall) {\n    data.gypfile = true\n  }\n  fixer.warn = function() { warn(makeWarning.apply(null, arguments)) }\n  thingsToFix.forEach(function(thingName) {\n    fixer[\"fix\" + ucFirst(thingName)](data, strict)\n  })\n  data._id = data.name + \"@\" + data.version\n}\n\nfunction ucFirst (string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n"]}