{"version":3,"sources":["../../../../../node_modules/npm/node_modules/errno/test.js"],"names":["test","require","inherits","ErrorStackParser","errno","t","ok","all","code","equal","length","end","Cust","create","cust","name","type","message","notOk","cause","MyError","lastFunction","ErrorType","cb","process","nextTick","secondLastFunction","testFrames","err","stack","parse","same","functionName","MyError2","CustomError","custom","MyError3","call"],"mappings":"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","file":"test.js","sourcesContent":["var test             = require('tape')\n  , inherits         = require('inherits')\n  , ErrorStackParser = require('error-stack-parser')\n  , errno            = require('./')\n\ntest('sanity checks', function (t) {\n  t.ok(errno.all, 'errno.all not found')\n  t.ok(errno.errno, 'errno.errno not found')\n  t.ok(errno.code, 'errno.code not found')\n\n  t.equal(errno.all.length, 60, 'found ' + errno.all.length + ', expected 60')\n  t.equal(errno.errno['-1'], errno.all[1], 'errno -1 not second element')\n\n  t.equal(errno.code['UNKNOWN'], errno.all[1], 'code UNKNOWN not second element')\n\n  t.equal(errno.errno[1], errno.all[3], 'errno 1 not fourth element')\n\n  t.equal(errno.code['EOF'], errno.all[3], 'code EOF not fourth element')\n  t.end()\n})\n\ntest('custom errors', function (t) {\n  const Cust = errno.create('FooNotBarError')\n  const cust = new Cust('foo is not bar')\n\n  t.equal(cust.name, 'FooNotBarError', 'correct custom name')\n  t.equal(cust.type, 'FooNotBarError', 'correct custom type')\n  t.equal(cust.message, 'foo is not bar', 'correct custom message')\n  t.notOk(cust.cause, 'no cause')\n  t.end()\n})\n\ntest('callstack', function (t) {\n  const MyError = errno.create('MyError')\n\n  function lastFunction (ErrorType, cb) {\n    process.nextTick(cb, new ErrorType('oh noes!'))\n  }\n\n  function secondLastFunction (ErrorType, cb) {\n    lastFunction(ErrorType, cb)\n  }\n\n  function testFrames (t) {\n    return function (err) {\n      const stack = ErrorStackParser.parse(err)\n      t.same(stack[0].functionName, 'lastFunction', 'last stack frame ok')\n      t.same(stack[1].functionName, 'secondLastFunction', 'second last stack frame ok')\n      t.end()\n    }\n  }\n\n  t.test('custom error, default prototype', function (t) {\n    secondLastFunction(MyError, testFrames(t))\n  })\n\n  t.test('custom error, custom prototype', function (t) {\n    const MyError2 = errno.create('MyError2', MyError)\n    secondLastFunction(MyError2, testFrames(t))\n  })\n\n  t.test('custom error, using inheritance', function (t) {\n    const CustomError = errno.custom.CustomError\n\n    function MyError3 (message, cause) {\n      CustomError.call(this, message, cause)\n    }\n\n    inherits(MyError3, CustomError)\n\n    secondLastFunction(MyError3, testFrames(t))\n  })\n})\n\ntest('error without message', function (t) {\n  const Cust = errno.create('WriteError')\n  const cust = new Cust({\n    code: 22,\n    message: '',\n    name: 'QuotaExceededError'\n  })\n\n  t.equal(cust.name, 'WriteError', 'correct custom name')\n  t.equal(cust.type, 'WriteError', 'correct custom type')\n  t.equal(cust.message, 'QuotaExceededError', 'message is the name')\n  t.notOk(cust.cause, 'no cause')\n  t.end()\n})\n"]}