{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/socks-proxy-agent/test/test.js"],"names":["fs","require","url","http","https","assert","socks","getRawBody","SocksProxyAgent","describe","httpServer","httpPort","httpsServer","httpsPort","socksServer","socksPort","before","done","createServer","info","accept","deny","listen","address","port","useAuth","auth","None","options","key","readFileSync","__dirname","cert","after","once","close","it","throws","agent","equal","proxy","host","opts","parse","req","res","statusCode","end","JSON","stringify","headers","foo","get","err","buf","data","rejectUnauthorized"],"mappings":"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","file":"test.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar url = require('url');\nvar http = require('http');\nvar https = require('https');\nvar assert = require('assert');\nvar socks = require('socksv5');\nvar getRawBody = require('raw-body');\nvar SocksProxyAgent = require('../');\n\ndescribe('SocksProxyAgent', function () {\n  var httpServer, httpPort;\n  var httpsServer, httpsPort;\n  var socksServer, socksPort;\n\n  before(function (done) {\n    // setup SOCKS proxy server\n    socksServer = socks.createServer(function(info, accept, deny) {\n      accept();\n    });\n    socksServer.listen(0, '127.0.0.1', function() {\n      socksPort = socksServer.address().port;\n      //console.log('SOCKS server listening on port %d', socksPort);\n      done();\n    });\n    socksServer.useAuth(socks.auth.None());\n    //socksServer.useAuth(socks.auth.UserPassword(function(user, password, cb) {\n    //  cb(user === 'nodejs' && password === 'rules!');\n    //}));\n  });\n\n  before(function (done) {\n    // setup target HTTP server\n    httpServer = http.createServer();\n    httpServer.listen(function () {\n      httpPort = httpServer.address().port;\n      done();\n    });\n  });\n\n  before(function (done) {\n    // setup target SSL HTTPS server\n    var options = {\n      key: fs.readFileSync(__dirname + '/ssl-cert-snakeoil.key'),\n      cert: fs.readFileSync(__dirname + '/ssl-cert-snakeoil.pem')\n    };\n    httpsServer = https.createServer(options);\n    httpsServer.listen(function () {\n      httpsPort = httpsServer.address().port;\n      done();\n    });\n  });\n\n  after(function (done) {\n    socksServer.once('close', function () { done(); });\n    socksServer.close();\n  });\n\n  after(function (done) {\n    httpServer.once('close', function () { done(); });\n    httpServer.close();\n  });\n\n  after(function (done) {\n    httpsServer.once('close', function () { done(); });\n    httpsServer.close();\n  });\n\n  describe('constructor', function () {\n    it('should throw an Error if no \"proxy\" argument is given', function () {\n      assert.throws(function () {\n        new SocksProxyAgent();\n      });\n    });\n    it('should accept a \"string\" proxy argument', function () {\n      var agent = new SocksProxyAgent('socks://127.0.0.1:' + socksPort);\n      assert.equal('127.0.0.1', agent.proxy.host);\n      assert.equal(socksPort, agent.proxy.port);\n    });\n    it('should accept a `url.parse()` result object argument', function () {\n      var opts = url.parse('socks://127.0.0.1:' + socksPort);\n      var agent = new SocksProxyAgent(opts);\n      assert.equal('127.0.0.1', agent.proxy.host);\n      assert.equal(socksPort, agent.proxy.port);\n    });\n  });\n\n  describe('\"http\" module', function () {\n    it('should work against an HTTP endpoint', function (done) {\n      httpServer.once('request', function (req, res) {\n        assert.equal('/foo', req.url);\n        res.statusCode = 404;\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var agent = new SocksProxyAgent('socks://127.0.0.1:' + socksPort);\n      var opts = url.parse('http://127.0.0.1:' + httpPort + '/foo');\n      opts.agent = agent;\n      opts.headers = { foo: 'bar' };\n      var req = http.get(opts, function (res) {\n        assert.equal(404, res.statusCode);\n        getRawBody(res, 'utf8', function (err, buf) {\n          if (err) return done(err);\n          var data = JSON.parse(buf);\n          assert.equal('bar', data.foo);\n          done();\n        });\n      });\n      req.once('error', done);\n    });\n  });\n\n  describe('\"https\" module', function () {\n    it('should work against an HTTPS endpoint', function (done) {\n      httpsServer.once('request', function (req, res) {\n        assert.equal('/foo', req.url);\n        res.statusCode = 404;\n        res.end(JSON.stringify(req.headers));\n      });\n\n      var agent = new SocksProxyAgent('socks://127.0.0.1:' + socksPort);\n      var opts = url.parse('https://127.0.0.1:' + httpsPort + '/foo');\n      opts.agent = agent;\n      opts.rejectUnauthorized = false;\n\n      opts.headers = { foo: 'bar' };\n      var req = https.get(opts, function (res) {\n        assert.equal(404, res.statusCode);\n        getRawBody(res, 'utf8', function (err, buf) {\n          if (err) return done(err);\n          var data = JSON.parse(buf);\n          assert.equal('bar', data.foo);\n          done();\n        });\n      });\n      req.once('error', done);\n    });\n  });\n\n});\n"]}