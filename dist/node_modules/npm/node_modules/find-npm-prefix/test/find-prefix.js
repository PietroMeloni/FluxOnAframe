'use strict';

var Bluebird = require('bluebird');
var test = require('tap').test;
var requireInject = require('require-inject');
var findPrefix = requireInject('../find-prefix.js', {
  fs: {
    readdir: mockReaddir
  }
});

test('find-prefix', function (t) {
  var tests = {
    '/Users/example/code/test1/node_modules': '/Users/example/code/test1',
    '/Users/example/code/test1/node_modules/node_modules': '/Users/example/code/test1',
    '/Users/example/code/test1/sub1': '/Users/example/code/test1',
    '/Users/example/code/test1/sub1/sub1a': '/Users/example/code/test1',
    '/Users/example/code/test2': '/Users/example/code/test2',
    '/Users/example/code/test2/sub2': '/Users/example/code/test2',
    '/Users/example/code': '/Users/example/code',
    '/Users/example': '/Users/example',
    '/does/not/exist': '/does/not/exist'
  };
  t.plan(Object.keys(tests).length);
  return Bluebird.map(Object.keys(tests), function (dir) {
    return findPrefix(dir).then(function (pre) {
      t.is(pre, tests[dir], dir);
    });
  });
});

test('fail-prefix', function (t) {
  return findPrefix('/Users/example/eperm').then(function (pre) {
    t.fail('no eperm');
  }).catch(function (err) {
    t.is(err.code, 'EPERM', 'got perm error');
  });
});

var fixture = {
  'Users': {
    'example': {
      'code': {
        'test1': {
          'node_modules': {
            'node_modules': {}
          },
          'sub1': {
            'sub1a': {}
          }
        },
        'test2': {
          'package.json': {},
          'sub2': {}
        }
      }
    }
  }
};

function mockReaddir(dir, cb) {
  if (/eperm/.test(dir)) {
    var err = new Error('Can not read: ' + dir);
    err.code = 'EPERM';
    return cb(err);
  }
  var parts = dir.split(/\//).slice(1);
  var cwd = fixture;
  var part = void 0;
  while (part = parts.shift()) {
    if (part in cwd) {
      cwd = cwd[part];
    } else {
      var _err = new Error('Does not exist: ' + dir + ' * ' + part);
      _err.code = 'ENOENT';
      return cb(_err);
    }
  }
  return cb(null, Object.keys(cwd));
}
//# sourceMappingURL=find-prefix.js.map