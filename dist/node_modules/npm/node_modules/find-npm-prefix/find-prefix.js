'use strict';
// try to find the most reasonable prefix to use

module.exports = findPrefix;

var fs = require('fs');
var path = require('path');

function findPrefix(dir) {
  return new Promise(function (resolve, reject) {
    dir = path.resolve(dir);

    // this is a weird special case where an infinite recurse of
    // node_modules folders resolves to the level that contains the
    // very first node_modules folder
    var walkedUp = false;
    while (path.basename(dir) === 'node_modules') {
      dir = path.dirname(dir);
      walkedUp = true;
    }
    if (walkedUp) {
      resolve(dir);
    } else {
      resolve(findPrefix_(dir));
    }
  });
}

function findPrefix_(dir, original) {
  if (!original) original = dir;

  var parent = path.dirname(dir);
  // this is a platform independent way of checking if we're in the root
  // directory
  if (parent === dir) return Promise.resolve(original);

  return new Promise(function (resolve, reject) {
    fs.readdir(dir, function (err, files) {
      if (err) {
        // an error right away is a bad sign.
        // unless the prefix was simply a non
        // existent directory.
        if (err && dir === original && err.code !== 'ENOENT') {
          reject(err);
        } else {
          resolve(original);
        }
      } else if (files.indexOf('node_modules') !== -1 || files.indexOf('package.json') !== -1) {
        resolve(dir);
      } else {
        resolve(findPrefix_(parent, original));
      }
    });
  });
}
//# sourceMappingURL=find-prefix.js.map