{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/iconv-lite/lib/extend-node.js"],"names":["Buffer","require","module","exports","iconv","original","undefined","supportsNodeEncodingsExtension","from","Uint8Array","extendNodeEncodings","console","error","nodeNativeEncodings","isNativeEncoding","enc","toLowerCase","SlowBuffer","SlowBufferToString","prototype","toString","encoding","start","end","String","call","length","decode","slice","SlowBufferWrite","write","string","offset","isFinite","swap","remaining","RangeError","buf","encode","copy","BufferIsEncoding","isEncoding","encodingExists","BufferByteLength","byteLength","str","BufferToString","BufferWrite","_offset","_length","_encoding","supportsStreams","Readable","ReadableSetEncoding","setEncoding","options","_readableState","decoder","getDecoder","collect","_collect","undoExtendNodeEncodings","Error"],"mappings":"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","file":"extend-node.js","sourcesContent":["\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n"]}