{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/execa/lib/stdio.js"],"names":["alias","hasAlias","some","Boolean","opts","x","module","exports","stdio","Error","map","join","Array","isArray","TypeError","result","len","Math","max","length","i","value","undefined"],"mappings":"AAAA;;;;AACA,IAAMA,QAAQ,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAd;;AAEA,IAAMC,WAAW,SAAXA,QAAW;AAAA,QAAQD,MAAME,IAAN,CAAW;AAAA,SAAKC,QAAQC,KAAKC,CAAL,CAAR,CAAL;AAAA,EAAX,CAAR;AAAA,CAAjB;;AAEAC,OAAOC,OAAP,GAAiB,gBAAQ;AACxB,KAAI,CAACH,IAAL,EAAW;AACV,SAAO,IAAP;AACA;;AAED,KAAIA,KAAKI,KAAL,IAAcP,SAASG,IAAT,CAAlB,EAAkC;AACjC,QAAM,IAAIK,KAAJ,uEAA+ET,MAAMU,GAAN,CAAU;AAAA,gBAAUL,CAAV;AAAA,GAAV,EAA2BM,IAA3B,CAAgC,IAAhC,CAA/E,CAAN;AACA;;AAED,KAAI,OAAOP,KAAKI,KAAZ,KAAsB,QAA1B,EAAoC;AACnC,SAAOJ,KAAKI,KAAZ;AACA;;AAED,KAAMA,QAAQJ,KAAKI,KAAL,IAAc,EAA5B;;AAEA,KAAI,CAACI,MAAMC,OAAN,CAAcL,KAAd,CAAL,EAA2B;AAC1B,QAAM,IAAIM,SAAJ,uEAAwFN,KAAxF,yCAAwFA,KAAxF,SAAN;AACA;;AAED,KAAMO,SAAS,EAAf;AACA,KAAMC,MAAMC,KAAKC,GAAL,CAASV,MAAMW,MAAf,EAAuBnB,MAAMmB,MAA7B,CAAZ;;AAEA,MAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,GAApB,EAAyBI,GAAzB,EAA8B;AAC7B,MAAIC,QAAQ,IAAZ;;AAEA,MAAIb,MAAMY,CAAN,MAAaE,SAAjB,EAA4B;AAC3BD,WAAQb,MAAMY,CAAN,CAAR;AACA,GAFD,MAEO,IAAIhB,KAAKJ,MAAMoB,CAAN,CAAL,MAAmBE,SAAvB,EAAkC;AACxCD,WAAQjB,KAAKJ,MAAMoB,CAAN,CAAL,CAAR;AACA;;AAEDL,SAAOK,CAAP,IAAYC,KAAZ;AACA;;AAED,QAAON,MAAP;AACA,CAnCD","file":"stdio.js","sourcesContent":["'use strict';\nconst alias = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = opts => alias.some(x => Boolean(opts[x]));\n\nmodule.exports = opts => {\n\tif (!opts) {\n\t\treturn null;\n\t}\n\n\tif (opts.stdio && hasAlias(opts)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${alias.map(x => `\\`${x}\\``).join(', ')}`);\n\t}\n\n\tif (typeof opts.stdio === 'string') {\n\t\treturn opts.stdio;\n\t}\n\n\tconst stdio = opts.stdio || [];\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst result = [];\n\tconst len = Math.max(stdio.length, alias.length);\n\n\tfor (let i = 0; i < len; i++) {\n\t\tlet value = null;\n\n\t\tif (stdio[i] !== undefined) {\n\t\t\tvalue = stdio[i];\n\t\t} else if (opts[alias[i]] !== undefined) {\n\t\t\tvalue = opts[alias[i]];\n\t\t}\n\n\t\tresult[i] = value;\n\t}\n\n\treturn result;\n};\n"]}