{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/execa/lib/errname.js"],"names":["uv","process","binding","errname","TypeError","err","console","error","code","Error","module","exports","__test__"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,WAAJ;;AAEA,IAAI;AACHA,MAAKC,QAAQC,OAAR,CAAgB,IAAhB,CAAL;;AAEA,KAAI,OAAOF,GAAGG,OAAV,KAAsB,UAA1B,EAAsC;AACrC,QAAM,IAAIC,SAAJ,CAAc,8BAAd,CAAN;AACA;AACD,CAND,CAME,OAAOC,GAAP,EAAY;AACbC,SAAQC,KAAR,CAAc,gEAAd,EAAgFF,GAAhF;AACAL,MAAK,IAAL;AACA;;AAED,SAASG,OAAT,CAAiBH,EAAjB,EAAqBQ,IAArB,EAA2B;AAC1B,KAAIR,EAAJ,EAAQ;AACP,SAAOA,GAAGG,OAAH,CAAWK,IAAX,CAAP;AACA;;AAED,KAAI,EAAEA,OAAO,CAAT,CAAJ,EAAiB;AAChB,QAAM,IAAIC,KAAJ,CAAU,UAAV,CAAN;AACA;;AAED,kCAA+BD,IAA/B;AACA;;AAEDE,OAAOC,OAAP,GAAiB;AAAA,QAAQR,QAAQH,EAAR,EAAYQ,IAAZ,CAAR;AAAA,CAAjB;;AAEA;AACAE,OAAOC,OAAP,CAAeC,QAAf,GAA0BT,OAA1B","file":"errname.js","sourcesContent":["'use strict';\n// The Node team wants to deprecate `process.bind(...)`.\n//   https://github.com/nodejs/node/pull/2768\n//\n// However, we need the 'uv' binding for errname support.\n// This is a defensive wrapper around it so `execa` will not fail entirely if it stops working someday.\n//\n// If this ever stops working. See: https://github.com/sindresorhus/execa/issues/31#issuecomment-215939939 for another possible solution.\nlet uv;\n\ntry {\n\tuv = process.binding('uv');\n\n\tif (typeof uv.errname !== 'function') {\n\t\tthrow new TypeError('uv.errname is not a function');\n\t}\n} catch (err) {\n\tconsole.error('execa/lib/errname: unable to establish process.binding(\\'uv\\')', err);\n\tuv = null;\n}\n\nfunction errname(uv, code) {\n\tif (uv) {\n\t\treturn uv.errname(code);\n\t}\n\n\tif (!(code < 0)) {\n\t\tthrow new Error('err >= 0');\n\t}\n\n\treturn `Unknown system error ${code}`;\n}\n\nmodule.exports = code => errname(uv, code);\n\n// Used for testing the fallback behavior\nmodule.exports.__test__ = errname;\n"]}