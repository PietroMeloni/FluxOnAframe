{"version":3,"sources":["../../../../../node_modules/npm/node_modules/supports-color/index.js"],"names":["os","require","hasFlag","env","process","forceColor","FORCE_COLOR","length","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","min","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","getSupportLevel","module","exports","stdout","stderr"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n"]}