{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/fs-vacuum/test/no-entries-link-no-purge.js"],"names":["path","require","test","statSync","symlinkSync","readdirSync","mkdtemp","dir","mkdirp","vacuum","TEMP_OPTIONS","unsafeCleanup","mode","SHORT_PATH","join","TARGET_PATH","PARTIAL_PATH","FULL_PATH","EXPANDO_PATH","messages","log","push","Array","prototype","slice","call","arguments","testBase","targetPath","partialPath","fullPath","expandoPath","t","er","tmpdir","ifError","resolve","end","purge","base","equal","length","stat","verifyPath","verify","i","throws","notOk","isDirectory","dirname","doesNotThrow","ok","files"],"mappings":"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","file":"no-entries-link-no-purge.js","sourcesContent":["var path = require('path')\n\nvar test = require('tap').test\nvar statSync = require('graceful-fs').statSync\nvar symlinkSync = require('graceful-fs').symlinkSync\nvar readdirSync = require('graceful-fs').readdirSync\nvar mkdtemp = require('tmp').dir\nvar mkdirp = require('mkdirp')\n\nvar vacuum = require('../vacuum.js')\n\n// CONSTANTS\nvar TEMP_OPTIONS = {\n  unsafeCleanup: true,\n  mode: '0700'\n}\nvar SHORT_PATH = path.join('i', 'am', 'a', 'path')\nvar TARGET_PATH = path.join('target-link', 'in', 'the', 'middle')\nvar PARTIAL_PATH = path.join(SHORT_PATH, 'with', 'a')\nvar FULL_PATH = path.join(PARTIAL_PATH, 'link')\nvar EXPANDO_PATH = path.join(SHORT_PATH, 'with', 'a', 'link', 'in', 'the', 'middle')\n\nvar messages = []\nfunction log () { messages.push(Array.prototype.slice.call(arguments).join(' ')) }\n\nvar testBase, targetPath, partialPath, fullPath, expandoPath\ntest('xXx setup xXx', function (t) {\n  mkdtemp(TEMP_OPTIONS, function (er, tmpdir) {\n    t.ifError(er, 'temp directory exists')\n\n    testBase = path.resolve(tmpdir, SHORT_PATH)\n    targetPath = path.resolve(tmpdir, TARGET_PATH)\n    partialPath = path.resolve(tmpdir, PARTIAL_PATH)\n    fullPath = path.resolve(tmpdir, FULL_PATH)\n    expandoPath = path.resolve(tmpdir, EXPANDO_PATH)\n\n    mkdirp(partialPath, function (er) {\n      t.ifError(er, 'made test path')\n\n      mkdirp(targetPath, function (er) {\n        t.ifError(er, 'made target path')\n\n        symlinkSync(path.join(tmpdir, 'target-link'), fullPath)\n\n        t.end()\n      })\n    })\n  })\n})\n\ntest('remove up to a point', function (t) {\n  vacuum(expandoPath, {purge: false, base: testBase, log: log}, function (er) {\n    t.ifError(er, 'cleaned up to base')\n\n    t.equal(messages.length, 7, 'got 6 removal & 1 finish message')\n    t.equal(messages[6], 'finished vacuuming up to ' + testBase)\n\n    var stat\n    var verifyPath = expandoPath\n    function verify () { stat = statSync(verifyPath) }\n\n    for (var i = 0; i < 6; i++) {\n      t.throws(verify, verifyPath + ' cannot be statted')\n      t.notOk(stat && stat.isDirectory(), verifyPath + ' is totally gone')\n      verifyPath = path.dirname(verifyPath)\n    }\n\n    t.doesNotThrow(function () {\n      stat = statSync(testBase)\n    }, testBase + ' can be statted')\n    t.ok(stat && stat.isDirectory(), testBase + ' is still a directory')\n\n    var files = readdirSync(testBase)\n    t.equal(files.length, 0, 'nothing left in base directory')\n\n    t.end()\n  })\n})\n"]}