{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/fs-vacuum/test/no-entries-with-link-purge.js"],"names":["path","require","test","statSync","writeFileSync","symlinkSync","mkdtemp","dir","mkdirp","vacuum","TEMP_OPTIONS","unsafeCleanup","mode","SHORT_PATH","join","TARGET_PATH","FIRST_FILE","SECOND_FILE","PARTIAL_PATH","FULL_PATH","messages","log","push","Array","prototype","slice","call","arguments","testBase","partialPath","fullPath","targetPath","t","er","tmpdir","ifError","resolve","Buffer","end","purge","base","equal","length","stat","verifyPath","verify","i","throws","notOk","isDirectory","dirname","doesNotThrow","ok"],"mappings":"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","file":"no-entries-with-link-purge.js","sourcesContent":["var path = require('path')\n\nvar test = require('tap').test\nvar statSync = require('graceful-fs').statSync\nvar writeFileSync = require('graceful-fs').writeFileSync\nvar symlinkSync = require('graceful-fs').symlinkSync\nvar mkdtemp = require('tmp').dir\nvar mkdirp = require('mkdirp')\n\nvar vacuum = require('../vacuum.js')\n\n// CONSTANTS\nvar TEMP_OPTIONS = {\n  unsafeCleanup: true,\n  mode: '0700'\n}\nvar SHORT_PATH = path.join('i', 'am', 'a', 'path')\nvar TARGET_PATH = 'link-target'\nvar FIRST_FILE = path.join(TARGET_PATH, 'monsieurs')\nvar SECOND_FILE = path.join(TARGET_PATH, 'mesdames')\nvar PARTIAL_PATH = path.join(SHORT_PATH, 'with', 'a', 'definite')\nvar FULL_PATH = path.join(PARTIAL_PATH, 'target')\n\nvar messages = []\nfunction log () { messages.push(Array.prototype.slice.call(arguments).join(' ')) }\n\nvar testBase, partialPath, fullPath, targetPath\ntest('xXx setup xXx', function (t) {\n  mkdtemp(TEMP_OPTIONS, function (er, tmpdir) {\n    t.ifError(er, 'temp directory exists')\n\n    testBase = path.resolve(tmpdir, SHORT_PATH)\n    targetPath = path.resolve(tmpdir, TARGET_PATH)\n    partialPath = path.resolve(tmpdir, PARTIAL_PATH)\n    fullPath = path.resolve(tmpdir, FULL_PATH)\n\n    mkdirp(partialPath, function (er) {\n      t.ifError(er, 'made test path')\n\n      mkdirp(targetPath, function (er) {\n        t.ifError(er, 'made target path')\n\n        writeFileSync(path.resolve(tmpdir, FIRST_FILE), new Buffer(\"c'est vraiment joli\"))\n        writeFileSync(path.resolve(tmpdir, SECOND_FILE), new Buffer('oui oui'))\n        symlinkSync(targetPath, fullPath)\n\n        t.end()\n      })\n    })\n  })\n})\n\ntest('remove up to a point', function (t) {\n  vacuum(fullPath, {purge: true, base: testBase, log: log}, function (er) {\n    t.ifError(er, 'cleaned up to base')\n\n    t.equal(messages.length, 5, 'got 4 removal & 1 finish message')\n    t.equal(messages[0], 'purging ' + fullPath)\n    t.equal(messages[4], 'finished vacuuming up to ' + testBase)\n\n    var stat\n    var verifyPath = fullPath\n    function verify () { stat = statSync(verifyPath) }\n\n    for (var i = 0; i < 4; i++) {\n      t.throws(verify, verifyPath + ' cannot be statted')\n      t.notOk(stat && stat.isDirectory(), verifyPath + ' is totally gone')\n      verifyPath = path.dirname(verifyPath)\n    }\n\n    t.doesNotThrow(function () {\n      stat = statSync(testBase)\n    }, testBase + ' can be statted')\n    t.ok(stat && stat.isDirectory(), testBase + ' is still a directory')\n\n    t.end()\n  })\n})\n"]}