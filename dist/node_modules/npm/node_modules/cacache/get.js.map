{"version":3,"sources":["../../../../../node_modules/npm/node_modules/cacache/get.js"],"names":["BB","require","figgyPudding","fs","index","memo","pipe","pipeline","read","through","GetOpts","integrity","memoize","size","module","exports","get","cache","key","opts","getData","byDigest","getByDigest","digest","memoized","resolve","metadata","entry","data","find","then","NotFoundError","put","res","stream","getStream","on","ev","cb","write","end","emit","memoStream","memoData","memoLength","c","en","push","length","Buffer","concat","readStream","err","getStreamDigest","info","hasContent","copy","cp","dest","cpDigest","writeFileAsync"],"mappings":"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","file":"get.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst figgyPudding = require('figgy-pudding')\nconst fs = require('fs')\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst pipe = require('mississippi').pipe\nconst pipeline = require('mississippi').pipeline\nconst read = require('./lib/content/read')\nconst through = require('mississippi').through\n\nconst GetOpts = figgyPudding({\n  integrity: {},\n  memoize: {},\n  size: {}\n})\n\nmodule.exports = function get (cache, key, opts) {\n  return getData(false, cache, key, opts)\n}\nmodule.exports.byDigest = function getByDigest (cache, digest, opts) {\n  return getData(true, cache, digest, opts)\n}\nfunction getData (byDigest, cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = (\n    byDigest\n      ? memo.get.byDigest(cache, key, opts)\n      : memo.get(cache, key, opts)\n  )\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    })\n  }\n  return (\n    byDigest ? BB.resolve(null) : index.find(cache, key, opts)\n  ).then(entry => {\n    if (!entry && !byDigest) {\n      throw new index.NotFoundError(cache, key)\n    }\n    return read(cache, byDigest ? key : entry.integrity, {\n      integrity: opts.integrity,\n      size: opts.size\n    }).then(data => byDigest ? data : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }).then(res => {\n      if (opts.memoize && byDigest) {\n        memo.put.byDigest(cache, key, res, opts)\n      } else if (opts.memoize) {\n        memo.put(cache, entry, res.data, opts)\n      }\n      return res\n    })\n  })\n}\n\nmodule.exports.stream = getStream\nfunction getStream (cache, key, opts) {\n  opts = GetOpts(opts)\n  let stream = through()\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(memoized.entry.metadata)\n      ev === 'integrity' && cb(memoized.entry.integrity)\n      ev === 'size' && cb(memoized.entry.size)\n    })\n    stream.write(memoized.data, () => stream.end())\n    return stream\n  }\n  index.find(cache, key).then(entry => {\n    if (!entry) {\n      return stream.emit(\n        'error', new index.NotFoundError(cache, key)\n      )\n    }\n    let memoStream\n    if (opts.memoize) {\n      let memoData = []\n      let memoLength = 0\n      memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c)\n        memoLength += c.length\n        cb(null, c, en)\n      }, cb => {\n        memoData && memo.put(cache, entry, Buffer.concat(memoData, memoLength), opts)\n        cb()\n      })\n    } else {\n      memoStream = through()\n    }\n    stream.emit('metadata', entry.metadata)\n    stream.emit('integrity', entry.integrity)\n    stream.emit('size', entry.size)\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(entry.metadata)\n      ev === 'integrity' && cb(entry.integrity)\n      ev === 'size' && cb(entry.size)\n    })\n    pipe(\n      read.readStream(cache, entry.integrity, opts.concat({\n        size: opts.size == null ? entry.size : opts.size\n      })),\n      memoStream,\n      stream\n    )\n  }, err => stream.emit('error', err))\n  return stream\n}\n\nmodule.exports.stream.byDigest = getStreamDigest\nfunction getStreamDigest (cache, integrity, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get.byDigest(cache, integrity, opts)\n  if (memoized && opts.memoize !== false) {\n    const stream = through()\n    stream.write(memoized, () => stream.end())\n    return stream\n  } else {\n    let stream = read.readStream(cache, integrity, opts)\n    if (opts.memoize) {\n      let memoData = []\n      let memoLength = 0\n      const memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c)\n        memoLength += c.length\n        cb(null, c, en)\n      }, cb => {\n        memoData && memo.put.byDigest(\n          cache,\n          integrity,\n          Buffer.concat(memoData, memoLength),\n          opts\n        )\n        cb()\n      })\n      stream = pipeline(stream, memoStream)\n    }\n    return stream\n  }\n}\n\nmodule.exports.info = info\nfunction info (cache, key, opts) {\n  opts = GetOpts(opts)\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(memoized.entry)\n  } else {\n    return index.find(cache, key)\n  }\n}\n\nmodule.exports.hasContent = read.hasContent\n\nmodule.exports.copy = function cp (cache, key, dest, opts) {\n  return copy(false, cache, key, dest, opts)\n}\nmodule.exports.copy.byDigest = function cpDigest (cache, digest, dest, opts) {\n  return copy(true, cache, digest, dest, opts)\n}\nfunction copy (byDigest, cache, key, dest, opts) {\n  opts = GetOpts(opts)\n  if (read.copy) {\n    return (\n      byDigest ? BB.resolve(null) : index.find(cache, key, opts)\n    ).then(entry => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key)\n      }\n      return read.copy(\n        cache, byDigest ? key : entry.integrity, dest, opts\n      ).then(() => byDigest ? key : {\n        metadata: entry.metadata,\n        size: entry.size,\n        integrity: entry.integrity\n      })\n    })\n  } else {\n    return getData(byDigest, cache, key, opts).then(res => {\n      return fs.writeFileAsync(dest, byDigest ? res : res.data)\n        .then(() => byDigest ? key : {\n          metadata: res.metadata,\n          size: res.size,\n          integrity: res.integrity\n        })\n    })\n  }\n}\n"]}