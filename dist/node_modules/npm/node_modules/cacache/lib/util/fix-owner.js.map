{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/cacache/lib/util/fix-owner.js"],"names":["BB","require","chownr","promisify","mkdirp","inflight","module","exports","fixOwner","filepath","uid","gid","process","getuid","resolve","getgid","catch","code","mkdirfix","p","cb","then","made"],"mappings":"AAAA;;AAEA,IAAMA,KAAKC,QAAQ,UAAR,CAAX;;AAEA,IAAMC,SAASF,GAAGG,SAAH,CAAaF,QAAQ,QAAR,CAAb,CAAf;AACA,IAAMG,SAASJ,GAAGG,SAAH,CAAaF,QAAQ,QAAR,CAAb,CAAf;AACA,IAAMI,WAAWJ,QAAQ,kBAAR,CAAjB;;AAEAK,OAAOC,OAAP,CAAeL,MAAf,GAAwBM,QAAxB;AACA,SAASA,QAAT,CAAmBC,QAAnB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuC;AACrC,MAAI,CAACC,QAAQC,MAAb,EAAqB;AACnB;AACA,WAAOb,GAAGc,OAAH,EAAP;AACD;AACD,MAAI,OAAOJ,GAAP,KAAe,QAAf,IAA2B,OAAOC,GAAP,KAAe,QAA9C,EAAwD;AACtD;AACA,WAAOX,GAAGc,OAAH,EAAP;AACD;AACD,MAAK,OAAOJ,GAAP,KAAe,QAAf,IAA2BE,QAAQC,MAAR,OAAqBH,GAAjD,IACC,OAAOC,GAAP,KAAe,QAAf,IAA2BC,QAAQG,MAAR,OAAqBJ,GADrD,EAC2D;AACzD;AACA,WAAOX,GAAGc,OAAH,EAAP;AACD;AACD,SAAOT,SACL,mCAAmCI,QAD9B,EAEL;AAAA,WAAMP,OACJO,QADI,EAEJ,OAAOC,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCE,QAAQC,MAAR,EAF5B,EAGJ,OAAOF,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCC,QAAQG,MAAR,EAH5B,EAIJC,KAJI,CAIE,EAACC,MAAM,QAAP,EAJF,EAIoB;AAAA,aAAM,IAAN;AAAA,KAJpB,CAAN;AAAA,GAFK,CAAP;AAQD;;AAEDX,OAAOC,OAAP,CAAeW,QAAf,GAA0BA,QAA1B;AACA,SAASA,QAAT,CAAmBC,CAAnB,EAAsBT,GAAtB,EAA2BC,GAA3B,EAAgCS,EAAhC,EAAoC;AAClC,SAAOhB,OAAOe,CAAP,EAAUE,IAAV,CAAe,gBAAQ;AAC5B,QAAIC,IAAJ,EAAU;AACR,aAAOd,SAASc,IAAT,EAAeZ,GAAf,EAAoBC,GAApB,EAAyBU,IAAzB,CAA8B;AAAA,eAAMC,IAAN;AAAA,OAA9B,CAAP;AACD;AACF,GAJM,EAIJN,KAJI,CAIE,EAACC,MAAM,QAAP,EAJF,EAIoB,YAAM;AAC/B;AACA,WAAOT,SAASW,CAAT,EAAYT,GAAZ,EAAiBC,GAAjB,EAAsBU,IAAtB,CAA2B;AAAA,aAAM,IAAN;AAAA,KAA3B,CAAP;AACD,GAPM,CAAP;AAQD","file":"fix-owner.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst chownr = BB.promisify(require('chownr'))\nconst mkdirp = BB.promisify(require('mkdirp'))\nconst inflight = require('promise-inflight')\n\nmodule.exports.chownr = fixOwner\nfunction fixOwner (filepath, uid, gid) {\n  if (!process.getuid) {\n    // This platform doesn't need ownership fixing\n    return BB.resolve()\n  }\n  if (typeof uid !== 'number' && typeof gid !== 'number') {\n    // There's no permissions override. Nothing to do here.\n    return BB.resolve()\n  }\n  if ((typeof uid === 'number' && process.getuid() === uid) &&\n      (typeof gid === 'number' && process.getgid() === gid)) {\n    // No need to override if it's already what we used.\n    return BB.resolve()\n  }\n  return inflight(\n    'fixOwner: fixing ownership on ' + filepath,\n    () => chownr(\n      filepath,\n      typeof uid === 'number' ? uid : process.getuid(),\n      typeof gid === 'number' ? gid : process.getgid()\n    ).catch({code: 'ENOENT'}, () => null)\n  )\n}\n\nmodule.exports.mkdirfix = mkdirfix\nfunction mkdirfix (p, uid, gid, cb) {\n  return mkdirp(p).then(made => {\n    if (made) {\n      return fixOwner(made, uid, gid).then(() => made)\n    }\n  }).catch({code: 'EEXIST'}, () => {\n    // There's a race in mkdirp!\n    return fixOwner(p, uid, gid).then(() => null)\n  })\n}\n"]}