{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/cacache/lib/util/tmp.js"],"names":["BB","require","figgyPudding","fixOwner","path","rimraf","promisify","uniqueFilename","TmpOpts","tmpPrefix","uid","gid","module","exports","mkdir","mktmpdir","cache","opts","tmpTarget","join","mkdirfix","then","withTmp","cb","using","disposer","fix","fixtmpdir"],"mappings":"AAAA;;AAEA,IAAMA,KAAKC,QAAQ,UAAR,CAAX;;AAEA,IAAMC,eAAeD,QAAQ,eAAR,CAArB;AACA,IAAME,WAAWF,QAAQ,aAAR,CAAjB;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,SAASL,GAAGM,SAAH,CAAaL,QAAQ,QAAR,CAAb,CAAf;AACA,IAAMM,iBAAiBN,QAAQ,iBAAR,CAAvB;;AAEA,IAAMO,UAAUN,aAAa;AAC3BO,aAAW,EADgB;AAE3BC,OAAK,EAFsB;AAG3BC,OAAK;AAHsB,CAAb,CAAhB;;AAMAC,OAAOC,OAAP,CAAeC,KAAf,GAAuBC,QAAvB;AACA,SAASA,QAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC9BA,SAAOT,QAAQS,IAAR,CAAP;AACA,MAAMC,YAAYX,eAAeH,KAAKe,IAAL,CAAUH,KAAV,EAAiB,KAAjB,CAAf,EAAwCC,KAAKR,SAA7C,CAAlB;AACA,SAAON,SAASiB,QAAT,CAAkBF,SAAlB,EAA6BD,KAAKP,GAAlC,EAAuCO,KAAKN,GAA5C,EAAiDU,IAAjD,CAAsD,YAAM;AACjE,WAAOH,SAAP;AACD,GAFM,CAAP;AAGD;;AAEDN,OAAOC,OAAP,CAAeS,OAAf,GAAyBA,OAAzB;AACA,SAASA,OAAT,CAAkBN,KAAlB,EAAyBC,IAAzB,EAA+BM,EAA/B,EAAmC;AACjC,MAAI,CAACA,EAAL,EAAS;AACPA,SAAKN,IAAL;AACAA,WAAO,IAAP;AACD;AACDA,SAAOT,QAAQS,IAAR,CAAP;AACA,SAAOjB,GAAGwB,KAAH,CAAST,SAASC,KAAT,EAAgBC,IAAhB,EAAsBQ,QAAtB,CAA+BpB,MAA/B,CAAT,EAAiDkB,EAAjD,CAAP;AACD;;AAEDX,OAAOC,OAAP,CAAea,GAAf,GAAqBC,SAArB;AACA,SAASA,SAAT,CAAoBX,KAApB,EAA2BC,IAA3B,EAAiC;AAC/BA,SAAOT,QAAQS,IAAR,CAAP;AACA,SAAOd,SAASC,KAAKe,IAAL,CAAUH,KAAV,EAAiB,KAAjB,CAAT,EAAkCC,KAAKP,GAAvC,EAA4CO,KAAKN,GAAjD,CAAP;AACD","file":"tmp.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst figgyPudding = require('figgy-pudding')\nconst fixOwner = require('./fix-owner')\nconst path = require('path')\nconst rimraf = BB.promisify(require('rimraf'))\nconst uniqueFilename = require('unique-filename')\n\nconst TmpOpts = figgyPudding({\n  tmpPrefix: {},\n  uid: {},\n  gid: {}\n})\n\nmodule.exports.mkdir = mktmpdir\nfunction mktmpdir (cache, opts) {\n  opts = TmpOpts(opts)\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)\n  return fixOwner.mkdirfix(tmpTarget, opts.uid, opts.gid).then(() => {\n    return tmpTarget\n  })\n}\n\nmodule.exports.withTmp = withTmp\nfunction withTmp (cache, opts, cb) {\n  if (!cb) {\n    cb = opts\n    opts = null\n  }\n  opts = TmpOpts(opts)\n  return BB.using(mktmpdir(cache, opts).disposer(rimraf), cb)\n}\n\nmodule.exports.fix = fixtmpdir\nfunction fixtmpdir (cache, opts) {\n  opts = TmpOpts(opts)\n  return fixOwner(path.join(cache, 'tmp'), opts.uid, opts.gid)\n}\n"]}