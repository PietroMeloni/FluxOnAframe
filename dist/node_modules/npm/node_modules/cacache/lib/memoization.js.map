{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/cacache/lib/memoization.js"],"names":["LRU","require","MAX_SIZE","MAX_AGE","MEMOIZED","max","maxAge","length","entry","key","startsWith","data","module","exports","clearMemoized","old","forEach","v","k","reset","put","cache","opts","pickMem","set","putDigest","integrity","byDigest","get","getDigest","ObjProxy","obj","val","memoize"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,MAAMC,QAAQ,WAAR,CAAZ;;AAEA,IAAMC,WAAW,KAAK,IAAL,GAAY,IAA7B,C,CAAkC;AAClC,IAAMC,UAAU,IAAI,EAAJ,GAAS,IAAzB;;AAEA,IAAIC,WAAW,IAAIJ,GAAJ,CAAQ;AACrBK,OAAKH,QADgB;AAErBI,UAAQH,OAFa;AAGrBI,UAAQ,gBAACC,KAAD,EAAQC,GAAR,EAAgB;AACtB,QAAIA,IAAIC,UAAJ,CAAe,MAAf,CAAJ,EAA4B;AAC1B,aAAOF,MAAMG,IAAN,CAAWJ,MAAlB;AACD,KAFD,MAEO,IAAIE,IAAIC,UAAJ,CAAe,SAAf,CAAJ,EAA+B;AACpC,aAAOF,MAAMD,MAAb;AACD;AACF;AAToB,CAAR,CAAf;;AAYAK,OAAOC,OAAP,CAAeC,aAAf,GAA+BA,aAA/B;AACA,SAASA,aAAT,GAA0B;AACxB,MAAMC,MAAM,EAAZ;AACAX,WAASY,OAAT,CAAiB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzBH,QAAIG,CAAJ,IAASD,CAAT;AACD,GAFD;AAGAb,WAASe,KAAT;AACA,SAAOJ,GAAP;AACD;;AAEDH,OAAOC,OAAP,CAAeO,GAAf,GAAqBA,GAArB;AACA,SAASA,GAAT,CAAcC,KAAd,EAAqBb,KAArB,EAA4BG,IAA5B,EAAkCW,IAAlC,EAAwC;AACtCC,UAAQD,IAAR,EAAcE,GAAd,UAAyBH,KAAzB,SAAkCb,MAAMC,GAAxC,EAA+C,EAAED,YAAF,EAASG,UAAT,EAA/C;AACAc,YAAUJ,KAAV,EAAiBb,MAAMkB,SAAvB,EAAkCf,IAAlC,EAAwCW,IAAxC;AACD;;AAEDV,OAAOC,OAAP,CAAeO,GAAf,CAAmBO,QAAnB,GAA8BF,SAA9B;AACA,SAASA,SAAT,CAAoBJ,KAApB,EAA2BK,SAA3B,EAAsCf,IAAtC,EAA4CW,IAA5C,EAAkD;AAChDC,UAAQD,IAAR,EAAcE,GAAd,aAA4BH,KAA5B,SAAqCK,SAArC,EAAkDf,IAAlD;AACD;;AAEDC,OAAOC,OAAP,CAAee,GAAf,GAAqBA,GAArB;AACA,SAASA,GAAT,CAAcP,KAAd,EAAqBZ,GAArB,EAA0Ba,IAA1B,EAAgC;AAC9B,SAAOC,QAAQD,IAAR,EAAcM,GAAd,UAAyBP,KAAzB,SAAkCZ,GAAlC,CAAP;AACD;;AAEDG,OAAOC,OAAP,CAAee,GAAf,CAAmBD,QAAnB,GAA8BE,SAA9B;AACA,SAASA,SAAT,CAAoBR,KAApB,EAA2BK,SAA3B,EAAsCJ,IAAtC,EAA4C;AAC1C,SAAOC,QAAQD,IAAR,EAAcM,GAAd,aAA4BP,KAA5B,SAAqCK,SAArC,CAAP;AACD;;IAEKI,Q;AACJ,oBAAaC,GAAb,EAAkB;AAAA;;AAChB,SAAKA,GAAL,GAAWA,GAAX;AACD;;;;wBACItB,G,EAAK;AAAE,aAAO,KAAKsB,GAAL,CAAStB,GAAT,CAAP;AAAsB;;;wBAC7BA,G,EAAKuB,G,EAAK;AAAE,WAAKD,GAAL,CAAStB,GAAT,IAAgBuB,GAAhB;AAAqB;;;;;;AAGxC,SAAST,OAAT,CAAkBD,IAAlB,EAAwB;AACtB,MAAI,CAACA,IAAD,IAAS,CAACA,KAAKW,OAAnB,EAA4B;AAC1B,WAAO7B,QAAP;AACD,GAFD,MAEO,IAAIkB,KAAKW,OAAL,CAAaL,GAAb,IAAoBN,KAAKW,OAAL,CAAaT,GAArC,EAA0C;AAC/C,WAAOF,KAAKW,OAAZ;AACD,GAFM,MAEA,IAAI,QAAOX,KAAKW,OAAZ,MAAwB,QAA5B,EAAsC;AAC3C,WAAO,IAAIH,QAAJ,CAAaR,KAAKW,OAAlB,CAAP;AACD,GAFM,MAEA;AACL,WAAO7B,QAAP;AACD;AACF","file":"memoization.js","sourcesContent":["'use strict'\n\nconst LRU = require('lru-cache')\n\nconst MAX_SIZE = 50 * 1024 * 1024 // 50MB\nconst MAX_AGE = 3 * 60 * 1000\n\nlet MEMOIZED = new LRU({\n  max: MAX_SIZE,\n  maxAge: MAX_AGE,\n  length: (entry, key) => {\n    if (key.startsWith('key:')) {\n      return entry.data.length\n    } else if (key.startsWith('digest:')) {\n      return entry.length\n    }\n  }\n})\n\nmodule.exports.clearMemoized = clearMemoized\nfunction clearMemoized () {\n  const old = {}\n  MEMOIZED.forEach((v, k) => {\n    old[k] = v\n  })\n  MEMOIZED.reset()\n  return old\n}\n\nmodule.exports.put = put\nfunction put (cache, entry, data, opts) {\n  pickMem(opts).set(`key:${cache}:${entry.key}`, { entry, data })\n  putDigest(cache, entry.integrity, data, opts)\n}\n\nmodule.exports.put.byDigest = putDigest\nfunction putDigest (cache, integrity, data, opts) {\n  pickMem(opts).set(`digest:${cache}:${integrity}`, data)\n}\n\nmodule.exports.get = get\nfunction get (cache, key, opts) {\n  return pickMem(opts).get(`key:${cache}:${key}`)\n}\n\nmodule.exports.get.byDigest = getDigest\nfunction getDigest (cache, integrity, opts) {\n  return pickMem(opts).get(`digest:${cache}:${integrity}`)\n}\n\nclass ObjProxy {\n  constructor (obj) {\n    this.obj = obj\n  }\n  get (key) { return this.obj[key] }\n  set (key, val) { this.obj[key] = val }\n}\n\nfunction pickMem (opts) {\n  if (!opts || !opts.memoize) {\n    return MEMOIZED\n  } else if (opts.memoize.get && opts.memoize.set) {\n    return opts.memoize\n  } else if (typeof opts.memoize === 'object') {\n    return new ObjProxy(opts.memoize)\n  } else {\n    return MEMOIZED\n  }\n}\n"]}