{"version":3,"sources":["../../../../../node_modules/npm/node_modules/json-stringify-safe/stringify.js"],"names":["exports","module","stringify","getSerialize","serializer","obj","replacer","spaces","cycleReplacer","JSON","stack","keys","key","value","slice","indexOf","join","length","thisPos","splice","push","Infinity","call"],"mappings":";;AAAAA,UAAUC,OAAOD,OAAP,GAAiBE,SAA3B;AACAF,QAAQG,YAAR,GAAuBC,UAAvB;;AAEA,SAASF,SAAT,CAAmBG,GAAnB,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,aAA1C,EAAyD;AACvD,SAAOC,KAAKP,SAAL,CAAeG,GAAf,EAAoBD,WAAWE,QAAX,EAAqBE,aAArB,CAApB,EAAyDD,MAAzD,CAAP;AACD;;AAED,SAASH,UAAT,CAAoBE,QAApB,EAA8BE,aAA9B,EAA6C;AAC3C,MAAIE,QAAQ,EAAZ;AAAA,MAAgBC,OAAO,EAAvB;;AAEA,MAAIH,iBAAiB,IAArB,EAA2BA,gBAAgB,uBAASI,GAAT,EAAcC,KAAd,EAAqB;AAC9D,QAAIH,MAAM,CAAN,MAAaG,KAAjB,EAAwB,OAAO,cAAP;AACxB,WAAO,iBAAiBF,KAAKG,KAAL,CAAW,CAAX,EAAcJ,MAAMK,OAAN,CAAcF,KAAd,CAAd,EAAoCG,IAApC,CAAyC,GAAzC,CAAjB,GAAiE,GAAxE;AACD,GAH0B;;AAK3B,SAAO,UAASJ,GAAT,EAAcC,KAAd,EAAqB;AAC1B,QAAIH,MAAMO,MAAN,GAAe,CAAnB,EAAsB;AACpB,UAAIC,UAAUR,MAAMK,OAAN,CAAc,IAAd,CAAd;AACA,OAACG,OAAD,GAAWR,MAAMS,MAAN,CAAaD,UAAU,CAAvB,CAAX,GAAuCR,MAAMU,IAAN,CAAW,IAAX,CAAvC;AACA,OAACF,OAAD,GAAWP,KAAKQ,MAAL,CAAYD,OAAZ,EAAqBG,QAArB,EAA+BT,GAA/B,CAAX,GAAiDD,KAAKS,IAAL,CAAUR,GAAV,CAAjD;AACA,UAAI,CAACF,MAAMK,OAAN,CAAcF,KAAd,CAAL,EAA2BA,QAAQL,cAAcc,IAAd,CAAmB,IAAnB,EAAyBV,GAAzB,EAA8BC,KAA9B,CAAR;AAC5B,KALD,MAMKH,MAAMU,IAAN,CAAWP,KAAX;;AAEL,WAAOP,YAAY,IAAZ,GAAmBO,KAAnB,GAA2BP,SAASgB,IAAT,CAAc,IAAd,EAAoBV,GAApB,EAAyBC,KAAzB,CAAlC;AACD,GAVD;AAWD","file":"stringify.js","sourcesContent":["exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n"]}