'use strict';

module.exports = qw;

function appendLast(arr, str) {
  var last = arr.length - 1;
  if (last < 0) {
    arr.push(str);
  } else {
    var lastValue = String(arr[last]);
    return arr[last] = lastValue + String(str);
  }
}

function qw() {
  var args = Object.assign([], arguments[0]);
  var values = [].slice.call(arguments, 1);
  var words = [];
  var lastWordWasValue = false;
  while (args.length) {
    var arg = args.shift();
    var concatValue = arg.length === 0 || arg.slice(-1) !== ' ';
    if (arg.trim() !== '') {
      var theseWords = arg.replace(/^\s+|\s+$/g, '').replace(/\s+/g, ' ').split(/ /);
      if (lastWordWasValue && arg[0] !== ' ') {
        appendLast(words, theseWords.shift());
      }
      words.push.apply(words, theseWords);
    }

    if (values.length) {
      var val = values.shift();
      if (concatValue) {
        appendLast(words, val);
      } else {
        words.push(val);
      }
      lastWordWasValue = true;
    } else {
      lastWordWasValue = false;
    }
  }
  return words;
}
//# sourceMappingURL=qw.js.map