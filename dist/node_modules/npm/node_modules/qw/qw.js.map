{"version":3,"sources":["../../../../../node_modules/npm/node_modules/qw/qw.js"],"names":["module","exports","qw","appendLast","arr","str","last","length","push","lastValue","String","args","Object","assign","arguments","values","slice","call","words","lastWordWasValue","arg","shift","concatValue","trim","theseWords","replace","split","apply","val"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiBC,EAAjB;;AAEA,SAASC,UAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAIC,OAAOF,IAAIG,MAAJ,GAAa,CAAxB;AACA,MAAID,OAAO,CAAX,EAAc;AACZF,QAAII,IAAJ,CAASH,GAAT;AACD,GAFD,MAEO;AACL,QAAII,YAAYC,OAAON,IAAIE,IAAJ,CAAP,CAAhB;AACA,WAAOF,IAAIE,IAAJ,IAAYG,YAAYC,OAAOL,GAAP,CAA/B;AACD;AACF;;AAED,SAASH,EAAT,GAAe;AACb,MAAMS,OAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBC,UAAU,CAAV,CAAlB,CAAb;AACA,MAAMC,SAAS,GAAGC,KAAH,CAASC,IAAT,CAAcH,SAAd,EAAyB,CAAzB,CAAf;AACA,MAAMI,QAAQ,EAAd;AACA,MAAIC,mBAAmB,KAAvB;AACA,SAAOR,KAAKJ,MAAZ,EAAoB;AAClB,QAAMa,MAAMT,KAAKU,KAAL,EAAZ;AACA,QAAMC,cAAcF,IAAIb,MAAJ,KAAe,CAAf,IAAoBa,IAAIJ,KAAJ,CAAU,CAAC,CAAX,MAAkB,GAA1D;AACA,QAAII,IAAIG,IAAJ,OAAe,EAAnB,EAAuB;AACrB,UAAMC,aAAaJ,IAAIK,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,EAA8BA,OAA9B,CAAsC,MAAtC,EAA8C,GAA9C,EAAmDC,KAAnD,CAAyD,GAAzD,CAAnB;AACA,UAAIP,oBAAoBC,IAAI,CAAJ,MAAW,GAAnC,EAAwC;AACtCjB,mBAAWe,KAAX,EAAkBM,WAAWH,KAAX,EAAlB;AACD;AACDH,YAAMV,IAAN,CAAWmB,KAAX,CAAiBT,KAAjB,EAAwBM,UAAxB;AACD;;AAED,QAAIT,OAAOR,MAAX,EAAmB;AACjB,UAAMqB,MAAMb,OAAOM,KAAP,EAAZ;AACA,UAAIC,WAAJ,EAAiB;AACfnB,mBAAWe,KAAX,EAAkBU,GAAlB;AACD,OAFD,MAEO;AACLV,cAAMV,IAAN,CAAWoB,GAAX;AACD;AACDT,yBAAmB,IAAnB;AACD,KARD,MAQO;AACLA,yBAAmB,KAAnB;AACD;AACF;AACD,SAAOD,KAAP;AACD","file":"qw.js","sourcesContent":["'use strict'\nmodule.exports = qw\n\nfunction appendLast (arr, str) {\n  var last = arr.length - 1\n  if (last < 0) {\n    arr.push(str)\n  } else {\n    var lastValue = String(arr[last])\n    return arr[last] = lastValue + String(str)\n  }\n}\n\nfunction qw () {\n  const args = Object.assign([], arguments[0])\n  const values = [].slice.call(arguments, 1)\n  const words = []\n  let lastWordWasValue = false\n  while (args.length) {\n    const arg = args.shift()\n    const concatValue = arg.length === 0 || arg.slice(-1) !== ' '\n    if (arg.trim() !== '') {\n      const theseWords = arg.replace(/^\\s+|\\s+$/g, '').replace(/\\s+/g, ' ').split(/ /)\n      if (lastWordWasValue && arg[0] !== ' ') {\n        appendLast(words, theseWords.shift())\n      }\n      words.push.apply(words, theseWords)\n    }\n\n    if (values.length) {\n      const val = values.shift()\n      if (concatValue) {\n        appendLast(words, val)\n      } else {\n        words.push(val)\n      }\n      lastWordWasValue = true\n    } else {\n      lastWordWasValue = false\n    }\n  }\n  return words\n}\n"]}