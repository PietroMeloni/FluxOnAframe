{"version":3,"sources":["../../../../../node_modules/npm/node_modules/npm-logical-tree/index.js"],"names":["path","LogicalTree","name","address","opts","version","optional","dev","bundled","resolved","integrity","dependencies","Map","requiredBy","Set","dep","set","add","delete","get","prefix","isRoot","require","join","replace","_seen","_from","values","has","hasCycle","fn","_pending","P","Promise","resolve","pending","then","promiseMap","forEachAsync","forEach","size","module","exports","lockTree","pkg","pkgLock","tree","makeNode","allDeps","Array","from","Object","keys","devDependencies","concat","optionalDependencies","depNode","addChild","node","addDep","addr","lockNode","atAddr","requires","tdepAddr","reqAddr","tdep","_reqAddr","fromAddr","child","parts","split","length","pop","joined","parent","err","Error","target","_atAddr","reduce","acc","next","arr","_index","map"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nlet path\n\nclass LogicalTree {\n  constructor (name, address, opts) {\n    this.name = name\n    this.version = opts.version\n    this.address = address || ''\n    this.optional = !!opts.optional\n    this.dev = !!opts.dev\n    this.bundled = !!opts.bundled\n    this.resolved = opts.resolved\n    this.integrity = opts.integrity\n    this.dependencies = new Map()\n    this.requiredBy = new Set()\n  }\n\n  get isRoot () { return !this.requiredBy.size }\n\n  addDep (dep) {\n    this.dependencies.set(dep.name, dep)\n    dep.requiredBy.add(this)\n    return this\n  }\n\n  delDep (dep) {\n    this.dependencies.delete(dep.name)\n    dep.requiredBy.delete(this)\n    return this\n  }\n\n  getDep (name) {\n    return this.dependencies.get(name)\n  }\n\n  path (prefix) {\n    if (this.isRoot) {\n      // The address of the root is the prefix itself.\n      return prefix || ''\n    } else {\n      if (!path) { path = require('path') }\n      return path.join(\n        prefix || '',\n        'node_modules',\n        this.address.replace(/:/g, '/node_modules/')\n      )\n    }\n  }\n\n  // This finds cycles _from_ a given node: if some deeper dep has\n  // its own cycle, but that cycle does not refer to this node,\n  // it will return false.\n  hasCycle (_seen, _from) {\n    if (!_seen) { _seen = new Set() }\n    if (!_from) { _from = this }\n    for (let dep of this.dependencies.values()) {\n      if (_seen.has(dep)) { continue }\n      _seen.add(dep)\n      if (dep === _from || dep.hasCycle(_seen, _from)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  forEachAsync (fn, opts, _pending) {\n    if (!opts) { opts = _pending || {} }\n    if (!_pending) { _pending = new Map() }\n    const P = opts.Promise || Promise\n    if (_pending.has(this)) {\n      return P.resolve(this.hasCycle() || _pending.get(this))\n    }\n    const pending = P.resolve().then(() => {\n      return fn(this, () => {\n        return promiseMap(\n          this.dependencies.values(),\n          dep => dep.forEachAsync(fn, opts, _pending),\n          opts\n        )\n      })\n    })\n    _pending.set(this, pending)\n    return pending\n  }\n\n  forEach (fn, _seen) {\n    if (!_seen) { _seen = new Set() }\n    if (_seen.has(this)) { return }\n    _seen.add(this)\n    fn(this, () => {\n      for (let dep of this.dependencies.values()) {\n        dep.forEach(fn, _seen)\n      }\n    })\n  }\n}\n\nmodule.exports = lockTree\nfunction lockTree (pkg, pkgLock, opts) {\n  const tree = makeNode(pkg.name, null, pkg)\n  const allDeps = new Map()\n  Array.from(\n    new Set(Object.keys(pkg.devDependencies || {})\n    .concat(Object.keys(pkg.optionalDependencies || {}))\n    .concat(Object.keys(pkg.dependencies || {})))\n  ).forEach(name => {\n    let dep = allDeps.get(name)\n    if (!dep) {\n      const depNode = (pkgLock.dependencies || {})[name]\n      dep = makeNode(name, name, depNode)\n    }\n    addChild(dep, tree, allDeps, pkgLock)\n  })\n  return tree\n}\n\nmodule.exports.node = makeNode\nfunction makeNode (name, address, opts) {\n  return new LogicalTree(name, address, opts || {})\n}\n\nfunction addChild (dep, tree, allDeps, pkgLock) {\n  tree.addDep(dep)\n  allDeps.set(dep.address, dep)\n  const addr = dep.address\n  const lockNode = atAddr(pkgLock, addr)\n  Object.keys(lockNode.requires || {}).forEach(name => {\n    const tdepAddr = reqAddr(pkgLock, name, addr)\n    let tdep = allDeps.get(tdepAddr)\n    if (!tdep) {\n      tdep = makeNode(name, tdepAddr, atAddr(pkgLock, tdepAddr))\n      addChild(tdep, dep, allDeps, pkgLock)\n    } else {\n      dep.addDep(tdep)\n    }\n  })\n}\n\nmodule.exports._reqAddr = reqAddr\nfunction reqAddr (pkgLock, name, fromAddr) {\n  const lockNode = atAddr(pkgLock, fromAddr)\n  const child = (lockNode.dependencies || {})[name]\n  if (child) {\n    return `${fromAddr}:${name}`\n  } else {\n    const parts = fromAddr.split(':')\n    while (parts.length) {\n      parts.pop()\n      const joined = parts.join(':')\n      const parent = atAddr(pkgLock, joined)\n      if (parent) {\n        const child = (parent.dependencies || {})[name]\n        if (child) {\n          return `${joined}${parts.length ? ':' : ''}${name}`\n        }\n      }\n    }\n    const err = new Error(`${name} not accessible from ${fromAddr}`)\n    err.pkgLock = pkgLock\n    err.target = name\n    err.from = fromAddr\n    throw err\n  }\n}\n\nmodule.exports._atAddr = atAddr\nfunction atAddr (pkgLock, addr) {\n  if (!addr.length) { return pkgLock }\n  const parts = addr.split(':')\n  return parts.reduce((acc, next) => {\n    return acc && (acc.dependencies || {})[next]\n  }, pkgLock)\n}\n\nfunction promiseMap (arr, fn, opts, _index) {\n  _index = _index || 0\n  const P = (opts && opts.Promise) || Promise\n  if (P.map) {\n    return P.map(arr, fn, opts)\n  } else {\n    if (!(arr instanceof Array)) {\n      arr = Array.from(arr)\n    }\n    if (_index >= arr.length) {\n      return P.resolve()\n    } else {\n      return P.resolve(fn(arr[_index], _index, arr))\n      .then(() => promiseMap(arr, fn, opts, _index + 1))\n    }\n  }\n}\n"]}