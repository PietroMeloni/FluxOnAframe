{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/asn1/lib/ber/reader.js"],"names":["assert","require","ASN1","errors","newInvalidAsn1Error","Reader","data","Buffer","isBuffer","TypeError","_buf","_size","length","_len","_offset","Object","defineProperty","prototype","enumerable","get","slice","readByte","peek","b","readLength","offset","undefined","lenB","i","readSequence","tag","seq","toString","o","readInt","_readTag","Integer","readBoolean","Boolean","readEnumeration","Enumeration","readString","retbuf","OctetString","str","readOID","OID","values","value","byte","push","shift","unshift","join","ok","fb","module","exports"],"mappings":"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","file":"reader.js","sourcesContent":["// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\n\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n///--- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\n\n\n///--- API\n\nfunction Reader(data) {\n  if (!data || !Buffer.isBuffer(data))\n    throw new TypeError('data must be a node Buffer');\n\n  this._buf = data;\n  this._size = data.length;\n\n  // These hold the \"current\" state\n  this._len = 0;\n  this._offset = 0;\n}\n\nObject.defineProperty(Reader.prototype, 'length', {\n  enumerable: true,\n  get: function () { return (this._len); }\n});\n\nObject.defineProperty(Reader.prototype, 'offset', {\n  enumerable: true,\n  get: function () { return (this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'remain', {\n  get: function () { return (this._size - this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'buffer', {\n  get: function () { return (this._buf.slice(this._offset)); }\n});\n\n\n/**\n * Reads a single byte and advances offset; you can pass in `true` to make this\n * a \"peek\" operation (i.e., get the byte, but don't advance the offset).\n *\n * @param {Boolean} peek true means don't move offset.\n * @return {Number} the next byte, null if not enough data.\n */\nReader.prototype.readByte = function(peek) {\n  if (this._size - this._offset < 1)\n    return null;\n\n  var b = this._buf[this._offset] & 0xff;\n\n  if (!peek)\n    this._offset += 1;\n\n  return b;\n};\n\n\nReader.prototype.peek = function() {\n  return this.readByte(true);\n};\n\n\n/**\n * Reads a (potentially) variable length off the BER buffer.  This call is\n * not really meant to be called directly, as callers have to manipulate\n * the internal buffer afterwards.\n *\n * As a result of this call, you can call `Reader.length`, until the\n * next thing called that does a readLength.\n *\n * @return {Number} the amount of offset to advance the buffer.\n * @throws {InvalidAsn1Error} on bad ASN.1\n */\nReader.prototype.readLength = function(offset) {\n  if (offset === undefined)\n    offset = this._offset;\n\n  if (offset >= this._size)\n    return null;\n\n  var lenB = this._buf[offset++] & 0xff;\n  if (lenB === null)\n    return null;\n\n  if ((lenB & 0x80) == 0x80) {\n    lenB &= 0x7f;\n\n    if (lenB == 0)\n      throw newInvalidAsn1Error('Indefinite length not supported');\n\n    if (lenB > 4)\n      throw newInvalidAsn1Error('encoding too long');\n\n    if (this._size - offset < lenB)\n      return null;\n\n    this._len = 0;\n    for (var i = 0; i < lenB; i++)\n      this._len = (this._len << 8) + (this._buf[offset++] & 0xff);\n\n  } else {\n    // Wasn't a variable length\n    this._len = lenB;\n  }\n\n  return offset;\n};\n\n\n/**\n * Parses the next sequence in this BER buffer.\n *\n * To get the length of the sequence, call `Reader.length`.\n *\n * @return {Number} the sequence's tag.\n */\nReader.prototype.readSequence = function(tag) {\n  var seq = this.peek();\n  if (seq === null)\n    return null;\n  if (tag !== undefined && tag !== seq)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + seq.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  this._offset = o;\n  return seq;\n};\n\n\nReader.prototype.readInt = function() {\n  return this._readTag(ASN1.Integer);\n};\n\n\nReader.prototype.readBoolean = function() {\n  return (this._readTag(ASN1.Boolean) === 0 ? false : true);\n};\n\n\nReader.prototype.readEnumeration = function() {\n  return this._readTag(ASN1.Enumeration);\n};\n\n\nReader.prototype.readString = function(tag, retbuf) {\n  if (!tag)\n    tag = ASN1.OctetString;\n\n  var b = this.peek();\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n\n  if (o === null)\n    return null;\n\n  if (this.length > this._size - o)\n    return null;\n\n  this._offset = o;\n\n  if (this.length === 0)\n    return retbuf ? new Buffer(0) : '';\n\n  var str = this._buf.slice(this._offset, this._offset + this.length);\n  this._offset += this.length;\n\n  return retbuf ? str : str.toString('utf8');\n};\n\nReader.prototype.readOID = function(tag) {\n  if (!tag)\n    tag = ASN1.OID;\n\n  var b = this.readString(tag, true);\n  if (b === null)\n    return null;\n\n  var values = [];\n  var value = 0;\n\n  for (var i = 0; i < b.length; i++) {\n    var byte = b[i] & 0xff;\n\n    value <<= 7;\n    value += byte & 0x7f;\n    if ((byte & 0x80) == 0) {\n      values.push(value);\n      value = 0;\n    }\n  }\n\n  value = values.shift();\n  values.unshift(value % 40);\n  values.unshift((value / 40) >> 0);\n\n  return values.join('.');\n};\n\n\nReader.prototype._readTag = function(tag) {\n  assert.ok(tag !== undefined);\n\n  var b = this.peek();\n\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  if (this.length > 4)\n    throw newInvalidAsn1Error('Integer too long: ' + this.length);\n\n  if (this.length > this._size - o)\n    return null;\n  this._offset = o;\n\n  var fb = this._buf[this._offset];\n  var value = 0;\n\n  for (var i = 0; i < this.length; i++) {\n    value <<= 8;\n    value |= (this._buf[this._offset++] & 0xff);\n  }\n\n  if ((fb & 0x80) == 0x80 && i !== 4)\n    value -= (1 << (i * 8));\n\n  return value >> 0;\n};\n\n\n\n///--- Exported API\n\nmodule.exports = Reader;\n"]}