{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/jsonify/lib/parse.js"],"names":["at","ch","escapee","b","f","n","r","t","text","error","m","name","message","next","c","charAt","number","string","isFinite","hex","i","uffff","parseInt","String","fromCharCode","white","word","value","array","push","object","key","Object","hasOwnProperty","call","module","exports","source","reviver","result","walk","holder","k","v","prototype","undefined"],"mappings":"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","file":"parse.js","sourcesContent":["var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n"]}