{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/npm-registry-fetch/node_modules/make-fetch-happen/index.js"],"names":["Cache","url","require","CachePolicy","fetch","pkg","retry","ssri","Stream","getAgent","setWarning","isURL","USER_AGENT","name","version","RETRY_ERRORS","RETRY_TYPES","module","exports","cachingFetch","defaults","_uri","_opts","defaultedFetch","uri","opts","finalOpts","Object","assign","delete","cacheDelete","configureOptions","cacheManager","req","Request","method","headers","initializeCache","cache","isHeaderConditional","toUpperCase","retries","initializeSsri","integrity","compress","isCachable","match","then","res","warningCode","get","isStale","conditionalFetch","errorMsg","err","Error","code","remoteFetch","iterableToObject","iter","obj","keys","k","makePolicy","_req","_res","status","shared","policy","responseTime","_responseTime","Date","bool","satisfiesWithoutRevalidation","mustRevalidate","cachedRes","revalidationHeaders","revalidatedPolicy","condRes","body","put","newRes","Headers","responseHeaders","catch","message","remoteFetchHandleIntegrity","oldBod","newBod","integrityStream","pipe","once","emit","agent","reqOpts","follow","redirect","size","counter","timeout","retryHandler","attemptNum","set","isStream","isMethodGetHead","storable","onRetry","isRetriable","isRedirect","resolvedUrl","resolve","redirectURL","parse","test","hostname","forEach","value","retried","isRetryError","indexOf","type","modifiers","some","h","toLowerCase"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nlet Cache\nconst url = require('url')\nconst CachePolicy = require('http-cache-semantics')\nconst fetch = require('node-fetch-npm')\nconst pkg = require('./package.json')\nconst retry = require('promise-retry')\nlet ssri\nconst Stream = require('stream')\nconst getAgent = require('./agent')\nconst setWarning = require('./warning')\n\nconst isURL = /^https?:/\nconst USER_AGENT = `${pkg.name}/${pkg.version} (+https://npm.im/${pkg.name})`\n\nconst RETRY_ERRORS = [\n  'ECONNRESET', // remote socket closed on us\n  'ECONNREFUSED', // remote host refused to open connection\n  'EADDRINUSE', // failed to bind to a local port (proxy?)\n  'ETIMEDOUT' // someone in the transaction is WAY TOO SLOW\n  // Known codes we do NOT retry on:\n  // ENOTFOUND (getaddrinfo failure. Either bad hostname, or offline)\n]\n\nconst RETRY_TYPES = [\n  'request-timeout'\n]\n\n// https://fetch.spec.whatwg.org/#http-network-or-cache-fetch\nmodule.exports = cachingFetch\ncachingFetch.defaults = function (_uri, _opts) {\n  const fetch = this\n  if (typeof _uri === 'object') {\n    _opts = _uri\n    _uri = null\n  }\n\n  function defaultedFetch (uri, opts) {\n    const finalOpts = Object.assign({}, _opts || {}, opts || {})\n    return fetch(uri || _uri, finalOpts)\n  }\n\n  defaultedFetch.defaults = fetch.defaults\n  defaultedFetch.delete = fetch.delete\n  return defaultedFetch\n}\n\ncachingFetch.delete = cacheDelete\nfunction cacheDelete (uri, opts) {\n  opts = configureOptions(opts)\n  if (opts.cacheManager) {\n    const req = new fetch.Request(uri, {\n      method: opts.method,\n      headers: opts.headers\n    })\n    return opts.cacheManager.delete(req, opts)\n  }\n}\n\nfunction initializeCache (opts) {\n  if (typeof opts.cacheManager === 'string') {\n    if (!Cache) {\n      // Default cacache-based cache\n      Cache = require('./cache')\n    }\n\n    opts.cacheManager = new Cache(opts.cacheManager, opts)\n  }\n\n  opts.cache = opts.cache || 'default'\n\n  if (opts.cache === 'default' && isHeaderConditional(opts.headers)) {\n    // If header list contains `If-Modified-Since`, `If-None-Match`,\n    // `If-Unmodified-Since`, `If-Match`, or `If-Range`, fetch will set cache\n    // mode to \"no-store\" if it is \"default\".\n    opts.cache = 'no-store'\n  }\n}\n\nfunction configureOptions (_opts) {\n  const opts = Object.assign({}, _opts || {})\n  opts.method = (opts.method || 'GET').toUpperCase()\n\n  if (opts.retry && typeof opts.retry === 'number') {\n    opts.retry = { retries: opts.retry }\n  }\n\n  if (opts.retry === false) {\n    opts.retry = { retries: 0 }\n  }\n\n  if (opts.cacheManager) {\n    initializeCache(opts)\n  }\n\n  return opts\n}\n\nfunction initializeSsri () {\n  if (!ssri) {\n    ssri = require('ssri')\n  }\n}\n\nfunction cachingFetch (uri, _opts) {\n  const opts = configureOptions(_opts)\n\n  if (opts.integrity) {\n    initializeSsri()\n    // if verifying integrity, node-fetch must not decompress\n    opts.compress = false\n  }\n\n  const isCachable = (opts.method === 'GET' || opts.method === 'HEAD') &&\n    opts.cacheManager &&\n    opts.cache !== 'no-store' &&\n    opts.cache !== 'reload'\n\n  if (isCachable) {\n    const req = new fetch.Request(uri, {\n      method: opts.method,\n      headers: opts.headers\n    })\n\n    return opts.cacheManager.match(req, opts).then(res => {\n      if (res) {\n        const warningCode = (res.headers.get('Warning') || '').match(/^\\d+/)\n        if (warningCode && +warningCode >= 100 && +warningCode < 200) {\n          // https://tools.ietf.org/html/rfc7234#section-4.3.4\n          //\n          // If a stored response is selected for update, the cache MUST:\n          //\n          // * delete any Warning header fields in the stored response with\n          //   warn-code 1xx (see Section 5.5);\n          //\n          // * retain any Warning header fields in the stored response with\n          //   warn-code 2xx;\n          //\n          res.headers.delete('Warning')\n        }\n\n        if (opts.cache === 'default' && !isStale(req, res)) {\n          return res\n        }\n\n        if (opts.cache === 'default' || opts.cache === 'no-cache') {\n          return conditionalFetch(req, res, opts)\n        }\n\n        if (opts.cache === 'force-cache' || opts.cache === 'only-if-cached') {\n          //   112 Disconnected operation\n          // SHOULD be included if the cache is intentionally disconnected from\n          // the rest of the network for a period of time.\n          // (https://tools.ietf.org/html/rfc2616#section-14.46)\n          setWarning(res, 112, 'Disconnected operation')\n          return res\n        }\n      }\n\n      if (!res && opts.cache === 'only-if-cached') {\n        const errorMsg = `request to ${\n          uri\n        } failed: cache mode is 'only-if-cached' but no cached response available.`\n\n        const err = new Error(errorMsg)\n        err.code = 'ENOTCACHED'\n        throw err\n      }\n\n      // Missing cache entry, or mode is default (if stale), reload, no-store\n      return remoteFetch(req.url, opts)\n    })\n  }\n\n  return remoteFetch(uri, opts)\n}\n\nfunction iterableToObject (iter) {\n  const obj = {}\n  for (let k of iter.keys()) {\n    obj[k] = iter.get(k)\n  }\n  return obj\n}\n\nfunction makePolicy (req, res) {\n  const _req = {\n    url: req.url,\n    method: req.method,\n    headers: iterableToObject(req.headers)\n  }\n  const _res = {\n    status: res.status,\n    headers: iterableToObject(res.headers)\n  }\n\n  return new CachePolicy(_req, _res, { shared: false })\n}\n\n// https://tools.ietf.org/html/rfc7234#section-4.2\nfunction isStale (req, res) {\n  if (!res) {\n    return null\n  }\n\n  const _req = {\n    url: req.url,\n    method: req.method,\n    headers: iterableToObject(req.headers)\n  }\n\n  const policy = makePolicy(req, res)\n\n  const responseTime = res.headers.get('x-local-cache-time') ||\n    res.headers.get('date') ||\n    0\n\n  policy._responseTime = new Date(responseTime)\n\n  const bool = !policy.satisfiesWithoutRevalidation(_req)\n  return bool\n}\n\nfunction mustRevalidate (res) {\n  return (res.headers.get('cache-control') || '').match(/must-revalidate/i)\n}\n\nfunction conditionalFetch (req, cachedRes, opts) {\n  const _req = {\n    url: req.url,\n    method: req.method,\n    headers: Object.assign({}, opts.headers || {})\n  }\n\n  const policy = makePolicy(req, cachedRes)\n  opts.headers = policy.revalidationHeaders(_req)\n\n  return remoteFetch(req.url, opts)\n    .then(condRes => {\n      const revalidatedPolicy = policy.revalidatedPolicy(_req, {\n        status: condRes.status,\n        headers: iterableToObject(condRes.headers)\n      })\n\n      if (condRes.status >= 500 && !mustRevalidate(cachedRes)) {\n        //   111 Revalidation failed\n        // MUST be included if a cache returns a stale response because an\n        // attempt to revalidate the response failed, due to an inability to\n        // reach the server.\n        // (https://tools.ietf.org/html/rfc2616#section-14.46)\n        setWarning(cachedRes, 111, 'Revalidation failed')\n        return cachedRes\n      }\n\n      if (condRes.status === 304) { // 304 Not Modified\n        condRes.body = cachedRes.body\n        return opts.cacheManager.put(req, condRes, opts)\n          .then(newRes => {\n            newRes.headers = new fetch.Headers(revalidatedPolicy.policy.responseHeaders())\n            return newRes\n          })\n      }\n\n      return condRes\n    })\n    .then(res => res)\n    .catch(err => {\n      if (mustRevalidate(cachedRes)) {\n        throw err\n      } else {\n        //   111 Revalidation failed\n        // MUST be included if a cache returns a stale response because an\n        // attempt to revalidate the response failed, due to an inability to\n        // reach the server.\n        // (https://tools.ietf.org/html/rfc2616#section-14.46)\n        setWarning(cachedRes, 111, 'Revalidation failed')\n        //   199 Miscellaneous warning\n        // The warning text MAY include arbitrary information to be presented to\n        // a human user, or logged. A system receiving this warning MUST NOT take\n        // any automated action, besides presenting the warning to the user.\n        // (https://tools.ietf.org/html/rfc2616#section-14.46)\n        setWarning(\n          cachedRes,\n          199,\n          `Miscellaneous Warning ${err.code}: ${err.message}`\n        )\n\n        return cachedRes\n      }\n    })\n}\n\nfunction remoteFetchHandleIntegrity (res, integrity) {\n  const oldBod = res.body\n  const newBod = ssri.integrityStream({\n    integrity\n  })\n  oldBod.pipe(newBod)\n  res.body = newBod\n  oldBod.once('error', err => {\n    newBod.emit('error', err)\n  })\n  newBod.once('error', err => {\n    oldBod.emit('error', err)\n  })\n}\n\nfunction remoteFetch (uri, opts) {\n  const agent = getAgent(uri, opts)\n  const headers = Object.assign({\n    'connection': agent ? 'keep-alive' : 'close',\n    'user-agent': USER_AGENT\n  }, opts.headers || {})\n\n  const reqOpts = {\n    agent,\n    body: opts.body,\n    compress: opts.compress,\n    follow: opts.follow,\n    headers: new fetch.Headers(headers),\n    method: opts.method,\n    redirect: 'manual',\n    size: opts.size,\n    counter: opts.counter,\n    timeout: opts.timeout\n  }\n\n  return retry(\n    (retryHandler, attemptNum) => {\n      const req = new fetch.Request(uri, reqOpts)\n      return fetch(req)\n        .then(res => {\n          res.headers.set('x-fetch-attempts', attemptNum)\n\n          if (opts.integrity) {\n            remoteFetchHandleIntegrity(res, opts.integrity)\n          }\n\n          const isStream = req.body instanceof Stream\n\n          if (opts.cacheManager) {\n            const isMethodGetHead = req.method === 'GET' ||\n              req.method === 'HEAD'\n\n            const isCachable = opts.cache !== 'no-store' &&\n              isMethodGetHead &&\n              makePolicy(req, res).storable() &&\n              res.status === 200 // No other statuses should be stored!\n\n            if (isCachable) {\n              return opts.cacheManager.put(req, res, opts)\n            }\n\n            if (!isMethodGetHead) {\n              return opts.cacheManager.delete(req).then(() => {\n                if (res.status >= 500 && req.method !== 'POST' && !isStream) {\n                  if (typeof opts.onRetry === 'function') {\n                    opts.onRetry(res)\n                  }\n\n                  return retryHandler(res)\n                }\n\n                return res\n              })\n            }\n          }\n\n          const isRetriable = req.method !== 'POST' &&\n            !isStream && (\n              res.status === 408 || // Request Timeout\n              res.status === 420 || // Enhance Your Calm (usually Twitter rate-limit)\n              res.status === 429 || // Too Many Requests (\"standard\" rate-limiting)\n              res.status >= 500 // Assume server errors are momentary hiccups\n            )\n\n          if (isRetriable) {\n            if (typeof opts.onRetry === 'function') {\n              opts.onRetry(res)\n            }\n\n            return retryHandler(res)\n          }\n\n          if (!fetch.isRedirect(res.status) || opts.redirect === 'manual') {\n            return res\n          }\n\n          // handle redirects - matches behavior of npm-fetch: https://github.com/bitinn/node-fetch\n          if (opts.redirect === 'error') {\n            const err = new Error(`redirect mode is set to error: ${uri}`)\n            err.code = 'ENOREDIRECT'\n            throw err\n          }\n\n          if (!res.headers.get('location')) {\n            const err = new Error(`redirect location header missing at: ${uri}`)\n            err.code = 'EINVALIDREDIRECT'\n            throw err\n          }\n\n          if (req.counter >= req.follow) {\n            const err = new Error(`maximum redirect reached at: ${uri}`)\n            err.code = 'EMAXREDIRECT'\n            throw err\n          }\n\n          const resolvedUrl = url.resolve(req.url, res.headers.get('location'))\n          let redirectURL = url.parse(resolvedUrl)\n\n          if (isURL.test(res.headers.get('location'))) {\n            redirectURL = url.parse(res.headers.get('location'))\n          }\n\n          // Remove authorization if changing hostnames (but not if just\n          // changing ports or protocols).  This matches the behavior of request:\n          // https://github.com/request/request/blob/b12a6245/lib/redirect.js#L134-L138\n          if (url.parse(req.url).hostname !== redirectURL.hostname) {\n            req.headers.delete('authorization')\n          }\n\n          // for POST request with 301/302 response, or any request with 303 response,\n          // use GET when following redirect\n          if (res.status === 303 ||\n            ((res.status === 301 || res.status === 302) && req.method === 'POST')) {\n            opts.method = 'GET'\n            opts.body = null\n            req.headers.delete('content-length')\n          }\n\n          opts.headers = {}\n          req.headers.forEach((value, name) => {\n            opts.headers[name] = value\n          })\n\n          opts.counter = ++req.counter\n          return cachingFetch(resolvedUrl, opts)\n        })\n        .catch(err => {\n          const code = err.code === 'EPROMISERETRY' ? err.retried.code : err.code\n\n          const isRetryError = RETRY_ERRORS.indexOf(code) === -1 &&\n            RETRY_TYPES.indexOf(err.type) === -1\n\n          if (req.method === 'POST' || isRetryError) {\n            throw err\n          }\n\n          if (typeof opts.onRetry === 'function') {\n            opts.onRetry(err)\n          }\n\n          return retryHandler(err)\n        })\n    },\n    opts.retry\n  ).catch(err => {\n    if (err.status >= 400) {\n      return err\n    }\n\n    throw err\n  })\n}\n\nfunction isHeaderConditional (headers) {\n  if (!headers || typeof headers !== 'object') {\n    return false\n  }\n\n  const modifiers = [\n    'if-modified-since',\n    'if-none-match',\n    'if-unmodified-since',\n    'if-match',\n    'if-range'\n  ]\n\n  return Object.keys(headers)\n    .some(h => modifiers.indexOf(h.toLowerCase()) !== -1)\n}\n"]}