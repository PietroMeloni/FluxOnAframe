{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/npm-registry-fetch/node_modules/smart-buffer/lib/smart-buffer.js"],"names":["SmartBuffer","arg1","arg2","type","isFinite","buff","Buffer","Math","ceil","length","Error","isEncoding","encoding","isBuffer","TypeError","_readOffset","_writeOffset","prototype","_ensureWritable","len","offset","_ensureCapacity","copy","max","minlen","oldlen","data","newlen","makeReader","func","size","ret","call","makeWriter","value","readInt8","readInt16BE","readInt16LE","readInt32BE","readInt32LE","readUInt8","readUInt16BE","readUInt16LE","readUInt32BE","readUInt32LE","readFloatBE","readFloatLE","readDoubleBE","readDoubleLE","readString","min","slice","toString","readStringNT","nullpos","i","result","readBuffer","endpoint","readBufferNT","writeInt8","writeInt16BE","writeInt16LE","writeInt32BE","writeInt32LE","writeUInt8","writeUInt16BE","writeUInt16LE","writeUInt32BE","writeUInt32LE","writeFloatBE","writeFloatLE","writeDoubleBE","writeDoubleLE","writeString","_offset","undefined","byteLength","write","writeStringNT","writeBuffer","writeBufferNT","clear","remaining","skip","amount","rewind","skipTo","position","toBuffer","destroy","module","exports"],"mappings":"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","file":"smart-buffer.js","sourcesContent":["var SmartBuffer = (function () {\n\n    /**\n     * Constructor for SmartBuffer.\n     * @param arg1 {Buffer || Number || String} Buffer to read from, or expected size to write to, or encoding to use.\n     * @param arg2 {String} Encoding to use for writing and reading strings. Defaults to utf8. If encoding is given in arg1, this is ignored.\n     * @constructor\n     *\n     * There are a few ways to construct a SmartBuffer:\n     *\n     * SmartBuffer() - Defaults to utf8, 4096 pre-set internal Buffer length.\n     * SmartBuffer(size) - Defaults to utf8, sets internal Buffer length to the size given.\n     * SmartBuffer(encoding) - Sets the given encoding, defaults to 4096 pre-set internal Buffer length.\n     * SmartBuffer(Buffer) - Defaults to utf8, sets the internal Buffer to the given buffer (same memory).\n     * SmartBuffer(Buffer, encoding) - Sets the given encoding, sets the internal Buffer to the given buffer (same memory).\n     *\n     */\n    function SmartBuffer(arg1, arg2) {\n        var type;\n        switch (type = typeof arg1) {\n            case 'number':\n                if (isFinite(arg1) && arg1 > 0) {\n                    this.buff = new Buffer(Math.ceil(arg1));\n                    this.length = 0;\n                } else {\n                    throw new Error('When specifying a size, it must be a valid number above zero.');\n                }\n                break;\n\n            case 'string':\n                if (Buffer.isEncoding(arg1)) {\n                    this.buff = new Buffer(4096);\n                    this.length = 0;\n                    this.encoding = arg1;\n                } else {\n                    throw new Error('Invalid Encoding');\n                }\n                break;\n\n            case 'object':\n                if (Buffer.isBuffer(arg1)) {\n                    this.buff = arg1;\n                    this.length = arg1.length;\n                } else {\n                    throw new TypeError('First argument must be a Buffer, Number representing the size, or a String representing the encoding.');\n                }\n                break;\n\n            default:\n                this.buff = new Buffer(4096);\n                this.length = 0;\n                break;\n        }\n\n        if (typeof this.encoding === 'undefined') {\n            if (typeof arg2 === 'string') {\n                if (Buffer.isEncoding(arg2)) {\n                    this.encoding = arg2;\n                } else {\n                    throw new Error('Invalid Encoding');\n                }\n            }\n        }\n\n        this._readOffset = 0;\n        this._writeOffset = 0;\n    }\n\n\n    SmartBuffer.prototype._ensureWritable = function (len, offset) {\n        this._ensureCapacity(this.length + len + (typeof offset === 'number' ? offset : 0));\n\n        if (typeof offset === 'number') {\n            this.buff.copy(this.buff, offset + len, offset, this.buff.length);\n        }\n        this.length = Math.max(this.length + len, (typeof offset === 'number' ?  offset : 0) + len);\n    };\n\n    SmartBuffer.prototype._ensureCapacity = function (minlen) {\n        var oldlen = this.buff.length;\n\n        if (minlen > oldlen) {\n            var data = this.buff;\n            var newlen = (oldlen * 3) / 2 + 1;\n            if (newlen < minlen)\n                newlen = minlen;\n            this.buff = new Buffer(newlen);\n            data.copy(this.buff, 0, 0, oldlen);\n        }\n    };\n\n\n    var makeReader = function (func, size) {\n        return function () {\n            var ret = func.call(this.buff, this._readOffset);\n            this._readOffset += size;\n            return ret;\n        }\n    };\n\n    var makeWriter = function (func, size) {\n        return function (value, offset) {\n            this._ensureWritable(size, offset);\n            func.call(this.buff, value, typeof offset === 'number' ? offset : this._writeOffset);\n            this._writeOffset += size;\n            return this;\n        }\n    };\n\n\n    /*\n     Read Operations\n     */\n\n    SmartBuffer.prototype.readInt8 = makeReader(Buffer.prototype.readInt8, 1);\n    SmartBuffer.prototype.readInt16BE = makeReader(Buffer.prototype.readInt16BE, 2);\n    SmartBuffer.prototype.readInt16LE = makeReader(Buffer.prototype.readInt16LE, 2);\n    SmartBuffer.prototype.readInt32BE = makeReader(Buffer.prototype.readInt32BE, 4);\n    SmartBuffer.prototype.readInt32LE = makeReader(Buffer.prototype.readInt32LE, 4);\n\n    SmartBuffer.prototype.readUInt8 = makeReader(Buffer.prototype.readUInt8, 1);\n    SmartBuffer.prototype.readUInt16BE = makeReader(Buffer.prototype.readUInt16BE, 2);\n    SmartBuffer.prototype.readUInt16LE = makeReader(Buffer.prototype.readUInt16LE, 2);\n    SmartBuffer.prototype.readUInt32BE = makeReader(Buffer.prototype.readUInt32BE, 4);\n    SmartBuffer.prototype.readUInt32LE = makeReader(Buffer.prototype.readUInt32LE, 4);\n\n    SmartBuffer.prototype.readFloatBE = makeReader(Buffer.prototype.readFloatBE, 4);\n    SmartBuffer.prototype.readFloatLE = makeReader(Buffer.prototype.readFloatLE, 4);\n\n    SmartBuffer.prototype.readDoubleBE = makeReader(Buffer.prototype.readDoubleBE, 8);\n    SmartBuffer.prototype.readDoubleLE = makeReader(Buffer.prototype.readDoubleLE, 8);\n\n\n    /**\n     * Reads a string of the given length.\n     * @param length {Number} The length of the string to read. (Defaults to the length of the remaining data)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or utf8)\n     * @returns {string} The string.\n     */\n    SmartBuffer.prototype.readString = function (length, encoding) {\n        var len = Math.min(length, this.length - this._readOffset) || (this.length - this._readOffset);\n        var ret = this.buff.slice(this._readOffset, this._readOffset + len).toString(encoding || this.encoding);\n        this._readOffset += len;\n        return ret;\n    };\n\n    /**\n     * Reads a null terminated string from the underlying buffer.\n     * @param encoding {String} Encoding to use. Defaults to encoding set in constructor, or utf8.\n     * @returns {string}\n     */\n    SmartBuffer.prototype.readStringNT = function (encoding) {\n        var nullpos = this.length;\n        for (var i = this._readOffset; i < this.length; i++) {\n            if (this.buff[i] == 0x00) {\n                nullpos = i;\n                break;\n            }\n        }\n\n        var result = this.buff.slice(this._readOffset, nullpos);\n        this._readOffset = nullpos + 1;\n\n        return result.toString(encoding || this.encoding);\n    };\n\n\n    /**\n     * Reads a specified number of bytes.\n     * @param len {Number} Numbers of bytes to read. (Defaults to the remaining data length)\n     * @returns {Buffer} Buffer containing the read bytes.\n     */\n    SmartBuffer.prototype.readBuffer = function (len) {\n        var endpoint = Math.min(this.length, this._readOffset + (typeof len === 'number' ? len : this.length));\n        var ret = this.buff.slice(this._readOffset, endpoint);\n        this._readOffset = endpoint;\n        return ret;\n    };\n\n    /**\n     * Reads a null terminated sequence of bytes from the underlying buffer.\n     * @returns {Buffer} Buffer containing the read bytes.\n     */\n    SmartBuffer.prototype.readBufferNT = function () {\n        var nullpos = this.length;\n        for (var i = this._readOffset; i < this.length; i++) {\n            if (this.buff[i] == 0x00) {\n                nullpos = i;\n                break;\n            }\n        }\n\n        var ret = this.buff.slice(this._readOffset, nullpos);\n        this._readOffset = nullpos + 1;\n\n        return ret;\n    };\n\n\n    /*\n     Write Operations\n     */\n\n\n    SmartBuffer.prototype.writeInt8 = makeWriter(Buffer.prototype.writeInt8, 1);\n    SmartBuffer.prototype.writeInt16BE = makeWriter(Buffer.prototype.writeInt16BE, 2);\n    SmartBuffer.prototype.writeInt16LE = makeWriter(Buffer.prototype.writeInt16LE, 2);\n    SmartBuffer.prototype.writeInt32BE = makeWriter(Buffer.prototype.writeInt32BE, 4);\n    SmartBuffer.prototype.writeInt32LE = makeWriter(Buffer.prototype.writeInt32LE, 4);\n\n    SmartBuffer.prototype.writeUInt8 = makeWriter(Buffer.prototype.writeUInt8, 1);\n    SmartBuffer.prototype.writeUInt16BE = makeWriter(Buffer.prototype.writeUInt16BE, 2);\n    SmartBuffer.prototype.writeUInt16LE = makeWriter(Buffer.prototype.writeUInt16LE, 2);\n    SmartBuffer.prototype.writeUInt32BE = makeWriter(Buffer.prototype.writeUInt32BE, 4);\n    SmartBuffer.prototype.writeUInt32LE = makeWriter(Buffer.prototype.writeUInt32LE, 4);\n\n    SmartBuffer.prototype.writeFloatBE = makeWriter(Buffer.prototype.writeFloatBE, 4);\n    SmartBuffer.prototype.writeFloatLE = makeWriter(Buffer.prototype.writeFloatLE, 4);\n\n    SmartBuffer.prototype.writeDoubleBE = makeWriter(Buffer.prototype.writeDoubleBE, 8);\n    SmartBuffer.prototype.writeDoubleLE = makeWriter(Buffer.prototype.writeDoubleLE, 8);\n\n\n    /**\n     * Writes a string to the underlying buffer.\n     * @param value {String} The string to write.\n     * @param offset {Number} The offset to write the string to. (Encoding can also be set here in place of offset)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or to utf8)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeString = function (value, offset, encoding) {\n        var len, _offset, type = typeof offset;\n\n        if (type === 'number') {\n            _offset = offset;\n        } else if (type === 'string') {\n            encoding = offset;\n            offset = this._writeOffset;\n        } else {\n            encoding = undefined;\n            offset = this._writeOffset;\n        }\n\n        len = Buffer.byteLength(value, encoding || this.encoding);\n        this._ensureWritable(len, _offset);\n\n        this.buff.write(value, offset, len, encoding || this.encoding);\n        this._writeOffset += len;\n        return this;\n    };\n\n    /**\n     * Writes a null terminated string to the underlying buffer.\n     * @param value {String} The string to write.\n     * @param offset {Number} The offset to write the string to. (Encoding can also be set here in place of offset)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or to utf8)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeStringNT = function (value, offset, encoding) {\n        this.writeString(value, offset, encoding);\n        this.writeUInt8(0x00, (typeof offset === 'number' ? offset + value.length : this._writeOffset));\n        return this;\n    };\n\n    /**\n     * Writes a Buffer to the underlying buffer.\n     * @param value {Buffer} The buffer to write.\n     * @param offset {Number} The offset to write the Buffer to.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeBuffer = function (value, offset) {\n        var len = value.length;\n        this._ensureWritable(len, offset);\n        value.copy(this.buff, typeof offset === 'number' ? offset : this._writeOffset);\n        this._writeOffset += len;\n        return this;\n    };\n\n    /**\n     * Writes a null terminated Buffer to the underlying buffer.\n     * @param value {Buffer} The buffer to write.\n     * @param offset {Number} The offset to write the Buffer to.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeBufferNT = function (value, offset) {\n        this.writeBuffer(value, offset);\n        this.writeUInt8(0x00, (typeof offset === 'number' ? offset + value.length : this._writeOffset));\n\n        return this;\n    };\n\n\n    /**\n     * Resets the Endless Buffer.\n     */\n    SmartBuffer.prototype.clear = function () {\n        this._writeOffset = 0;\n        this._readOffset = 0;\n        this.length = 0;\n    };\n\n    /**\n     * Gets the remaining number of bytes to be read from the existing Buffer.\n     * @returns {number} The number of bytes remaining.\n     */\n    SmartBuffer.prototype.remaining = function () {\n        return this.length - this._readOffset;\n    };\n\n    /**\n     * Skips the read position forward by the amount of given.\n     * @param amount {Number} The amount of bytes to skip forward.\n     */\n    SmartBuffer.prototype.skip = function (amount) {\n        if (this._readOffset + amount > this.length)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset += amount;\n    };\n\n    /**\n     * Rewinds the read position backward by the amount given.\n     * @param amount {Number} The amount of bytes to reverse backward.\n     */\n    SmartBuffer.prototype.rewind = function (amount) {\n        if (this._readOffset - amount < 0)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset -= amount;\n    };\n\n    /**\n     * Skips the read position to the given position.\n     * @param position {Number} The position to skip to.\n     */\n    SmartBuffer.prototype.skipTo = function (position) {\n        if (position < 0 || position > this.length)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset = position;\n    };\n\n    /**\n     * Gets the underlying Buffer.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.toBuffer = function () {\n        return this.buff.slice(0, this.length);\n    };\n\n    /**\n     * Gets a string representation of the underlying Buffer.\n     * @param encoding {String} Encoding to use. (Defaults to encoding set in constructor, or utf8.)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.toString = function (encoding) {\n        return this.buff.toString(encoding || this.encoding, 0, this.length);\n    };\n\n    /**\n     * Destroys the underlying Buffer, and resets the SmartBuffer.\n     */\n    SmartBuffer.prototype.destroy = function () {\n        delete this.buff;\n        this.clear();\n    };\n\n    return SmartBuffer;\n})();\n\nmodule.exports = SmartBuffer;"]}