{"version":3,"sources":["../../../../../../../../../node_modules/npm/node_modules/npm-registry-fetch/node_modules/cacache/lib/content/write.js"],"names":["BB","require","contentPath","fixOwner","fs","moveFile","PassThrough","path","pipe","promisify","rimraf","ssri","to","uniqueFilename","Y","writeFileAsync","writeFile","module","exports","write","cache","data","opts","algorithms","length","Error","size","reject","sizeError","sri","fromData","integrity","checkData","checksumError","using","makeTmp","tmp","target","flag","then","moveToDestination","stream","writeStream","inputStream","inputErr","errCheck","allDone","ret","c","n","cb","handleContent","end","e","code","emit","res","once","pipeToTmp","tmpTarget","resolve","hashStream","integrityStream","on","s","outStream","createWriteStream","flags","err","join","tmpPrefix","mkdirfix","dirname","uid","gid","moved","disposer","destination","destDir","chownr","expected","found"],"mappings":"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","file":"write.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst contentPath = require('./path')\nconst fixOwner = require('../util/fix-owner')\nconst fs = require('graceful-fs')\nconst moveFile = require('../util/move-file')\nconst PassThrough = require('stream').PassThrough\nconst path = require('path')\nconst pipe = BB.promisify(require('mississippi').pipe)\nconst rimraf = BB.promisify(require('rimraf'))\nconst ssri = require('ssri')\nconst to = require('mississippi').to\nconst uniqueFilename = require('unique-filename')\nconst Y = require('../util/y.js')\n\nconst writeFileAsync = BB.promisify(fs.writeFile)\n\nmodule.exports = write\nfunction write (cache, data, opts) {\n  opts = opts || {}\n  if (opts.algorithms && opts.algorithms.length > 1) {\n    throw new Error(\n      Y`opts.algorithms only supports a single algorithm for now`\n    )\n  }\n  if (typeof opts.size === 'number' && data.length !== opts.size) {\n    return BB.reject(sizeError(opts.size, data.length))\n  }\n  const sri = ssri.fromData(data, opts)\n  if (opts.integrity && !ssri.checkData(data, opts.integrity, opts)) {\n    return BB.reject(checksumError(opts.integrity, sri))\n  }\n  return BB.using(makeTmp(cache, opts), tmp => (\n    writeFileAsync(\n      tmp.target, data, {flag: 'wx'}\n    ).then(() => (\n      moveToDestination(tmp, cache, sri, opts)\n    ))\n  )).then(() => ({integrity: sri, size: data.length}))\n}\n\nmodule.exports.stream = writeStream\nfunction writeStream (cache, opts) {\n  opts = opts || {}\n  const inputStream = new PassThrough()\n  let inputErr = false\n  function errCheck () {\n    if (inputErr) { throw inputErr }\n  }\n\n  let allDone\n  const ret = to((c, n, cb) => {\n    if (!allDone) {\n      allDone = handleContent(inputStream, cache, opts, errCheck)\n    }\n    inputStream.write(c, n, cb)\n  }, cb => {\n    inputStream.end(() => {\n      if (!allDone) {\n        const e = new Error(Y`Cache input stream was empty`)\n        e.code = 'ENODATA'\n        return ret.emit('error', e)\n      }\n      allDone.then(res => {\n        res.integrity && ret.emit('integrity', res.integrity)\n        res.size !== null && ret.emit('size', res.size)\n        cb()\n      }, e => {\n        ret.emit('error', e)\n      })\n    })\n  })\n  ret.once('error', e => {\n    inputErr = e\n  })\n  return ret\n}\n\nfunction handleContent (inputStream, cache, opts, errCheck) {\n  return BB.using(makeTmp(cache, opts), tmp => {\n    errCheck()\n    return pipeToTmp(\n      inputStream, cache, tmp.target, opts, errCheck\n    ).then(res => {\n      return moveToDestination(\n        tmp, cache, res.integrity, opts, errCheck\n      ).then(() => res)\n    })\n  })\n}\n\nfunction pipeToTmp (inputStream, cache, tmpTarget, opts, errCheck) {\n  return BB.resolve().then(() => {\n    let integrity\n    let size\n    const hashStream = ssri.integrityStream({\n      integrity: opts.integrity,\n      algorithms: opts.algorithms,\n      size: opts.size\n    }).on('integrity', s => {\n      integrity = s\n    }).on('size', s => {\n      size = s\n    })\n    const outStream = fs.createWriteStream(tmpTarget, {\n      flags: 'wx'\n    })\n    errCheck()\n    return pipe(inputStream, hashStream, outStream).then(() => {\n      return {integrity, size}\n    }, err => {\n      return rimraf(tmpTarget).then(() => { throw err })\n    })\n  })\n}\n\nfunction makeTmp (cache, opts) {\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix)\n  return fixOwner.mkdirfix(\n    path.dirname(tmpTarget), opts.uid, opts.gid\n  ).then(() => ({\n    target: tmpTarget,\n    moved: false\n  })).disposer(tmp => (!tmp.moved && rimraf(tmp.target)))\n}\n\nfunction moveToDestination (tmp, cache, sri, opts, errCheck) {\n  errCheck && errCheck()\n  const destination = contentPath(cache, sri)\n  const destDir = path.dirname(destination)\n\n  return fixOwner.mkdirfix(\n    destDir, opts.uid, opts.gid\n  ).then(() => {\n    errCheck && errCheck()\n    return moveFile(tmp.target, destination)\n  }).then(() => {\n    errCheck && errCheck()\n    tmp.moved = true\n    return fixOwner.chownr(destination, opts.uid, opts.gid)\n  })\n}\n\nfunction sizeError (expected, found) {\n  var err = new Error(Y`Bad data size: expected inserted data to be ${expected} bytes, but got ${found} instead`)\n  err.expected = expected\n  err.found = found\n  err.code = 'EBADSIZE'\n  return err\n}\n\nfunction checksumError (expected, found) {\n  var err = new Error(Y`Integrity check failed:\n  Wanted: ${expected}\n   Found: ${found}`)\n  err.code = 'EINTEGRITY'\n  err.expected = expected\n  err.found = found\n  return err\n}\n"]}