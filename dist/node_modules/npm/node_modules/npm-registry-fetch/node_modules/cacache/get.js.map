{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/npm-registry-fetch/node_modules/cacache/get.js"],"names":["BB","require","fs","index","memo","pipe","pipeline","read","through","module","exports","get","cache","key","opts","getData","byDigest","getByDigest","digest","memoized","memoize","resolve","metadata","entry","data","integrity","size","find","then","NotFoundError","put","res","stream","getStream","on","ev","cb","write","end","emit","memoStream","memoData","memoLength","c","en","push","length","Buffer","concat","readStream","err","getStreamDigest","info","hasContent","copy","cp","dest","cpDigest","writeFileAsync"],"mappings":"AAAA;;AAEA,IAAMA,KAAKC,QAAQ,UAAR,CAAX;;AAEA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,IAAME,QAAQF,QAAQ,mBAAR,CAAd;AACA,IAAMG,OAAOH,QAAQ,mBAAR,CAAb;AACA,IAAMI,OAAOJ,QAAQ,aAAR,EAAuBI,IAApC;AACA,IAAMC,WAAWL,QAAQ,aAAR,EAAuBK,QAAxC;AACA,IAAMC,OAAON,QAAQ,oBAAR,CAAb;AACA,IAAMO,UAAUP,QAAQ,aAAR,EAAuBO,OAAvC;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,GAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC/C,SAAOC,QAAQ,KAAR,EAAeH,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,CAAP;AACD,CAFD;AAGAL,OAAOC,OAAP,CAAeM,QAAf,GAA0B,SAASC,WAAT,CAAsBL,KAAtB,EAA6BM,MAA7B,EAAqCJ,IAArC,EAA2C;AACnE,SAAOC,QAAQ,IAAR,EAAcH,KAAd,EAAqBM,MAArB,EAA6BJ,IAA7B,CAAP;AACD,CAFD;AAGA,SAASC,OAAT,CAAkBC,QAAlB,EAA4BJ,KAA5B,EAAmCC,GAAnC,EAAwCC,IAAxC,EAA8C;AAC5CA,SAAOA,QAAQ,EAAf;AACA,MAAMK,WACJH,WACEZ,KAAKO,GAAL,CAASK,QAAT,CAAkBJ,KAAlB,EAAyBC,GAAzB,EAA8BC,IAA9B,CADF,GAEEV,KAAKO,GAAL,CAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,CAHJ;AAKA,MAAIK,YAAYL,KAAKM,OAAL,KAAiB,KAAjC,EAAwC;AACtC,WAAOpB,GAAGqB,OAAH,CAAWL,WAAWG,QAAX,GAAsB;AACtCG,gBAAUH,SAASI,KAAT,CAAeD,QADa;AAEtCE,YAAML,SAASK,IAFuB;AAGtCC,iBAAWN,SAASI,KAAT,CAAeE,SAHY;AAItCC,YAAMP,SAASI,KAAT,CAAeG;AAJiB,KAAjC,CAAP;AAMD;AACD,SAAO,CACLV,WAAWhB,GAAGqB,OAAH,CAAW,IAAX,CAAX,GAA8BlB,MAAMwB,IAAN,CAAWf,KAAX,EAAkBC,GAAlB,EAAuBC,IAAvB,CADzB,EAELc,IAFK,CAEA,iBAAS;AACd,QAAI,CAACL,KAAD,IAAU,CAACP,QAAf,EAAyB;AACvB,YAAM,IAAIb,MAAM0B,aAAV,CAAwBjB,KAAxB,EAA+BC,GAA/B,CAAN;AACD;AACD,WAAON,KAAKK,KAAL,EAAYI,WAAWH,GAAX,GAAiBU,MAAME,SAAnC,EAA8C;AACnDA,iBAAWX,KAAKW,SADmC;AAEnDC,YAAMZ,KAAKY;AAFwC,KAA9C,EAGJE,IAHI,CAGC;AAAA,aAAQZ,WAAWQ,IAAX,GAAkB;AAChCF,kBAAUC,MAAMD,QADgB;AAEhCE,cAAMA,IAF0B;AAGhCE,cAAMH,MAAMG,IAHoB;AAIhCD,mBAAWF,MAAME;AAJe,OAA1B;AAAA,KAHD,EAQJG,IARI,CAQC,eAAO;AACb,UAAId,KAAKM,OAAL,IAAgBJ,QAApB,EAA8B;AAC5BZ,aAAK0B,GAAL,CAASd,QAAT,CAAkBJ,KAAlB,EAAyBC,GAAzB,EAA8BkB,GAA9B,EAAmCjB,IAAnC;AACD,OAFD,MAEO,IAAIA,KAAKM,OAAT,EAAkB;AACvBhB,aAAK0B,GAAL,CAASlB,KAAT,EAAgBW,KAAhB,EAAuBQ,IAAIP,IAA3B,EAAiCV,IAAjC;AACD;AACD,aAAOiB,GAAP;AACD,KAfM,CAAP;AAgBD,GAtBM,CAAP;AAuBD;;AAEDtB,OAAOC,OAAP,CAAesB,MAAf,GAAwBC,SAAxB;AACA,SAASA,SAAT,CAAoBrB,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AACpCA,SAAOA,QAAQ,EAAf;AACA,MAAIkB,SAASxB,SAAb;AACA,MAAMW,WAAWf,KAAKO,GAAL,CAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,CAAjB;AACA,MAAIK,YAAYL,KAAKM,OAAL,KAAiB,KAAjC,EAAwC;AACtCY,WAAOE,EAAP,CAAU,aAAV,EAAyB,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AACzCD,aAAO,UAAP,IAAqBC,GAAGjB,SAASI,KAAT,CAAeD,QAAlB,CAArB;AACAa,aAAO,WAAP,IAAsBC,GAAGjB,SAASI,KAAT,CAAeE,SAAlB,CAAtB;AACAU,aAAO,MAAP,IAAiBC,GAAGjB,SAASI,KAAT,CAAeG,IAAlB,CAAjB;AACD,KAJD;AAKAM,WAAOK,KAAP,CAAalB,SAASK,IAAtB,EAA4B;AAAA,aAAMQ,OAAOM,GAAP,EAAN;AAAA,KAA5B;AACA,WAAON,MAAP;AACD;AACD7B,QAAMwB,IAAN,CAAWf,KAAX,EAAkBC,GAAlB,EAAuBe,IAAvB,CAA4B,iBAAS;AACnC,QAAI,CAACL,KAAL,EAAY;AACV,aAAOS,OAAOO,IAAP,CACL,OADK,EACI,IAAIpC,MAAM0B,aAAV,CAAwBjB,KAAxB,EAA+BC,GAA/B,CADJ,CAAP;AAGD;AACD,QAAI2B,mBAAJ;AACA,QAAI1B,KAAKM,OAAT,EAAkB;AAChB,UAAIqB,WAAW,EAAf;AACA,UAAIC,aAAa,CAAjB;AACAF,mBAAahC,QAAQ,UAACmC,CAAD,EAAIC,EAAJ,EAAQR,EAAR,EAAe;AAClCK,oBAAYA,SAASI,IAAT,CAAcF,CAAd,CAAZ;AACAD,sBAAcC,EAAEG,MAAhB;AACAV,WAAG,IAAH,EAASO,CAAT,EAAYC,EAAZ;AACD,OAJY,EAIV,cAAM;AACPH,oBAAYrC,KAAK0B,GAAL,CAASlB,KAAT,EAAgBW,KAAhB,EAAuBwB,OAAOC,MAAP,CAAcP,QAAd,EAAwBC,UAAxB,CAAvB,EAA4D5B,IAA5D,CAAZ;AACAsB;AACD,OAPY,CAAb;AAQD,KAXD,MAWO;AACLI,mBAAahC,SAAb;AACD;AACDM,SAAKY,IAAL,GAAYZ,KAAKY,IAAL,IAAa,IAAb,GAAoBH,MAAMG,IAA1B,GAAiCZ,KAAKY,IAAlD;AACAM,WAAOO,IAAP,CAAY,UAAZ,EAAwBhB,MAAMD,QAA9B;AACAU,WAAOO,IAAP,CAAY,WAAZ,EAAyBhB,MAAME,SAA/B;AACAO,WAAOO,IAAP,CAAY,MAAZ,EAAoBhB,MAAMG,IAA1B;AACAM,WAAOE,EAAP,CAAU,aAAV,EAAyB,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AACzCD,aAAO,UAAP,IAAqBC,GAAGb,MAAMD,QAAT,CAArB;AACAa,aAAO,WAAP,IAAsBC,GAAGb,MAAME,SAAT,CAAtB;AACAU,aAAO,MAAP,IAAiBC,GAAGb,MAAMG,IAAT,CAAjB;AACD,KAJD;AAKArB,SACEE,KAAK0C,UAAL,CAAgBrC,KAAhB,EAAuBW,MAAME,SAA7B,EAAwCX,IAAxC,CADF,EAEE0B,UAFF,EAGER,MAHF;AAKD,GAnCD,EAmCG;AAAA,WAAOA,OAAOO,IAAP,CAAY,OAAZ,EAAqBW,GAArB,CAAP;AAAA,GAnCH;AAoCA,SAAOlB,MAAP;AACD;;AAEDvB,OAAOC,OAAP,CAAesB,MAAf,CAAsBhB,QAAtB,GAAiCmC,eAAjC;AACA,SAASA,eAAT,CAA0BvC,KAA1B,EAAiCa,SAAjC,EAA4CX,IAA5C,EAAkD;AAChDA,SAAOA,QAAQ,EAAf;AACA,MAAMK,WAAWf,KAAKO,GAAL,CAASK,QAAT,CAAkBJ,KAAlB,EAAyBa,SAAzB,EAAoCX,IAApC,CAAjB;AACA,MAAIK,YAAYL,KAAKM,OAAL,KAAiB,KAAjC,EAAwC;AACtC,QAAMY,SAASxB,SAAf;AACAwB,WAAOK,KAAP,CAAalB,QAAb,EAAuB;AAAA,aAAMa,OAAOM,GAAP,EAAN;AAAA,KAAvB;AACA,WAAON,MAAP;AACD,GAJD,MAIO;AACL,QAAIA,UAASzB,KAAK0C,UAAL,CAAgBrC,KAAhB,EAAuBa,SAAvB,EAAkCX,IAAlC,CAAb;AACA,QAAIA,KAAKM,OAAT,EAAkB;AAChB,UAAIqB,WAAW,EAAf;AACA,UAAIC,aAAa,CAAjB;AACA,UAAMF,aAAahC,QAAQ,UAACmC,CAAD,EAAIC,EAAJ,EAAQR,EAAR,EAAe;AACxCK,oBAAYA,SAASI,IAAT,CAAcF,CAAd,CAAZ;AACAD,sBAAcC,EAAEG,MAAhB;AACAV,WAAG,IAAH,EAASO,CAAT,EAAYC,EAAZ;AACD,OAJkB,EAIhB,cAAM;AACPH,oBAAYrC,KAAK0B,GAAL,CAASd,QAAT,CACVJ,KADU,EAEVa,SAFU,EAGVsB,OAAOC,MAAP,CAAcP,QAAd,EAAwBC,UAAxB,CAHU,EAIV5B,IAJU,CAAZ;AAMAsB;AACD,OAZkB,CAAnB;AAaAJ,gBAAS1B,SAAS0B,OAAT,EAAiBQ,UAAjB,CAAT;AACD;AACD,WAAOR,OAAP;AACD;AACF;;AAEDvB,OAAOC,OAAP,CAAe0C,IAAf,GAAsBA,IAAtB;AACA,SAASA,IAAT,CAAexC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAC/BA,SAAOA,QAAQ,EAAf;AACA,MAAMK,WAAWf,KAAKO,GAAL,CAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,CAAjB;AACA,MAAIK,YAAYL,KAAKM,OAAL,KAAiB,KAAjC,EAAwC;AACtC,WAAOpB,GAAGqB,OAAH,CAAWF,SAASI,KAApB,CAAP;AACD,GAFD,MAEO;AACL,WAAOpB,MAAMwB,IAAN,CAAWf,KAAX,EAAkBC,GAAlB,CAAP;AACD;AACF;;AAEDJ,OAAOC,OAAP,CAAe2C,UAAf,GAA4B9C,KAAK8C,UAAjC;;AAEA5C,OAAOC,OAAP,CAAe4C,IAAf,GAAsB,SAASC,EAAT,CAAa3C,KAAb,EAAoBC,GAApB,EAAyB2C,IAAzB,EAA+B1C,IAA/B,EAAqC;AACzD,SAAOwC,KAAK,KAAL,EAAY1C,KAAZ,EAAmBC,GAAnB,EAAwB2C,IAAxB,EAA8B1C,IAA9B,CAAP;AACD,CAFD;AAGAL,OAAOC,OAAP,CAAe4C,IAAf,CAAoBtC,QAApB,GAA+B,SAASyC,QAAT,CAAmB7C,KAAnB,EAA0BM,MAA1B,EAAkCsC,IAAlC,EAAwC1C,IAAxC,EAA8C;AAC3E,SAAOwC,KAAK,IAAL,EAAW1C,KAAX,EAAkBM,MAAlB,EAA0BsC,IAA1B,EAAgC1C,IAAhC,CAAP;AACD,CAFD;AAGA,SAASwC,IAAT,CAAetC,QAAf,EAAyBJ,KAAzB,EAAgCC,GAAhC,EAAqC2C,IAArC,EAA2C1C,IAA3C,EAAiD;AAC/CA,SAAOA,QAAQ,EAAf;AACA,MAAIP,KAAK+C,IAAT,EAAe;AACb,WAAO,CACLtC,WAAWhB,GAAGqB,OAAH,CAAW,IAAX,CAAX,GAA8BlB,MAAMwB,IAAN,CAAWf,KAAX,EAAkBC,GAAlB,EAAuBC,IAAvB,CADzB,EAELc,IAFK,CAEA,iBAAS;AACd,UAAI,CAACL,KAAD,IAAU,CAACP,QAAf,EAAyB;AACvB,cAAM,IAAIb,MAAM0B,aAAV,CAAwBjB,KAAxB,EAA+BC,GAA/B,CAAN;AACD;AACD,aAAON,KAAK+C,IAAL,CACL1C,KADK,EACEI,WAAWH,GAAX,GAAiBU,MAAME,SADzB,EACoC+B,IADpC,EAC0C1C,IAD1C,EAELc,IAFK,CAEA;AAAA,eAAMZ,WAAWH,GAAX,GAAiB;AAC5BS,oBAAUC,MAAMD,QADY;AAE5BI,gBAAMH,MAAMG,IAFgB;AAG5BD,qBAAWF,MAAME;AAHW,SAAvB;AAAA,OAFA,CAAP;AAOD,KAbM,CAAP;AAcD,GAfD,MAeO;AACL,WAAOV,QAAQC,QAAR,EAAkBJ,KAAlB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCc,IAApC,CAAyC,eAAO;AACrD,aAAO1B,GAAGwD,cAAH,CAAkBF,IAAlB,EAAwBxC,WAAWe,GAAX,GAAiBA,IAAIP,IAA7C,EACNI,IADM,CACD;AAAA,eAAMZ,WAAWH,GAAX,GAAiB;AAC3BS,oBAAUS,IAAIT,QADa;AAE3BI,gBAAMK,IAAIL,IAFiB;AAG3BD,qBAAWM,IAAIN;AAHY,SAAvB;AAAA,OADC,CAAP;AAMD,KAPM,CAAP;AAQD;AACF","file":"get.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst fs = require('fs')\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst pipe = require('mississippi').pipe\nconst pipeline = require('mississippi').pipeline\nconst read = require('./lib/content/read')\nconst through = require('mississippi').through\n\nmodule.exports = function get (cache, key, opts) {\n  return getData(false, cache, key, opts)\n}\nmodule.exports.byDigest = function getByDigest (cache, digest, opts) {\n  return getData(true, cache, digest, opts)\n}\nfunction getData (byDigest, cache, key, opts) {\n  opts = opts || {}\n  const memoized = (\n    byDigest\n    ? memo.get.byDigest(cache, key, opts)\n    : memo.get(cache, key, opts)\n  )\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(byDigest ? memoized : {\n      metadata: memoized.entry.metadata,\n      data: memoized.data,\n      integrity: memoized.entry.integrity,\n      size: memoized.entry.size\n    })\n  }\n  return (\n    byDigest ? BB.resolve(null) : index.find(cache, key, opts)\n  ).then(entry => {\n    if (!entry && !byDigest) {\n      throw new index.NotFoundError(cache, key)\n    }\n    return read(cache, byDigest ? key : entry.integrity, {\n      integrity: opts.integrity,\n      size: opts.size\n    }).then(data => byDigest ? data : {\n      metadata: entry.metadata,\n      data: data,\n      size: entry.size,\n      integrity: entry.integrity\n    }).then(res => {\n      if (opts.memoize && byDigest) {\n        memo.put.byDigest(cache, key, res, opts)\n      } else if (opts.memoize) {\n        memo.put(cache, entry, res.data, opts)\n      }\n      return res\n    })\n  })\n}\n\nmodule.exports.stream = getStream\nfunction getStream (cache, key, opts) {\n  opts = opts || {}\n  let stream = through()\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(memoized.entry.metadata)\n      ev === 'integrity' && cb(memoized.entry.integrity)\n      ev === 'size' && cb(memoized.entry.size)\n    })\n    stream.write(memoized.data, () => stream.end())\n    return stream\n  }\n  index.find(cache, key).then(entry => {\n    if (!entry) {\n      return stream.emit(\n        'error', new index.NotFoundError(cache, key)\n      )\n    }\n    let memoStream\n    if (opts.memoize) {\n      let memoData = []\n      let memoLength = 0\n      memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c)\n        memoLength += c.length\n        cb(null, c, en)\n      }, cb => {\n        memoData && memo.put(cache, entry, Buffer.concat(memoData, memoLength), opts)\n        cb()\n      })\n    } else {\n      memoStream = through()\n    }\n    opts.size = opts.size == null ? entry.size : opts.size\n    stream.emit('metadata', entry.metadata)\n    stream.emit('integrity', entry.integrity)\n    stream.emit('size', entry.size)\n    stream.on('newListener', function (ev, cb) {\n      ev === 'metadata' && cb(entry.metadata)\n      ev === 'integrity' && cb(entry.integrity)\n      ev === 'size' && cb(entry.size)\n    })\n    pipe(\n      read.readStream(cache, entry.integrity, opts),\n      memoStream,\n      stream\n    )\n  }, err => stream.emit('error', err))\n  return stream\n}\n\nmodule.exports.stream.byDigest = getStreamDigest\nfunction getStreamDigest (cache, integrity, opts) {\n  opts = opts || {}\n  const memoized = memo.get.byDigest(cache, integrity, opts)\n  if (memoized && opts.memoize !== false) {\n    const stream = through()\n    stream.write(memoized, () => stream.end())\n    return stream\n  } else {\n    let stream = read.readStream(cache, integrity, opts)\n    if (opts.memoize) {\n      let memoData = []\n      let memoLength = 0\n      const memoStream = through((c, en, cb) => {\n        memoData && memoData.push(c)\n        memoLength += c.length\n        cb(null, c, en)\n      }, cb => {\n        memoData && memo.put.byDigest(\n          cache,\n          integrity,\n          Buffer.concat(memoData, memoLength),\n          opts\n        )\n        cb()\n      })\n      stream = pipeline(stream, memoStream)\n    }\n    return stream\n  }\n}\n\nmodule.exports.info = info\nfunction info (cache, key, opts) {\n  opts = opts || {}\n  const memoized = memo.get(cache, key, opts)\n  if (memoized && opts.memoize !== false) {\n    return BB.resolve(memoized.entry)\n  } else {\n    return index.find(cache, key)\n  }\n}\n\nmodule.exports.hasContent = read.hasContent\n\nmodule.exports.copy = function cp (cache, key, dest, opts) {\n  return copy(false, cache, key, dest, opts)\n}\nmodule.exports.copy.byDigest = function cpDigest (cache, digest, dest, opts) {\n  return copy(true, cache, digest, dest, opts)\n}\nfunction copy (byDigest, cache, key, dest, opts) {\n  opts = opts || {}\n  if (read.copy) {\n    return (\n      byDigest ? BB.resolve(null) : index.find(cache, key, opts)\n    ).then(entry => {\n      if (!entry && !byDigest) {\n        throw new index.NotFoundError(cache, key)\n      }\n      return read.copy(\n        cache, byDigest ? key : entry.integrity, dest, opts\n      ).then(() => byDigest ? key : {\n        metadata: entry.metadata,\n        size: entry.size,\n        integrity: entry.integrity\n      })\n    })\n  } else {\n    return getData(byDigest, cache, key, opts).then(res => {\n      return fs.writeFileAsync(dest, byDigest ? res : res.data)\n      .then(() => byDigest ? key : {\n        metadata: res.metadata,\n        size: res.size,\n        integrity: res.integrity\n      })\n    })\n  }\n}\n"]}