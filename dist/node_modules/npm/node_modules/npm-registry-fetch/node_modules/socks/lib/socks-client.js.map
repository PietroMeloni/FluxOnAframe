{"version":3,"sources":["../../../../../../../../node_modules/npm/node_modules/npm-registry-fetch/node_modules/socks/lib/socks-client.js"],"names":["net","require","ip","SmartBuffer","COMMAND","Connect","Bind","Associate","SOCKS4_RESPONSE","Granted","Failed","Rejected","RejectedIdent","SOCKS5_AUTH","NoAuth","GSSApi","UserPass","SOCKS5_RESPONSE","Failure","NotAllowed","NetworkUnreachable","HostUnreachable","ConnectionRefused","TTLExpired","CommandNotSupported","AddressNotSupported","exports","createConnection","options","callback","socket","Socket","finished","buff","timeout","proxy","command","commandFromString","userid","auth","authentication","username","password","onTimeout","finish","Error","setTimeout","once","err","type","negotiateSocks4","negotiateSocks5","connect","port","ipaddress","writeUInt8","writeUInt16BE","target","isIPv4","host","writeBuffer","toBuffer","writeStringNT","receivedResponse","write","data","pause","length","clear","skip","info","readUInt16BE","readUInt32BE","fromLong","handshake","sendRequest","sendAuthentication","authinfo","Buffer","byteLength","writeString","authenticationResponse","isIPv6","addrtype","readUInt8","len","readString","readBuffer","ex","destroy","removeAllListeners","str","result","createUDPFrame","frame","writeUInt32BE","toLong"],"mappings":"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","file":"socks-client.js","sourcesContent":["var net = require('net');\nvar ip = require('ip');\nvar SmartBuffer = require('smart-buffer');\n\n(function () {\n\n    var COMMAND = {\n        Connect: 0x01,\n        Bind: 0x02,\n        Associate: 0x03\n    };\n\n    var SOCKS4_RESPONSE = {\n        Granted: 0x5A,\n        Failed: 0x5B,\n        Rejected: 0x5C,\n        RejectedIdent: 0x5D\n    };\n\n    var SOCKS5_AUTH = {\n        NoAuth: 0x00,\n        GSSApi: 0x01,\n        UserPass: 0x02\n    };\n\n    var SOCKS5_RESPONSE = {\n        Granted: 0x00,\n        Failure: 0x01,\n        NotAllowed: 0x02,\n        NetworkUnreachable: 0x03,\n        HostUnreachable: 0x04,\n        ConnectionRefused: 0x05,\n        TTLExpired: 0x06,\n        CommandNotSupported: 0x07,\n        AddressNotSupported: 0x08\n    };\n\n\n    exports.createConnection = function (options, callback) {\n        var socket = new net.Socket(), finished = false, buff = new SmartBuffer();\n\n        // Defaults\n        options.timeout = options.timeout || 10000;\n        options.proxy.command = commandFromString(options.proxy.command);\n        options.proxy.userid = options.proxy.userid || \"\";\n\n        var auth = options.proxy.authentication || {};\n        auth.username = auth.username || \"\";\n        auth.password = auth.password || \"\";\n\n        options.proxy.authentication = auth;\n\n        // Connect & negotiation timeout\n        function onTimeout() {\n            finish(new Error(\"Connection Timed Out\"), socket, null, callback);\n        }\n        socket.setTimeout(options.timeout, onTimeout);\n\n        // Socket events\n        socket.once('close', function () {\n            finish(new Error(\"Socket Closed\"), socket, null, callback);\n        });\n\n        socket.once('error', function (err) {\n        });\n\n        socket.once('connect', function () {\n            if (options.proxy.type === 4) {\n                negotiateSocks4(options, socket, callback);\n            } else if (options.proxy.type === 5) {\n                negotiateSocks5(options, socket, callback);\n            } else {\n                throw new Error(\"Please specify a proxy type in options.proxy.type\");\n            }\n        });\n\n        socket.connect(options.proxy.port, options.proxy.ipaddress);\n\n\n        // 4/4a  (connect, bind) - Supports domains & ipaddress\n        function negotiateSocks4(options, socket, callback) {\n            buff.writeUInt8(0x04);\n            buff.writeUInt8(options.proxy.command);\n            buff.writeUInt16BE(options.target.port);\n\n            // ipv4 or domain?\n            if (net.isIPv4(options.target.host)) {\n                buff.writeBuffer(ip.toBuffer(options.target.host));\n                buff.writeStringNT(options.proxy.userid);\n            } else {\n                buff.writeUInt8(0x00);\n                buff.writeUInt8(0x00);\n                buff.writeUInt8(0x00);\n                buff.writeUInt8(0x01);\n                buff.writeStringNT(options.proxy.userid);\n                buff.writeStringNT(options.target.host);\n            }\n\n            socket.once('data', receivedResponse);\n            socket.write(buff.toBuffer());\n\n            function receivedResponse(data) {\n                socket.pause();\n                if (data.length === 8 && data[1] === SOCKS4_RESPONSE.Granted) {\n\n                    if (options.proxy.command === COMMAND.Bind) {\n                        buff.clear();\n                        buff.writeBuffer(data);\n                        buff.skip(2);\n\n                        var info = {\n                            port: buff.readUInt16BE(),\n                            host: buff.readUInt32BE()\n                        };\n\n                        if (info.host === 0) {\n                            info.host = options.proxy.ipaddress;\n                        } else {\n                            info.host = ip.fromLong(info.host);\n                        }\n\n                        finish(null, socket, info, callback);\n                    } else {\n                        finish(null, socket, null, callback);\n                    }\n\n                } else {\n                    finish(new Error(\"Rejected (\" + data[1] + \")\"), socket, null, callback);\n                }\n            }\n        }\n\n        // Socks 5 (connect, bind, associate) - Supports domains and ipv4, ipv6.\n        function negotiateSocks5(options, socket, callback) {\n            buff.writeUInt8(0x05);\n            buff.writeUInt8(2);\n            buff.writeUInt8(SOCKS5_AUTH.NoAuth);\n            buff.writeUInt8(SOCKS5_AUTH.UserPass);\n\n            socket.once('data', handshake);\n            socket.write(buff.toBuffer());\n\n            function handshake(data) {\n                if (data.length !== 2) {\n                    finish(new Error(\"Negotiation Error\"), socket, null, callback);\n                } else if (data[0] !== 0x05) {\n                    finish(new Error(\"Negotiation Error (invalid version)\"), socket, null, callback);\n                } else if (data[1] === 0xFF) {\n                    finish(new Error(\"Negotiation Error (unacceptable authentication)\"), socket, null, callback);\n                } else {\n                    if (data[1] === SOCKS5_AUTH.NoAuth) {\n                        sendRequest();\n                    } else if (data[1] === SOCKS5_AUTH.UserPass) {\n                        sendAuthentication(options.proxy.authentication);\n                    } else {\n                        finish(new Error(\"Negotiation Error (unknown authentication type)\"), socket, null, callback);\n                    }\n                }\n            }\n\n            function sendAuthentication(authinfo) {\n                buff.clear();\n                buff.writeUInt8(0x01);\n                buff.writeUInt8(Buffer.byteLength(authinfo.username));\n                buff.writeString(authinfo.username);\n                buff.writeUInt8(Buffer.byteLength(authinfo.password));\n                buff.writeString(authinfo.password);\n\n                socket.once('data', authenticationResponse);\n                socket.write(buff.toBuffer());\n\n                function authenticationResponse(data) {\n                    if (data.length === 2 && data[1] === 0x00) {\n                        sendRequest();\n                    } else {\n                        finish(new Error(\"Negotiation Error (authentication failed)\"), socket, null, callback);\n                    }\n                }\n            }\n\n            function sendRequest() {\n                buff.clear();\n                buff.writeUInt8(0x05);\n                buff.writeUInt8(options.proxy.command);\n                buff.writeUInt8(0x00);\n\n                // ipv4, ipv6, domain?\n                if (net.isIPv4(options.target.host)) {\n                    buff.writeUInt8(0x01);\n                    buff.writeBuffer(ip.toBuffer(options.target.host));\n                } else if (net.isIPv6(options.target.host)) {\n                    buff.writeUInt8(0x04);\n                    buff.writeBuffer(ip.toBuffer(options.target.host));\n                } else {\n                    buff.writeUInt8(0x03);\n                    buff.writeUInt8(options.target.host.length);\n                    buff.writeString(options.target.host);\n                }\n                buff.writeUInt16BE(options.target.port);\n\n                socket.once('data', receivedResponse);\n                socket.write(buff.toBuffer());\n            }\n\n            function receivedResponse(data) {\n                socket.pause();\n                if (data.length < 4) {\n                    finish(new Error(\"Negotiation Error\"), socket, null, callback);\n                } else if (data[0] === 0x05 && data[1] === SOCKS5_RESPONSE.Granted) {\n                    if (options.proxy.command === COMMAND.Connect) {\n                        finish(null, socket, null, callback);\n                    } else if (options.proxy.command === COMMAND.Bind || options.proxy.command === COMMAND.Associate) {\n                        buff.clear();\n                        buff.writeBuffer(data);\n                        buff.skip(3);\n\n                        var info = {};\n                        var addrtype = buff.readUInt8();\n\n                        try {\n\n                            if (addrtype === 0x01) {\n                                info.host = buff.readUInt32BE();\n                                if (info.host === 0)\n                                    info.host = options.proxy.ipaddress;\n                                else\n                                    info.host = ip.fromLong(info.host);\n                            } else if (addrtype === 0x03) {\n                                var len = buff.readUInt8();\n                                info.host = buff.readString(len);\n                            } else if (addrtype === 0x04) {\n                                info.host = buff.readBuffer(16);\n                            } else {\n                                finish(new Error(\"Negotiation Error (invalid host address)\"), socket, null, callback);\n                            }\n                            info.port = buff.readUInt16BE();\n\n                            finish(null, socket, info, callback);\n                        } catch (ex) {\n                            finish(new Error(\"Negotiation Error (missing data)\"), socket, null, callback);\n                        }\n                    }\n                } else {\n                    finish(new Error(\"Negotiation Error (\" + data[1] + \")\"), socket, null, callback);\n                }\n            }\n        }\n\n        function finish(err, socket, info, callback) {\n            socket.setTimeout(0, onTimeout);\n            if (!finished) {\n                finished = true;\n\n                if (buff instanceof SmartBuffer)\n                    buff.destroy();\n\n                if (err && socket instanceof net.Socket) {\n                    socket.removeAllListeners('close');\n                    socket.removeAllListeners('timeout');\n                    socket.removeAllListeners('data');\n                    socket.destroy();\n                    socket = null;\n                }\n\n                callback(err, socket, info);\n            }\n        }\n\n        function commandFromString(str) {\n            var result = COMMAND.Connect;\n\n            if (str === \"connect\") {\n                result = COMMAND.Connect;\n            } else if (str === 'associate') {\n                result = COMMAND.Associate;\n            } else if (str === 'bind') {\n                result = COMMAND.Bind;\n            }\n\n            return result;\n        }\n    };\n\n\n    exports.createUDPFrame = function (target, data, frame) {\n        var buff = new SmartBuffer();\n        buff.writeUInt16BE(0);\n        buff.writeUInt8(frame || 0x00);\n\n        if (net.isIPv4(target.host)) {\n            buff.writeUInt8(0x01);\n            buff.writeUInt32BE(ip.toLong(target.host));\n        } else if (net.isIPv6(target.host)) {\n            buff.writeUInt8(0x04);\n            buff.writeBuffer(ip.toBuffer(target.host));\n        } else {\n            buff.writeUInt8(0x03);\n            buff.writeUInt8(Buffer.byteLength(target.host));\n            buff.writeString(target.host);\n        }\n\n        buff.writeUInt16BE(target.port);\n        buff.writeBuffer(data);\n        return buff.toBuffer();\n    };\n})();\n"]}