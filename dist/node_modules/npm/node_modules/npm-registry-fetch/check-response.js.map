{"version":3,"sources":["../../../../../node_modules/npm/node_modules/npm-registry-fetch/check-response.js"],"names":["config","require","errors","LRU","module","exports","checkResponse","method","res","registry","startTime","opts","headers","has","get","notice","checkWarnings","status","logRequest","checkErrors","body","on","elapsedTime","Date","now","attempt","attemptStr","cacheStr","http","toUpperCase","url","WARNING_REGEXP","BAD_HOSTS","max","warnings","raw","forEach","match","w","code","host","message","date","set","warn","buffer","catch","then","JSON","parse","toString","e","auth","split","map","s","toLowerCase","indexOf","HttpErrorAuthIPAddress","spec","HttpErrorAuthOTP","HttpErrorAuthUnknown","HttpErrorGeneral"],"mappings":"AAAA;;AAEA,IAAMA,SAASC,QAAQ,aAAR,CAAf;AACA,IAAMC,SAASD,QAAQ,aAAR,CAAf;AACA,IAAME,MAAMF,QAAQ,WAAR,CAAZ;;AAEAG,OAAOC,OAAP,GAAiBC,aAAjB;AACA,SAASA,aAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,QAArC,EAA+CC,SAA/C,EAA0DC,IAA1D,EAAgE;AAC9DA,SAAOX,OAAOW,IAAP,CAAP;AACA,MAAIH,IAAII,OAAJ,CAAYC,GAAZ,CAAgB,YAAhB,KAAiC,CAACL,IAAII,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,CAAtC,EAAwE;AACtEF,SAAKG,GAAL,CAAS,KAAT,EAAgBC,MAAhB,CAAuB,EAAvB,EAA2BP,IAAII,OAAJ,CAAYE,GAAZ,CAAgB,YAAhB,CAA3B;AACD;AACDE,gBAAcR,GAAd,EAAmBC,QAAnB,EAA6BE,IAA7B;AACA,MAAIH,IAAIS,MAAJ,IAAc,GAAlB,EAAuB;AACrBC,eAAWX,MAAX,EAAmBC,GAAnB,EAAwBE,SAAxB,EAAmCC,IAAnC;AACA,WAAOQ,YAAYZ,MAAZ,EAAoBC,GAApB,EAAyBE,SAAzB,EAAoCC,IAApC,CAAP;AACD,GAHD,MAGO;AACLH,QAAIY,IAAJ,CAASC,EAAT,CAAY,KAAZ,EAAmB;AAAA,aAAMH,WAAWX,MAAX,EAAmBC,GAAnB,EAAwBE,SAAxB,EAAmCC,IAAnC,CAAN;AAAA,KAAnB;AACA,WAAOH,GAAP;AACD;AACF;;AAED,SAASU,UAAT,CAAqBX,MAArB,EAA6BC,GAA7B,EAAkCE,SAAlC,EAA6CC,IAA7C,EAAmD;AACjD,MAAMW,cAAcC,KAAKC,GAAL,KAAad,SAAjC;AACA,MAAMe,UAAUjB,IAAII,OAAJ,CAAYE,GAAZ,CAAgB,kBAAhB,CAAhB;AACA,MAAMY,aAAaD,WAAWA,UAAU,CAArB,kBAAsCA,OAAtC,GAAkD,EAArE;AACA,MAAME,WAAWnB,IAAII,OAAJ,CAAYE,GAAZ,CAAgB,eAAhB,IAAmC,eAAnC,GAAqD,EAAtE;AACAH,OAAKG,GAAL,CAAS,KAAT,EAAgBc,IAAhB,CACE,OADF,EAEKrB,OAAOsB,WAAP,EAFL,SAE6BrB,IAAIS,MAFjC,SAE2CT,IAAIsB,GAF/C,SAEsDR,WAFtD,UAEsEI,UAFtE,GAEmFC,QAFnF;AAID;;AAED,IAAMI,iBAAiB,0CAAvB;AACA,IAAMC,YAAY,IAAI7B,GAAJ,CAAQ,EAAE8B,KAAK,EAAP,EAAR,CAAlB;;AAEA,SAASjB,aAAT,CAAwBR,GAAxB,EAA6BC,QAA7B,EAAuCE,IAAvC,EAA6C;AAC3C,MAAIH,IAAII,OAAJ,CAAYC,GAAZ,CAAgB,SAAhB,KAA8B,CAACmB,UAAUnB,GAAV,CAAcJ,QAAd,CAAnC,EAA4D;AAC1D,QAAMyB,WAAW,EAAjB;AACA1B,QAAII,OAAJ,CAAYuB,GAAZ,GAAkB,SAAlB,EAA6BC,OAA7B,CAAqC,aAAK;AACxC,UAAMC,QAAQC,EAAED,KAAF,CAAQN,cAAR,CAAd;AACA,UAAIM,KAAJ,EAAW;AACTH,iBAASG,MAAM,CAAN,CAAT,IAAqB;AACnBE,gBAAMF,MAAM,CAAN,CADa;AAEnBG,gBAAMH,MAAM,CAAN,CAFa;AAGnBI,mBAASJ,MAAM,CAAN,CAHU;AAInBK,gBAAM,IAAInB,IAAJ,CAASc,MAAM,CAAN,CAAT;AAJa,SAArB;AAMD;AACF,KAVD;AAWAL,cAAUW,GAAV,CAAclC,QAAd,EAAwB,IAAxB;AACA,QAAIyB,SAAS,KAAT,CAAJ,EAAqB;AACnB,UAAIA,SAAS,KAAT,EAAgBO,OAAhB,CAAwBJ,KAAxB,CAA8B,WAA9B,CAAJ,EAAgD;AAC9C1B,aAAKG,GAAL,CAAS,KAAT,EAAgB8B,IAAhB,CAAqB,UAArB,6BAA0DnC,QAA1D;AACD,OAFD,MAEO;AACLE,aAAKG,GAAL,CAAS,KAAT,EAAgB8B,IAAhB,CAAqB,UAArB,8BAA2DnC,QAA3D,UAAwEyB,SAAS,KAAT,EAAgBO,OAAxF;AACD;AACF;AACD,QAAIP,SAAS,KAAT,CAAJ,EAAqB;AACnB;AACAvB,WAAKG,GAAL,CAAS,KAAT,EAAgB8B,IAAhB,CACE,UADF,6BAE2BnC,QAF3B;AAID;AACF;AACF;;AAED,SAASU,WAAT,CAAsBZ,MAAtB,EAA8BC,GAA9B,EAAmCE,SAAnC,EAA8CC,IAA9C,EAAoD;AAClD,SAAOH,IAAIqC,MAAJ,GACJC,KADI,CACE;AAAA,WAAM,IAAN;AAAA,GADF,EAEJC,IAFI,CAEC,gBAAQ;AACZ,QAAI;AACF3B,aAAO4B,KAAKC,KAAL,CAAW7B,KAAK8B,QAAL,CAAc,MAAd,CAAX,CAAP;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;AACd,QAAI3C,IAAIS,MAAJ,KAAe,GAAf,IAAsBT,IAAII,OAAJ,CAAYE,GAAZ,CAAgB,kBAAhB,CAA1B,EAA+D;AAC7D,UAAMsC,OAAO5C,IAAII,OAAJ,CAAYE,GAAZ,CAAgB,kBAAhB,EACVuC,KADU,CACJ,MADI,EAEVC,GAFU,CAEN;AAAA,eAAKC,EAAEC,WAAF,EAAL;AAAA,OAFM,CAAb;AAGA,UAAIJ,KAAKK,OAAL,CAAa,WAAb,MAA8B,CAAC,CAAnC,EAAsC;AACpC,cAAM,IAAIvD,OAAOwD,sBAAX,CACJnD,MADI,EACIC,GADJ,EACSY,IADT,EACeT,KAAKgD,IADpB,CAAN;AAGD,OAJD,MAIO,IAAIP,KAAKK,OAAL,CAAa,KAAb,MAAwB,CAAC,CAA7B,EAAgC;AACrC,cAAM,IAAIvD,OAAO0D,gBAAX,CACJrD,MADI,EACIC,GADJ,EACSY,IADT,EACeT,KAAKgD,IADpB,CAAN;AAGD,OAJM,MAIA;AACL,cAAM,IAAIzD,OAAO2D,oBAAX,CACJtD,MADI,EACIC,GADJ,EACSY,IADT,EACeT,KAAKgD,IADpB,CAAN;AAGD;AACF,KAjBD,MAiBO;AACL,YAAM,IAAIzD,OAAO4D,gBAAX,CACJvD,MADI,EACIC,GADJ,EACSY,IADT,EACeT,KAAKgD,IADpB,CAAN;AAGD;AACF,GA5BI,CAAP;AA6BD","file":"check-response.js","sourcesContent":["'use strict'\n\nconst config = require('./config.js')\nconst errors = require('./errors.js')\nconst LRU = require('lru-cache')\n\nmodule.exports = checkResponse\nfunction checkResponse (method, res, registry, startTime, opts) {\n  opts = config(opts)\n  if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) {\n    opts.get('log').notice('', res.headers.get('npm-notice'))\n  }\n  checkWarnings(res, registry, opts)\n  if (res.status >= 400) {\n    logRequest(method, res, startTime, opts)\n    return checkErrors(method, res, startTime, opts)\n  } else {\n    res.body.on('end', () => logRequest(method, res, startTime, opts))\n    return res\n  }\n}\n\nfunction logRequest (method, res, startTime, opts) {\n  const elapsedTime = Date.now() - startTime\n  const attempt = res.headers.get('x-fetch-attempts')\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n  const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\n  opts.get('log').http(\n    'fetch',\n    `${method.toUpperCase()} ${res.status} ${res.url} ${elapsedTime}ms${attemptStr}${cacheStr}`\n  )\n}\n\nconst WARNING_REGEXP = /^\\s*(\\d{3})\\s+(\\S+)\\s+\"(.*)\"\\s+\"([^\"]+)\"/\nconst BAD_HOSTS = new LRU({ max: 50 })\n\nfunction checkWarnings (res, registry, opts) {\n  if (res.headers.has('warning') && !BAD_HOSTS.has(registry)) {\n    const warnings = {}\n    res.headers.raw()['warning'].forEach(w => {\n      const match = w.match(WARNING_REGEXP)\n      if (match) {\n        warnings[match[1]] = {\n          code: match[1],\n          host: match[2],\n          message: match[3],\n          date: new Date(match[4])\n        }\n      }\n    })\n    BAD_HOSTS.set(registry, true)\n    if (warnings['199']) {\n      if (warnings['199'].message.match(/ENOTFOUND/)) {\n        opts.get('log').warn('registry', `Using stale data from ${registry} because the host is inaccessible -- are you offline?`)\n      } else {\n        opts.get('log').warn('registry', `Unexpected warning for ${registry}: ${warnings['199'].message}`)\n      }\n    }\n    if (warnings['111']) {\n      // 111 Revalidation failed -- we're using stale data\n      opts.get('log').warn(\n        'registry',\n        `Using stale data from ${registry} due to a request error during revalidation.`\n      )\n    }\n  }\n}\n\nfunction checkErrors (method, res, startTime, opts) {\n  return res.buffer()\n    .catch(() => null)\n    .then(body => {\n      try {\n        body = JSON.parse(body.toString('utf8'))\n      } catch (e) {}\n      if (res.status === 401 && res.headers.get('www-authenticate')) {\n        const auth = res.headers.get('www-authenticate')\n          .split(/,\\s*/)\n          .map(s => s.toLowerCase())\n        if (auth.indexOf('ipaddress') !== -1) {\n          throw new errors.HttpErrorAuthIPAddress(\n            method, res, body, opts.spec\n          )\n        } else if (auth.indexOf('otp') !== -1) {\n          throw new errors.HttpErrorAuthOTP(\n            method, res, body, opts.spec\n          )\n        } else {\n          throw new errors.HttpErrorAuthUnknown(\n            method, res, body, opts.spec\n          )\n        }\n      } else {\n        throw new errors.HttpErrorGeneral(\n          method, res, body, opts.spec\n        )\n      }\n    })\n}\n"]}