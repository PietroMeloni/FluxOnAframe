{"version":3,"sources":["../../../../../node_modules/npm/node_modules/make-dir/index.js"],"names":["fs","require","path","pify","defaults","mode","process","umask","checkPath","platform","pathHasInvalidWinCharacters","test","pth","replace","parse","root","err","Error","code","module","exports","input","opts","Promise","resolve","then","Object","assign","mkdir","stat","make","catch","message","includes","dirname","stats","isDirectory","reject","sync","mkdirSync","statSync","_"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst pify = require('pify');\n\nconst defaults = {\n\tmode: 0o777 & (~process.umask()),\n\tfs\n};\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n\tif (process.platform === 'win32') {\n\t\tconst pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n\t\tif (pathHasInvalidWinCharacters) {\n\t\t\tconst err = new Error(`Path contains invalid characters: ${pth}`);\n\t\t\terr.code = 'EINVAL';\n\t\t\tthrow err;\n\t\t}\n\t}\n};\n\nmodule.exports = (input, opts) => Promise.resolve().then(() => {\n\tcheckPath(input);\n\topts = Object.assign({}, defaults, opts);\n\n\tconst mkdir = pify(opts.fs.mkdir);\n\tconst stat = pify(opts.fs.stat);\n\n\tconst make = pth => {\n\t\treturn mkdir(pth, opts.mode)\n\t\t\t.then(() => pth)\n\t\t\t.catch(err => {\n\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\tif (err.message.includes('null bytes') || path.dirname(pth) === pth) {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn make(path.dirname(pth)).then(() => make(pth));\n\t\t\t\t}\n\n\t\t\t\treturn stat(pth)\n\t\t\t\t\t.then(stats => stats.isDirectory() ? pth : Promise.reject())\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn make(path.resolve(input));\n});\n\nmodule.exports.sync = (input, opts) => {\n\tcheckPath(input);\n\topts = Object.assign({}, defaults, opts);\n\n\tconst make = pth => {\n\t\ttry {\n\t\t\topts.fs.mkdirSync(pth, opts.mode);\n\t\t} catch (err) {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\tif (err.message.includes('null bytes') || path.dirname(pth) === pth) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\n\t\t\t\tmake(path.dirname(pth));\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!opts.fs.statSync(pth).isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\treturn pth;\n\t};\n\n\treturn make(path.resolve(input));\n};\n"]}