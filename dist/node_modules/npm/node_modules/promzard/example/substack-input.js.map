{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/promzard/example/substack-input.js"],"names":["module","exports","basename","replace","cb","fs","require","value","src","readFileSync","split","filter","line","test","trim","c","toLowerCase","e","prompt","path","exists","ex","bin","s"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB;AACb,YAASC,SAASC,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CADI;AAEb,eAAY,OAFC;AAGb,mBAAiB,UAAUC,EAAV,EAAc;AAC3B,YAAIC,KAAKC,QAAQ,IAAR,CAAT;AACA,YAAIC,KAAJ;AACA,YAAI;AACA,gBAAIC,MAAMH,GAAGI,YAAH,CAAgB,iBAAhB,EAAmC,MAAnC,CAAV;AACAF,oBAAQC,IAAIE,KAAJ,CAAU,IAAV,EAAgBC,MAAhB,CAAuB,UAAUC,IAAV,EAAgB;AAC3C,uBAAO,OAAMC,IAAN,CAAWD,IAAX,KACAA,KAAKE,IAAL,OAAgBZ,SAASC,OAAT,CAAiB,QAAjB,EAA2B,EAA3B;AADvB;AAGH,aAJO,EAIL,CAJK,EAKHW,IALG,GAMHX,OANG,CAMK,IANL,EAMW,UAAUY,CAAV,EAAa;AAAE,uBAAOA,EAAEC,WAAF,EAAP;AAAwB,aANlD,EAOHb,OAPG,CAOK,KAPL,EAOY,EAPZ,CAAR;AASH,SAXD,CAYA,OAAOc,CAAP,EAAU,CAAE;;AAEZ,eAAOC,OAAO,aAAP,EAAsBX,KAAtB,CAAP;AACH,KAlBe,EAHH;AAsBb,YAASW,OAAO,aAAP,EAAsB,UAAtB,CAtBI;AAuBb,WAAQ,aAAUd,EAAV,EAAc;AAClB,YAAIe,OAAOb,QAAQ,MAAR,CAAX;AACA,YAAID,KAAKC,QAAQ,IAAR,CAAT;AACA,YAAIc,SAASf,GAAGe,MAAH,IAAaD,KAAKC,MAA/B;AACAA,eAAO,YAAP,EAAqB,UAAUC,EAAV,EAAc;AAC/B,gBAAIC,GAAJ;AACA,gBAAID,EAAJ,EAAQ;AACJ,oBAAIC,MAAM,EAAV;AACAA,oBAAIpB,SAASC,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CAAJ,IAAsC,YAAtC;AACH;AACDC,eAAG,IAAH,EAASkB,GAAT;AACH,SAPD;AAQH,KAnCY;AAoCb,mBAAgB;AACZ,mBAAY,SADA;AAEZ,gBAAS;AAFG,KApCH;AAwCb,oBAAiB,EAxCJ;AAyCb,uBAAoB;AAChB,eAAQ;AADQ,KAzCP;AA4Cb,eAAY;AACR,gBAAS;AADD,KA5CC;AA+Cb,kBAAe;AACX,gBAAS,KADE;AAEX,eAAQ,+BAA+BpB,QAA/B,GAA0C;AAFvC,KA/CF;AAmDb,gBAAa,iCAAiCA,QAnDjC;AAoDb,gBAAagB,OAAO,UAAUK,CAAV,EAAa;AAAE,eAAOA,EAAEb,KAAF,CAAQ,KAAR,CAAP;AAAuB,KAA7C,CApDA;AAqDb,cAAW;AACP,gBAAS,gBADF;AAEP,iBAAU,mBAFH;AAGP,eAAQ;AAHD,KArDE;AA0Db,eAAY,KA1DC;AA2Db,cAAW,EAAE,QAAS,OAAX;AA3DE,CAAjB","file":"substack-input.js","sourcesContent":["module.exports = {\n    \"name\" : basename.replace(/^node-/, ''),\n    \"version\" : \"0.0.0\",\n    \"description\" : (function (cb) {\n        var fs = require('fs');\n        var value;\n        try {\n            var src = fs.readFileSync('README.markdown', 'utf8');\n            value = src.split('\\n').filter(function (line) {\n                return /\\s+/.test(line)\n                    && line.trim() !== basename.replace(/^node-/, '')\n                ;\n            })[0]\n                .trim()\n                .replace(/^./, function (c) { return c.toLowerCase() })\n                .replace(/\\.$/, '')\n            ;\n        }\n        catch (e) {}\n        \n        return prompt('description', value);\n    })(),\n    \"main\" : prompt('entry point', 'index.js'),\n    \"bin\" : function (cb) {\n        var path = require('path');\n        var fs = require('fs');\n        var exists = fs.exists || path.exists;\n        exists('bin/cmd.js', function (ex) {\n            var bin\n            if (ex) {\n                var bin = {}\n                bin[basename.replace(/^node-/, '')] = 'bin/cmd.js'\n            }\n            cb(null, bin);\n        });\n    },\n    \"directories\" : {\n        \"example\" : \"example\",\n        \"test\" : \"test\"\n    },\n    \"dependencies\" : {},\n    \"devDependencies\" : {\n        \"tap\" : \"~0.2.5\"\n    },\n    \"scripts\" : {\n        \"test\" : \"tap test/*.js\"\n    },\n    \"repository\" : {\n        \"type\" : \"git\",\n        \"url\" : \"git://github.com/substack/\" + basename + \".git\"\n    },\n    \"homepage\" : \"https://github.com/substack/\" + basename,\n    \"keywords\" : prompt(function (s) { return s.split(/\\s+/) }),\n    \"author\" : {\n        \"name\" : \"James Halliday\",\n        \"email\" : \"mail@substack.net\",\n        \"url\" : \"http://substack.net\"\n    },\n    \"license\" : \"MIT\",\n    \"engine\" : { \"node\" : \">=0.6\" }\n}\n"]}