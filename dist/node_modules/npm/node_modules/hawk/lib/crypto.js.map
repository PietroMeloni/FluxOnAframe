{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/hawk/lib/crypto.js"],"names":["Crypto","require","Url","Utils","internals","exports","headerVersion","algorithms","calculateMac","type","credentials","options","normalized","generateNormalizedString","hmac","createHmac","algorithm","key","update","digest","resource","url","parse","path","ts","nonce","method","toUpperCase","host","toLowerCase","port","hash","ext","replace","app","dlg","calculatePayloadHash","payload","contentType","initializePayloadHash","finalizePayloadHash","createHash","parseContentType","calculateTsMac","timestampMessage","localtimeOffsetMsec","now","nowSecs","tsm"],"mappings":"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","file":"crypto.js","sourcesContent":["// Load modules\r\n\r\nvar Crypto = require('crypto');\r\nvar Url = require('url');\r\nvar Utils = require('./utils');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// MAC normalization format version\r\n\r\nexports.headerVersion = '1';                        // Prevent comparison of mac values generated with different normalized string formats\r\n\r\n\r\n// Supported HMAC algorithms\r\n\r\nexports.algorithms = ['sha1', 'sha256'];\r\n\r\n\r\n// Calculate the request MAC\r\n\r\n/*\r\n    type: 'header',                                 // 'header', 'bewit', 'response'\r\n    credentials: {\r\n        key: 'aoijedoaijsdlaksjdl',\r\n        algorithm: 'sha256'                         // 'sha1', 'sha256'\r\n    },\r\n    options: {\r\n        method: 'GET',\r\n        resource: '/resource?a=1&b=2',\r\n        host: 'example.com',\r\n        port: 8080,\r\n        ts: 1357718381034,\r\n        nonce: 'd3d345f',\r\n        hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\r\n        ext: 'app-specific-data',\r\n        app: 'hf48hd83qwkj',                        // Application id (Oz)\r\n        dlg: 'd8djwekds9cj'                         // Delegated by application id (Oz), requires options.app\r\n    }\r\n*/\r\n\r\nexports.calculateMac = function (type, credentials, options) {\r\n\r\n    var normalized = exports.generateNormalizedString(type, options);\r\n\r\n    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);\r\n    var digest = hmac.digest('base64');\r\n    return digest;\r\n};\r\n\r\n\r\nexports.generateNormalizedString = function (type, options) {\r\n\r\n    var resource = options.resource || '';\r\n    if (resource &&\r\n        resource[0] !== '/') {\r\n\r\n        var url = Url.parse(resource, false);\r\n        resource = url.path;                        // Includes query\r\n    }\r\n\r\n    var normalized = 'hawk.' + exports.headerVersion + '.' + type + '\\n' +\r\n                     options.ts + '\\n' +\r\n                     options.nonce + '\\n' +\r\n                     (options.method || '').toUpperCase() + '\\n' +\r\n                     resource + '\\n' +\r\n                     options.host.toLowerCase() + '\\n' +\r\n                     options.port + '\\n' +\r\n                     (options.hash || '') + '\\n';\r\n\r\n    if (options.ext) {\r\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\r\n    }\r\n\r\n    normalized += '\\n';\r\n\r\n    if (options.app) {\r\n        normalized += options.app + '\\n' +\r\n                      (options.dlg || '') + '\\n';\r\n    }\r\n\r\n    return normalized;\r\n};\r\n\r\n\r\nexports.calculatePayloadHash = function (payload, algorithm, contentType) {\r\n\r\n    var hash = exports.initializePayloadHash(algorithm, contentType);\r\n    hash.update(payload || '');\r\n    return exports.finalizePayloadHash(hash);\r\n};\r\n\r\n\r\nexports.initializePayloadHash = function (algorithm, contentType) {\r\n\r\n    var hash = Crypto.createHash(algorithm);\r\n    hash.update('hawk.' + exports.headerVersion + '.payload\\n');\r\n    hash.update(Utils.parseContentType(contentType) + '\\n');\r\n    return hash;\r\n};\r\n\r\n\r\nexports.finalizePayloadHash = function (hash) {\r\n\r\n    hash.update('\\n');\r\n    return hash.digest('base64');\r\n};\r\n\r\n\r\nexports.calculateTsMac = function (ts, credentials) {\r\n\r\n    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);\r\n    hmac.update('hawk.' + exports.headerVersion + '.ts\\n' + ts + '\\n');\r\n    return hmac.digest('base64');\r\n};\r\n\r\n\r\nexports.timestampMessage = function (credentials, localtimeOffsetMsec) {\r\n\r\n    var now = Utils.nowSecs(localtimeOffsetMsec);\r\n    var tsm = exports.calculateTsMac(now, credentials);\r\n    return { ts: now, tsm: tsm };\r\n};\r\n"]}