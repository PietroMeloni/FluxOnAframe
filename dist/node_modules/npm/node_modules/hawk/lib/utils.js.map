{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/hawk/lib/utils.js"],"names":["Sntp","require","Boom","internals","exports","version","limits","maxMatchLength","hostHeaderRegex","parseHost","req","hostHeaderName","toLowerCase","hostHeader","headers","length","hostParts","match","name","port","connection","encrypted","parseContentType","header","split","trim","parseRequest","options","host","Error","request","method","url","authorization","contentType","now","localtimeOffsetMsec","nowSecs","Math","floor","authHeaderRegex","attributeRegex","parseAuthorizationHeader","keys","unauthorized","badRequest","headerParts","scheme","attributesString","attributes","errorMessage","verify","replace","$0","$1","$2","indexOf","hasOwnProperty","message"],"mappings":"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","file":"utils.js","sourcesContent":["// Load modules\r\n\r\nvar Sntp = require('sntp');\r\nvar Boom = require('boom');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\nexports.version = function () {\r\n\r\n    return require('../package.json').version;\r\n};\r\n\r\n\r\nexports.limits = {\r\n    maxMatchLength: 4096            // Limit the length of uris and headers to avoid a DoS attack on string matching\r\n};\r\n\r\n\r\n// Extract host and port from request\r\n\r\n//                                            $1                            $2\r\ninternals.hostHeaderRegex = /^(?:(?:\\r\\n)?\\s)*((?:[^:]+)|(?:\\[[^\\]]+\\]))(?::(\\d+))?(?:(?:\\r\\n)?\\s)*$/;              // (IPv4, hostname)|(IPv6)\r\n\r\n\r\nexports.parseHost = function (req, hostHeaderName) {\r\n\r\n    hostHeaderName = (hostHeaderName ? hostHeaderName.toLowerCase() : 'host');\r\n    var hostHeader = req.headers[hostHeaderName];\r\n    if (!hostHeader) {\r\n        return null;\r\n    }\r\n\r\n    if (hostHeader.length > exports.limits.maxMatchLength) {\r\n        return null;\r\n    }\r\n\r\n    var hostParts = hostHeader.match(internals.hostHeaderRegex);\r\n    if (!hostParts) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        name: hostParts[1],\r\n        port: (hostParts[2] ? hostParts[2] : (req.connection && req.connection.encrypted ? 443 : 80))\r\n    };\r\n};\r\n\r\n\r\n// Parse Content-Type header content\r\n\r\nexports.parseContentType = function (header) {\r\n\r\n    if (!header) {\r\n        return '';\r\n    }\r\n\r\n    return header.split(';')[0].trim().toLowerCase();\r\n};\r\n\r\n\r\n// Convert node's  to request configuration object\r\n\r\nexports.parseRequest = function (req, options) {\r\n\r\n    if (!req.headers) {\r\n        return req;\r\n    }\r\n\r\n    // Obtain host and port information\r\n\r\n    var host;\r\n    if (!options.host ||\r\n        !options.port) {\r\n\r\n        host = exports.parseHost(req, options.hostHeaderName);\r\n        if (!host) {\r\n            return new Error('Invalid Host header');\r\n        }\r\n    }\r\n\r\n    var request = {\r\n        method: req.method,\r\n        url: req.url,\r\n        host: options.host || host.name,\r\n        port: options.port || host.port,\r\n        authorization: req.headers.authorization,\r\n        contentType: req.headers['content-type'] || ''\r\n    };\r\n\r\n    return request;\r\n};\r\n\r\n\r\nexports.now = function (localtimeOffsetMsec) {\r\n\r\n    return Sntp.now() + (localtimeOffsetMsec || 0);\r\n};\r\n\r\n\r\nexports.nowSecs = function (localtimeOffsetMsec) {\r\n\r\n    return Math.floor(exports.now(localtimeOffsetMsec) / 1000);\r\n};\r\n\r\n\r\ninternals.authHeaderRegex = /^(\\w+)(?:\\s+(.*))?$/;                                      // Header: scheme[ something]\r\ninternals.attributeRegex = /^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/;   // !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\r\n\r\n\r\n// Parse Hawk HTTP Authorization header\r\n\r\nexports.parseAuthorizationHeader = function (header, keys) {\r\n\r\n    keys = keys || ['id', 'ts', 'nonce', 'hash', 'ext', 'mac', 'app', 'dlg'];\r\n\r\n    if (!header) {\r\n        return Boom.unauthorized(null, 'Hawk');\r\n    }\r\n\r\n    if (header.length > exports.limits.maxMatchLength) {\r\n        return Boom.badRequest('Header length too long');\r\n    }\r\n\r\n    var headerParts = header.match(internals.authHeaderRegex);\r\n    if (!headerParts) {\r\n        return Boom.badRequest('Invalid header syntax');\r\n    }\r\n\r\n    var scheme = headerParts[1];\r\n    if (scheme.toLowerCase() !== 'hawk') {\r\n        return Boom.unauthorized(null, 'Hawk');\r\n    }\r\n\r\n    var attributesString = headerParts[2];\r\n    if (!attributesString) {\r\n        return Boom.badRequest('Invalid header syntax');\r\n    }\r\n\r\n    var attributes = {};\r\n    var errorMessage = '';\r\n    var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\r\n\r\n        // Check valid attribute names\r\n\r\n        if (keys.indexOf($1) === -1) {\r\n            errorMessage = 'Unknown attribute: ' + $1;\r\n            return;\r\n        }\r\n\r\n        // Allowed attribute value characters\r\n\r\n        if ($2.match(internals.attributeRegex) === null) {\r\n            errorMessage = 'Bad attribute value: ' + $1;\r\n            return;\r\n        }\r\n\r\n        // Check for duplicates\r\n\r\n        if (attributes.hasOwnProperty($1)) {\r\n            errorMessage = 'Duplicate attribute: ' + $1;\r\n            return;\r\n        }\r\n\r\n        attributes[$1] = $2;\r\n        return '';\r\n    });\r\n\r\n    if (verify !== '') {\r\n        return Boom.badRequest(errorMessage || 'Bad header format');\r\n    }\r\n\r\n    return attributes;\r\n};\r\n\r\n\r\nexports.unauthorized = function (message, attributes) {\r\n\r\n    return Boom.unauthorized(message, 'Hawk', attributes);\r\n};\r\n\r\n"]}