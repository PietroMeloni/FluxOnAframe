{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/hawk/test/crypto.js"],"names":["Code","require","Hawk","Lab","internals","lab","exports","script","describe","experiment","it","test","expect","done","crypto","generateNormalizedString","ts","nonce","method","resource","host","port","to","equal","ext","hash"],"mappings":";;AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,OAAOD,QAAQ,QAAR,CAAX;AACA,IAAIE,MAAMF,QAAQ,KAAR,CAAV;;AAGA;;AAEA,IAAIG,YAAY,EAAhB;;AAGA;;AAEA,IAAIC,MAAMC,QAAQD,GAAR,GAAcF,IAAII,MAAJ,EAAxB;AACA,IAAIC,WAAWH,IAAII,UAAnB;AACA,IAAIC,KAAKL,IAAIM,IAAb;AACA,IAAIC,SAASZ,KAAKY,MAAlB;;AAGAJ,SAAS,QAAT,EAAmB,YAAY;;AAE3BA,aAAS,4BAAT,EAAuC,YAAY;;AAE/CE,WAAG,yCAAH,EAA8C,UAAUG,IAAV,EAAgB;;AAE1DD,mBAAOV,KAAKY,MAAL,CAAYC,wBAAZ,CAAqC,QAArC,EAA+C;AAClDC,oBAAI,UAD8C;AAElDC,uBAAO,QAF2C;AAGlDC,wBAAQ,KAH0C;AAIlDC,0BAAU,qBAJwC;AAKlDC,sBAAM,aAL4C;AAMlDC,sBAAM;AAN4C,aAA/C,CAAP,EAOIC,EAPJ,CAOOC,KAPP,CAOa,sFAPb;;AASAV;AACH,SAZD;;AAcAH,WAAG,+CAAH,EAAoD,UAAUG,IAAV,EAAgB;;AAEhED,mBAAOV,KAAKY,MAAL,CAAYC,wBAAZ,CAAqC,QAArC,EAA+C;AAClDC,oBAAI,UAD8C;AAElDC,uBAAO,QAF2C;AAGlDC,wBAAQ,KAH0C;AAIlDC,0BAAU,qBAJwC;AAKlDC,sBAAM,aAL4C;AAMlDC,sBAAM,IAN4C;AAOlDG,qBAAK;AAP6C,aAA/C,CAAP,EAQIF,EARJ,CAQOC,KARP,CAQa,2GARb;;AAUAV;AACH,SAbD;;AAeAH,WAAG,yDAAH,EAA8D,UAAUG,IAAV,EAAgB;;AAE1ED,mBAAOV,KAAKY,MAAL,CAAYC,wBAAZ,CAAqC,QAArC,EAA+C;AAClDC,oBAAI,UAD8C;AAElDC,uBAAO,QAF2C;AAGlDC,wBAAQ,KAH0C;AAIlDC,0BAAU,qBAJwC;AAKlDC,sBAAM,aAL4C;AAMlDC,sBAAM,IAN4C;AAOlDI,sBAAM,8CAP4C;AAQlDD,qBAAK;AAR6C,aAA/C,CAAP,EASIF,EATJ,CASOC,KATP,CASa,uJATb;;AAWAV;AACH,SAdD;AAeH,KA9CD;AA+CH,CAjDD","file":"crypto.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Crypto', function () {\r\n\r\n    describe('generateNormalizedString()', function () {\r\n\r\n        it('should return a valid normalized string', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\n\\n\\n');\r\n\r\n            done();\r\n        });\r\n\r\n        it('should return a valid normalized string (ext)', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080,\r\n                ext: 'this is some app data'\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\n\\nthis is some app data\\n');\r\n\r\n            done();\r\n        });\r\n\r\n        it('should return a valid normalized string (payload + ext)', function (done) {\r\n\r\n            expect(Hawk.crypto.generateNormalizedString('header', {\r\n                ts: 1357747017,\r\n                nonce: 'k3k4j5',\r\n                method: 'GET',\r\n                resource: '/resource/something',\r\n                host: 'example.com',\r\n                port: 8080,\r\n                hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',\r\n                ext: 'this is some app data'\r\n            })).to.equal('hawk.1.header\\n1357747017\\nk3k4j5\\nGET\\n/resource/something\\nexample.com\\n8080\\nU4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=\\nthis is some app data\\n');\r\n\r\n            done();\r\n        });\r\n    });\r\n});\r\n"]}