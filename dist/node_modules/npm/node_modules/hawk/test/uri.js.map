{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/hawk/test/uri.js"],"names":["Http","require","Url","Code","Hawk","Hoek","Lab","internals","lab","exports","script","describe","experiment","it","test","expect","credentialsFunc","id","callback","credentials","key","algorithm","user","done","req","method","url","host","port","err","credentials1","bewit","uri","getBewit","ttlSec","ext","authenticate","credentials2","attributes","to","not","exist","equal","authorization","output","payload","message","exp","Math","floor","utils","now","mac","crypto","calculateMac","timestamp","nonce","resource","base64urlEncode","headers","isMissing","error","badRequest","some","localtimeOffsetMsec","parse","auth","client","server","authenticateMessage","timestampSkewSec","nonceFunc","ts","Error","errFunc","creds","clone"],"mappings":"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","file":"uri.js","sourcesContent":["// Load modules\r\n\r\nvar Http = require('http');\r\nvar Url = require('url');\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Hoek = require('hoek');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Uri', function () {\r\n\r\n    var credentialsFunc = function (id, callback) {\r\n\r\n        var credentials = {\r\n            id: id,\r\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\r\n            algorithm: (id === '1' ? 'sha1' : 'sha256'),\r\n            user: 'steve'\r\n        };\r\n\r\n        return callback(null, credentials);\r\n    };\r\n\r\n    it('should generate a bewit then successfully authenticate it', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2',\r\n            host: 'example.com',\r\n            port: 80\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials1, ttlSec: 60 * 60 * 24 * 365 * 100, ext: 'some-app-data' });\r\n            req.url += '&bewit=' + bewit;\r\n\r\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials2, attributes) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                expect(attributes.ext).to.equal('some-app-data');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('should generate a bewit then successfully authenticate it (no ext)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2',\r\n            host: 'example.com',\r\n            port: 80\r\n        };\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var bewit = Hawk.uri.getBewit('http://example.com/resource/4?a=1&b=2', { credentials: credentials1, ttlSec: 60 * 60 * 24 * 365 * 100 });\r\n            req.url += '&bewit=' + bewit;\r\n\r\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials2, attributes) {\r\n\r\n                expect(err).to.not.exist();\r\n                expect(credentials2.user).to.equal('steve');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('should successfully authenticate a request (last param)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2&bewit=MTIzNDU2XDQ1MTE0ODQ2MjFcMzFjMmNkbUJFd1NJRVZDOVkva1NFb2c3d3YrdEVNWjZ3RXNmOGNHU2FXQT1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.not.exist();\r\n            expect(credentials.user).to.equal('steve');\r\n            expect(attributes.ext).to.equal('some-app-data');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should successfully authenticate a request (first param)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2MjFcMzFjMmNkbUJFd1NJRVZDOVkva1NFb2c3d3YrdEVNWjZ3RXNmOGNHU2FXQT1cc29tZS1hcHAtZGF0YQ&a=1&b=2',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.not.exist();\r\n            expect(credentials.user).to.equal('steve');\r\n            expect(attributes.ext).to.equal('some-app-data');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should successfully authenticate a request (only param)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2NDFcZm1CdkNWT3MvcElOTUUxSTIwbWhrejQ3UnBwTmo4Y1VrSHpQd3Q5OXJ1cz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.not.exist();\r\n            expect(credentials.user).to.equal('steve');\r\n            expect(attributes.ext).to.equal('some-app-data');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on multiple authentication', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MTE0ODQ2NDFcZm1CdkNWT3MvcElOTUUxSTIwbWhrejQ3UnBwTmo4Y1VrSHpQd3Q5OXJ1cz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080,\r\n            authorization: 'Basic asdasdasdasd'\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Multiple authentications');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on method other than GET', function (done) {\r\n\r\n        credentialsFunc('123456', function (err, credentials1) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                host: 'example.com',\r\n                port: 8080\r\n            };\r\n\r\n            var exp = Math.floor(Hawk.utils.now() / 1000) + 60;\r\n            var ext = 'some-app-data';\r\n            var mac = Hawk.crypto.calculateMac('bewit', credentials1, {\r\n                timestamp: exp,\r\n                nonce: '',\r\n                method: req.method,\r\n                resource: req.url,\r\n                host: req.host,\r\n                port: req.port,\r\n                ext: ext\r\n            });\r\n\r\n            var bewit = credentials1.id + '\\\\' + exp + '\\\\' + mac + '\\\\' + ext;\r\n\r\n            req.url += '&bewit=' + Hoek.base64urlEncode(bewit);\r\n\r\n            Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials2, attributes) {\r\n\r\n                expect(err).to.exist();\r\n                expect(err.output.payload.message).to.equal('Invalid method');\r\n                done();\r\n            });\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid host header', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            headers: {\r\n                host: 'example.com:something'\r\n            }\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Invalid Host header');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on empty bewit', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Empty bewit');\r\n            expect(err.isMissing).to.not.exist();\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid bewit', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=*',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Invalid bewit encoding');\r\n            expect(err.isMissing).to.not.exist();\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on missing bewit', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.not.exist();\r\n            expect(err.isMissing).to.equal(true);\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid bewit structure', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=abc',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Invalid bewit structure');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on empty bewit attribute', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=YVxcY1xk',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Missing bewit attributes');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on missing bewit id attribute', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=XDQ1NTIxNDc2MjJcK0JFbFhQMXhuWjcvd1Nrbm1ldGhlZm5vUTNHVjZNSlFVRHk4NWpTZVJ4VT1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Missing bewit attributes');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on expired access', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?a=1&b=2&bewit=MTIzNDU2XDEzNTY0MTg1ODNcWk1wZlMwWU5KNHV0WHpOMmRucTRydEk3NXNXTjFjeWVITTcrL0tNZFdVQT1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, credentialsFunc, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Access expired');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on credentials function error', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(Hawk.error.badRequest('Boom'));\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Boom');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on credentials function error with credentials', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(Hawk.error.badRequest('Boom'), { some: 'value' });\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Boom');\r\n            expect(credentials.some).to.equal('value');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on null credentials function response', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, null);\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Unknown credentials');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid credentials function response', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, {});\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.message).to.equal('Invalid credentials');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on invalid credentials function response (unknown algorithm)', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, { key: 'xxx', algorithm: 'xxx' });\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.message).to.equal('Unknown algorithm');\r\n            done();\r\n        });\r\n    });\r\n\r\n    it('should fail on expired access', function (done) {\r\n\r\n        var req = {\r\n            method: 'GET',\r\n            url: '/resource/4?bewit=MTIzNDU2XDQ1MDk5OTE3MTlcTUE2eWkwRWRwR0pEcWRwb0JkYVdvVDJrL0hDSzA1T0Y3MkhuZlVmVy96Zz1cc29tZS1hcHAtZGF0YQ',\r\n            host: 'example.com',\r\n            port: 8080\r\n        };\r\n\r\n        Hawk.uri.authenticate(req, function (id, callback) {\r\n\r\n            callback(null, { key: 'xxx', algorithm: 'sha256' });\r\n        }, {}, function (err, credentials, attributes) {\r\n\r\n            expect(err).to.exist();\r\n            expect(err.output.payload.message).to.equal('Bad mac');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('getBewit()', function () {\r\n\r\n        it('returns a valid bewit value', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\r\n            done();\r\n        });\r\n\r\n        it('returns a valid bewit value (explicit port)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com:8080/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcaFpiSjNQMmNLRW80a3kwQzhqa1pBa1J5Q1p1ZWc0V1NOYnhWN3ZxM3hIVT1ceGFuZHlhbmR6');\r\n            done();\r\n        });\r\n\r\n        it('returns a valid bewit value (null ext)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: null });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdcSUdZbUxnSXFMckNlOEN4dktQczRKbFdJQStValdKSm91d2dBUmlWaENBZz1c');\r\n            done();\r\n        });\r\n\r\n        it('returns a valid bewit value (parsed uri)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit(Url.parse('https://example.com/somewhere/over/the/rainbow'), { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('MTIzNDU2XDEzNTY0MjA3MDdca3NjeHdOUjJ0SnBQMVQxekRMTlBiQjVVaUtJVTl0T1NKWFRVZEc3WDloOD1ceGFuZHlhbmR6');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid options', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', 4);\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on missing uri', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('', { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid uri', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit(5, { credentials: credentials, ttlSec: 300, localtimeOffsetMsec: 1356420407232 - Hawk.utils.now(), ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid credentials (id)', function (done) {\r\n\r\n            var credentials = {\r\n                key: '2983d45yun89q',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on missing credentials', function (done) {\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { ttlSec: 3000, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid credentials (key)', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                algorithm: 'sha256'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 3000, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on invalid algorithm', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'hmac-sha-0'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow', { credentials: credentials, ttlSec: 300, ext: 'xandyandz' });\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n\r\n        it('errors on missing options', function (done) {\r\n\r\n            var credentials = {\r\n                id: '123456',\r\n                key: '2983d45yun89q',\r\n                algorithm: 'hmac-sha-0'\r\n            };\r\n\r\n            var bewit = Hawk.uri.getBewit('https://example.com/somewhere/over/the/rainbow');\r\n            expect(bewit).to.equal('');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('authenticateMessage()', function () {\r\n\r\n        it('should generate an authorization then successfully parse it', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.not.exist();\r\n                    expect(credentials2.user).to.equal('steve');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on mismatching host', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example1.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Bad mac');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on stale timestamp', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { localtimeOffsetMsec: 100000 }, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Stale timestamp');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('overrides timestampSkewSec', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1, localtimeOffsetMsec: 100000 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, { timestampSkewSec: 500 }, function (err, credentials2) {\r\n\r\n                    expect(err).to.not.exist();\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on invalid authorization', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n                delete auth.id;\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Invalid authorization');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on bad hash', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message1', auth, credentialsFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Bad message hash');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on nonce error', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, credentialsFunc, {\r\n                    nonceFunc: function (key, nonce, ts, callback) {\r\n\r\n                        callback(new Error('kaboom'));\r\n                    }\r\n                }, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Invalid nonce');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on credentials error', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback(new Error('kablooey'));\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('kablooey');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on missing credentials', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback();\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Unknown credentials');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on invalid credentials', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback(null, {});\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Invalid credentials');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail authorization on invalid credentials algorithm', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.exist();\r\n\r\n                var errFunc = function (id, callback) {\r\n\r\n                    callback(null, { key: '123', algorithm: '456' });\r\n                };\r\n\r\n                Hawk.server.authenticateMessage('example.com', 8080, 'some message', auth, errFunc, {}, function (err, credentials2) {\r\n\r\n                    expect(err).to.exist();\r\n                    expect(err.message).to.equal('Unknown algorithm');\r\n                    done();\r\n                });\r\n            });\r\n        });\r\n\r\n        it('should fail on missing host', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var auth = Hawk.client.message(null, 8080, 'some message', { credentials: credentials1 });\r\n                expect(auth).to.not.exist();\r\n                done();\r\n            });\r\n        });\r\n\r\n        it('should fail on missing credentials', function (done) {\r\n\r\n            var auth = Hawk.client.message('example.com', 8080, 'some message', {});\r\n            expect(auth).to.not.exist();\r\n            done();\r\n        });\r\n\r\n        it('should fail on invalid algorithm', function (done) {\r\n\r\n            credentialsFunc('123456', function (err, credentials1) {\r\n\r\n                var creds = Hoek.clone(credentials1);\r\n                creds.algorithm = 'blah';\r\n                var auth = Hawk.client.message('example.com', 8080, 'some message', { credentials: creds });\r\n                expect(auth).to.not.exist();\r\n                done();\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n"]}