{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/hawk/test/readme.js"],"names":["Code","require","Hawk","Hoek","Lab","internals","lab","exports","script","describe","experiment","it","test","expect","credentials","id","key","algorithm","options","timestamp","nonce","ext","done","header","client","field","to","equal","normalized","crypto","generateNormalizedString","ts","method","resource","host","port","payloadOptions","clone","payload","contentType","hash","calculatePayloadHash"],"mappings":";;AAAA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,OAAOD,QAAQ,QAAR,CAAX;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,MAAMH,QAAQ,KAAR,CAAV;;AAGA;;AAEA,IAAII,YAAY,EAAhB;;AAGA;;AAEA,IAAIC,MAAMC,QAAQD,GAAR,GAAcF,IAAII,MAAJ,EAAxB;AACA,IAAIC,WAAWH,IAAII,UAAnB;AACA,IAAIC,KAAKL,IAAIM,IAAb;AACA,IAAIC,SAASb,KAAKa,MAAlB;;AAGAJ,SAAS,QAAT,EAAmB,YAAY;;AAE3BA,iBAAS,MAAT,EAAiB,YAAY;;AAEzB,oBAAIK,cAAc;AACdC,4BAAI,cADU;AAEdC,6BAAK,6CAFS;AAGdC,mCAAW;AAHG,iBAAlB;;AAMA,oBAAIC,UAAU;AACVJ,qCAAaA,WADH;AAEVK,mCAAW,UAFD;AAGVC,+BAAO,QAHG;AAIVC,6BAAK;AAJK,iBAAd;;AAOAV,mBAAG,2CAAH,EAAgD,UAAUW,IAAV,EAAgB;;AAE5D,4BAAIC,SAASrB,KAAKsB,MAAL,CAAYD,MAAZ,CAAmB,4CAAnB,EAAiE,KAAjE,EAAwEL,OAAxE,EAAiFO,KAA9F;;AAEAZ,+BAAOU,MAAP,EAAeG,EAAf,CAAkBC,KAAlB,CAAwB,sIAAxB;AACAL;AACH,iBAND;;AAQAX,mBAAG,sDAAH,EAA2D,UAAUW,IAAV,EAAgB;;AAEvE,4BAAIM,aAAa1B,KAAK2B,MAAL,CAAYC,wBAAZ,CAAqC,QAArC,EAA+C;AAC5DhB,6CAAaA,WAD+C;AAE5DiB,oCAAIb,QAAQC,SAFgD;AAG5DC,uCAAOF,QAAQE,KAH6C;AAI5DY,wCAAQ,KAJoD;AAK5DC,0CAAU,mBALkD;AAM5DC,sCAAM,aANsD;AAO5DC,sCAAM,IAPsD;AAQ5Dd,qCAAKH,QAAQG;AAR+C,yBAA/C,CAAjB;;AAWAR,+BAAOe,UAAP,EAAmBF,EAAnB,CAAsBC,KAAtB,CAA4B,qGAA5B;AACAL;AACH,iBAfD;;AAiBA,oBAAIc,iBAAiBjC,KAAKkC,KAAL,CAAWnB,OAAX,CAArB;AACAkB,+BAAeE,OAAf,GAAyB,2BAAzB;AACAF,+BAAeG,WAAf,GAA6B,YAA7B;;AAEA5B,mBAAG,0DAAH,EAA+D,UAAUW,IAAV,EAAgB;;AAE3E,4BAAIC,SAASrB,KAAKsB,MAAL,CAAYD,MAAZ,CAAmB,4CAAnB,EAAiE,MAAjE,EAAyEa,cAAzE,EAAyFX,KAAtG;;AAEAZ,+BAAOU,MAAP,EAAeG,EAAf,CAAkBC,KAAlB,CAAwB,2LAAxB;AACAL;AACH,iBAND;;AAQAX,mBAAG,qEAAH,EAA0E,UAAUW,IAAV,EAAgB;;AAEtF,4BAAIM,aAAa1B,KAAK2B,MAAL,CAAYC,wBAAZ,CAAqC,QAArC,EAA+C;AAC5DhB,6CAAaA,WAD+C;AAE5DiB,oCAAIb,QAAQC,SAFgD;AAG5DC,uCAAOF,QAAQE,KAH6C;AAI5DY,wCAAQ,MAJoD;AAK5DC,0CAAU,mBALkD;AAM5DC,sCAAM,aANsD;AAO5DC,sCAAM,IAPsD;AAQ5DK,sCAAMtC,KAAK2B,MAAL,CAAYY,oBAAZ,CAAiCL,eAAeE,OAAhD,EAAyDxB,YAAYG,SAArE,EAAgFmB,eAAeG,WAA/F,CARsD;AAS5DlB,qCAAKH,QAAQG;AAT+C,yBAA/C,CAAjB;;AAYAR,+BAAOe,UAAP,EAAmBF,EAAnB,CAAsBC,KAAtB,CAA4B,kJAA5B;AACAL;AACH,iBAhBD;AAiBH,SArED;AAsEH,CAxED","file":"readme.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Hoek = require('hoek');\r\nvar Lab = require('lab');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('README', function () {\r\n\r\n    describe('core', function () {\r\n\r\n        var credentials = {\r\n            id: 'dh37fgj492je',\r\n            key: 'werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn',\r\n            algorithm: 'sha256'\r\n        };\r\n\r\n        var options = {\r\n            credentials: credentials,\r\n            timestamp: 1353832234,\r\n            nonce: 'j4h3g2',\r\n            ext: 'some-app-ext-data'\r\n        };\r\n\r\n        it('should generate a header protocol example', function (done) {\r\n\r\n            var header = Hawk.client.header('http://example.com:8000/resource/1?b=1&a=2', 'GET', options).field;\r\n\r\n            expect(header).to.equal('Hawk id=\"dh37fgj492je\", ts=\"1353832234\", nonce=\"j4h3g2\", ext=\"some-app-ext-data\", mac=\"6R4rV5iE+NPoym+WwjeHzjAGXUtLNIxmo1vpMofpLAE=\"');\r\n            done();\r\n        });\r\n\r\n        it('should generate a normalized string protocol example', function (done) {\r\n\r\n            var normalized = Hawk.crypto.generateNormalizedString('header', {\r\n                credentials: credentials,\r\n                ts: options.timestamp,\r\n                nonce: options.nonce,\r\n                method: 'GET',\r\n                resource: '/resource?a=1&b=2',\r\n                host: 'example.com',\r\n                port: 8000,\r\n                ext: options.ext\r\n            });\r\n\r\n            expect(normalized).to.equal('hawk.1.header\\n1353832234\\nj4h3g2\\nGET\\n/resource?a=1&b=2\\nexample.com\\n8000\\n\\nsome-app-ext-data\\n');\r\n            done();\r\n        });\r\n\r\n        var payloadOptions = Hoek.clone(options);\r\n        payloadOptions.payload = 'Thank you for flying Hawk';\r\n        payloadOptions.contentType = 'text/plain';\r\n\r\n        it('should generate a header protocol example (with payload)', function (done) {\r\n\r\n            var header = Hawk.client.header('http://example.com:8000/resource/1?b=1&a=2', 'POST', payloadOptions).field;\r\n\r\n            expect(header).to.equal('Hawk id=\"dh37fgj492je\", ts=\"1353832234\", nonce=\"j4h3g2\", hash=\"Yi9LfIIFRtBEPt74PVmbTF/xVAwPn7ub15ePICfgnuY=\", ext=\"some-app-ext-data\", mac=\"aSe1DERmZuRl3pI36/9BdZmnErTw3sNzOOAUlfeKjVw=\"');\r\n            done();\r\n        });\r\n\r\n        it('should generate a normalized string protocol example (with payload)', function (done) {\r\n\r\n            var normalized = Hawk.crypto.generateNormalizedString('header', {\r\n                credentials: credentials,\r\n                ts: options.timestamp,\r\n                nonce: options.nonce,\r\n                method: 'POST',\r\n                resource: '/resource?a=1&b=2',\r\n                host: 'example.com',\r\n                port: 8000,\r\n                hash: Hawk.crypto.calculatePayloadHash(payloadOptions.payload, credentials.algorithm, payloadOptions.contentType),\r\n                ext: options.ext\r\n            });\r\n\r\n            expect(normalized).to.equal('hawk.1.header\\n1353832234\\nj4h3g2\\nPOST\\n/resource?a=1&b=2\\nexample.com\\n8000\\nYi9LfIIFRtBEPt74PVmbTF/xVAwPn7ub15ePICfgnuY=\\nsome-app-ext-data\\n');\r\n            done();\r\n        });\r\n    });\r\n});\r\n\r\n"]}