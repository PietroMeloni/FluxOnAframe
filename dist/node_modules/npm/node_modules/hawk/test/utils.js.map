{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/hawk/test/utils.js"],"names":["Code","require","Hawk","Lab","Package","internals","lab","exports","script","describe","experiment","it","test","expect","done","req","method","url","headers","host","utils","parseHost","port","to","equal","connection","encrypted","name","long","i","be","null","err","parseAuthorizationHeader","instanceof","Error","message","version","unauthorized","output","a"],"mappings":"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","file":"utils.js","sourcesContent":["// Load modules\r\n\r\nvar Code = require('code');\r\nvar Hawk = require('../lib');\r\nvar Lab = require('lab');\r\nvar Package = require('../package.json');\r\n\r\n\r\n// Declare internals\r\n\r\nvar internals = {};\r\n\r\n\r\n// Test shortcuts\r\n\r\nvar lab = exports.lab = Lab.script();\r\nvar describe = lab.experiment;\r\nvar it = lab.test;\r\nvar expect = Code.expect;\r\n\r\n\r\ndescribe('Utils', function () {\r\n\r\n    describe('parseHost()', function () {\r\n\r\n        it('returns port 80 for non tls node request', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: 'example.com',\r\n                    'content-type': 'text/plain;x=y'\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(80);\r\n            done();\r\n        });\r\n\r\n        it('returns port 443 for non tls node request', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: 'example.com',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(443);\r\n            done();\r\n        });\r\n\r\n        it('returns port 443 for non tls node request (IPv6)', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: '[123:123:123]',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            expect(Hawk.utils.parseHost(req, 'Host').port).to.equal(443);\r\n            done();\r\n        });\r\n\r\n        it('parses IPv6 headers', function (done) {\r\n\r\n            var req = {\r\n                method: 'POST',\r\n                url: '/resource/4?filter=a',\r\n                headers: {\r\n                    host: '[123:123:123]:8000',\r\n                    'content-type': 'text/plain;x=y'\r\n                },\r\n                connection: {\r\n                    encrypted: true\r\n                }\r\n            };\r\n\r\n            var host = Hawk.utils.parseHost(req, 'Host');\r\n            expect(host.port).to.equal('8000');\r\n            expect(host.name).to.equal('[123:123:123]');\r\n            done();\r\n        });\r\n\r\n        it('errors on header too long', function (done) {\r\n\r\n            var long = '';\r\n            for (var i = 0; i < 5000; ++i) {\r\n                long += 'x';\r\n            }\r\n\r\n            expect(Hawk.utils.parseHost({ headers: { host: long } })).to.be.null();\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('parseAuthorizationHeader()', function () {\r\n\r\n        it('errors on header too long', function (done) {\r\n\r\n            var long = 'Scheme a=\"';\r\n            for (var i = 0; i < 5000; ++i) {\r\n                long += 'x';\r\n            }\r\n            long += '\"';\r\n\r\n            var err = Hawk.utils.parseAuthorizationHeader(long, ['a']);\r\n            expect(err).to.be.instanceof(Error);\r\n            expect(err.message).to.equal('Header length too long');\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('version()', function () {\r\n\r\n        it('returns the correct package version number', function (done) {\r\n\r\n            expect(Hawk.utils.version()).to.equal(Package.version);\r\n            done();\r\n        });\r\n    });\r\n\r\n    describe('unauthorized()', function () {\r\n\r\n        it('returns a hawk 401', function (done) {\r\n\r\n            expect(Hawk.utils.unauthorized('kaboom').output.headers['WWW-Authenticate']).to.equal('Hawk error=\"kaboom\"');\r\n            done();\r\n        });\r\n\r\n        it('supports attributes', function (done) {\r\n\r\n            expect(Hawk.utils.unauthorized('kaboom', { a: 'b' }).output.headers['WWW-Authenticate']).to.equal('Hawk a=\"b\", error=\"kaboom\"');\r\n            done();\r\n        });\r\n    });\r\n});\r\n"]}