{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/retry/lib/retry_operation.js"],"names":["RetryOperation","timeouts","options","forever","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_cachedTimeouts","slice","module","exports","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","unshift","Error","push","timeout","shift","undefined","splice","length","self","timer","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","error","message","count"],"mappings":"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","file":"retry_operation.js","sourcesContent":["function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts;\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n"]}