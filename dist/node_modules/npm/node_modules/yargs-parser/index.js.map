{"version":3,"sources":["../../../../../node_modules/npm/node_modules/yargs-parser/index.js"],"names":["camelCase","require","path","tokenizeArgString","util","parse","args","opts","aliases","combineAliases","alias","configuration","assign","defaults","default","configObjects","envPrefix","notFlagsOption","notFlagsArgv","newAliases","__","str","format","apply","Array","prototype","slice","call","arguments","error","flags","arrays","bools","strings","numbers","counts","normalize","configs","defaulted","nargs","coercions","negative","negatedBoolean","RegExp","concat","array","filter","Boolean","forEach","key","boolean","string","number","count","Object","keys","narg","k","coerce","isArray","config","extendAliases","argv","_","setArg","setDefaulted","notFlags","indexOf","i","length","arg","broken","letters","m","next","value","match","checkAllAliases","splice","eatNargs","eatArray","undefined","test","defaultForType","guessType","split","j","push","maybeCoerceNumber","applyEnvVars","setConfig","setConfigObjects","applyDefaultsAndAliases","applyCoercions","hasKey","ii","toEat","available","Error","consumed","Math","min","start","argsToSet","multipleArrayFlag","map","processValue","val","unsetDefaulted","addNewAlias","splitKey","setKey","x","a","shift","__defineSetter__","v","__defineGetter__","isUndefined","increment","shouldCoerceNumber","isNumber","Number","isSafeInteger","floor","configLookup","configKey","configPath","resolvedConfigPath","resolve","process","cwd","e","setConfigObject","ex","prev","fullKey","configObject","configOnly","prefix","env","envVar","lastIndexOf","substring","join","applied","hasOwnProperty","ali","err","obj","o","index","isTypeArray","isValueArray","duplicate","c","y","flag","isSet","toCheck","type","def","num","aliasArrays","change","combined","intersect","aliasArray","self","pop","orig","Parser","result","detailed","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["var camelCase = require('camelcase')\nvar path = require('path')\nvar tokenizeArgString = require('./lib/tokenize-arg-string')\nvar util = require('util')\n\nfunction parse (args, opts) {\n  if (!opts) opts = {}\n  // allow a string argument to be passed in rather\n  // than an argv array.\n  args = tokenizeArgString(args)\n  // aliases might have transitive relationships, normalize this.\n  var aliases = combineAliases(opts.alias || {})\n  var configuration = assign({\n    'short-option-groups': true,\n    'camel-case-expansion': true,\n    'dot-notation': true,\n    'parse-numbers': true,\n    'boolean-negation': true,\n    'negation-prefix': 'no-',\n    'duplicate-arguments-array': true,\n    'flatten-duplicate-arrays': true,\n    'populate--': false,\n    'combine-arrays': false\n  }, opts.configuration)\n  var defaults = opts.default || {}\n  var configObjects = opts.configObjects || []\n  var envPrefix = opts.envPrefix\n  var notFlagsOption = configuration['populate--']\n  var notFlagsArgv = notFlagsOption ? '--' : '_'\n  var newAliases = {}\n  // allow a i18n handler to be passed in, default to a fake one (util.format).\n  var __ = opts.__ || function (str) {\n    return util.format.apply(util, Array.prototype.slice.call(arguments))\n  }\n  var error = null\n  var flags = {\n    aliases: {},\n    arrays: {},\n    bools: {},\n    strings: {},\n    numbers: {},\n    counts: {},\n    normalize: {},\n    configs: {},\n    defaulted: {},\n    nargs: {},\n    coercions: {}\n  }\n  var negative = /^-[0-9]+(\\.[0-9]+)?/\n  var negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)')\n\n  ;[].concat(opts.array).filter(Boolean).forEach(function (key) {\n    flags.arrays[key] = true\n  })\n\n  ;[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n    flags.bools[key] = true\n  })\n\n  ;[].concat(opts.string).filter(Boolean).forEach(function (key) {\n    flags.strings[key] = true\n  })\n\n  ;[].concat(opts.number).filter(Boolean).forEach(function (key) {\n    flags.numbers[key] = true\n  })\n\n  ;[].concat(opts.count).filter(Boolean).forEach(function (key) {\n    flags.counts[key] = true\n  })\n\n  ;[].concat(opts.normalize).filter(Boolean).forEach(function (key) {\n    flags.normalize[key] = true\n  })\n\n  Object.keys(opts.narg || {}).forEach(function (k) {\n    flags.nargs[k] = opts.narg[k]\n  })\n\n  Object.keys(opts.coerce || {}).forEach(function (k) {\n    flags.coercions[k] = opts.coerce[k]\n  })\n\n  if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n    ;[].concat(opts.config).filter(Boolean).forEach(function (key) {\n      flags.configs[key] = true\n    })\n  } else {\n    Object.keys(opts.config || {}).forEach(function (k) {\n      flags.configs[k] = opts.config[k]\n    })\n  }\n\n  // create a lookup table that takes into account all\n  // combinations of aliases: {f: ['foo'], foo: ['f']}\n  extendAliases(opts.key, aliases, opts.default, flags.arrays)\n\n  // apply default values to all aliases.\n  Object.keys(defaults).forEach(function (key) {\n    (flags.aliases[key] || []).forEach(function (alias) {\n      defaults[alias] = defaults[key]\n    })\n  })\n\n  var argv = { _: [] }\n\n  Object.keys(flags.bools).forEach(function (key) {\n    setArg(key, !(key in defaults) ? false : defaults[key])\n    setDefaulted(key)\n  })\n\n  var notFlags = []\n  if (args.indexOf('--') !== -1) {\n    notFlags = args.slice(args.indexOf('--') + 1)\n    args = args.slice(0, args.indexOf('--'))\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i]\n    var broken\n    var key\n    var letters\n    var m\n    var next\n    var value\n\n    // -- seperated by =\n    if (arg.match(/^--.+=/) || (\n      !configuration['short-option-groups'] && arg.match(/^-.+=/)\n    )) {\n      // Using [\\s\\S] instead of . because js doesn't support the\n      // 'dotall' regex modifier. See:\n      // http://stackoverflow.com/a/1068308/13216\n      m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/)\n\n      // nargs format = '--f=monkey washing cat'\n      if (checkAllAliases(m[1], flags.nargs)) {\n        args.splice(i + 1, 0, m[2])\n        i = eatNargs(i, m[1], args)\n      // arrays format = '--f=a b c'\n      } else if (checkAllAliases(m[1], flags.arrays) && args.length > i + 1) {\n        args.splice(i + 1, 0, m[2])\n        i = eatArray(i, m[1], args)\n      } else {\n        setArg(m[1], m[2])\n      }\n    } else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {\n      key = arg.match(negatedBoolean)[1]\n      setArg(key, false)\n\n    // -- seperated by space.\n    } else if (arg.match(/^--.+/) || (\n      !configuration['short-option-groups'] && arg.match(/^-.+/)\n    )) {\n      key = arg.match(/^--?(.+)/)[1]\n\n      // nargs format = '--foo a b c'\n      if (checkAllAliases(key, flags.nargs)) {\n        i = eatNargs(i, key, args)\n      // array format = '--foo a b c'\n      } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n        i = eatArray(i, key, args)\n      } else {\n        next = args[i + 1]\n\n        if (next !== undefined && (!next.match(/^-/) ||\n          next.match(negative)) &&\n          !checkAllAliases(key, flags.bools) &&\n          !checkAllAliases(key, flags.counts)) {\n          setArg(key, next)\n          i++\n        } else if (/^(true|false)$/.test(next)) {\n          setArg(key, next)\n          i++\n        } else {\n          setArg(key, defaultForType(guessType(key, flags)))\n        }\n      }\n\n    // dot-notation flag seperated by '='.\n    } else if (arg.match(/^-.\\..+=/)) {\n      m = arg.match(/^-([^=]+)=([\\s\\S]*)$/)\n      setArg(m[1], m[2])\n\n    // dot-notation flag seperated by space.\n    } else if (arg.match(/^-.\\..+/)) {\n      next = args[i + 1]\n      key = arg.match(/^-(.\\..+)/)[1]\n\n      if (next !== undefined && !next.match(/^-/) &&\n        !checkAllAliases(key, flags.bools) &&\n        !checkAllAliases(key, flags.counts)) {\n        setArg(key, next)\n        i++\n      } else {\n        setArg(key, defaultForType(guessType(key, flags)))\n      }\n    } else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n      letters = arg.slice(1, -1).split('')\n      broken = false\n\n      for (var j = 0; j < letters.length; j++) {\n        next = arg.slice(j + 2)\n\n        if (letters[j + 1] && letters[j + 1] === '=') {\n          value = arg.slice(j + 3)\n          key = letters[j]\n\n          // nargs format = '-f=monkey washing cat'\n          if (checkAllAliases(key, flags.nargs)) {\n            args.splice(i + 1, 0, value)\n            i = eatNargs(i, key, args)\n          // array format = '-f=a b c'\n          } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n            args.splice(i + 1, 0, value)\n            i = eatArray(i, key, args)\n          } else {\n            setArg(key, value)\n          }\n\n          broken = true\n          break\n        }\n\n        if (next === '-') {\n          setArg(letters[j], next)\n          continue\n        }\n\n        // current letter is an alphabetic character and next value is a number\n        if (/[A-Za-z]/.test(letters[j]) &&\n          /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        }\n\n        if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n          setArg(letters[j], next)\n          broken = true\n          break\n        } else {\n          setArg(letters[j], defaultForType(guessType(letters[j], flags)))\n        }\n      }\n\n      key = arg.slice(-1)[0]\n\n      if (!broken && key !== '-') {\n        // nargs format = '-f a b c'\n        if (checkAllAliases(key, flags.nargs)) {\n          i = eatNargs(i, key, args)\n        // array format = '-f a b c'\n        } else if (checkAllAliases(key, flags.arrays) && args.length > i + 1) {\n          i = eatArray(i, key, args)\n        } else {\n          next = args[i + 1]\n\n          if (next !== undefined && (!/^(-|--)[^-]/.test(next) ||\n            next.match(negative)) &&\n            !checkAllAliases(key, flags.bools) &&\n            !checkAllAliases(key, flags.counts)) {\n            setArg(key, next)\n            i++\n          } else if (/^(true|false)$/.test(next)) {\n            setArg(key, next)\n            i++\n          } else {\n            setArg(key, defaultForType(guessType(key, flags)))\n          }\n        }\n      }\n    } else {\n      argv._.push(maybeCoerceNumber('_', arg))\n    }\n  }\n\n  // order of precedence:\n  // 1. command line arg\n  // 2. value from env var\n  // 3. value from config file\n  // 4. value from config objects\n  // 5. configured default value\n  applyEnvVars(argv, true) // special case: check env vars that point to config file\n  applyEnvVars(argv, false)\n  setConfig(argv)\n  setConfigObjects()\n  applyDefaultsAndAliases(argv, flags.aliases, defaults)\n  applyCoercions(argv)\n\n  // for any counts either not in args or without an explicit default, set to 0\n  Object.keys(flags.counts).forEach(function (key) {\n    if (!hasKey(argv, key.split('.'))) setArg(key, 0)\n  })\n\n  // '--' defaults to undefined.\n  if (notFlagsOption && notFlags.length) argv[notFlagsArgv] = []\n  notFlags.forEach(function (key) {\n    argv[notFlagsArgv].push(key)\n  })\n\n  // how many arguments should we consume, based\n  // on the nargs option?\n  function eatNargs (i, key, args) {\n    var ii\n    const toEat = checkAllAliases(key, flags.nargs)\n\n    // nargs will not consume flag arguments, e.g., -abc, --foo,\n    // and terminates when one is observed.\n    var available = 0\n    for (ii = i + 1; ii < args.length; ii++) {\n      if (!args[ii].match(/^-[^0-9]/)) available++\n      else break\n    }\n\n    if (available < toEat) error = Error(__('Not enough arguments following: %s', key))\n\n    const consumed = Math.min(available, toEat)\n    for (ii = i + 1; ii < (consumed + i + 1); ii++) {\n      setArg(key, args[ii])\n    }\n\n    return (i + consumed)\n  }\n\n  // if an option is an array, eat all non-hyphenated arguments\n  // following it... YUM!\n  // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n  function eatArray (i, key, args) {\n    var start = i + 1\n    var argsToSet = []\n    var multipleArrayFlag = i > 0\n    for (var ii = i + 1; ii < args.length; ii++) {\n      if (/^-/.test(args[ii]) && !negative.test(args[ii])) {\n        if (ii === start) {\n          setArg(key, defaultForType('array'))\n        }\n        multipleArrayFlag = true\n        break\n      }\n      i = ii\n      argsToSet.push(args[ii])\n    }\n    if (multipleArrayFlag) {\n      setArg(key, argsToSet.map(function (arg) {\n        return processValue(key, arg)\n      }))\n    } else {\n      argsToSet.forEach(function (arg) {\n        setArg(key, arg)\n      })\n    }\n\n    return i\n  }\n\n  function setArg (key, val) {\n    unsetDefaulted(key)\n\n    if (/-/.test(key) && configuration['camel-case-expansion']) {\n      addNewAlias(key, camelCase(key))\n    }\n\n    var value = processValue(key, val)\n\n    var splitKey = key.split('.')\n    setKey(argv, splitKey, value)\n\n    // handle populating aliases of the full key\n    if (flags.aliases[key]) {\n      flags.aliases[key].forEach(function (x) {\n        x = x.split('.')\n        setKey(argv, x, value)\n      })\n    }\n\n    // handle populating aliases of the first element of the dot-notation key\n    if (splitKey.length > 1 && configuration['dot-notation']) {\n      ;(flags.aliases[splitKey[0]] || []).forEach(function (x) {\n        x = x.split('.')\n\n        // expand alias with nested objects in key\n        var a = [].concat(splitKey)\n        a.shift() // nuke the old key.\n        x = x.concat(a)\n\n        setKey(argv, x, value)\n      })\n    }\n\n    // Set normalize getter and setter when key is in 'normalize' but isn't an array\n    if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n      var keys = [key].concat(flags.aliases[key] || [])\n      keys.forEach(function (key) {\n        argv.__defineSetter__(key, function (v) {\n          val = path.normalize(v)\n        })\n\n        argv.__defineGetter__(key, function () {\n          return typeof val === 'string' ? path.normalize(val) : val\n        })\n      })\n    }\n  }\n\n  function addNewAlias (key, alias) {\n    if (!(flags.aliases[key] && flags.aliases[key].length)) {\n      flags.aliases[key] = [alias]\n      newAliases[alias] = true\n    }\n    if (!(flags.aliases[alias] && flags.aliases[alias].length)) {\n      addNewAlias(alias, key)\n    }\n  }\n\n  function processValue (key, val) {\n    // handle parsing boolean arguments --foo=true --bar false.\n    if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n      if (typeof val === 'string') val = val === 'true'\n    }\n\n    var value = maybeCoerceNumber(key, val)\n\n    // increment a count given as arg (either no value or value parsed as boolean)\n    if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n      value = increment\n    }\n\n    // Set normalized value when key is in 'normalize' and in 'arrays'\n    if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n      if (Array.isArray(val)) value = val.map(path.normalize)\n      else value = path.normalize(val)\n    }\n    return value\n  }\n\n  function maybeCoerceNumber (key, value) {\n    if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.coercions)) {\n      const shouldCoerceNumber = isNumber(value) && configuration['parse-numbers'] && (\n        Number.isSafeInteger(Math.floor(value))\n      )\n      if (shouldCoerceNumber || (!isUndefined(value) && checkAllAliases(key, flags.numbers))) value = Number(value)\n    }\n    return value\n  }\n\n  // set args from config.json file, this should be\n  // applied last so that defaults can be applied.\n  function setConfig (argv) {\n    var configLookup = {}\n\n    // expand defaults/aliases, in-case any happen to reference\n    // the config.json file.\n    applyDefaultsAndAliases(configLookup, flags.aliases, defaults)\n\n    Object.keys(flags.configs).forEach(function (configKey) {\n      var configPath = argv[configKey] || configLookup[configKey]\n      if (configPath) {\n        try {\n          var config = null\n          var resolvedConfigPath = path.resolve(process.cwd(), configPath)\n\n          if (typeof flags.configs[configKey] === 'function') {\n            try {\n              config = flags.configs[configKey](resolvedConfigPath)\n            } catch (e) {\n              config = e\n            }\n            if (config instanceof Error) {\n              error = config\n              return\n            }\n          } else {\n            config = require(resolvedConfigPath)\n          }\n\n          setConfigObject(config)\n        } catch (ex) {\n          if (argv[configKey]) error = Error(__('Invalid JSON config file: %s', configPath))\n        }\n      }\n    })\n  }\n\n  // set args from config object.\n  // it recursively checks nested objects.\n  function setConfigObject (config, prev) {\n    Object.keys(config).forEach(function (key) {\n      var value = config[key]\n      var fullKey = prev ? prev + '.' + key : key\n\n      // if the value is an inner object and we have dot-notation\n      // enabled, treat inner objects in config the same as\n      // heavily nested dot notations (foo.bar.apple).\n      if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {\n        // if the value is an object but not an array, check nested object\n        setConfigObject(value, fullKey)\n      } else {\n        // setting arguments via CLI takes precedence over\n        // values within the config file.\n        if (!hasKey(argv, fullKey.split('.')) || (flags.defaulted[fullKey]) || (flags.arrays[fullKey] && configuration['combine-arrays'])) {\n          setArg(fullKey, value)\n        }\n      }\n    })\n  }\n\n  // set all config objects passed in opts\n  function setConfigObjects () {\n    if (typeof configObjects === 'undefined') return\n    configObjects.forEach(function (configObject) {\n      setConfigObject(configObject)\n    })\n  }\n\n  function applyEnvVars (argv, configOnly) {\n    if (typeof envPrefix === 'undefined') return\n\n    var prefix = typeof envPrefix === 'string' ? envPrefix : ''\n    Object.keys(process.env).forEach(function (envVar) {\n      if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n        // get array of nested keys and convert them to camel case\n        var keys = envVar.split('__').map(function (key, i) {\n          if (i === 0) {\n            key = key.substring(prefix.length)\n          }\n          return camelCase(key)\n        })\n\n        if (((configOnly && flags.configs[keys.join('.')]) || !configOnly) && (!hasKey(argv, keys) || flags.defaulted[keys.join('.')])) {\n          setArg(keys.join('.'), process.env[envVar])\n        }\n      }\n    })\n  }\n\n  function applyCoercions (argv) {\n    var coerce\n    var applied = {}\n    Object.keys(argv).forEach(function (key) {\n      if (!applied.hasOwnProperty(key)) { // If we haven't already coerced this option via one of its aliases\n        coerce = checkAllAliases(key, flags.coercions)\n        if (typeof coerce === 'function') {\n          try {\n            var value = coerce(argv[key])\n            ;([].concat(flags.aliases[key] || [], key)).forEach(ali => {\n              applied[ali] = argv[ali] = value\n            })\n          } catch (err) {\n            error = err\n          }\n        }\n      }\n    })\n  }\n\n  function applyDefaultsAndAliases (obj, aliases, defaults) {\n    Object.keys(defaults).forEach(function (key) {\n      if (!hasKey(obj, key.split('.'))) {\n        setKey(obj, key.split('.'), defaults[key])\n\n        ;(aliases[key] || []).forEach(function (x) {\n          if (hasKey(obj, x.split('.'))) return\n          setKey(obj, x.split('.'), defaults[key])\n        })\n      }\n    })\n  }\n\n  function hasKey (obj, keys) {\n    var o = obj\n\n    if (!configuration['dot-notation']) keys = [keys.join('.')]\n\n    keys.slice(0, -1).forEach(function (key) {\n      o = (o[key] || {})\n    })\n\n    var key = keys[keys.length - 1]\n\n    if (typeof o !== 'object') return false\n    else return key in o\n  }\n\n  function setKey (obj, keys, value) {\n    var o = obj\n\n    if (!configuration['dot-notation']) keys = [keys.join('.')]\n\n    keys.slice(0, -1).forEach(function (key, index) {\n      if (typeof o === 'object' && o[key] === undefined) {\n        o[key] = {}\n      }\n\n      if (typeof o[key] !== 'object' || Array.isArray(o[key])) {\n        // ensure that o[key] is an array, and that the last item is an empty object.\n        if (Array.isArray(o[key])) {\n          o[key].push({})\n        } else {\n          o[key] = [o[key], {}]\n        }\n\n        // we want to update the empty object at the end of the o[key] array, so set o to that object\n        o = o[key][o[key].length - 1]\n      } else {\n        o = o[key]\n      }\n    })\n\n    var key = keys[keys.length - 1]\n\n    var isTypeArray = checkAllAliases(keys.join('.'), flags.arrays)\n    var isValueArray = Array.isArray(value)\n    var duplicate = configuration['duplicate-arguments-array']\n\n    if (value === increment) {\n      o[key] = increment(o[key])\n    } else if (Array.isArray(o[key])) {\n      if (duplicate && isTypeArray && isValueArray) {\n        o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : [o[key]].concat([value])\n      } else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n        o[key] = value\n      } else {\n        o[key] = o[key].concat([value])\n      }\n    } else if (o[key] === undefined && isTypeArray) {\n      o[key] = isValueArray ? value : [value]\n    } else if (duplicate && !(o[key] === undefined || checkAllAliases(key, flags.bools) || checkAllAliases(keys.join('.'), flags.bools) || checkAllAliases(key, flags.counts))) {\n      o[key] = [ o[key], value ]\n    } else {\n      o[key] = value\n    }\n  }\n\n  // extend the aliases list with inferred aliases.\n  function extendAliases () {\n    Array.prototype.slice.call(arguments).forEach(function (obj) {\n      Object.keys(obj || {}).forEach(function (key) {\n        // short-circuit if we've already added a key\n        // to the aliases array, for example it might\n        // exist in both 'opts.default' and 'opts.key'.\n        if (flags.aliases[key]) return\n\n        flags.aliases[key] = [].concat(aliases[key] || [])\n        // For \"--option-name\", also set argv.optionName\n        flags.aliases[key].concat(key).forEach(function (x) {\n          if (/-/.test(x) && configuration['camel-case-expansion']) {\n            var c = camelCase(x)\n            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n              flags.aliases[key].push(c)\n              newAliases[c] = true\n            }\n          }\n        })\n        flags.aliases[key].forEach(function (x) {\n          flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n            return x !== y\n          }))\n        })\n      })\n    })\n  }\n\n  // check if a flag is set for any of a key's aliases.\n  function checkAllAliases (key, flag) {\n    var isSet = false\n    var toCheck = [].concat(flags.aliases[key] || [], key)\n\n    toCheck.forEach(function (key) {\n      if (flag[key]) isSet = flag[key]\n    })\n\n    return isSet\n  }\n\n  function setDefaulted (key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      flags.defaulted[k] = true\n    })\n  }\n\n  function unsetDefaulted (key) {\n    [].concat(flags.aliases[key] || [], key).forEach(function (k) {\n      delete flags.defaulted[k]\n    })\n  }\n\n  // return a default value, given the type of a flag.,\n  // e.g., key of type 'string' will default to '', rather than 'true'.\n  function defaultForType (type) {\n    var def = {\n      boolean: true,\n      string: '',\n      number: undefined,\n      array: []\n    }\n\n    return def[type]\n  }\n\n  // given a flag, enforce a default type.\n  function guessType (key, flags) {\n    var type = 'boolean'\n\n    if (checkAllAliases(key, flags.strings)) type = 'string'\n    else if (checkAllAliases(key, flags.numbers)) type = 'number'\n    else if (checkAllAliases(key, flags.arrays)) type = 'array'\n\n    return type\n  }\n\n  function isNumber (x) {\n    if (typeof x === 'number') return true\n    if (/^0x[0-9a-f]+$/i.test(x)) return true\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x)\n  }\n\n  function isUndefined (num) {\n    return num === undefined\n  }\n\n  return {\n    argv: argv,\n    error: error,\n    aliases: flags.aliases,\n    newAliases: newAliases,\n    configuration: configuration\n  }\n}\n\n// if any aliases reference each other, we should\n// merge them together.\nfunction combineAliases (aliases) {\n  var aliasArrays = []\n  var change = true\n  var combined = {}\n\n  // turn alias lookup hash {key: ['alias1', 'alias2']} into\n  // a simple array ['key', 'alias1', 'alias2']\n  Object.keys(aliases).forEach(function (key) {\n    aliasArrays.push(\n      [].concat(aliases[key], key)\n    )\n  })\n\n  // combine arrays until zero changes are\n  // made in an iteration.\n  while (change) {\n    change = false\n    for (var i = 0; i < aliasArrays.length; i++) {\n      for (var ii = i + 1; ii < aliasArrays.length; ii++) {\n        var intersect = aliasArrays[i].filter(function (v) {\n          return aliasArrays[ii].indexOf(v) !== -1\n        })\n\n        if (intersect.length) {\n          aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii])\n          aliasArrays.splice(ii, 1)\n          change = true\n          break\n        }\n      }\n    }\n  }\n\n  // map arrays back to the hash-lookup (de-dupe while\n  // we're at it).\n  aliasArrays.forEach(function (aliasArray) {\n    aliasArray = aliasArray.filter(function (v, i, self) {\n      return self.indexOf(v) === i\n    })\n    combined[aliasArray.pop()] = aliasArray\n  })\n\n  return combined\n}\n\nfunction assign (defaults, configuration) {\n  var o = {}\n  configuration = configuration || {}\n\n  Object.keys(defaults).forEach(function (k) {\n    o[k] = defaults[k]\n  })\n  Object.keys(configuration).forEach(function (k) {\n    o[k] = configuration[k]\n  })\n\n  return o\n}\n\n// this function should only be called when a count is given as an arg\n// it is NOT called to set a default value\n// thus we can start the count at 1 instead of 0\nfunction increment (orig) {\n  return orig !== undefined ? orig + 1 : 1\n}\n\nfunction Parser (args, opts) {\n  var result = parse(args.slice(), opts)\n\n  return result.argv\n}\n\n// parse arguments and return detailed\n// meta information, aliases, etc.\nParser.detailed = function (args, opts) {\n  return parse(args.slice(), opts)\n}\n\nmodule.exports = Parser\n"]}