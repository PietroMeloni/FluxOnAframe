{"version":3,"sources":["../../../../../node_modules/npm/node_modules/camelcase/index.js"],"names":["preserveCamelCase","str","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","c","test","toUpperCase","substr","toLowerCase","module","exports","arguments","Array","from","map","x","trim","filter","join","hasUpperCase","replace","m","p1"],"mappings":"AAAA;;AAEA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgC;AAC/B,KAAIC,kBAAkB,KAAtB;AACA,KAAIC,kBAAkB,KAAtB;AACA,KAAIC,sBAAsB,KAA1B;;AAEA,MAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,IAAIK,MAAxB,EAAgCD,GAAhC,EAAqC;AACpC,MAAME,IAAIN,IAAII,CAAJ,CAAV;;AAEA,MAAIH,mBAAmB,WAAWM,IAAX,CAAgBD,CAAhB,CAAnB,IAAyCA,EAAEE,WAAF,OAAoBF,CAAjE,EAAoE;AACnEN,SAAMA,IAAIS,MAAJ,CAAW,CAAX,EAAcL,CAAd,IAAmB,GAAnB,GAAyBJ,IAAIS,MAAJ,CAAWL,CAAX,CAA/B;AACAH,qBAAkB,KAAlB;AACAE,yBAAsBD,eAAtB;AACAA,qBAAkB,IAAlB;AACAE;AACA,GAND,MAMO,IAAIF,mBAAmBC,mBAAnB,IAA0C,WAAWI,IAAX,CAAgBD,CAAhB,CAA1C,IAAgEA,EAAEI,WAAF,OAAoBJ,CAAxF,EAA2F;AACjGN,SAAMA,IAAIS,MAAJ,CAAW,CAAX,EAAcL,IAAI,CAAlB,IAAuB,GAAvB,GAA6BJ,IAAIS,MAAJ,CAAWL,IAAI,CAAf,CAAnC;AACAD,yBAAsBD,eAAtB;AACAA,qBAAkB,KAAlB;AACAD,qBAAkB,IAAlB;AACA,GALM,MAKA;AACNA,qBAAkBK,EAAEI,WAAF,OAAoBJ,CAAtC;AACAH,yBAAsBD,eAAtB;AACAA,qBAAkBI,EAAEE,WAAF,OAAoBF,CAAtC;AACA;AACD;;AAED,QAAON,GAAP;AACA;;AAEDW,OAAOC,OAAP,GAAiB,UAAUZ,GAAV,EAAe;AAC/B,KAAIa,UAAUR,MAAV,GAAmB,CAAvB,EAA0B;AACzBL,QAAMc,MAAMC,IAAN,CAAWF,SAAX,EACJG,GADI,CACA;AAAA,UAAKC,EAAEC,IAAF,EAAL;AAAA,GADA,EAEJC,MAFI,CAEG;AAAA,UAAKF,EAAEZ,MAAP;AAAA,GAFH,EAGJe,IAHI,CAGC,GAHD,CAAN;AAIA,EALD,MAKO;AACNpB,QAAMA,IAAIkB,IAAJ,EAAN;AACA;;AAED,KAAIlB,IAAIK,MAAJ,KAAe,CAAnB,EAAsB;AACrB,SAAO,EAAP;AACA;;AAED,KAAIL,IAAIK,MAAJ,KAAe,CAAnB,EAAsB;AACrB,SAAOL,IAAIU,WAAJ,EAAP;AACA;;AAED,KAAI,cAAcH,IAAd,CAAmBP,GAAnB,CAAJ,EAA6B;AAC5B,SAAOA,GAAP;AACA;;AAED,KAAMqB,eAAerB,QAAQA,IAAIU,WAAJ,EAA7B;;AAEA,KAAIW,YAAJ,EAAkB;AACjBrB,QAAMD,kBAAkBC,GAAlB,CAAN;AACA;;AAED,QAAOA,IACLsB,OADK,CACG,WADH,EACgB,EADhB,EAELZ,WAFK,GAGLY,OAHK,CAGG,iBAHH,EAGsB,UAACC,CAAD,EAAIC,EAAJ;AAAA,SAAWA,GAAGhB,WAAH,EAAX;AAAA,EAHtB,CAAP;AAIA,CAhCD","file":"index.js","sourcesContent":["'use strict';\n\nfunction preserveCamelCase(str) {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst c = str[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n\t\t\tstr = str.substr(0, i) + '-' + str.substr(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(c) && c.toLowerCase() === c) {\n\t\t\tstr = str.substr(0, i - 1) + '-' + str.substr(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = c.toLowerCase() === c;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = c.toUpperCase() === c;\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function (str) {\n\tif (arguments.length > 1) {\n\t\tstr = Array.from(arguments)\n\t\t\t.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tstr = str.trim();\n\t}\n\n\tif (str.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (str.length === 1) {\n\t\treturn str.toLowerCase();\n\t}\n\n\tif (/^[a-z0-9]+$/.test(str)) {\n\t\treturn str;\n\t}\n\n\tconst hasUpperCase = str !== str.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tstr = preserveCamelCase(str);\n\t}\n\n\treturn str\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (m, p1) => p1.toUpperCase());\n};\n"]}