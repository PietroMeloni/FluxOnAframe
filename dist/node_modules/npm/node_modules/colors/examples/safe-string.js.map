{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/colors/examples/safe-string.js"],"names":["colors","require","console","log","yellow","underline","red","bold","rainbow","trap","italic","green","inverse","zebra","strikethrough","black","bgWhite","random","america","setTheme","silly","input","verbose","prompt","info","data","help","warn","debug","error","__dirname"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,SAAR,CAAb;;AAEAC,QAAQC,GAAR,CAAYH,OAAOI,MAAP,CAAc,wBAAd,CAAZ;;AAEAF,QAAQC,GAAR,CAAYH,OAAOI,MAAP,CAAcC,SAAd,CAAwB,qBAAxB,CAAZ;;AAEAH,QAAQC,GAAR,CAAYH,OAAOM,GAAP,CAAWC,IAAX,CAAgB,sBAAhB,CAAZ;;AAEAL,QAAQC,GAAR,CAAYH,OAAOQ,OAAP,CAAe,8BAAf,CAAZ;;AAEAN,QAAQC,GAAR,CAAYH,OAAOS,IAAP,CAAY,eAAZ,CAAZ;;AAEAP,QAAQC,GAAR,CAAYH,OAAOQ,OAAP,CAAeR,OAAOS,IAAP,CAAY,uBAAZ,CAAf,CAAZ;;AAEA;AACAP,QAAQC,GAAR,CAAYH,OAAOO,IAAP,CAAYG,MAAZ,CAAmBL,SAAnB,CAA6BC,GAA7B,CAAiC,uBAAjC,CAAZ;;AAEA;AACAJ,QAAQC,GAAR,CAAYH,OAAOW,KAAP,CAAa,KAAb,IAAsBX,OAAOK,SAAP,CAAiB,KAAjB,CAAtB,GAAgD,GAAhD,GACRL,OAAOY,OAAP,CAAe,SAAf,CADQ,GACoBZ,OAAOI,MAAP,CAAcG,IAAd,CAAmB,WAAnB,CADhC;;AAGAL,QAAQC,GAAR,CAAYH,OAAOa,KAAP,CAAa,oBAAb,CAAZ;;AAEAX,QAAQC,GAAR,CAAY,aAAaH,OAAOc,aAAP,CAAqB,KAArB,CAAb,GAA2C,OAAvD;;AAGAZ,QAAQC,GAAR,CAAYH,OAAOe,KAAP,CAAaC,OAAb,CAAqB,0BAArB,CAAZ;AACAd,QAAQC,GAAR,CAAYH,OAAOiB,MAAP,CAAc,kCAAd,CAAZ;AACAf,QAAQC,GAAR,CAAYH,OAAOkB,OAAP,CAAe,qBAAf,CAAZ;;AAEAhB,QAAQC,GAAR,CAAY,0BAAZ;;AAEA;AACA;AACA;AACA;AACA;AACAH,OAAOmB,QAAP,CAAgB;AACdC,SAAO,SADO;AAEdC,SAAO,MAFO;AAGdC,WAAS,MAHK;AAIdC,UAAQ,MAJM;AAKdC,QAAM,OALQ;AAMdC,QAAM,MANQ;AAOdC,QAAM,MAPQ;AAQdC,QAAM,QARQ;AASdC,SAAO,MATO;AAUdC,SAAO;AAVO,CAAhB;;AAaA;AACA3B,QAAQC,GAAR,CAAYH,OAAO6B,KAAP,CAAa,kBAAb,CAAZ;;AAEA;AACA3B,QAAQC,GAAR,CAAYH,OAAO2B,IAAP,CAAY,mBAAZ,CAAZ;;AAEA;AACAzB,QAAQC,GAAR,CAAYH,OAAOqB,KAAP,CAAa,kBAAb,CAAZ;;AAGA;;AAEA;AACArB,OAAOmB,QAAP,CAAgBW,YAAY,+BAA5B;;AAEA;AACA5B,QAAQC,GAAR,CAAYH,OAAO6B,KAAP,CAAa,kBAAb,CAAZ;;AAEA;AACA3B,QAAQC,GAAR,CAAYH,OAAO2B,IAAP,CAAY,mBAAZ,CAAZ;;AAEA;AACAzB,QAAQC,GAAR,CAAYH,OAAOqB,KAAP,CAAa,kBAAb,CAAZ;;AAEA","file":"safe-string.js","sourcesContent":["var colors = require('../safe');\n\nconsole.log(colors.yellow('First some yellow text'));\n\nconsole.log(colors.yellow.underline('Underline that text'));\n\nconsole.log(colors.red.bold('Make it bold and red'));\n\nconsole.log(colors.rainbow('Double Raindows All Day Long'));\n\nconsole.log(colors.trap('Drop the bass'));\n\nconsole.log(colors.rainbow(colors.trap('DROP THE RAINBOW BASS')));\n\n// styles not widely supported\nconsole.log(colors.bold.italic.underline.red('Chains are also cool.'));\n\n// styles not widely supported\nconsole.log(colors.green('So ') + colors.underline('are') + ' '\n  + colors.inverse('inverse') + colors.yellow.bold(' styles! '));\n\nconsole.log(colors.zebra('Zebras are so fun!'));\n\nconsole.log('This is ' + colors.strikethrough('not') + ' fun.');\n\n\nconsole.log(colors.black.bgWhite('Background color attack!'));\nconsole.log(colors.random('Use random styles on everything!'));\nconsole.log(colors.america('America, Heck Yeah!'));\n\nconsole.log('Setting themes is useful');\n\n//\n// Custom themes\n//\n// console.log('Generic logging theme as JSON'.green.bold.underline);\n// Load theme with JSON literal\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red',\n});\n\n// outputs red text\nconsole.log(colors.error('this is an error'));\n\n// outputs yellow text\nconsole.log(colors.warn('this is a warning'));\n\n// outputs grey text\nconsole.log(colors.input('this is an input'));\n\n\n// console.log('Generic logging theme as file'.green.bold.underline);\n\n// Load a theme from file\ncolors.setTheme(__dirname + '/../themes/generic-logging.js');\n\n// outputs red text\nconsole.log(colors.error('this is an error'));\n\n// outputs yellow text\nconsole.log(colors.warn('this is a warning'));\n\n// outputs grey text\nconsole.log(colors.input('this is an input'));\n\n// console.log(colors.zalgo(\"Don't summon him\"))\n\n\n"]}