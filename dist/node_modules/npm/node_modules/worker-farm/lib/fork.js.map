{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/worker-farm/lib/fork.js"],"names":["childProcess","require","childModule","resolve","fork","forkModule","workerOptions","filteredArgs","process","execArgv","filter","v","test","options","Object","assign","env","cwd","child","argv","on","send","module","bind","exports"],"mappings":"AAAA;;AAEA,IAAMA,eAAeC,QAAQ,eAAR,CAArB;AAAA,IACMC,cAAeD,QAAQE,OAAR,CAAgB,eAAhB,CADrB;;AAIA,SAASC,IAAT,CAAeC,UAAf,EAA2BC,aAA3B,EAA0C;AACxC;AACA,MAAIC,eAAeC,QAAQC,QAAR,CAAiBC,MAAjB,CAAwB,UAAUC,CAAV,EAAa;AAClD,WAAO,CAAE,oBAAD,CAAuBC,IAAvB,CAA4BD,CAA5B,CAAR;AACD,GAFc,CAAnB;AAAA,MAGIE,UAAgBC,OAAOC,MAAP,CAAc;AAC1BN,cAAWF,YADe;AAE1BS,SAAWR,QAAQQ,GAFO;AAG1BC,SAAWT,QAAQS,GAAR;AAHe,GAAd,EAIbX,aAJa,CAHpB;AAAA,MAQIY,QAAgBlB,aAAaI,IAAb,CAAkBF,WAAlB,EAA+BM,QAAQW,IAAvC,EAA6CN,OAA7C,CARpB;;AAUAK,QAAME,EAAN,CAAS,OAAT,EAAkB,YAAW;AAC3B;AACD,GAFD;;AAIAF,QAAMG,IAAN,CAAW,EAAEC,QAAQjB,UAAV,EAAX;;AAEA;AACA,SAAO;AACHgB,UAAQH,MAAMG,IAAN,CAAWE,IAAX,CAAgBL,KAAhB,CADL;AAEHA,WAAQA;AAFL,GAAP;AAID;;AAGDI,OAAOE,OAAP,GAAiBpB,IAAjB","file":"fork.js","sourcesContent":["'use strict'\n\nconst childProcess = require('child_process')\n    , childModule  = require.resolve('./child/index')\n\n\nfunction fork (forkModule, workerOptions) {\n  // suppress --debug / --inspect flags while preserving others (like --harmony)\n  let filteredArgs = process.execArgv.filter(function (v) {\n        return !(/^--(debug|inspect)/).test(v)\n      })\n    , options       = Object.assign({\n          execArgv : filteredArgs\n        , env      : process.env\n        , cwd      : process.cwd()\n      }, workerOptions)\n    , child         = childProcess.fork(childModule, process.argv, options)\n\n  child.on('error', function() {\n    // this *should* be picked up by onExit and the operation requeued\n  })\n\n  child.send({ module: forkModule })\n\n  // return a send() function for this child\n  return {\n      send  : child.send.bind(child)\n    , child : child\n  }\n}\n\n\nmodule.exports = fork\n"]}