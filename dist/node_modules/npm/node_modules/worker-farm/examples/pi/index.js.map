{"version":3,"sources":["../../../../../../../node_modules/npm/node_modules/worker-farm/examples/pi/index.js"],"names":["CHILDREN","POINTS_PER_CHILD","FARM_OPTIONS","maxConcurrentWorkers","require","cpus","length","maxCallsPerWorker","Infinity","maxConcurrentCallsPerWorker","workerFarm","calcDirect","calcWorker","resolve","ret","start","tally","finish","err","avg","push","pi","reduce","a","b","end","Date","console","log","Math","abs","PI","calc","method","callback","i","bind","process","exit"],"mappings":"AAAA;;AAEA,IAAMA,WAAmB,GAAzB;AAAA,IACMC,mBAAmB,OADzB;AAAA,IAEMC,eAAmB;AACfC,wBAA8BC,QAAQ,IAAR,EAAcC,IAAd,GAAqBC,MADpC;AAEfC,qBAA8BC,QAFf;AAGfC,+BAA8B;AAHf,CAFzB;;AAQA,IAAIC,aAAaN,QAAQ,QAAR,CAAjB;AAAA,IACIO,aAAaP,QAAQ,QAAR,CADjB;AAAA,IAEIQ,aAAaF,WAAWR,YAAX,EAAyBE,QAAQS,OAAR,CAAgB,QAAhB,CAAzB,CAFjB;AAAA,IAIIC,YAJJ;AAAA,IAKIC,cALJ;AAAA,IAOIC,QAAQ,SAARA,KAAQ,CAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AAClCL,MAAIM,IAAJ,CAASD,GAAT;AACA,MAAIL,IAAIR,MAAJ,IAAcN,QAAlB,EAA4B;AAC1B,QAAIqB,KAAMP,IAAIQ,MAAJ,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAOD,IAAIC,CAAX;AAAc,KAA3C,IAA+CV,IAAIR,MAA7D;AAAA,QACImB,MAAM,CAAC,IAAIC,IAAJ,EADX;AAEAC,YAAQC,GAAR,CAAY,KAAZ,EAAmBP,EAAnB,EAAuB,QAAQQ,KAAKC,GAAL,CAAST,KAAKQ,KAAKE,EAAnB,CAA/B,EAAuD,oBAAvD;AACAJ,YAAQC,GAAR,CAAY,MAAZ,EAAoBH,MAAMV,KAA1B,EAAiC,cAAjC;AACA,QAAIE,MAAJ,EACEA;AACH;AACF,CAjBL;AAAA,IAmBIe,OAAO,SAAPA,IAAO,CAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACjCpB,QAAQ,EAAR;AACAC,UAAQ,CAAC,IAAIW,IAAJ,EAAT;AACA,OAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAInC,QAApB,EAA8BmC,GAA9B;AACEF,WAAOhC,gBAAP,EAAyBe,MAAMoB,IAAN,CAAW,IAAX,EAAiBF,QAAjB,CAAzB;AADF;AAED,CAxBL;;AA0BAP,QAAQC,GAAR,CAAY,2CAAZ;AACAI,KAAKrB,UAAL,EAAiB,YAAY;AAC3BgB,UAAQC,GAAR,CAAY,0CAAZ;AACAI,OAAKpB,UAAL,EAAiByB,QAAQC,IAAzB;AACD,CAHD","file":"index.js","sourcesContent":["'use strict'\n\nconst CHILDREN         = 500\n    , POINTS_PER_CHILD = 1000000\n    , FARM_OPTIONS     = {\n          maxConcurrentWorkers        : require('os').cpus().length\n        , maxCallsPerWorker           : Infinity\n        , maxConcurrentCallsPerWorker : 1\n      }\n\nlet workerFarm = require('../../')\n  , calcDirect = require('./calc')\n  , calcWorker = workerFarm(FARM_OPTIONS, require.resolve('./calc'))\n\n  , ret\n  , start\n\n  , tally = function (finish, err, avg) {\n      ret.push(avg)\n      if (ret.length == CHILDREN) {\n        let pi  = ret.reduce(function (a, b) { return a + b }) / ret.length\n          , end = +new Date()\n        console.log('π ≈', pi, '\\t(' + Math.abs(pi - Math.PI), 'away from actual!)')\n        console.log('took', end - start, 'milliseconds')\n        if (finish)\n          finish()\n      }\n    }\n\n  , calc = function (method, callback) {\n      ret   = []\n      start = +new Date()\n      for (let i = 0; i < CHILDREN; i++)\n        method(POINTS_PER_CHILD, tally.bind(null, callback))\n    }\n\nconsole.log('Doing it the slow (single-process) way...')\ncalc(calcDirect, function () {\n  console.log('Doing it the fast (multi-process) way...')\n  calc(calcWorker, process.exit)\n})\n"]}