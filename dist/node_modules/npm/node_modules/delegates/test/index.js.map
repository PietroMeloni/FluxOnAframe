{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/delegates/test/index.js"],"names":["assert","require","delegate","describe","it","obj","request","foo","bar","method","should","equal","type","getter","_type","toUpperCase","val","setter","access","settings","env","fluent"],"mappings":";;AACA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,WAAWD,QAAQ,IAAR,CAAf;;AAEAE,SAAS,eAAT,EAA0B,YAAU;AAClCC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAIC,MAAM,EAAV;;AAEAA,QAAIC,OAAJ,GAAc;AACZC,WAAK,aAASC,GAAT,EAAa;AAChBR,eAAO,QAAQK,IAAIC,OAAnB;AACA,eAAOE,GAAP;AACD;AAJW,KAAd;;AAOAN,aAASG,GAAT,EAAc,SAAd,EAAyBI,MAAzB,CAAgC,KAAhC;;AAEAJ,QAAIE,GAAJ,CAAQ,WAAR,EAAqBG,MAArB,CAA4BC,KAA5B,CAAkC,WAAlC;AACD,GAbD;AAcD,CAfD;;AAiBAR,SAAS,eAAT,EAA0B,YAAU;AAClCC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAIC,MAAM,EAAV;;AAEAA,QAAIC,OAAJ,GAAc;AACZ,UAAIM,IAAJ,GAAW;AACT,eAAO,WAAP;AACD;AAHW,KAAd;;AAMAV,aAASG,GAAT,EAAc,SAAd,EAAyBQ,MAAzB,CAAgC,MAAhC;;AAEAR,QAAIO,IAAJ,CAASF,MAAT,CAAgBC,KAAhB,CAAsB,WAAtB;AACD,GAZD;AAaD,CAdD;;AAgBAR,SAAS,eAAT,EAA0B,YAAU;AAClCC,KAAG,yBAAH,EAA8B,YAAU;AACtC,QAAIC,MAAM,EAAV;;AAEAA,QAAIC,OAAJ,GAAc;AACZ,UAAIM,IAAJ,GAAW;AACT,eAAO,KAAKE,KAAL,CAAWC,WAAX,EAAP;AACD,OAHW;;AAKZ,UAAIH,IAAJ,CAASI,GAAT,EAAc;AACZ,aAAKF,KAAL,GAAaE,GAAb;AACD;AAPW,KAAd;;AAUAd,aAASG,GAAT,EAAc,SAAd,EAAyBY,MAAzB,CAAgC,MAAhC;;AAEAZ,QAAIO,IAAJ,GAAW,KAAX;AACAP,QAAIC,OAAJ,CAAYM,IAAZ,CAAiBF,MAAjB,CAAwBC,KAAxB,CAA8B,KAA9B;AACD,GAjBD;AAkBD,CAnBD;;AAqBAR,SAAS,eAAT,EAA0B,YAAU;AAClCC,KAAG,qCAAH,EAA0C,YAAU;AAClD,QAAIC,MAAM,EAAV;;AAEAA,QAAIC,OAAJ,GAAc;AACZ,UAAIM,IAAJ,GAAW;AACT,eAAO,KAAKE,KAAL,CAAWC,WAAX,EAAP;AACD,OAHW;;AAKZ,UAAIH,IAAJ,CAASI,GAAT,EAAc;AACZ,aAAKF,KAAL,GAAaE,GAAb;AACD;AAPW,KAAd;;AAUAd,aAASG,GAAT,EAAc,SAAd,EAAyBa,MAAzB,CAAgC,MAAhC;;AAEAb,QAAIO,IAAJ,GAAW,KAAX;AACAP,QAAIO,IAAJ,CAASF,MAAT,CAAgBC,KAAhB,CAAsB,KAAtB;AACD,GAjBD;AAkBD,CAnBD;;AAqBAR,SAAS,eAAT,EAA0B,YAAY;AACpCC,KAAG,qCAAH,EAA0C,YAAY;AACpD,QAAIC,MAAM;AACRc,gBAAU;AACRC,aAAK;AADG;AADF,KAAV;;AAMAlB,aAASG,GAAT,EAAc,UAAd,EAA0BgB,MAA1B,CAAiC,KAAjC;;AAEAhB,QAAIe,GAAJ,GAAUV,MAAV,CAAiBC,KAAjB,CAAuB,aAAvB;AACAN,QAAIe,GAAJ,CAAQ,YAAR,EAAsBV,MAAtB,CAA6BC,KAA7B,CAAmCN,GAAnC;AACAA,QAAIc,QAAJ,CAAaC,GAAb,CAAiBV,MAAjB,CAAwBC,KAAxB,CAA8B,YAA9B;AACD,GAZD;AAaD,CAdD","file":"index.js","sourcesContent":["\nvar assert = require('assert');\nvar delegate = require('..');\n\ndescribe('.method(name)', function(){\n  it('should delegate methods', function(){\n    var obj = {};\n\n    obj.request = {\n      foo: function(bar){\n        assert(this == obj.request);\n        return bar;\n      }\n    };\n\n    delegate(obj, 'request').method('foo');\n\n    obj.foo('something').should.equal('something');\n  })\n})\n\ndescribe('.getter(name)', function(){\n  it('should delegate getters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return 'text/html';\n      }\n    }\n\n    delegate(obj, 'request').getter('type');\n\n    obj.type.should.equal('text/html');\n  })\n})\n\ndescribe('.setter(name)', function(){\n  it('should delegate setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').setter('type');\n\n    obj.type = 'hey';\n    obj.request.type.should.equal('HEY');\n  })\n})\n\ndescribe('.access(name)', function(){\n  it('should delegate getters and setters', function(){\n    var obj = {};\n\n    obj.request = {\n      get type() {\n        return this._type.toUpperCase();\n      },\n\n      set type(val) {\n        this._type = val;\n      }\n    }\n\n    delegate(obj, 'request').access('type');\n\n    obj.type = 'hey';\n    obj.type.should.equal('HEY');\n  })\n})\n\ndescribe('.fluent(name)', function () {\n  it('should delegate in a fluent fashion', function () {\n    var obj = {\n      settings: {\n        env: 'development'\n      }\n    };\n\n    delegate(obj, 'settings').fluent('env');\n\n    obj.env().should.equal('development');\n    obj.env('production').should.equal(obj);\n    obj.settings.env.should.equal('production');\n  })\n})\n"]}