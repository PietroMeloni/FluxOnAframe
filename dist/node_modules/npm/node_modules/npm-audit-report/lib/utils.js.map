{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/npm-audit-report/lib/utils.js"],"names":["exports","severityLabel","color","totalVulnCount","severities","ccs","require","severityColors","critical","label","high","moderate","low","info","value","colorName","withColor","sev","bold","charAt","toUpperCase","substr","toLowerCase","vulns","Object","keys","reduce","accumulator","key","vulnCount","severity","push"],"mappings":"AAAA;;AAEAA,QAAQC,aAAR,GAAwBA,aAAxB;AACAD,QAAQE,KAAR,GAAgBA,KAAhB;AACAF,QAAQG,cAAR,GAAyBA,cAAzB;AACAH,QAAQI,UAAR,GAAqBA,UAArB;;AAEA,IAAMC,MAAMC,QAAQ,yBAAR,CAAZ;;AAEA,IAAMC,iBAAiB;AACrBC,YAAU;AACRN,WAAO,eADC;AAERO,WAAO;AAFC,GADW;AAKrBC,QAAM;AACJR,WAAO,WADH;AAEJO,WAAO;AAFH,GALe;AASrBE,YAAU;AACRT,WAAO,cADC;AAERO,WAAO;AAFC,GATW;AAarBG,OAAK;AACHV,WAAO,MADJ;AAEHO,WAAO;AAFJ,GAbgB;AAiBrBI,QAAM;AACJX,WAAO,EADH;AAEJO,WAAO;AAFH;AAjBe,CAAvB;;AAuBA,SAASP,KAAT,CAAgBY,KAAhB,EAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AAC3C,SAAQD,aAAaC,SAAd,GAA2BX,IAAIH,KAAJ,CAAUa,SAAV,IAAuBD,KAAvB,GAA+BT,IAAIH,KAAJ,CAAU,OAAV,CAA1D,GAA+EY,KAAtF;AACD;;AAED,SAASb,aAAT,CAAwBgB,GAAxB,EAA6BD,SAA7B,EAAwCE,IAAxC,EAA8C;AAC5C,MAAI,EAAED,OAAOV,cAAT,CAAJ,EAA8B,OAAOU,IAAIE,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BH,IAAII,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AAC9B,MAAIP,YAAYR,eAAeU,GAAf,EAAoBf,KAApC;AACA,MAAIgB,IAAJ,EAAUH,YAAY,CAACA,SAAD,EAAY,MAAZ,CAAZ;AACV,SAAOb,MAAMK,eAAeU,GAAf,EAAoBR,KAA1B,EAAiCM,SAAjC,EAA4CC,SAA5C,CAAP;AACD;;AAED,SAASb,cAAT,CAAyBoB,KAAzB,EAAgC;AAC9B,SAAOC,OAAOC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAACC,WAAD,EAAcC,GAAd,EAAsB;AACrD,QAAMC,YAAYN,MAAMK,GAAN,CAAlB;AACAD,mBAAeE,SAAf;;AAEA,WAAOF,WAAP;AACD,GALM,EAKJ,CALI,CAAP;AAMD;;AAED,SAASvB,UAAT,CAAqBmB,KAArB,EAA4B;AAC1B,SAAOC,OAAOC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAACC,WAAD,EAAcG,QAAd,EAA2B;AAC1D,QAAMD,YAAYN,MAAMO,QAAN,CAAlB;AACA,QAAID,YAAY,CAAhB,EAAmBF,YAAYI,IAAZ,CAAiB,CAACD,QAAD,EAAWD,SAAX,CAAjB;;AAEnB,WAAOF,WAAP;AACD,GALM,EAKJ,EALI,CAAP;AAMD","file":"utils.js","sourcesContent":["'use strict'\n\nexports.severityLabel = severityLabel\nexports.color = color\nexports.totalVulnCount = totalVulnCount\nexports.severities = severities\n\nconst ccs = require('console-control-strings')\n\nconst severityColors = {\n  critical: {\n    color: 'brightMagenta',\n    label: 'Critical'\n  },\n  high: {\n    color: 'brightRed',\n    label: 'High'\n  },\n  moderate: {\n    color: 'brightYellow',\n    label: 'Moderate'\n  },\n  low: {\n    color: 'bold',\n    label: 'Low'\n  },\n  info: {\n    color: '',\n    label: 'Info'\n  }\n}\n\nfunction color (value, colorName, withColor) {\n  return (colorName && withColor) ? ccs.color(colorName) + value + ccs.color('reset') : value\n}\n\nfunction severityLabel (sev, withColor, bold) {\n  if (!(sev in severityColors)) return sev.charAt(0).toUpperCase() + sev.substr(1).toLowerCase()\n  let colorName = severityColors[sev].color\n  if (bold) colorName = [colorName, 'bold']\n  return color(severityColors[sev].label, colorName, withColor)\n}\n\nfunction totalVulnCount (vulns) {\n  return Object.keys(vulns).reduce((accumulator, key) => {\n    const vulnCount = vulns[key]\n    accumulator += vulnCount\n\n    return accumulator\n  }, 0)\n}\n\nfunction severities (vulns) {\n  return Object.keys(vulns).reduce((accumulator, severity) => {\n    const vulnCount = vulns[severity]\n    if (vulnCount > 0) accumulator.push([severity, vulnCount])\n\n    return accumulator\n  }, [])\n}\n"]}