{"version":3,"sources":["../../../../../node_modules/npm/node_modules/aproba/index.js"],"names":["isArguments","thingy","hasOwnProperty","types","label","check","A","Array","isArray","S","N","F","O","E","B","Error","Z","addSchema","schema","arity","group","length","indexOf","push","validate","module","exports","rawSchemas","args","arguments","wrongNumberOfArgs","missingRequiredArg","invalidType","schemas","split","forEach","ii","type","unknownType","test","moreThanOneError","replace","matching","Object","keys","newMatching","filter","typeCheck","labels","map","num","newException","expectedTypes","value","valueType","typeCode","englishList","list","join","expected","got","english","every","ex","code","msg","e","captureStackTrace"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\nfunction isArguments (thingy) {\n  return thingy != null && typeof thingy === 'object' && thingy.hasOwnProperty('callee')\n}\n\nvar types = {\n  '*': {label: 'any', check: function () { return true }},\n  A: {label: 'array', check: function (thingy) { return Array.isArray(thingy) || isArguments(thingy) }},\n  S: {label: 'string', check: function (thingy) { return typeof thingy === 'string' }},\n  N: {label: 'number', check: function (thingy) { return typeof thingy === 'number' }},\n  F: {label: 'function', check: function (thingy) { return typeof thingy === 'function' }},\n  O: {label: 'object', check: function (thingy) { return typeof thingy === 'object' && thingy != null && !types.A.check(thingy) && !types.E.check(thingy) }},\n  B: {label: 'boolean', check: function (thingy) { return typeof thingy === 'boolean' }},\n  E: {label: 'error', check: function (thingy) { return thingy instanceof Error }},\n  Z: {label: 'null', check: function (thingy) { return thingy == null }}\n}\n\nfunction addSchema (schema, arity) {\n  var group = arity[schema.length] = arity[schema.length] || []\n  if (group.indexOf(schema) === -1) group.push(schema)\n}\n\nvar validate = module.exports = function (rawSchemas, args) {\n  if (arguments.length !== 2) throw wrongNumberOfArgs(['SA'], arguments.length)\n  if (!rawSchemas) throw missingRequiredArg(0, 'rawSchemas')\n  if (!args) throw missingRequiredArg(1, 'args')\n  if (!types.S.check(rawSchemas)) throw invalidType(0, ['string'], rawSchemas)\n  if (!types.A.check(args)) throw invalidType(1, ['array'], args)\n  var schemas = rawSchemas.split('|')\n  var arity = {}\n\n  schemas.forEach(function (schema) {\n    for (var ii = 0; ii < schema.length; ++ii) {\n      var type = schema[ii]\n      if (!types[type]) throw unknownType(ii, type)\n    }\n    if (/E.*E/.test(schema)) throw moreThanOneError(schema)\n    addSchema(schema, arity)\n    if (/E/.test(schema)) {\n      addSchema(schema.replace(/E.*$/, 'E'), arity)\n      addSchema(schema.replace(/E/, 'Z'), arity)\n      if (schema.length === 1) addSchema('', arity)\n    }\n  })\n  var matching = arity[args.length]\n  if (!matching) {\n    throw wrongNumberOfArgs(Object.keys(arity), args.length)\n  }\n  for (var ii = 0; ii < args.length; ++ii) {\n    var newMatching = matching.filter(function (schema) {\n      var type = schema[ii]\n      var typeCheck = types[type].check\n      return typeCheck(args[ii])\n    })\n    if (!newMatching.length) {\n      var labels = matching.map(function (schema) {\n        return types[schema[ii]].label\n      }).filter(function (schema) { return schema != null })\n      throw invalidType(ii, labels, args[ii])\n    }\n    matching = newMatching\n  }\n}\n\nfunction missingRequiredArg (num) {\n  return newException('EMISSINGARG', 'Missing required argument #' + (num + 1))\n}\n\nfunction unknownType (num, type) {\n  return newException('EUNKNOWNTYPE', 'Unknown type ' + type + ' in argument #' + (num + 1))\n}\n\nfunction invalidType (num, expectedTypes, value) {\n  var valueType\n  Object.keys(types).forEach(function (typeCode) {\n    if (types[typeCode].check(value)) valueType = types[typeCode].label\n  })\n  return newException('EINVALIDTYPE', 'Argument #' + (num + 1) + ': Expected ' +\n    englishList(expectedTypes) + ' but got ' + valueType)\n}\n\nfunction englishList (list) {\n  return list.join(', ').replace(/, ([^,]+)$/, ' or $1')\n}\n\nfunction wrongNumberOfArgs (expected, got) {\n  var english = englishList(expected)\n  var args = expected.every(function (ex) { return ex.length === 1 })\n    ? 'argument'\n    : 'arguments'\n  return newException('EWRONGARGCOUNT', 'Expected ' + english + ' ' + args + ' but got ' + got)\n}\n\nfunction moreThanOneError (schema) {\n  return newException('ETOOMANYERRORTYPES',\n    'Only one error type per argument signature is allowed, more than one found in \"' + schema + '\"')\n}\n\nfunction newException (code, msg) {\n  var e = new Error(msg)\n  e.code = code\n  if (Error.captureStackTrace) Error.captureStackTrace(e, validate)\n  return e\n}\n"]}