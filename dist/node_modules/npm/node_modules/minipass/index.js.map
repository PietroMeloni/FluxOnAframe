{"version":3,"sources":["../../../../../node_modules/npm/node_modules/minipass/index.js"],"names":["EE","require","Yallist","EOF","Symbol","MAYBE_EMIT_END","EMITTED_END","CLOSED","READ","FLUSH","doIter","process","env","_MP_NO_ITERATOR_SYMBOLS_","ASYNCITERATOR","asyncIterator","ITERATOR","iterator","FLUSHCHUNK","SD","StringDecoder","ENCODING","DECODER","FLOWING","RESUME","BUFFERLENGTH","BUFFERPUSH","BUFFERSHIFT","OBJECTMODE","SILENT_END","B","Buffer","alloc","module","exports","options","pipes","buffer","objectMode","encoding","writable","readable","enc","chunk","cb","Error","lastNeed","from","isBuffer","write","flowing","emit","n","length","Array","join","concat","head","value","slice","once","push","shift","dest","opts","stdout","stderr","end","p","ondrain","on","ev","fn","data","forEach","pause","removeListener","args","arguments","i","ret","apply","Promise","resolve","reject","buf","c","next","res","read","done","onerr","ondata","onend","er","rej","resume","map"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\nconst EE = require('events')\nconst Yallist = require('yallist')\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst doIter = process.env._MP_NO_ITERATOR_SYMBOLS_  !== '1'\nconst ASYNCITERATOR = doIter && Symbol.asyncIterator || Symbol('asyncIterator not implemented')\nconst ITERATOR = doIter && Symbol.iterator || Symbol('iterator not implemented')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst SD = require('string_decoder').StringDecoder\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst RESUME = Symbol('resume')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\nconst SILENT_END = Symbol('silentEnd')\n\n// Buffer in node 4.x < 4.5.0 doesn't have working Buffer.from\n// or Buffer.alloc, and Buffer in node 10 deprecated the ctor.\n// .M, this is fine .\\^/M..\nlet B = Buffer\n/* istanbul ignore next */\nif (!B.alloc) {\n  B = require('safe-buffer').Buffer\n}\n\nmodule.exports = class MiniPass extends EE {\n  constructor (options) {\n    super()\n    this[SILENT_END] = false\n    this[FLOWING] = false\n    this.pipes = new Yallist()\n    this.buffer = new Yallist()\n    this[OBJECTMODE] = options && options.objectMode || false\n    if (this[OBJECTMODE])\n      this[ENCODING] = null\n    else\n      this[ENCODING] = options && options.encoding || null\n    if (this[ENCODING] === 'buffer')\n      this[ENCODING] = null\n    this[DECODER] = this[ENCODING] ? new SD(this[ENCODING]) : null\n    this[EOF] = false\n    this[EMITTED_END] = false\n    this[CLOSED] = false\n    this.writable = true\n    this.readable = true\n    this[BUFFERLENGTH] = 0\n  }\n\n  get bufferLength () { return this[BUFFERLENGTH] }\n\n  get encoding () { return this[ENCODING] }\n  set encoding (enc) {\n    if (this[OBJECTMODE])\n      throw new Error('cannot set encoding in objectMode')\n\n    if (this[ENCODING] && enc !== this[ENCODING] &&\n        (this[DECODER] && this[DECODER].lastNeed || this[BUFFERLENGTH]))\n      throw new Error('cannot change encoding')\n\n    if (this[ENCODING] !== enc) {\n      this[DECODER] = enc ? new SD(enc) : null\n      if (this.buffer.length)\n        this.buffer = this.buffer.map(chunk => this[DECODER].write(chunk))\n    }\n\n    this[ENCODING] = enc\n  }\n\n  setEncoding (enc) {\n    this.encoding = enc\n  }\n\n  write (chunk, encoding, cb) {\n    if (this[EOF])\n      throw new Error('write after end')\n\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n\n    if (!encoding)\n      encoding = 'utf8'\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (typeof chunk === 'string' && !this[OBJECTMODE] &&\n        // unless it is a string already ready for us to use\n        !(encoding === this[ENCODING] && !this[DECODER].lastNeed)) {\n      chunk = B.from(chunk, encoding)\n    }\n\n    if (B.isBuffer(chunk) && this[ENCODING])\n      chunk = this[DECODER].write(chunk)\n\n    try {\n      return this.flowing\n        ? (this.emit('data', chunk), this.flowing)\n        : (this[BUFFERPUSH](chunk), false)\n    } finally {\n      this.emit('readable')\n      if (cb)\n        cb()\n    }\n  }\n\n  read (n) {\n    try {\n      if (this[BUFFERLENGTH] === 0 || n === 0 || n > this[BUFFERLENGTH])\n        return null\n\n      if (this[OBJECTMODE])\n        n = null\n\n      if (this.buffer.length > 1 && !this[OBJECTMODE]) {\n        if (this.encoding)\n          this.buffer = new Yallist([\n            Array.from(this.buffer).join('')\n          ])\n        else\n          this.buffer = new Yallist([\n            B.concat(Array.from(this.buffer), this[BUFFERLENGTH])\n          ])\n      }\n\n      return this[READ](n || null, this.buffer.head.value)\n    } finally {\n      this[MAYBE_EMIT_END]()\n    }\n  }\n\n  [READ] (n, chunk) {\n    if (n === chunk.length || n === null)\n      this[BUFFERSHIFT]()\n    else {\n      this.buffer.head.value = chunk.slice(n)\n      chunk = chunk.slice(0, n)\n      this[BUFFERLENGTH] -= n\n    }\n\n    this.emit('data', chunk)\n\n    if (!this.buffer.length && !this[EOF])\n      this.emit('drain')\n\n    return chunk\n  }\n\n  end (chunk, encoding, cb) {\n    if (typeof chunk === 'function')\n      cb = chunk, chunk = null\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n    if (chunk)\n      this.write(chunk, encoding)\n    if (cb)\n      this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n    if (this.flowing)\n      this[MAYBE_EMIT_END]()\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME] () {\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this.buffer.length)\n      this[FLUSH]()\n    else if (this[EOF])\n      this[MAYBE_EMIT_END]()\n    else\n      this.emit('drain')\n  }\n\n  resume () {\n    return this[RESUME]()\n  }\n\n  pause () {\n    this[FLOWING] = false\n  }\n\n  get flowing () {\n    return this[FLOWING]\n  }\n\n  [BUFFERPUSH] (chunk) {\n    if (this[OBJECTMODE])\n      this[BUFFERLENGTH] += 1\n    else\n      this[BUFFERLENGTH] += chunk.length\n    return this.buffer.push(chunk)\n  }\n\n  [BUFFERSHIFT] () {\n    if (this.buffer.length) {\n      if (this[OBJECTMODE])\n        this[BUFFERLENGTH] -= 1\n      else\n        this[BUFFERLENGTH] -= this.buffer.head.value.length\n    }\n    return this.buffer.shift()\n  }\n\n  [FLUSH] () {\n    do {} while (this[FLUSHCHUNK](this[BUFFERSHIFT]()))\n\n    if (!this.buffer.length && !this[EOF])\n      this.emit('drain')\n  }\n\n  [FLUSHCHUNK] (chunk) {\n    return chunk ? (this.emit('data', chunk), this.flowing) : false\n  }\n\n  pipe (dest, opts) {\n    if (dest === process.stdout || dest === process.stderr)\n      (opts = opts || {}).end = false\n    const p = { dest: dest, opts: opts, ondrain: _ => this[RESUME]() }\n    this.pipes.push(p)\n\n    dest.on('drain', p.ondrain)\n    this[RESUME]()\n    return dest\n  }\n\n  addListener (ev, fn) {\n    return this.on(ev, fn)\n  }\n\n  on (ev, fn) {\n    try {\n      return super.on(ev, fn)\n    } finally {\n      if (ev === 'data' && !this.pipes.length && !this.flowing)\n        this[RESUME]()\n      else if (ev === 'end' && this[SILENT_END] && this[EMITTED_END]) {\n        this[SILENT_END] = false\n        super.emit('end')\n      }\n    }\n  }\n\n  get emittedEnd () {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END] () {\n    if (!this[EMITTED_END] && this.buffer.length === 0 && this[EOF]) {\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED])\n        this.emit('close')\n    }\n  }\n\n  emit (ev, data) {\n    if (ev === 'data') {\n      if (!data)\n        return\n\n      if (this.pipes.length)\n        this.pipes.forEach(p => p.dest.write(data) || this.pause())\n    } else if (ev === 'end') {\n      if (this[EMITTED_END] === true)\n        return\n\n      this[EMITTED_END] = true\n      this.readable = false\n\n      if (this[DECODER]) {\n        data = this[DECODER].end()\n        if (data) {\n          this.pipes.forEach(p => p.dest.write(data))\n          super.emit('data', data)\n        }\n      }\n\n      this.pipes.forEach(p => {\n        p.dest.removeListener('drain', p.ondrain)\n        if (!p.opts || p.opts.end !== false)\n          p.dest.end()\n      })\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END])\n        return\n    }\n\n    const args = new Array(arguments.length)\n    args[0] = ev\n    args[1] = data\n    if (arguments.length > 2) {\n      for (let i = 2; i < arguments.length; i++) {\n        args[i] = arguments[i]\n      }\n    }\n\n    try {\n      const ret = super.emit.apply(this, args)\n      if (ev === 'end' && ret === false)\n        this[SILENT_END] = true\n      return ret\n    } finally {\n      if (ev !== 'end')\n        this[MAYBE_EMIT_END]()\n    }\n  }\n\n  // const all = await stream.collect()\n  collect () {\n    return new Promise((resolve, reject) => {\n      const buf = []\n      this.on('data', c => buf.push(c))\n      this.on('end', () => resolve(buf))\n      this.on('error', reject)\n    })\n  }\n\n  // for await (let chunk of stream)\n  [ASYNCITERATOR] () {\n    const next = () => {\n      const res = this.read()\n      if (res !== null)\n        return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF])\n        return Promise.resolve({ done: true })\n\n      let resolve = null\n      let reject = null\n      const onerr = er => {\n        this.removeListener('data', ondata)\n        this.removeListener('end', onend)\n        reject(er)\n      }\n      const ondata = value => {\n        this.removeListener('error', onerr)\n        this.removeListener('end', onend)\n        this.pause()\n        resolve({ value: value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.removeListener('error', onerr)\n        this.removeListener('data', ondata)\n        resolve({ done: true })\n      }\n      return new Promise((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n        this.resume()\n      })\n    }\n\n    return { next }\n  }\n\n  // for (let chunk of stream)\n  [ITERATOR] () {\n    const next = () => {\n      const value = this.read()\n      const done = value === null\n      return { value, done }\n    }\n    return { next }\n  }\n}\n"]}