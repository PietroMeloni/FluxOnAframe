{"version":3,"sources":["../../../../../../node_modules/npm/node_modules/har-validator/src/promise.js"],"names":["validate","afterRequest","beforeRequest","browser","cache","content","cookie","creator","entry","har","header","log","page","pageTimings","postData","query","request","response","timings","schemas","ajv","name","data","Ajv","allErrors","getSchema","Promise","resolve","reject","valid","HARError","errors"],"mappings":"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","file":"promise.js","sourcesContent":["import * as schemas from 'har-schema'\nimport Ajv from 'ajv'\nimport HARError from './error'\n\nlet ajv\n\nexport function validate (name, data = {}) {\n  // validator config\n  ajv = ajv || new Ajv({\n    allErrors: true,\n    schemas: schemas\n  })\n\n  let validate = ajv.getSchema(name + '.json')\n\n  return new Promise((resolve, reject) => {\n    let valid = validate(data)\n\n    !valid ? reject(new HARError(validate.errors)) : resolve(data)\n  })\n}\n\nexport function afterRequest (data) {\n  return validate('afterRequest', data)\n}\n\nexport function beforeRequest (data) {\n  return validate('beforeRequest', data)\n}\n\nexport function browser (data) {\n  return validate('browser', data)\n}\n\nexport function cache (data) {\n  return validate('cache', data)\n}\n\nexport function content (data) {\n  return validate('content', data)\n}\n\nexport function cookie (data) {\n  return validate('cookie', data)\n}\n\nexport function creator (data) {\n  return validate('creator', data)\n}\n\nexport function entry (data) {\n  return validate('entry', data)\n}\n\nexport function har (data) {\n  return validate('har', data)\n}\n\nexport function header (data) {\n  return validate('header', data)\n}\n\nexport function log (data) {\n  return validate('log', data)\n}\n\nexport function page (data) {\n  return validate('page', data)\n}\n\nexport function pageTimings (data) {\n  return validate('pageTimings', data)\n}\n\nexport function postData (data) {\n  return validate('postData', data)\n}\n\nexport function query (data) {\n  return validate('query', data)\n}\n\nexport function request (data) {\n  return validate('request', data)\n}\n\nexport function response (data) {\n  return validate('response', data)\n}\n\nexport function timings (data) {\n  return validate('timings', data)\n}\n"]}