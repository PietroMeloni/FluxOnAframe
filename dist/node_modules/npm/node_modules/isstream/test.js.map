{"version":3,"sources":["../../../../../node_modules/npm/node_modules/isstream/test.js"],"names":["tape","require","EE","EventEmitter","util","isStream","isReadable","isWritable","isDuplex","CoreStreams","ReadableStream10","ReadableStream11","test","pass","type","stream","t","plan","ok","testReadable","testWritable","testDuplex","undefined","foo","forEach","o","JSON","stringify","toString","pipe","Stream","call","inherits","prototype","Readable","Writable","Duplex","Transform","PassThrough","p","k","SubStream","name"],"mappings":"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","file":"test.js","sourcesContent":["var tape             = require('tape')\n  , EE               = require('events').EventEmitter\n  , util             = require('util')\n\n\n  , isStream         = require('./')\n  , isReadable       = require('./').isReadable\n  , isWritable       = require('./').isWritable\n  , isDuplex         = require('./').isDuplex\n\n  , CoreStreams      = require('stream')\n  , ReadableStream10 = require('./readable-stream-1.0/')\n  , ReadableStream11 = require('./readable-stream-1.1/')\n\n\nfunction test (pass, type, stream) {\n  tape('isStream('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isStream(stream), type)\n  })\n}\n\n\nfunction testReadable (pass, type, stream) {\n  tape('isReadable('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isReadable(stream), type)\n  })\n}\n\n\nfunction testWritable (pass, type, stream) {\n  tape('isWritable('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isWritable(stream), type)\n  })\n}\n\n\nfunction testDuplex (pass, type, stream) {\n  tape('isDuplex('  + type + ')', function (t) {\n    t.plan(1)\n    t.ok(pass === isDuplex(stream), type)\n  })\n}\n\n\n[ undefined, null, '', true, false, 0, 1, 1.0, 'string', {}, function foo () {} ].forEach(function (o) {\n  test(false, 'non-stream / primitive: ' + (JSON.stringify(o) || (o && o.toString()) || o), o)\n})\n\n\ntest(false, 'fake stream obj', { pipe: function () {} })\n\n\n;(function () {\n\n  // looks like a stream!\n\n  function Stream () {\n    EE.call(this)\n  }\n  util.inherits(Stream, EE)\n  Stream.prototype.pipe = function () {}\n  Stream.Stream = Stream\n\n  test(false, 'fake stream \"new Stream()\"', new Stream())\n\n}())\n\n\ntest(true, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntest(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntest(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntest(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntest(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntest(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntest(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntest(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntest(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntest(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntest(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntest(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntest(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntest(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntest(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntest(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\ntestReadable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntestReadable(true, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntestReadable(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntestReadable(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntestReadable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntestReadable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntestReadable(true, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntestReadable(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntestReadable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntestReadable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntestReadable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntestReadable(true, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntestReadable(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntestReadable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntestReadable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntestReadable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\ntestWritable(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntestWritable(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntestWritable(true, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntestWritable(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntestWritable(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntestWritable(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntestWritable(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntestWritable(true, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntestWritable(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntestWritable(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntestWritable(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntestWritable(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntestWritable(true, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntestWritable(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntestWritable(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntestWritable(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\ntestDuplex(false, 'CoreStreams.Stream', new (CoreStreams.Stream)())\ntestDuplex(false, 'CoreStreams.Readable', new (CoreStreams.Readable)())\ntestDuplex(false, 'CoreStreams.Writable', new (CoreStreams.Writable)())\ntestDuplex(true, 'CoreStreams.Duplex', new (CoreStreams.Duplex)())\ntestDuplex(true, 'CoreStreams.Transform', new (CoreStreams.Transform)())\ntestDuplex(true, 'CoreStreams.PassThrough', new (CoreStreams.PassThrough)())\n\ntestDuplex(false, 'ReadableStream10.Readable', new (ReadableStream10.Readable)())\ntestDuplex(false, 'ReadableStream10.Writable', new (ReadableStream10.Writable)())\ntestDuplex(true, 'ReadableStream10.Duplex', new (ReadableStream10.Duplex)())\ntestDuplex(true, 'ReadableStream10.Transform', new (ReadableStream10.Transform)())\ntestDuplex(true, 'ReadableStream10.PassThrough', new (ReadableStream10.PassThrough)())\n\ntestDuplex(false, 'ReadableStream11.Readable', new (ReadableStream11.Readable)())\ntestDuplex(false, 'ReadableStream11.Writable', new (ReadableStream11.Writable)())\ntestDuplex(true, 'ReadableStream11.Duplex', new (ReadableStream11.Duplex)())\ntestDuplex(true, 'ReadableStream11.Transform', new (ReadableStream11.Transform)())\ntestDuplex(true, 'ReadableStream11.PassThrough', new (ReadableStream11.PassThrough)())\n\n\n;[ CoreStreams, ReadableStream10, ReadableStream11 ].forEach(function (p) {\n  [ 'Stream', 'Readable', 'Writable', 'Duplex', 'Transform', 'PassThrough' ].forEach(function (k) {\n    if (!p[k])\n      return\n\n    function SubStream () {\n      p[k].call(this)\n    }\n    util.inherits(SubStream, p[k])\n\n    test(true, 'Stream subclass: ' + p.name + '.' + k, new SubStream())\n\n  })\n})\n\n\n\n"]}