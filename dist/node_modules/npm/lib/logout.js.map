{"version":3,"sources":["../../../../node_modules/npm/lib/logout.js"],"names":["module","exports","logout","dezalgo","require","log","npm","mapToRegistry","usage","afterLogout","normalized","cb","scope","config","get","del","clearCredentialsByURI","save","args","err","uri","auth","token","verbose","registry","username","password","Error"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,MAAjB;;AAEA,IAAIC,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,MAAMD,QAAQ,QAAR,CAAV;;AAEA,IAAIE,MAAMF,QAAQ,UAAR,CAAV;AACA,IAAIG,gBAAgBH,QAAQ,4BAAR,CAApB;;AAEAF,OAAOM,KAAP,GAAe,kDAAf;;AAEA,SAASC,WAAT,CAAsBC,UAAtB,EAAkCC,EAAlC,EAAsC;AACpC,MAAIC,QAAQN,IAAIO,MAAJ,CAAWC,GAAX,CAAe,OAAf,CAAZ;;AAEA,MAAIF,KAAJ,EAAWN,IAAIO,MAAJ,CAAWE,GAAX,CAAeH,QAAQ,WAAvB;;AAEXN,MAAIO,MAAJ,CAAWG,qBAAX,CAAiCN,UAAjC;AACAJ,MAAIO,MAAJ,CAAWI,IAAX,CAAgB,MAAhB,EAAwBN,EAAxB;AACD;;AAED,SAAST,MAAT,CAAiBgB,IAAjB,EAAuBP,EAAvB,EAA2B;AACzBA,OAAKR,QAAQQ,EAAR,CAAL;;AAEAJ,gBAAc,GAAd,EAAmBD,IAAIO,MAAvB,EAA+B,UAAUM,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0BX,UAA1B,EAAsC;AACnE,QAAIS,GAAJ,EAAS,OAAOR,GAAGQ,GAAH,CAAP;;AAET,QAAIE,KAAKC,KAAT,EAAgB;AACdjB,UAAIkB,OAAJ,CAAY,QAAZ,EAAsB,4BAAtB,EAAoDb,UAApD;AACAJ,UAAIkB,QAAJ,CAAatB,MAAb,CAAoBQ,UAApB,EAAgC,EAAEW,MAAMA,IAAR,EAAhC,EAAgD,UAAUF,GAAV,EAAe;AAC7D,YAAIA,GAAJ,EAAS,OAAOR,GAAGQ,GAAH,CAAP;;AAETV,oBAAYC,UAAZ,EAAwBC,EAAxB;AACD,OAJD;AAKD,KAPD,MAOO,IAAIU,KAAKI,QAAL,IAAiBJ,KAAKK,QAA1B,EAAoC;AACzCrB,UAAIkB,OAAJ,CAAY,QAAZ,EAAsB,+BAAtB,EAAuDb,UAAvD;;AAEAD,kBAAYC,UAAZ,EAAwBC,EAAxB;AACD,KAJM,MAIA;AACLA,SAAG,IAAIgB,KAAJ,CACD,kBADC,EACmBjB,aAAa,GADhC,EACqC,mBADrC,CAAH;AAGD;AACF,GAnBD;AAoBD","file":"logout.js","sourcesContent":["module.exports = logout\n\nvar dezalgo = require('dezalgo')\nvar log = require('npmlog')\n\nvar npm = require('./npm.js')\nvar mapToRegistry = require('./utils/map-to-registry.js')\n\nlogout.usage = 'npm logout [--registry=<url>] [--scope=<@scope>]'\n\nfunction afterLogout (normalized, cb) {\n  var scope = npm.config.get('scope')\n\n  if (scope) npm.config.del(scope + ':registry')\n\n  npm.config.clearCredentialsByURI(normalized)\n  npm.config.save('user', cb)\n}\n\nfunction logout (args, cb) {\n  cb = dezalgo(cb)\n\n  mapToRegistry('/', npm.config, function (err, uri, auth, normalized) {\n    if (err) return cb(err)\n\n    if (auth.token) {\n      log.verbose('logout', 'clearing session token for', normalized)\n      npm.registry.logout(normalized, { auth: auth }, function (err) {\n        if (err) return cb(err)\n\n        afterLogout(normalized, cb)\n      })\n    } else if (auth.username || auth.password) {\n      log.verbose('logout', 'clearing user credentials for', normalized)\n\n      afterLogout(normalized, cb)\n    } else {\n      cb(new Error(\n        'Not logged in to', normalized + ',', \"so can't log out.\"\n      ))\n    }\n  })\n}\n"]}