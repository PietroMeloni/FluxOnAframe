{"version":3,"sources":["../../../../node_modules/npm/lib/shrinkwrap.js"],"names":["BB","require","chain","detectIndent","detectNewline","readFile","promisify","getRequested","id","iferr","isOnlyOptional","isOnlyDev","lifecycle","log","moduleName","move","npm","path","readPackageTree","ssri","stringifyPackage","validate","writeFileAtomic","unixFormatPath","isRegistry","PKGLOCK","SHRINKWRAP","PKGLOCK_VERSION","lockfileVersion","shrinkwrap","usage","module","exports","treeToShrinkwrap","args","silent","cb","length","warn","resolve","prefix","Promise","then","notice","d","JSON","parse","err","code","localPrefix","computeMetadata","tree","fromNode","createShrinkwrap","defaultFile","data","opts","package","pkginfo","shrinkwrap_","arguments","name","version","children","requires","shrinkwrapDeps","dependencies","deps","top","seen","Set","has","add","sortModules","forEach","child","childIsOnlyDev","requested","_requested","childVersion","type","_from","from","fromBundle","isInLink","bundled","resolved","_resolved","integrity","_integrity","undefined","_shasum","fromHex","dev","optional","required","childRequested","modules","sortedModuleNames","map","sort","a","b","indexOf","req","relative","fetchSpec","saveSpec","rawSpec","config","get","replace","dir","save","join","checkPackageFile","lockfile","pkg","info","indent","newline","updated","updateLockfileMetadata","raw","swdata","verbose","basename","file","pkgJson","newPkg","metainfoWritten","metainfo","Object","keys","k","writeMetainfo","process","env","NODE_PRESERVE_SYMLINKS","preserveSymlinks","catch"],"mappings":"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","file":"shrinkwrap.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst chain = require('slide').chain\nconst detectIndent = require('detect-indent')\nconst detectNewline = require('detect-newline')\nconst readFile = BB.promisify(require('graceful-fs').readFile)\nconst getRequested = require('./install/get-requested.js')\nconst id = require('./install/deps.js')\nconst iferr = require('iferr')\nconst isOnlyOptional = require('./install/is-only-optional.js')\nconst isOnlyDev = require('./install/is-only-dev.js')\nconst lifecycle = require('./utils/lifecycle.js')\nconst log = require('npmlog')\nconst moduleName = require('./utils/module-name.js')\nconst move = require('move-concurrently')\nconst npm = require('./npm.js')\nconst path = require('path')\nconst readPackageTree = BB.promisify(require('read-package-tree'))\nconst ssri = require('ssri')\nconst stringifyPackage = require('./utils/stringify-package')\nconst validate = require('aproba')\nconst writeFileAtomic = require('write-file-atomic')\nconst unixFormatPath = require('./utils/unix-format-path.js')\nconst isRegistry = require('./utils/is-registry.js')\n\nconst PKGLOCK = 'package-lock.json'\nconst SHRINKWRAP = 'npm-shrinkwrap.json'\nconst PKGLOCK_VERSION = npm.lockfileVersion\n\n// emit JSON describing versions of all packages currently installed (for later\n// use with shrinkwrap install)\nshrinkwrap.usage = 'npm shrinkwrap'\n\nmodule.exports = exports = shrinkwrap\nexports.treeToShrinkwrap = treeToShrinkwrap\n\nfunction shrinkwrap (args, silent, cb) {\n  if (typeof cb !== 'function') {\n    cb = silent\n    silent = false\n  }\n\n  if (args.length) {\n    log.warn('shrinkwrap', \"doesn't take positional args\")\n  }\n\n  move(\n    path.resolve(npm.prefix, PKGLOCK),\n    path.resolve(npm.prefix, SHRINKWRAP),\n    { Promise: BB }\n  ).then(() => {\n    log.notice('', `${PKGLOCK} has been renamed to ${SHRINKWRAP}. ${SHRINKWRAP} will be used for future installations.`)\n    return readFile(path.resolve(npm.prefix, SHRINKWRAP)).then((d) => {\n      return JSON.parse(d)\n    })\n  }, (err) => {\n    if (err.code !== 'ENOENT') {\n      throw err\n    } else {\n      return readPackageTree(npm.localPrefix).then(\n        id.computeMetadata\n      ).then((tree) => {\n        return BB.fromNode((cb) => {\n          createShrinkwrap(tree, {\n            silent,\n            defaultFile: SHRINKWRAP\n          }, cb)\n        })\n      })\n    }\n  }).then((data) => cb(null, data), cb)\n}\n\nmodule.exports.createShrinkwrap = createShrinkwrap\n\nfunction createShrinkwrap (tree, opts, cb) {\n  opts = opts || {}\n  lifecycle(tree.package, 'preshrinkwrap', tree.path, function () {\n    const pkginfo = treeToShrinkwrap(tree)\n    chain([\n      [lifecycle, tree.package, 'shrinkwrap', tree.path],\n      [shrinkwrap_, tree.path, pkginfo, opts],\n      [lifecycle, tree.package, 'postshrinkwrap', tree.path]\n    ], iferr(cb, function (data) {\n      cb(null, pkginfo)\n    }))\n  })\n}\n\nfunction treeToShrinkwrap (tree) {\n  validate('O', arguments)\n  var pkginfo = {}\n  if (tree.package.name) pkginfo.name = tree.package.name\n  if (tree.package.version) pkginfo.version = tree.package.version\n  if (tree.children.length) {\n    pkginfo.requires = true\n    shrinkwrapDeps(pkginfo.dependencies = {}, tree, tree)\n  }\n  return pkginfo\n}\n\nfunction shrinkwrapDeps (deps, top, tree, seen) {\n  validate('OOO', [deps, top, tree])\n  if (!seen) seen = new Set()\n  if (seen.has(tree)) return\n  seen.add(tree)\n  sortModules(tree.children).forEach(function (child) {\n    var childIsOnlyDev = isOnlyDev(child)\n    var pkginfo = deps[moduleName(child)] = {}\n    var requested = getRequested(child) || child.package._requested || {}\n    pkginfo.version = childVersion(top, child, requested)\n    if (requested.type === 'git' && child.package._from) {\n      pkginfo.from = child.package._from\n    }\n    if (child.fromBundle || child.isInLink) {\n      pkginfo.bundled = true\n    } else {\n      if (isRegistry(requested)) {\n        pkginfo.resolved = child.package._resolved\n      }\n      // no integrity for git deps as integirty hashes are based on the\n      // tarball and we can't (yet) create consistent tarballs from a stable\n      // source.\n      if (requested.type !== 'git') {\n        pkginfo.integrity = child.package._integrity || undefined\n        if (!pkginfo.integrity && child.package._shasum) {\n          pkginfo.integrity = ssri.fromHex(child.package._shasum, 'sha1')\n        }\n      }\n    }\n    if (childIsOnlyDev) pkginfo.dev = true\n    if (isOnlyOptional(child)) pkginfo.optional = true\n    if (child.requires.length) {\n      pkginfo.requires = {}\n      sortModules(child.requires).forEach((required) => {\n        var requested = getRequested(required, child) || required.package._requested || {}\n        pkginfo.requires[moduleName(required)] = childRequested(top, required, requested)\n      })\n    }\n    if (child.children.length) {\n      pkginfo.dependencies = {}\n      shrinkwrapDeps(pkginfo.dependencies, top, child, seen)\n    }\n  })\n}\n\nfunction sortModules (modules) {\n  // sort modules with the locale-agnostic Unicode sort\n  var sortedModuleNames = modules.map(moduleName).sort()\n  return modules.sort((a, b) => (\n    sortedModuleNames.indexOf(moduleName(a)) - sortedModuleNames.indexOf(moduleName(b))\n  ))\n}\n\nfunction childVersion (top, child, req) {\n  if (req.type === 'directory' || req.type === 'file') {\n    return 'file:' + unixFormatPath(path.relative(top.path, child.package._resolved || req.fetchSpec))\n  } else if (!isRegistry(req) && !child.fromBundle) {\n    return child.package._resolved || req.saveSpec || req.rawSpec\n  } else {\n    return child.package.version\n  }\n}\n\nfunction childRequested (top, child, requested) {\n  if (requested.type === 'directory' || requested.type === 'file') {\n    return 'file:' + unixFormatPath(path.relative(top.path, child.package._resolved || requested.fetchSpec))\n  } else if (!isRegistry(requested) && !child.fromBundle) {\n    return child.package._resolved || requested.saveSpec || requested.rawSpec\n  } else if (requested.type === 'tag') {\n    // tags are not ranges we can match against, so we invent a \"reasonable\"\n    // one based on what we actually installed.\n    return npm.config.get('save-prefix') + child.package.version\n  } else if (requested.saveSpec || requested.rawSpec) {\n    return requested.saveSpec || requested.rawSpec\n  } else if (child.package._from || (child.package._requested && child.package._requested.rawSpec)) {\n    return child.package._from.replace(/^@?[^@]+@/, '') || child.package._requested.rawSpec\n  } else {\n    return child.package.version\n  }\n}\n\nfunction shrinkwrap_ (dir, pkginfo, opts, cb) {\n  save(dir, pkginfo, opts, cb)\n}\n\nfunction save (dir, pkginfo, opts, cb) {\n  // copy the keys over in a well defined order\n  // because javascript objects serialize arbitrarily\n  BB.join(\n    checkPackageFile(dir, SHRINKWRAP),\n    checkPackageFile(dir, PKGLOCK),\n    checkPackageFile(dir, 'package.json'),\n    (shrinkwrap, lockfile, pkg) => {\n      const info = (\n        shrinkwrap ||\n        lockfile ||\n        {\n          path: path.resolve(dir, opts.defaultFile || PKGLOCK),\n          data: '{}',\n          indent: pkg && pkg.indent,\n          newline: pkg && pkg.newline\n        }\n      )\n      const updated = updateLockfileMetadata(pkginfo, pkg && JSON.parse(pkg.raw))\n      const swdata = stringifyPackage(updated, info.indent, info.newline)\n      if (swdata === info.raw) {\n        // skip writing if file is identical\n        log.verbose('shrinkwrap', `skipping write for ${path.basename(info.path)} because there were no changes.`)\n        cb(null, pkginfo)\n      } else {\n        writeFileAtomic(info.path, swdata, (err) => {\n          if (err) return cb(err)\n          if (opts.silent) return cb(null, pkginfo)\n          if (!shrinkwrap && !lockfile) {\n            log.notice('', `created a lockfile as ${path.basename(info.path)}. You should commit this file.`)\n          }\n          cb(null, pkginfo)\n        })\n      }\n    }\n  ).then((file) => {\n  }, cb)\n}\n\nfunction updateLockfileMetadata (pkginfo, pkgJson) {\n  // This is a lot of work just to make sure the extra metadata fields are\n  // between version and dependencies fields, without affecting any other stuff\n  const newPkg = {}\n  let metainfoWritten = false\n  const metainfo = new Set([\n    'lockfileVersion',\n    'preserveSymlinks'\n  ])\n  Object.keys(pkginfo).forEach((k) => {\n    if (k === 'dependencies') {\n      writeMetainfo(newPkg)\n    }\n    if (!metainfo.has(k)) {\n      newPkg[k] = pkginfo[k]\n    }\n    if (k === 'version') {\n      writeMetainfo(newPkg)\n    }\n  })\n  if (!metainfoWritten) {\n    writeMetainfo(newPkg)\n  }\n  function writeMetainfo (pkginfo) {\n    pkginfo.lockfileVersion = PKGLOCK_VERSION\n    if (process.env.NODE_PRESERVE_SYMLINKS) {\n      pkginfo.preserveSymlinks = process.env.NODE_PRESERVE_SYMLINKS\n    }\n    metainfoWritten = true\n  }\n  return newPkg\n}\n\nfunction checkPackageFile (dir, name) {\n  const file = path.resolve(dir, name)\n  return readFile(\n    file, 'utf8'\n  ).then((data) => {\n    return {\n      path: file,\n      raw: data,\n      indent: detectIndent(data).indent,\n      newline: detectNewline(data)\n    }\n  }).catch({code: 'ENOENT'}, () => {})\n}\n"]}