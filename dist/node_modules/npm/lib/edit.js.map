{"version":3,"sources":["../../../../node_modules/npm/lib/edit.js"],"names":["module","exports","edit","usage","completion","require","npm","path","fs","editor","noProgressTillDone","tillDone","args","cb","p","length","e","config","get","Error","split","join","replace","f","resolve","dir","lstat","er","commands","rebuild"],"mappings":";;AAAA;AACA;;AAEAA,OAAOC,OAAP,GAAiBC,IAAjB;AACAA,KAAKC,KAAL,GAAa,4BAAb;;AAEAD,KAAKE,UAAL,GAAkBC,QAAQ,yCAAR,CAAlB;;AAEA,IAAIC,MAAMD,QAAQ,UAAR,CAAV;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,KAAKH,QAAQ,aAAR,CAAT;AACA,IAAII,SAASJ,QAAQ,QAAR,CAAb;AACA,IAAIK,qBAAqBL,QAAQ,mCAAR,EAA6CM,QAAtE;;AAEA,SAAST,IAAT,CAAeU,IAAf,EAAqBC,EAArB,EAAyB;AACvB,MAAIC,IAAIF,KAAK,CAAL,CAAR;AACA,MAAIA,KAAKG,MAAL,KAAgB,CAAhB,IAAqB,CAACD,CAA1B,EAA6B,OAAOD,GAAGX,KAAKC,KAAR,CAAP;AAC7B,MAAIa,IAAIV,IAAIW,MAAJ,CAAWC,GAAX,CAAe,QAAf,CAAR;AACA,MAAI,CAACF,CAAL,EAAQ;AACN,WAAOH,GAAG,IAAIM,KAAJ,CACR,8DADQ,CAAH,CAAP;AAGD;AACDL,MAAIA,EAAEM,KAAF,CAAQ,GAAR,EACDC,IADC,CACI,gBADJ,EAEDC,OAFC,CAEO,mBAFP,EAE4B,eAF5B,CAAJ;AAGA,MAAIC,IAAIhB,KAAKiB,OAAL,CAAalB,IAAImB,GAAjB,EAAsBX,CAAtB,CAAR;AACAN,KAAGkB,KAAH,CAASH,CAAT,EAAY,UAAUI,EAAV,EAAc;AACxB,QAAIA,EAAJ,EAAQ,OAAOd,GAAGc,EAAH,CAAP;AACRlB,WAAOc,CAAP,EAAU,EAAEd,QAAQO,CAAV,EAAV,EAAyBN,mBAAmB,UAAUiB,EAAV,EAAc;AACxD,UAAIA,EAAJ,EAAQ,OAAOd,GAAGc,EAAH,CAAP;AACRrB,UAAIsB,QAAJ,CAAaC,OAAb,CAAqBjB,IAArB,EAA2BC,EAA3B;AACD,KAHwB,CAAzB;AAID,GAND;AAOD","file":"edit.js","sourcesContent":["// npm edit <pkg>\n// open the package folder in the $EDITOR\n\nmodule.exports = edit\nedit.usage = 'npm edit <pkg>[@<version>]'\n\nedit.completion = require('./utils/completion/installed-shallow.js')\n\nvar npm = require('./npm.js')\nvar path = require('path')\nvar fs = require('graceful-fs')\nvar editor = require('editor')\nvar noProgressTillDone = require('./utils/no-progress-while-running').tillDone\n\nfunction edit (args, cb) {\n  var p = args[0]\n  if (args.length !== 1 || !p) return cb(edit.usage)\n  var e = npm.config.get('editor')\n  if (!e) {\n    return cb(new Error(\n      \"No editor set.  Set the 'editor' config, or $EDITOR environ.\"\n    ))\n  }\n  p = p.split('/')\n    .join('/node_modules/')\n    .replace(/(\\/node_modules)+/, '/node_modules')\n  var f = path.resolve(npm.dir, p)\n  fs.lstat(f, function (er) {\n    if (er) return cb(er)\n    editor(f, { editor: e }, noProgressTillDone(function (er) {\n      if (er) return cb(er)\n      npm.commands.rebuild(args, cb)\n    }))\n  })\n}\n"]}