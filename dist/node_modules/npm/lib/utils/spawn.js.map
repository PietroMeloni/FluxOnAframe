{"version":3,"sources":["../../../../../node_modules/npm/lib/utils/spawn.js"],"names":["module","exports","spawn","_spawn","require","EventEmitter","npwr","willCmdOutput","stdio","Array","isArray","fh","cmd","args","options","cmdWillOutput","startRunning","raw","cooked","on","er","stopRunning","file","emit","code","signal","Error","errno","syscall","stdin","stdout","stderr","kill","sig"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,KAAjB;;AAEA,IAAIC,SAASC,QAAQ,eAAR,EAAyBF,KAAtC;AACA,IAAIG,eAAeD,QAAQ,QAAR,EAAkBC,YAArC;AACA,IAAIC,OAAOF,QAAQ,gCAAR,CAAX;;AAEA,SAASG,aAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,UAAU,SAAd,EAAyB,OAAO,IAAP;AACzB,MAAI,CAACC,MAAMC,OAAN,CAAcF,KAAd,CAAL,EAA2B,OAAO,KAAP;AAC3B,OAAK,IAAIG,KAAK,CAAd,EAAiBA,MAAM,CAAvB,EAA0B,EAAEA,EAA5B,EAAgC;AAC9B,QAAIH,MAAMG,EAAN,MAAc,SAAlB,EAA6B,OAAO,IAAP;AAC7B,QAAIH,MAAMG,EAAN,MAAc,CAAd,IAAmBH,MAAMG,EAAN,MAAc,CAArC,EAAwC,OAAO,IAAP;AACzC;AACD,SAAO,KAAP;AACD;;AAED,SAAST,KAAT,CAAgBU,GAAhB,EAAqBC,IAArB,EAA2BC,OAA3B,EAAoC;AAClC,MAAIC,gBAAgBR,cAAcO,WAAWA,QAAQN,KAAjC,CAApB;;AAEA,MAAIO,aAAJ,EAAmBT,KAAKU,YAAL;AACnB,MAAIC,MAAMd,OAAOS,GAAP,EAAYC,IAAZ,EAAkBC,OAAlB,CAAV;AACA,MAAII,SAAS,IAAIb,YAAJ,EAAb;;AAEAY,MAAIE,EAAJ,CAAO,OAAP,EAAgB,UAAUC,EAAV,EAAc;AAC5B,QAAIL,aAAJ,EAAmBT,KAAKe,WAAL;AACnBD,OAAGE,IAAH,GAAUV,GAAV;AACAM,WAAOK,IAAP,CAAY,OAAZ,EAAqBH,EAArB;AACD,GAJD,EAIGD,EAJH,CAIM,OAJN,EAIe,UAAUK,IAAV,EAAgBC,MAAhB,EAAwB;AACrC,QAAIV,aAAJ,EAAmBT,KAAKe,WAAL;AACnB;AACA;AACA,QAAIG,SAAS,GAAb,EAAkB;AAChB,UAAIJ,KAAK,IAAIM,KAAJ,CAAU,cAAV,CAAT;AACAN,SAAGI,IAAH,GAAU,QAAV;AACAJ,SAAGO,KAAH,GAAW,QAAX;AACAP,SAAGQ,OAAH,GAAa,OAAb;AACAR,SAAGE,IAAH,GAAUV,GAAV;AACAM,aAAOK,IAAP,CAAY,OAAZ,EAAqBH,EAArB;AACD,KAPD,MAOO;AACLF,aAAOK,IAAP,CAAY,OAAZ,EAAqBC,IAArB,EAA2BC,MAA3B;AACD;AACF,GAlBD;;AAoBAP,SAAOW,KAAP,GAAeZ,IAAIY,KAAnB;AACAX,SAAOY,MAAP,GAAgBb,IAAIa,MAApB;AACAZ,SAAOa,MAAP,GAAgBd,IAAIc,MAApB;AACAb,SAAOc,IAAP,GAAc,UAAUC,GAAV,EAAe;AAAE,WAAOhB,IAAIe,IAAJ,CAASC,GAAT,CAAP;AAAsB,GAArD;;AAEA,SAAOf,MAAP;AACD","file":"spawn.js","sourcesContent":["module.exports = spawn\n\nvar _spawn = require('child_process').spawn\nvar EventEmitter = require('events').EventEmitter\nvar npwr = require('./no-progress-while-running.js')\n\nfunction willCmdOutput (stdio) {\n  if (stdio === 'inherit') return true\n  if (!Array.isArray(stdio)) return false\n  for (var fh = 1; fh <= 2; ++fh) {\n    if (stdio[fh] === 'inherit') return true\n    if (stdio[fh] === 1 || stdio[fh] === 2) return true\n  }\n  return false\n}\n\nfunction spawn (cmd, args, options) {\n  var cmdWillOutput = willCmdOutput(options && options.stdio)\n\n  if (cmdWillOutput) npwr.startRunning()\n  var raw = _spawn(cmd, args, options)\n  var cooked = new EventEmitter()\n\n  raw.on('error', function (er) {\n    if (cmdWillOutput) npwr.stopRunning()\n    er.file = cmd\n    cooked.emit('error', er)\n  }).on('close', function (code, signal) {\n    if (cmdWillOutput) npwr.stopRunning()\n    // Create ENOENT error because Node.js v0.8 will not emit\n    // an `error` event if the command could not be found.\n    if (code === 127) {\n      var er = new Error('spawn ENOENT')\n      er.code = 'ENOENT'\n      er.errno = 'ENOENT'\n      er.syscall = 'spawn'\n      er.file = cmd\n      cooked.emit('error', er)\n    } else {\n      cooked.emit('close', code, signal)\n    }\n  })\n\n  cooked.stdin = raw.stdin\n  cooked.stdout = raw.stdout\n  cooked.stderr = raw.stderr\n  cooked.kill = function (sig) { return raw.kill(sig) }\n\n  return cooked\n}\n"]}