{"version":3,"sources":["../../../../../node_modules/npm/lib/utils/pulse-till-done.js"],"names":["validate","require","log","Bluebird","pulsers","pulse","pulseStart","prefix","setInterval","gauge","pulseStop","clearInterval","module","exports","cb","apply","arguments","withPromise","pulseWhile","promise","resolve","finally"],"mappings":"AAAA;;AACA,IAAMA,WAAWC,QAAQ,QAAR,CAAjB;AACA,IAAMC,MAAMD,QAAQ,QAAR,CAAZ;AACA,IAAME,WAAWF,QAAQ,UAAR,CAAjB;;AAEA,IAAIG,UAAU,CAAd;AACA,IAAIC,cAAJ;;AAEA,SAASC,UAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAI,EAAEH,OAAF,GAAY,CAAhB,EAAmB;AACnBC,UAAQG,YAAY,YAAY;AAC9BN,QAAIO,KAAJ,CAAUJ,KAAV,CAAgBE,MAAhB;AACD,GAFO,EAEL,GAFK,CAAR;AAGD;AACD,SAASG,SAAT,GAAsB;AACpB,MAAI,EAAEN,OAAF,GAAY,CAAhB,EAAmB;AACnBO,gBAAcN,KAAd;AACD;;AAEDO,OAAOC,OAAP,GAAiB,UAAUN,MAAV,EAAkBO,EAAlB,EAAsB;AACrCd,WAAS,IAAT,EAAe,CAACO,MAAD,EAASO,EAAT,CAAf;AACA,MAAI,CAACP,MAAL,EAAaA,SAAS,SAAT;AACbD,aAAWC,MAAX;AACA,SAAO,YAAY;AACjBG;AACAI,OAAGC,KAAH,CAAS,IAAT,EAAeC,SAAf;AACD,GAHD;AAID,CARD;AASAJ,OAAOC,OAAP,CAAeI,WAAf,GAA6BC,UAA7B;;AAEA,SAASA,UAAT,CAAqBX,MAArB,EAA6BY,OAA7B,EAAsC;AACpC,MAAI,CAACA,OAAL,EAAc;AACZA,cAAUZ,MAAV;AACAA,aAAS,EAAT;AACD;AACDD,aAAWC,MAAX;AACA,SAAOJ,SAASiB,OAAT,CAAiBD,OAAjB,EAA0BE,OAA1B,CAAkC;AAAA,WAAMX,WAAN;AAAA,GAAlC,CAAP;AACD","file":"pulse-till-done.js","sourcesContent":["'use strict'\nconst validate = require('aproba')\nconst log = require('npmlog')\nconst Bluebird = require('bluebird')\n\nlet pulsers = 0\nlet pulse\n\nfunction pulseStart (prefix) {\n  if (++pulsers > 1) return\n  pulse = setInterval(function () {\n    log.gauge.pulse(prefix)\n  }, 150)\n}\nfunction pulseStop () {\n  if (--pulsers > 0) return\n  clearInterval(pulse)\n}\n\nmodule.exports = function (prefix, cb) {\n  validate('SF', [prefix, cb])\n  if (!prefix) prefix = 'network'\n  pulseStart(prefix)\n  return function () {\n    pulseStop()\n    cb.apply(null, arguments)\n  }\n}\nmodule.exports.withPromise = pulseWhile\n\nfunction pulseWhile (prefix, promise) {\n  if (!promise) {\n    promise = prefix\n    prefix = ''\n  }\n  pulseStart(prefix)\n  return Bluebird.resolve(promise).finally(() => pulseStop())\n}\n"]}