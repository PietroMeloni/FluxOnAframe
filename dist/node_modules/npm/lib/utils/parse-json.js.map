{"version":3,"sources":["../../../../../node_modules/npm/lib/utils/parse-json.js"],"names":["parseJsonWithErrors","require","parseJSON","module","exports","content","stripBOM","noExceptions","ex","toString","charCodeAt","slice"],"mappings":"AAAA;;AACA,IAAIA,sBAAsBC,QAAQ,0BAAR,CAA1B;AACA,IAAIC,YAAYC,OAAOC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClD,SAAOL,oBAAoBM,SAASD,OAAT,CAApB,CAAP;AACD,CAFD;;AAIAH,UAAUK,YAAV,GAAyB,UAAUF,OAAV,EAAmB;AAC1C,MAAI;AACF,WAAOH,UAAUG,OAAV,CAAP;AACD,GAFD,CAEE,OAAOG,EAAP,EAAW,CAEZ;AACF,CAND;;AAQA;AACA,SAASF,QAAT,CAAmBD,OAAnB,EAA4B;AAC1BA,YAAUA,QAAQI,QAAR,EAAV;AACA;AACA;AACA;AACA,MAAIJ,QAAQK,UAAR,CAAmB,CAAnB,MAA0B,MAA9B,EAAsC;AACpCL,cAAUA,QAAQM,KAAR,CAAc,CAAd,CAAV;AACD;AACD,SAAON,OAAP;AACD","file":"parse-json.js","sourcesContent":["'use strict'\nvar parseJsonWithErrors = require('json-parse-better-errors')\nvar parseJSON = module.exports = function (content) {\n  return parseJsonWithErrors(stripBOM(content))\n}\n\nparseJSON.noExceptions = function (content) {\n  try {\n    return parseJSON(content)\n  } catch (ex) {\n\n  }\n}\n\n// from read-package-json\nfunction stripBOM (content) {\n  content = content.toString()\n  // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n  // because the buffer-to-string conversion in `fs.readFileSync()`\n  // translates it to FEFF, the UTF-16 BOM.\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1)\n  }\n  return content\n}\n"]}