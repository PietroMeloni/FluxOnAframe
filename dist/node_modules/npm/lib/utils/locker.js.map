{"version":3,"sources":["../../../../../node_modules/npm/lib/utils/locker.js"],"names":["crypto","require","resolve","lockfile","log","npm","correctMkdir","installLocks","lockFileName","base","name","c","replace","p","h","createHash","update","digest","l","cache","substr","lock","cb","lockDir","er","opts","stale","config","get","retries","wait","lf","warn","verbose","unlock","locked","process","nextTick","notLocked","Error","code","module","exports"],"mappings":"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","file":"locker.js","sourcesContent":["var crypto = require('crypto')\nvar resolve = require('path').resolve\n\nvar lockfile = require('lockfile')\nvar log = require('npmlog')\n\nvar npm = require('../npm.js')\nvar correctMkdir = require('../utils/correct-mkdir.js')\n\nvar installLocks = {}\n\nfunction lockFileName (base, name) {\n  var c = name.replace(/[^a-zA-Z0-9]+/g, '-').replace(/^-+|-+$/g, '')\n  var p = resolve(base, name)\n  var h = crypto.createHash('sha1').update(p).digest('hex')\n  var l = resolve(npm.cache, '_locks')\n\n  return resolve(l, c.substr(0, 24) + '-' + h.substr(0, 16) + '.lock')\n}\n\nfunction lock (base, name, cb) {\n  var lockDir = resolve(npm.cache, '_locks')\n  correctMkdir(lockDir, function (er) {\n    if (er) return cb(er)\n\n    var opts = {\n      stale: npm.config.get('cache-lock-stale'),\n      retries: npm.config.get('cache-lock-retries'),\n      wait: npm.config.get('cache-lock-wait')\n    }\n    var lf = lockFileName(base, name)\n    lockfile.lock(lf, opts, function (er) {\n      if (er) log.warn('locking', lf, 'failed', er)\n\n      if (!er) {\n        log.verbose('lock', 'using', lf, 'for', resolve(base, name))\n        installLocks[lf] = true\n      }\n\n      cb(er)\n    })\n  })\n}\n\nfunction unlock (base, name, cb) {\n  var lf = lockFileName(base, name)\n  var locked = installLocks[lf]\n  if (locked === false) {\n    return process.nextTick(cb)\n  } else if (locked === true) {\n    lockfile.unlock(lf, function (er) {\n      if (er) {\n        log.warn('unlocking', lf, 'failed', er)\n      } else {\n        installLocks[lf] = false\n        log.verbose('unlock', 'done using', lf, 'for', resolve(base, name))\n      }\n\n      cb(er)\n    })\n  } else {\n    var notLocked = new Error(\n      'Attempt to unlock ' + resolve(base, name) + \", which hasn't been locked\"\n    )\n    notLocked.code = 'ENOTLOCKED'\n    throw notLocked\n  }\n}\n\nmodule.exports = {\n  lock: lock,\n  unlock: unlock\n}\n"]}