{"version":3,"sources":["../../../../../node_modules/npm/lib/utils/module-name.js"],"names":["path","require","module","exports","moduleName","test","pathToPackageName","dir","name","relative","resolve","scoped","replace","trim","isNotEmpty","str","unknown","tree","pkg","package","pkgName","_invalidName"],"mappings":"AAAA;;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiBC,UAAjB;AACAF,OAAOC,OAAP,CAAeE,IAAf,GAAsB,EAAtB;;AAEAH,OAAOC,OAAP,CAAeE,IAAf,CAAoBC,iBAApB,GAAwCA,iBAAxC;AACA,SAASA,iBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,MAAIA,OAAO,IAAX,EAAiB,OAAO,EAAP;AACjB,MAAIA,QAAQ,EAAZ,EAAgB,OAAO,EAAP;AAChB,MAAIC,OAAOR,KAAKS,QAAL,CAAcT,KAAKU,OAAL,CAAaH,GAAb,EAAkB,IAAlB,CAAd,EAAuCA,GAAvC,CAAX;AACA,MAAII,SAASX,KAAKS,QAAL,CAAcT,KAAKU,OAAL,CAAaH,GAAb,EAAkB,OAAlB,CAAd,EAA0CA,GAA1C,CAAb;AACA,MAAII,OAAO,CAAP,MAAc,GAAlB,EAAuB,OAAOA,OAAOC,OAAP,CAAe,KAAf,EAAsB,GAAtB,CAAP;AACvB,SAAOJ,KAAKK,IAAL,EAAP;AACD;;AAEDX,OAAOC,OAAP,CAAeE,IAAf,CAAoBS,UAApB,GAAiCA,UAAjC;AACA,SAASA,UAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAOA,OAAO,IAAP,IAAeA,QAAQ,EAA9B;AACD;;AAED,IAAIC,UAAU,CAAd;AACA,SAASZ,UAAT,CAAqBa,IAArB,EAA2B;AACzB,MAAIC,MAAMD,KAAKE,OAAL,IAAgBF,IAA1B;AACA,MAAIH,WAAWI,IAAIV,IAAf,KAAwB,OAAOU,IAAIV,IAAX,KAAoB,QAAhD,EAA0D,OAAOU,IAAIV,IAAJ,CAASK,IAAT,EAAP;AAC1D,MAAIO,UAAUd,kBAAkBW,KAAKjB,IAAvB,CAAd;AACA,MAAIoB,YAAY,EAAhB,EAAoB,OAAOA,OAAP;AACpB,MAAIH,KAAKI,YAAL,IAAqB,IAAzB,EAA+B,OAAOJ,KAAKI,YAAZ;AAC/BJ,OAAKI,YAAL,GAAoB,cAAe,EAAEL,OAArC;AACA,SAAOC,KAAKI,YAAZ;AACD","file":"module-name.js","sourcesContent":["'use strict'\nvar path = require('path')\n\nmodule.exports = moduleName\nmodule.exports.test = {}\n\nmodule.exports.test.pathToPackageName = pathToPackageName\nfunction pathToPackageName (dir) {\n  if (dir == null) return ''\n  if (dir === '') return ''\n  var name = path.relative(path.resolve(dir, '..'), dir)\n  var scoped = path.relative(path.resolve(dir, '../..'), dir)\n  if (scoped[0] === '@') return scoped.replace(/\\\\/g, '/')\n  return name.trim()\n}\n\nmodule.exports.test.isNotEmpty = isNotEmpty\nfunction isNotEmpty (str) {\n  return str != null && str !== ''\n}\n\nvar unknown = 0\nfunction moduleName (tree) {\n  var pkg = tree.package || tree\n  if (isNotEmpty(pkg.name) && typeof pkg.name === 'string') return pkg.name.trim()\n  var pkgName = pathToPackageName(tree.path)\n  if (pkgName !== '') return pkgName\n  if (tree._invalidName != null) return tree._invalidName\n  tree._invalidName = '!invalid#' + (++unknown)\n  return tree._invalidName\n}\n"]}