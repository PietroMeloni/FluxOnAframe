{"version":3,"sources":["../../../../node_modules/npm/lib/audit.js"],"names":["Bluebird","require","audit","fs","Installer","lockVerify","log","npa","npm","output","parseJson","readFile","promisify","module","exports","auditCmd","usage","completion","opts","cb","argv","conf","remain","Error","Auditor","where","dryrun","args","deepArgs","runId","fromNode","then","length","forEach","arg","reduce","acc","child","ii","spec","target","requires","find","n","package","name","scrub","loaded","version","fetchSpec","_requested","fakeChild","parent","requiredBy","par","idealTree","nodeify","maybeReadFile","file","prefix","data","ex","code","catch","filterEnv","action","includeDev","config","get","test","includeProd","resolves","filter","dev","Object","assign","err","all","spread","shrinkwrap","lockfile","pkgJson","sw","warn","dependencies","devDependencies","result","status","generate","lockFile","errors","join","auditReport","submitForFullReport","statusCode","ne","wrapped","auditResult","actions","isMajor","major","add","id","path","majorFixes","install","installFixes","updateFixes","vuln","modPath","split","newPath","slice","indexOf","concat","update","review","Set","try","installMajor","installCount","size","vulnFixCount","metavuln","metadata","vulnerabilities","total","keys","key","verbose","map","u","run","numScanned","totalDependencies","vulns","low","moderate","high","critical","process","exitCode","printParseableReport","printFullReport","asCallback"],"mappings":"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","file":"audit.js","sourcesContent":["'use strict'\n\nconst Bluebird = require('bluebird')\n\nconst audit = require('./install/audit.js')\nconst fs = require('graceful-fs')\nconst Installer = require('./install.js').Installer\nconst lockVerify = require('lock-verify')\nconst log = require('npmlog')\nconst npa = require('npm-package-arg')\nconst npm = require('./npm.js')\nconst output = require('./utils/output.js')\nconst parseJson = require('json-parse-better-errors')\n\nconst readFile = Bluebird.promisify(fs.readFile)\n\nmodule.exports = auditCmd\n\nconst usage = require('./utils/usage')\nauditCmd.usage = usage(\n  'audit',\n  '\\nnpm audit [--json]' +\n  '\\nnpm audit fix ' +\n  '[--force|--package-lock-only|--dry-run|--production|--only=(dev|prod)]'\n)\n\nauditCmd.completion = function (opts, cb) {\n  const argv = opts.conf.argv.remain\n\n  switch (argv[2]) {\n    case 'audit':\n      return cb(null, [])\n    default:\n      return cb(new Error(argv[2] + ' not recognized'))\n  }\n}\n\nclass Auditor extends Installer {\n  constructor (where, dryrun, args, opts) {\n    super(where, dryrun, args, opts)\n    this.deepArgs = (opts && opts.deepArgs) || []\n    this.runId = opts.runId || ''\n    this.audit = false\n  }\n\n  loadAllDepsIntoIdealTree (cb) {\n    Bluebird.fromNode(cb => super.loadAllDepsIntoIdealTree(cb)).then(() => {\n      if (this.deepArgs && this.deepArgs.length) {\n        this.deepArgs.forEach(arg => {\n          arg.reduce((acc, child, ii) => {\n            if (!acc) {\n              // We might not always be able to find `target` through the given\n              // path. If we can't we'll just ignore it.\n              return\n            }\n            const spec = npa(child)\n            const target = (\n              acc.requires.find(n => n.package.name === spec.name) ||\n              acc.requires.find(\n                n => audit.scrub(n.package.name, this.runId) === spec.name\n              )\n            )\n            if (target && ii === arg.length - 1) {\n              target.loaded = false\n              // This kills `hasModernMeta()` and forces a re-fetch\n              target.package = {\n                name: spec.name,\n                version: spec.fetchSpec,\n                _requested: target.package._requested\n              }\n              delete target.fakeChild\n              let parent = target.parent\n              while (parent) {\n                parent.loaded = false\n                parent = parent.parent\n              }\n              target.requiredBy.forEach(par => {\n                par.loaded = false\n                delete par.fakeChild\n              })\n            }\n            return target\n          }, this.idealTree)\n        })\n        return Bluebird.fromNode(cb => super.loadAllDepsIntoIdealTree(cb))\n      }\n    }).nodeify(cb)\n  }\n\n  // no top level lifecycles on audit\n  runPreinstallTopLevelLifecycles (cb) { cb() }\n  runPostinstallTopLevelLifecycles (cb) { cb() }\n}\n\nfunction maybeReadFile (name) {\n  const file = `${npm.prefix}/${name}`\n  return readFile(file)\n    .then((data) => {\n      try {\n        return parseJson(data)\n      } catch (ex) {\n        ex.code = 'EJSONPARSE'\n        throw ex\n      }\n    })\n    .catch({code: 'ENOENT'}, () => null)\n    .catch((ex) => {\n      ex.file = file\n      throw ex\n    })\n}\n\nfunction filterEnv (action) {\n  const includeDev = npm.config.get('dev') ||\n    (!/^prod(uction)?$/.test(npm.config.get('only')) && !npm.config.get('production')) ||\n    /^dev(elopment)?$/.test(npm.config.get('only')) ||\n    /^dev(elopment)?$/.test(npm.config.get('also'))\n  const includeProd = !/^dev(elopment)?$/.test(npm.config.get('only'))\n  const resolves = action.resolves.filter(({dev}) => {\n    return (dev && includeDev) || (!dev && includeProd)\n  })\n  if (resolves.length) {\n    return Object.assign({}, action, {resolves})\n  }\n}\n\nfunction auditCmd (args, cb) {\n  if (npm.config.get('global')) {\n    const err = new Error('`npm audit` does not support testing globals')\n    err.code = 'EAUDITGLOBAL'\n    throw err\n  }\n  if (args.length && args[0] !== 'fix') {\n    return cb(new Error('Invalid audit subcommand: `' + args[0] + '`\\n\\nUsage:\\n' + auditCmd.usage))\n  }\n  return Bluebird.all([\n    maybeReadFile('npm-shrinkwrap.json'),\n    maybeReadFile('package-lock.json'),\n    maybeReadFile('package.json')\n  ]).spread((shrinkwrap, lockfile, pkgJson) => {\n    const sw = shrinkwrap || lockfile\n    if (!pkgJson) {\n      const err = new Error('No package.json found: Cannot audit a project without a package.json')\n      err.code = 'EAUDITNOPJSON'\n      throw err\n    }\n    if (!sw) {\n      const err = new Error('Neither npm-shrinkwrap.json nor package-lock.json found: Cannot audit a project without a lockfile')\n      err.code = 'EAUDITNOLOCK'\n      throw err\n    } else if (shrinkwrap && lockfile) {\n      log.warn('audit', 'Both npm-shrinkwrap.json and package-lock.json exist, using npm-shrinkwrap.json.')\n    }\n    const requires = Object.assign(\n      {},\n      (pkgJson && pkgJson.dependencies) || {},\n      (pkgJson && pkgJson.devDependencies) || {}\n    )\n    return lockVerify(npm.prefix).then((result) => {\n      if (result.status) return audit.generate(sw, requires)\n\n      const lockFile = shrinkwrap ? 'npm-shrinkwrap.json' : 'package-lock.json'\n      const err = new Error(`Errors were found in your ${lockFile}, run  npm install  to fix them.\\n    ` +\n        result.errors.join('\\n    '))\n      err.code = 'ELOCKVERIFY'\n      throw err\n    })\n  }).then((auditReport) => {\n    return audit.submitForFullReport(auditReport)\n  }).catch((err) => {\n    if (err.statusCode === 404 || err.statusCode >= 500) {\n      const ne = new Error(`Your configured registry (${npm.config.get('registry')}) does not support audit requests.`)\n      ne.code = 'ENOAUDIT'\n      ne.wrapped = err\n      throw ne\n    }\n    throw err\n  }).then((auditResult) => {\n    if (args[0] === 'fix') {\n      const actions = (auditResult.actions || []).reduce((acc, action) => {\n        action = filterEnv(action)\n        if (!action) { return acc }\n        if (action.isMajor) {\n          acc.major.add(`${action.module}@${action.target}`)\n          action.resolves.forEach(({id, path}) => acc.majorFixes.add(`${id}::${path}`))\n        } else if (action.action === 'install') {\n          acc.install.add(`${action.module}@${action.target}`)\n          action.resolves.forEach(({id, path}) => acc.installFixes.add(`${id}::${path}`))\n        } else if (action.action === 'update') {\n          const name = action.module\n          const version = action.target\n          action.resolves.forEach(vuln => {\n            acc.updateFixes.add(`${vuln.id}::${vuln.path}`)\n            const modPath = vuln.path.split('>')\n            const newPath = modPath.slice(\n              0, modPath.indexOf(name)\n            ).concat(`${name}@${version}`)\n            if (newPath.length === 1) {\n              acc.install.add(newPath[0])\n            } else {\n              acc.update.add(newPath.join('>'))\n            }\n          })\n        } else if (action.action === 'review') {\n          action.resolves.forEach(({id, path}) => acc.review.add(`${id}::${path}`))\n        }\n        return acc\n      }, {\n        install: new Set(),\n        installFixes: new Set(),\n        update: new Set(),\n        updateFixes: new Set(),\n        major: new Set(),\n        majorFixes: new Set(),\n        review: new Set()\n      })\n      return Bluebird.try(() => {\n        const installMajor = npm.config.get('force')\n        const installCount = actions.install.size + (installMajor ? actions.major.size : 0) + actions.update.size\n        const vulnFixCount = new Set([...actions.installFixes, ...actions.updateFixes, ...(installMajor ? actions.majorFixes : [])]).size\n        const metavuln = auditResult.metadata.vulnerabilities\n        const total = Object.keys(metavuln).reduce((acc, key) => acc + metavuln[key], 0)\n        if (installCount) {\n          log.verbose(\n            'audit',\n            'installing',\n            [...actions.install, ...(installMajor ? actions.major : []), ...actions.update]\n          )\n        }\n        return Bluebird.fromNode(cb => {\n          new Auditor(\n            npm.prefix,\n            !!npm.config.get('dry-run'),\n            [...actions.install, ...(installMajor ? actions.major : [])],\n            {\n              runId: auditResult.runId,\n              deepArgs: [...actions.update].map(u => u.split('>'))\n            }\n          ).run(cb)\n        }).then(() => {\n          const numScanned = auditResult.metadata.totalDependencies\n          if (!npm.config.get('json') && !npm.config.get('parseable')) {\n            output(`fixed ${vulnFixCount} of ${total} vulnerabilit${total === 1 ? 'y' : 'ies'} in ${numScanned} scanned package${numScanned === 1 ? '' : 's'}`)\n            if (actions.review.size) {\n              output(`  ${actions.review.size} vulnerabilit${actions.review.size === 1 ? 'y' : 'ies'} required manual review and could not be updated`)\n            }\n            if (actions.major.size) {\n              output(`  ${actions.major.size} package update${actions.major.size === 1 ? '' : 's'} for ${actions.majorFixes.size} vuln${actions.majorFixes.size === 1 ? '' : 's'} involved breaking changes`)\n              if (installMajor) {\n                output('  (installed due to `--force` option)')\n              } else {\n                output('  (use `npm audit fix --force` to install breaking changes; or do it by hand)')\n              }\n            }\n          }\n        })\n      })\n    } else {\n      const vulns =\n        auditResult.metadata.vulnerabilities.low +\n        auditResult.metadata.vulnerabilities.moderate +\n        auditResult.metadata.vulnerabilities.high +\n        auditResult.metadata.vulnerabilities.critical\n      if (vulns > 0) process.exitCode = 1\n      if (npm.config.get('parseable')) {\n        return audit.printParseableReport(auditResult)\n      } else {\n        return audit.printFullReport(auditResult)\n      }\n    }\n  }).asCallback(cb)\n}\n"]}