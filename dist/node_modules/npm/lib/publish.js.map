{"version":3,"sources":["../../../../node_modules/npm/lib/publish.js"],"names":["BB","require","cacache","createReadStream","getPublishConfig","lifecycle","promisify","log","mapToRegistry","npa","npm","output","pack","pacote","pacoteOpts","path","readJson","readUserInfo","semver","statAsync","stat","publish","usage","completion","opts","cb","module","exports","args","isRetry","length","verbose","t","config","get","trim","validRange","Error","publish_","then","tarball","silent","level","JSON","stringify","id","nodeify","arg","isDirectory","err","code","publishFromDirectory","publishFromPackage","contents","prepareDirectory","join","pkg","tmp","withTmp","tmpPrefix","tmpDir","target","packDirectory","tap","c","logContents","upload","extracted","toFile","extract","resolve","getContents","cached","reject","private","mappedConfig","publishConfig","registry","client","_npmVersion","version","_nodeVersion","process","versions","node","modules","fromNode","name","registryURI","auth","registryBase","spread","silly","_npmUser","username","email","params","metadata","body","scope","access","showProgress","_id","catch","warn","commands","unpublish","finally","test","message","stdin","isTTY","stdout","otp","set"],"mappings":"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","file":"publish.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst cacache = require('cacache')\nconst createReadStream = require('graceful-fs').createReadStream\nconst getPublishConfig = require('./utils/get-publish-config.js')\nconst lifecycle = BB.promisify(require('./utils/lifecycle.js'))\nconst log = require('npmlog')\nconst mapToRegistry = require('./utils/map-to-registry.js')\nconst npa = require('npm-package-arg')\nconst npm = require('./npm.js')\nconst output = require('./utils/output.js')\nconst pack = require('./pack')\nconst pacote = require('pacote')\nconst pacoteOpts = require('./config/pacote')\nconst path = require('path')\nconst readJson = BB.promisify(require('read-package-json'))\nconst readUserInfo = require('./utils/read-user-info.js')\nconst semver = require('semver')\nconst statAsync = BB.promisify(require('graceful-fs').stat)\n\npublish.usage = 'npm publish [<tarball>|<folder>] [--tag <tag>] [--access <public|restricted>]' +\n                \"\\n\\nPublishes '.' if no argument supplied\" +\n                '\\n\\nSets tag `latest` if no --tag specified'\n\npublish.completion = function (opts, cb) {\n  // publish can complete to a folder with a package.json\n  // or a tarball, or a tarball url.\n  // for now, not yet implemented.\n  return cb()\n}\n\nmodule.exports = publish\nfunction publish (args, isRetry, cb) {\n  if (typeof cb !== 'function') {\n    cb = isRetry\n    isRetry = false\n  }\n  if (args.length === 0) args = ['.']\n  if (args.length !== 1) return cb(publish.usage)\n\n  log.verbose('publish', args)\n\n  const t = npm.config.get('tag').trim()\n  if (semver.validRange(t)) {\n    return cb(new Error('Tag name must not be a valid SemVer range: ' + t))\n  }\n\n  return publish_(args[0])\n    .then((tarball) => {\n      const silent = log.level === 'silent'\n      if (!silent && npm.config.get('json')) {\n        output(JSON.stringify(tarball, null, 2))\n      } else if (!silent) {\n        output(`+ ${tarball.id}`)\n      }\n    })\n    .nodeify(cb)\n}\n\nfunction publish_ (arg) {\n  return statAsync(arg).then((stat) => {\n    if (stat.isDirectory()) {\n      return stat\n    } else {\n      const err = new Error('not a directory')\n      err.code = 'ENOTDIR'\n      throw err\n    }\n  }).then(() => {\n    return publishFromDirectory(arg)\n  }, (err) => {\n    if (err.code !== 'ENOENT' && err.code !== 'ENOTDIR') {\n      throw err\n    } else {\n      return publishFromPackage(arg)\n    }\n  })\n}\n\nfunction publishFromDirectory (arg) {\n  // All this readJson is because any of the given scripts might modify the\n  // package.json in question, so we need to refresh after every step.\n  let contents\n  return pack.prepareDirectory(arg).then(() => {\n    return readJson(path.join(arg, 'package.json'))\n  }).then((pkg) => {\n    return lifecycle(pkg, 'prepublishOnly', arg)\n  }).then(() => {\n    return readJson(path.join(arg, 'package.json'))\n  }).then((pkg) => {\n    return cacache.tmp.withTmp(npm.tmp, {tmpPrefix: 'fromDir'}, (tmpDir) => {\n      const target = path.join(tmpDir, 'package.tgz')\n      return pack.packDirectory(pkg, arg, target, null, true)\n        .tap((c) => { contents = c })\n        .then((c) => !npm.config.get('json') && pack.logContents(c))\n        .then(() => upload(arg, pkg, false, target))\n    })\n  }).then(() => {\n    return readJson(path.join(arg, 'package.json'))\n  }).tap((pkg) => {\n    return lifecycle(pkg, 'publish', arg)\n  }).tap((pkg) => {\n    return lifecycle(pkg, 'postpublish', arg)\n  })\n    .then(() => contents)\n}\n\nfunction publishFromPackage (arg) {\n  return cacache.tmp.withTmp(npm.tmp, {tmpPrefix: 'fromPackage'}, (tmp) => {\n    const extracted = path.join(tmp, 'package')\n    const target = path.join(tmp, 'package.json')\n    const opts = pacoteOpts()\n    return pacote.tarball.toFile(arg, target, opts)\n      .then(() => pacote.extract(arg, extracted, opts))\n      .then(() => readJson(path.join(extracted, 'package.json')))\n      .then((pkg) => {\n        return BB.resolve(pack.getContents(pkg, target))\n          .tap((c) => !npm.config.get('json') && pack.logContents(c))\n          .tap(() => upload(arg, pkg, false, target))\n      })\n  })\n}\n\nfunction upload (arg, pkg, isRetry, cached) {\n  if (!pkg) {\n    return BB.reject(new Error('no package.json file found'))\n  }\n  if (pkg.private) {\n    return BB.reject(new Error(\n      'This package has been marked as private\\n' +\n      \"Remove the 'private' field from the package.json to publish it.\"\n    ))\n  }\n  const mappedConfig = getPublishConfig(\n    pkg.publishConfig,\n    npm.config,\n    npm.registry\n  )\n  const config = mappedConfig.config\n  const registry = mappedConfig.client\n\n  pkg._npmVersion = npm.version\n  pkg._nodeVersion = process.versions.node\n\n  delete pkg.modules\n\n  return BB.fromNode((cb) => {\n    mapToRegistry(pkg.name, config, (err, registryURI, auth, registryBase) => {\n      if (err) { return cb(err) }\n      cb(null, [registryURI, auth, registryBase])\n    })\n  }).spread((registryURI, auth, registryBase) => {\n    // we just want the base registry URL in this case\n    log.verbose('publish', 'registryBase', registryBase)\n    log.silly('publish', 'uploading', cached)\n\n    pkg._npmUser = {\n      name: auth.username,\n      email: auth.email\n    }\n\n    const params = {\n      metadata: pkg,\n      body: !npm.config.get('dry-run') && createReadStream(cached),\n      auth: auth\n    }\n\n    // registry-frontdoor cares about the access level, which is only\n    // configurable for scoped packages\n    if (config.get('access')) {\n      if (!npa(pkg.name).scope && config.get('access') === 'restricted') {\n        throw new Error(\"Can't restrict access to unscoped packages.\")\n      }\n\n      params.access = config.get('access')\n    }\n\n    if (npm.config.get('dry-run')) {\n      log.verbose('publish', '--dry-run mode enabled. Skipping upload.')\n      return BB.resolve()\n    }\n\n    log.showProgress('publish:' + pkg._id)\n    return BB.fromNode((cb) => {\n      registry.publish(registryBase, params, cb)\n    }).catch((err) => {\n      if (\n        err.code === 'EPUBLISHCONFLICT' &&\n        npm.config.get('force') &&\n        !isRetry\n      ) {\n        log.warn('publish', 'Forced publish over ' + pkg._id)\n        return BB.fromNode((cb) => {\n          npm.commands.unpublish([pkg._id], cb)\n        }).finally(() => {\n          // ignore errors.  Use the force.  Reach out with your feelings.\n          return upload(arg, pkg, true, cached).catch(() => {\n            // but if it fails again, then report the first error.\n            throw err\n          })\n        })\n      } else {\n        throw err\n      }\n    })\n  }).catch((err) => {\n    if (err.code !== 'EOTP' && !(err.code === 'E401' && /one-time pass/.test(err.message))) throw err\n    // we prompt on stdout and read answers from stdin, so they need to be ttys.\n    if (!process.stdin.isTTY || !process.stdout.isTTY) throw err\n    return readUserInfo.otp().then((otp) => {\n      npm.config.set('otp', otp)\n      return upload(arg, pkg, isRetry, cached)\n    })\n  })\n}\n"]}