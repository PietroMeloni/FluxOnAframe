{"version":3,"sources":["../../../../node_modules/npm/lib/token.js"],"names":["profile","require","npm","output","Table","Bluebird","isCidrV4","v4","isCidrV6","v6","readUserInfo","ansistyles","log","pulseTillDone","module","exports","token","_validateCIDRList","validateCIDRList","usage","subcommands","completion","opts","cb","argv","conf","remain","Error","withCb","prom","then","value","args","gauge","show","length","list","rm","slice","create","generateTokenIds","tokens","minLength","byId","forEach","id","key","ii","some","ot","config","json","get","parseable","registry","otp","creds","getCredentialsByURI","auth","username","basic","password","Buffer","from","toString","split","info","withPromise","listTokens","JSON","stringify","join","created","readonly","cidr_whitelist","idWidth","reduce","acc","Math","max","table","head","colWidths","push","String","toRemove","progress","newItem","matches","filter","indexOf","tokenMatches","map","removeToken","catch","ex","code","cidr","validCIDR","createToken","result","updated","Object","keys","k","bright","validateCIDR","cidrs","maybeList","Array","isArray"],"mappings":"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","file":"token.js","sourcesContent":["'use strict'\nconst profile = require('npm-profile')\nconst npm = require('./npm.js')\nconst output = require('./utils/output.js')\nconst Table = require('cli-table3')\nconst Bluebird = require('bluebird')\nconst isCidrV4 = require('is-cidr').v4\nconst isCidrV6 = require('is-cidr').v6\nconst readUserInfo = require('./utils/read-user-info.js')\nconst ansistyles = require('ansistyles')\nconst log = require('npmlog')\nconst pulseTillDone = require('./utils/pulse-till-done.js')\n\nmodule.exports = token\n\ntoken._validateCIDRList = validateCIDRList\n\ntoken.usage =\n  'npm token list\\n' +\n  'npm token revoke <tokenKey>\\n' +\n  'npm token create [--read-only] [--cidr=list]\\n'\n\ntoken.subcommands = ['list', 'revoke', 'create']\n\ntoken.completion = function (opts, cb) {\n  var argv = opts.conf.argv.remain\n\n  switch (argv[2]) {\n    case 'list':\n    case 'revoke':\n    case 'create':\n      return cb(null, [])\n    default:\n      return cb(new Error(argv[2] + ' not recognized'))\n  }\n}\n\nfunction withCb (prom, cb) {\n  prom.then((value) => cb(null, value), cb)\n}\n\nfunction token (args, cb) {\n  log.gauge.show('token')\n  if (args.length === 0) return withCb(list([]), cb)\n  switch (args[0]) {\n    case 'list':\n    case 'ls':\n      withCb(list(), cb)\n      break\n    case 'delete':\n    case 'revoke':\n    case 'remove':\n    case 'rm':\n      withCb(rm(args.slice(1)), cb)\n      break\n    case 'create':\n      withCb(create(args.slice(1)), cb)\n      break\n    default:\n      cb(new Error('Unknown profile command: ' + args[0]))\n  }\n}\n\nfunction generateTokenIds (tokens, minLength) {\n  const byId = {}\n  tokens.forEach((token) => {\n    token.id = token.key\n    for (let ii = minLength; ii < token.key.length; ++ii) {\n      if (!tokens.some((ot) => ot !== token && ot.key.slice(0, ii) === token.key.slice(0, ii))) {\n        token.id = token.key.slice(0, ii)\n        break\n      }\n    }\n    byId[token.id] = token\n  })\n  return byId\n}\n\nfunction config () {\n  const conf = {\n    json: npm.config.get('json'),\n    parseable: npm.config.get('parseable'),\n    registry: npm.config.get('registry'),\n    otp: npm.config.get('otp')\n  }\n  const creds = npm.config.getCredentialsByURI(conf.registry)\n  if (creds.token) {\n    conf.auth = {token: creds.token}\n  } else if (creds.username) {\n    conf.auth = {basic: {username: creds.username, password: creds.password}}\n  } else if (creds.auth) {\n    const auth = Buffer.from(creds.auth, 'base64').toString().split(':', 2)\n    conf.auth = {basic: {username: auth[0], password: auth[1]}}\n  } else {\n    conf.auth = {}\n  }\n  if (conf.otp) conf.auth.otp = conf.otp\n  return conf\n}\n\nfunction list (args) {\n  const conf = config()\n  log.info('token', 'getting list')\n  return pulseTillDone.withPromise(profile.listTokens(conf)).then((tokens) => {\n    if (conf.json) {\n      output(JSON.stringify(tokens, null, 2))\n      return\n    } else if (conf.parseable) {\n      output(['key', 'token', 'created', 'readonly', 'CIDR whitelist'].join('\\t'))\n      tokens.forEach((token) => {\n        output([\n          token.key,\n          token.token,\n          token.created,\n          token.readonly ? 'true' : 'false',\n          token.cidr_whitelist ? token.cidr_whitelist.join(',') : ''\n        ].join('\\t'))\n      })\n      return\n    }\n    generateTokenIds(tokens, 6)\n    const idWidth = tokens.reduce((acc, token) => Math.max(acc, token.id.length), 0)\n    const table = new Table({\n      head: ['id', 'token', 'created', 'readonly', 'CIDR whitelist'],\n      colWidths: [Math.max(idWidth, 2) + 2, 9, 12, 10]\n    })\n    tokens.forEach((token) => {\n      table.push([\n        token.id,\n        token.token + '…',\n        String(token.created).slice(0, 10),\n        token.readonly ? 'yes' : 'no',\n        token.cidr_whitelist ? token.cidr_whitelist.join(', ') : ''\n      ])\n    })\n    output(table.toString())\n  })\n}\n\nfunction rm (args) {\n  if (args.length === 0) {\n    throw new Error('npm token revoke <tokenKey>')\n  }\n  const conf = config()\n  const toRemove = []\n  const progress = log.newItem('removing tokens', toRemove.length)\n  progress.info('token', 'getting existing list')\n  return pulseTillDone.withPromise(profile.listTokens(conf).then((tokens) => {\n    args.forEach((id) => {\n      const matches = tokens.filter((token) => token.key.indexOf(id) === 0)\n      if (matches.length === 1) {\n        toRemove.push(matches[0].key)\n      } else if (matches.length > 1) {\n        throw new Error(`Token ID \"${id}\" was ambiguous, a new token may have been created since you last ran \\`npm-profile token list\\`.`)\n      } else {\n        const tokenMatches = tokens.filter((token) => id.indexOf(token.token) === 0)\n        if (tokenMatches === 0) {\n          throw new Error(`Unknown token id or value \"${id}\".`)\n        }\n        toRemove.push(id)\n      }\n    })\n    return Bluebird.map(toRemove, (key) => {\n      return profile.removeToken(key, conf).catch((ex) => {\n        if (ex.code !== 'EOTP') throw ex\n        log.info('token', 'failed because revoking this token requires OTP')\n        return readUserInfo.otp('Authenticator provided OTP:').then((otp) => {\n          conf.auth.otp = otp\n          return profile.removeToken(key, conf)\n        })\n      })\n    })\n  })).then(() => {\n    if (conf.json) {\n      output(JSON.stringify(toRemove))\n    } else if (conf.parseable) {\n      output(toRemove.join('\\t'))\n    } else {\n      output('Removed ' + toRemove.length + ' token' + (toRemove.length !== 1 ? 's' : ''))\n    }\n  })\n}\n\nfunction create (args) {\n  const conf = config()\n  const cidr = npm.config.get('cidr')\n  const readonly = npm.config.get('read-only')\n\n  const validCIDR = validateCIDRList(cidr)\n  return readUserInfo.password().then((password) => {\n    log.info('token', 'creating')\n    return profile.createToken(password, readonly, validCIDR, conf).catch((ex) => {\n      if (ex.code !== 'EOTP') throw ex\n      log.info('token', 'failed because it requires OTP')\n      return readUserInfo.otp('Authenticator provided OTP:').then((otp) => {\n        conf.auth.otp = otp\n        log.info('token', 'creating with OTP')\n        return pulseTillDone.withPromise(profile.createToken(password, readonly, validCIDR, conf))\n      })\n    })\n  }).then((result) => {\n    delete result.key\n    delete result.updated\n    if (conf.json) {\n      output(JSON.stringify(result))\n    } else if (conf.parseable) {\n      Object.keys(result).forEach((k) => output(k + '\\t' + result[k]))\n    } else {\n      const table = new Table()\n      Object.keys(result).forEach((k) => table.push({[ansistyles.bright(k)]: String(result[k])}))\n      output(table.toString())\n    }\n  })\n}\n\nfunction validateCIDR (cidr) {\n  if (isCidrV6(cidr)) {\n    throw new Error('CIDR whitelist can only contain IPv4 addresses, ' + cidr + ' is IPv6')\n  }\n  if (!isCidrV4(cidr)) {\n    throw new Error('CIDR whitelist contains invalid CIDR entry: ' + cidr)\n  }\n}\n\nfunction validateCIDRList (cidrs) {\n  const maybeList = cidrs ? (Array.isArray(cidrs) ? cidrs : [cidrs]) : []\n  const list = maybeList.length === 1 ? maybeList[0].split(/,\\s*/) : maybeList\n  list.forEach(validateCIDR)\n  return list\n}\n"]}