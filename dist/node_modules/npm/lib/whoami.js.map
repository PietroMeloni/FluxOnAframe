{"version":3,"sources":["../../../../node_modules/npm/lib/whoami.js"],"names":["npm","require","output","module","exports","whoami","usage","args","silent","cb","registry","config","get","Error","auth","getCredentialsByURI","username","process","nextTick","bind","token","er","needNewSession","code","needAuth"],"mappings":";;AAAA,IAAIA,MAAMC,QAAQ,UAAR,CAAV;AACA,IAAIC,SAASD,QAAQ,mBAAR,CAAb;;AAEAE,OAAOC,OAAP,GAAiBC,MAAjB;;AAEAA,OAAOC,KAAP,GAAe,wFAAf;;AAEA,SAASD,MAAT,CAAiBE,IAAjB,EAAuBC,MAAvB,EAA+BC,EAA/B,EAAmC;AACjC;AACA,MAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC5BA,SAAKD,MAAL;AACAA,aAAS,KAAT;AACD;;AAED,MAAIE,WAAWV,IAAIW,MAAJ,CAAWC,GAAX,CAAe,UAAf,CAAf;AACA,MAAI,CAACF,QAAL,EAAe,OAAOD,GAAG,IAAII,KAAJ,CAAU,yBAAV,CAAH,CAAP;;AAEf,MAAIC,OAAOd,IAAIW,MAAJ,CAAWI,mBAAX,CAA+BL,QAA/B,CAAX;AACA,MAAII,IAAJ,EAAU;AACR,QAAIA,KAAKE,QAAT,EAAmB;AACjB,UAAI,CAACR,MAAL,EAAaN,OAAOY,KAAKE,QAAZ;AACb,aAAOC,QAAQC,QAAR,CAAiBT,GAAGU,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoBL,KAAKE,QAAzB,CAAjB,CAAP;AACD,KAHD,MAGO,IAAIF,KAAKM,KAAT,EAAgB;AACrB,aAAOpB,IAAIU,QAAJ,CAAaL,MAAb,CAAoBK,QAApB,EAA8B,EAAEI,MAAMA,IAAR,EAA9B,EAA8C,UAAUO,EAAV,EAAcL,QAAd,EAAwB;AAC3E,YAAIK,EAAJ,EAAQ,OAAOZ,GAAGY,EAAH,CAAP;AACR,YAAI,CAACL,QAAL,EAAe;AACb,cAAIM,iBAAiB,IAAIT,KAAJ,CACnB,0DADmB,CAArB;AAGAS,yBAAeC,IAAf,GAAsB,WAAtB;AACA,iBAAOd,GAAGa,cAAH,CAAP;AACD;;AAED,YAAI,CAACd,MAAL,EAAaN,OAAOc,QAAP;AACbP,WAAG,IAAH,EAASO,QAAT;AACD,OAZM,CAAP;AAaD;AACF;;AAED;AACA;AACA,MAAIQ,WAAW,IAAIX,KAAJ,CACb,4CADa,CAAf;AAGAW,WAASD,IAAT,GAAgB,WAAhB;AACAN,UAAQC,QAAR,CAAiBT,GAAGU,IAAH,CAAQ,IAAR,EAAcK,QAAd,CAAjB;AACD","file":"whoami.js","sourcesContent":["var npm = require('./npm.js')\nvar output = require('./utils/output.js')\n\nmodule.exports = whoami\n\nwhoami.usage = 'npm whoami [--registry <registry>]\\n(just prints username according to given registry)'\n\nfunction whoami (args, silent, cb) {\n  // FIXME: need tighter checking on this, but is a breaking change\n  if (typeof cb !== 'function') {\n    cb = silent\n    silent = false\n  }\n\n  var registry = npm.config.get('registry')\n  if (!registry) return cb(new Error('no default registry set'))\n\n  var auth = npm.config.getCredentialsByURI(registry)\n  if (auth) {\n    if (auth.username) {\n      if (!silent) output(auth.username)\n      return process.nextTick(cb.bind(this, null, auth.username))\n    } else if (auth.token) {\n      return npm.registry.whoami(registry, { auth: auth }, function (er, username) {\n        if (er) return cb(er)\n        if (!username) {\n          var needNewSession = new Error(\n            'Your auth token is no longer valid. Please log in again.'\n          )\n          needNewSession.code = 'ENEEDAUTH'\n          return cb(needNewSession)\n        }\n\n        if (!silent) output(username)\n        cb(null, username)\n      })\n    }\n  }\n\n  // At this point, if they have a credentials object, it doesn't have a token\n  // or auth in it.  Probably just the default registry.\n  var needAuth = new Error(\n    'this command requires you to be logged in.'\n  )\n  needAuth.code = 'ENEEDAUTH'\n  process.nextTick(cb.bind(this, needAuth))\n}\n"]}