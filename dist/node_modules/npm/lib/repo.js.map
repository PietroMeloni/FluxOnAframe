{"version":3,"sources":["../../../../node_modules/npm/lib/repo.js"],"names":["module","exports","repo","usage","openUrl","require","hostedGitInfo","url_","fetchPackageMetadata","completion","opts","cb","args","n","length","fullMetadata","er","d","getUrlAndOpen","r","repository","Error","info","fromUrl","url","browse","unknownHostedUrl","idx","indexOf","slice","replace","parse","protocol","host","path","e"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,IAAjB;;AAEAA,KAAKC,KAAL,GAAa,kBAAb;;AAEA,IAAIC,UAAUC,QAAQ,kBAAR,CAAd;AACA,IAAIC,gBAAgBD,QAAQ,iBAAR,CAApB;AACA,IAAIE,OAAOF,QAAQ,KAAR,CAAX;AACA,IAAIG,uBAAuBH,QAAQ,6BAAR,CAA3B;;AAEAH,KAAKO,UAAL,GAAkB,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACpC;AACA;AACAA;AACD,CAJD;;AAMA,SAAST,IAAT,CAAeU,IAAf,EAAqBD,EAArB,EAAyB;AACvB,MAAIE,IAAID,KAAKE,MAAL,GAAcF,KAAK,CAAL,CAAd,GAAwB,GAAhC;AACAJ,uBAAqBK,CAArB,EAAwB,GAAxB,EAA6B,EAACE,cAAc,IAAf,EAA7B,EAAmD,UAAUC,EAAV,EAAcC,CAAd,EAAiB;AAClE,QAAID,EAAJ,EAAQ,OAAOL,GAAGK,EAAH,CAAP;AACRE,kBAAcD,CAAd,EAAiBN,EAAjB;AACD,GAHD;AAID;;AAED,SAASO,aAAT,CAAwBD,CAAxB,EAA2BN,EAA3B,EAA+B;AAC7B,MAAIQ,IAAIF,EAAEG,UAAV;AACA,MAAI,CAACD,CAAL,EAAQ,OAAOR,GAAG,IAAIU,KAAJ,CAAU,eAAV,CAAH,CAAP;AACR;AACA;AACA,MAAIC,OAAOhB,cAAciB,OAAd,CAAsBJ,EAAEK,GAAxB,CAAX;AACA,MAAIA,MAAMF,OAAOA,KAAKG,MAAL,EAAP,GAAuBC,iBAAiBP,EAAEK,GAAnB,CAAjC;;AAEA,MAAI,CAACA,GAAL,EAAU,OAAOb,GAAG,IAAIU,KAAJ,CAAU,kCAAV,CAAH,CAAP;;AAEVjB,UAAQoB,GAAR,EAAa,2CAAb,EAA0Db,EAA1D;AACD;;AAED,SAASe,gBAAT,CAA2BF,GAA3B,EAAgC;AAC9B,MAAI;AACF,QAAIG,MAAMH,IAAII,OAAJ,CAAY,GAAZ,CAAV;AACA,QAAID,QAAQ,CAAC,CAAb,EAAgB;AACdH,YAAMA,IAAIK,KAAJ,CAAUF,MAAM,CAAhB,EAAmBG,OAAnB,CAA2B,WAA3B,EAAwC,KAAxC,CAAN;AACD;AACDN,UAAMjB,KAAKwB,KAAL,CAAWP,GAAX,CAAN;AACA,QAAIQ,WAAWR,IAAIQ,QAAJ,KAAiB,QAAjB,GACX,QADW,GAEX,OAFJ;AAGA,WAAOA,WAAW,IAAX,IAAmBR,IAAIS,IAAJ,IAAY,EAA/B,IACLT,IAAIU,IAAJ,CAASJ,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CADF;AAED,GAXD,CAWE,OAAOK,CAAP,EAAU,CAAE;AACf","file":"repo.js","sourcesContent":["module.exports = repo\n\nrepo.usage = 'npm repo [<pkg>]'\n\nvar openUrl = require('./utils/open-url')\nvar hostedGitInfo = require('hosted-git-info')\nvar url_ = require('url')\nvar fetchPackageMetadata = require('./fetch-package-metadata.js')\n\nrepo.completion = function (opts, cb) {\n  // FIXME: there used to be registry completion here, but it stopped making\n  // sense somewhere around 50,000 packages on the registry\n  cb()\n}\n\nfunction repo (args, cb) {\n  var n = args.length ? args[0] : '.'\n  fetchPackageMetadata(n, '.', {fullMetadata: true}, function (er, d) {\n    if (er) return cb(er)\n    getUrlAndOpen(d, cb)\n  })\n}\n\nfunction getUrlAndOpen (d, cb) {\n  var r = d.repository\n  if (!r) return cb(new Error('no repository'))\n  // XXX remove this when npm@v1.3.10 from node 0.10 is deprecated\n  // from https://github.com/npm/npm-www/issues/418\n  var info = hostedGitInfo.fromUrl(r.url)\n  var url = info ? info.browse() : unknownHostedUrl(r.url)\n\n  if (!url) return cb(new Error('no repository: could not get url'))\n\n  openUrl(url, 'repository available at the following URL', cb)\n}\n\nfunction unknownHostedUrl (url) {\n  try {\n    var idx = url.indexOf('@')\n    if (idx !== -1) {\n      url = url.slice(idx + 1).replace(/:([^\\d]+)/, '/$1')\n    }\n    url = url_.parse(url)\n    var protocol = url.protocol === 'https:'\n      ? 'https:'\n      : 'http:'\n    return protocol + '//' + (url.host || '') +\n      url.path.replace(/\\.git$/, '')\n  } catch (e) {}\n}\n"]}