{"version":3,"sources":["../../../../node_modules/npm/lib/team.js"],"names":["mapToRegistry","require","npm","output","module","exports","team","subcommands","usage","completion","opts","cb","argv","conf","remain","length","Error","args","cmd","shift","entity","split","config","err","uri","auth","registry","scope","replace","user","data","JSON","stringify","undefined","e","message"],"mappings":";;AAAA;AACA,IAAIA,gBAAgBC,QAAQ,4BAAR,CAApB;AACA,IAAIC,MAAMD,QAAQ,OAAR,CAAV;AACA,IAAIE,SAASF,QAAQ,mBAAR,CAAb;;AAEAG,OAAOC,OAAP,GAAiBC,IAAjB;;AAEAA,KAAKC,WAAL,GAAmB,CAAC,QAAD,EAAW,SAAX,EAAsB,KAAtB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,MAAzC,CAAnB;;AAEAD,KAAKE,KAAL,GACE,mCACA,iCADA,GAEA,oCAFA,GAGA,mCAHA,GAIA,oCAJA,GAKA,4BANF;;AAQAF,KAAKG,UAAL,GAAkB,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACpC,MAAIC,OAAOF,KAAKG,IAAL,CAAUD,IAAV,CAAeE,MAA1B;AACA,MAAIF,KAAKG,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAOJ,GAAG,IAAH,EAASL,KAAKC,WAAd,CAAP;AACD;AACD,UAAQK,KAAK,CAAL,CAAR;AACE,SAAK,IAAL;AACA,SAAK,QAAL;AACA,SAAK,SAAL;AACA,SAAK,KAAL;AACA,SAAK,IAAL;AACA,SAAK,MAAL;AACE,aAAOD,GAAG,IAAH,EAAS,EAAT,CAAP;AACF;AACE,aAAOA,GAAG,IAAIK,KAAJ,CAAUJ,KAAK,CAAL,IAAU,iBAApB,CAAH,CAAP;AATJ;AAWD,CAhBD;;AAkBA,SAASN,IAAT,CAAeW,IAAf,EAAqBN,EAArB,EAAyB;AACvB;AACA,MAAIO,MAAMD,KAAKE,KAAL,EAAV;AACA,MAAIC,SAAS,CAACH,KAAKE,KAAL,MAAgB,EAAjB,EAAqBE,KAArB,CAA2B,GAA3B,CAAb;AACA,SAAOrB,cAAc,GAAd,EAAmBE,IAAIoB,MAAvB,EAA+B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9D,QAAIF,GAAJ,EAAS;AAAE,aAAOZ,GAAGY,GAAH,CAAP;AAAgB;AAC3B,QAAI;AACF,aAAOrB,IAAIwB,QAAJ,CAAapB,IAAb,CAAkBY,GAAlB,EAAuBM,GAAvB,EAA4B;AACjCC,cAAMA,IAD2B;AAEjCE,eAAOP,OAAO,CAAP,EAAUQ,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,CAF0B,EAEG;AACpCtB,cAAMc,OAAO,CAAP,CAH2B;AAIjCS,cAAMZ,KAAKE,KAAL;AAJ2B,OAA5B,EAKJ,UAAUI,GAAV,EAAeO,IAAf,EAAqB;AACtB,SAACP,GAAD,IAAQO,IAAR,IAAgB3B,OAAO4B,KAAKC,SAAL,CAAeF,IAAf,EAAqBG,SAArB,EAAgC,CAAhC,CAAP,CAAhB;AACAtB,WAAGY,GAAH,EAAQO,IAAR;AACD,OARM,CAAP;AASD,KAVD,CAUE,OAAOI,CAAP,EAAU;AACVvB,SAAGuB,EAAEC,OAAF,GAAY,cAAZ,GAA6B7B,KAAKE,KAArC;AACD;AACF,GAfM,CAAP;AAgBD","file":"team.js","sourcesContent":["/* eslint-disable standard/no-callback-literal */\nvar mapToRegistry = require('./utils/map-to-registry.js')\nvar npm = require('./npm')\nvar output = require('./utils/output.js')\n\nmodule.exports = team\n\nteam.subcommands = ['create', 'destroy', 'add', 'rm', 'ls', 'edit']\n\nteam.usage =\n  'npm team create <scope:team>\\n' +\n  'npm team destroy <scope:team>\\n' +\n  'npm team add <scope:team> <user>\\n' +\n  'npm team rm <scope:team> <user>\\n' +\n  'npm team ls <scope>|<scope:team>\\n' +\n  'npm team edit <scope:team>'\n\nteam.completion = function (opts, cb) {\n  var argv = opts.conf.argv.remain\n  if (argv.length === 2) {\n    return cb(null, team.subcommands)\n  }\n  switch (argv[2]) {\n    case 'ls':\n    case 'create':\n    case 'destroy':\n    case 'add':\n    case 'rm':\n    case 'edit':\n      return cb(null, [])\n    default:\n      return cb(new Error(argv[2] + ' not recognized'))\n  }\n}\n\nfunction team (args, cb) {\n  // Entities are in the format <scope>:<team>\n  var cmd = args.shift()\n  var entity = (args.shift() || '').split(':')\n  return mapToRegistry('/', npm.config, function (err, uri, auth) {\n    if (err) { return cb(err) }\n    try {\n      return npm.registry.team(cmd, uri, {\n        auth: auth,\n        scope: entity[0].replace(/^@/, ''), // '@' prefix on scope is optional.\n        team: entity[1],\n        user: args.shift()\n      }, function (err, data) {\n        !err && data && output(JSON.stringify(data, undefined, 2))\n        cb(err, data)\n      })\n    } catch (e) {\n      cb(e.message + '\\n\\nUsage:\\n' + team.usage)\n    }\n  })\n}\n"]}