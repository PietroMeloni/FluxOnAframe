{"version":3,"sources":["../../../../node_modules/npm/lib/profile.js"],"names":["profile","require","npm","log","output","qw","Table","ansistyles","Bluebird","readUserInfo","qrcodeTerminal","url","queryString","pulseTillDone","inspect","module","exports","profileCmd","usage","subcommands","completion","opts","cb","argv","conf","remain","length","Error","withCb","prom","then","value","args","gauge","show","enable2fa","slice","disable2fa","get","set","config","json","parseable","registry","otp","creds","getCredentialsByURI","token","auth","username","basic","password","Buffer","from","toString","split","knownProfileKeys","tfa","withPromise","info","cidr_whitelist","JSON","stringify","cleaned","forEach","k","Object","keys","filter","email_verified","pending","mode","values","join","map","arg","trim","key","table","push","bright","writableProfileKeys","prop","toLowerCase","Promise","reject","indexOf","try","current","readPasswords","newpassword","old","new","email","password1","password2","warn","user","newUser","catch","err","code","result","login","setCredentialsByURI","fromNode","save","notice","challenge","test","otpauth","parse","query","qrcode","secret","otp1","c","resolve","generate"],"mappings":"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","file":"profile.js","sourcesContent":["'use strict'\nconst profile = require('npm-profile')\nconst npm = require('./npm.js')\nconst log = require('npmlog')\nconst output = require('./utils/output.js')\nconst qw = require('qw')\nconst Table = require('cli-table3')\nconst ansistyles = require('ansistyles')\nconst Bluebird = require('bluebird')\nconst readUserInfo = require('./utils/read-user-info.js')\nconst qrcodeTerminal = require('qrcode-terminal')\nconst url = require('url')\nconst queryString = require('query-string')\nconst pulseTillDone = require('./utils/pulse-till-done.js')\nconst inspect = require('util').inspect\n\nmodule.exports = profileCmd\n\nprofileCmd.usage =\n  'npm profile enable-2fa [auth-only|auth-and-writes]\\n' +\n  'npm profile disable-2fa\\n' +\n  'npm profile get [<key>]\\n' +\n  'npm profile set <key> <value>'\n\nprofileCmd.subcommands = qw`enable-2fa disable-2fa get set`\n\nprofileCmd.completion = function (opts, cb) {\n  var argv = opts.conf.argv.remain\n  switch (argv[2]) {\n    case 'enable-2fa':\n    case 'enable-tfa':\n      if (argv.length === 3) {\n        return cb(null, qw`auth-and-writes auth-only`)\n      } else {\n        return cb(null, [])\n      }\n    case 'disable-2fa':\n    case 'disable-tfa':\n    case 'get':\n    case 'set':\n      return cb(null, [])\n    default:\n      return cb(new Error(argv[2] + ' not recognized'))\n  }\n}\n\nfunction withCb (prom, cb) {\n  prom.then((value) => cb(null, value), cb)\n}\n\nfunction profileCmd (args, cb) {\n  if (args.length === 0) return cb(new Error(profileCmd.usage))\n  log.gauge.show('profile')\n  switch (args[0]) {\n    case 'enable-2fa':\n    case 'enable-tfa':\n    case 'enable2fa':\n    case 'enabletfa':\n      withCb(enable2fa(args.slice(1)), cb)\n      break\n    case 'disable-2fa':\n    case 'disable-tfa':\n    case 'disable2fa':\n    case 'disabletfa':\n      withCb(disable2fa(), cb)\n      break\n    case 'get':\n      withCb(get(args.slice(1)), cb)\n      break\n    case 'set':\n      withCb(set(args.slice(1)), cb)\n      break\n    default:\n      cb(new Error('Unknown profile command: ' + args[0]))\n  }\n}\n\nfunction config () {\n  const conf = {\n    json: npm.config.get('json'),\n    parseable: npm.config.get('parseable'),\n    registry: npm.config.get('registry'),\n    otp: npm.config.get('otp')\n  }\n  const creds = npm.config.getCredentialsByURI(conf.registry)\n  if (creds.token) {\n    conf.auth = {token: creds.token}\n  } else if (creds.username) {\n    conf.auth = {basic: {username: creds.username, password: creds.password}}\n  } else if (creds.auth) {\n    const auth = Buffer.from(creds.auth, 'base64').toString().split(':', 2)\n    conf.auth = {basic: {username: auth[0], password: auth[1]}}\n  } else {\n    conf.auth = {}\n  }\n\n  if (conf.otp) conf.auth.otp = conf.otp\n  return conf\n}\n\nconst knownProfileKeys = qw`\n  name email ${'two-factor auth'} fullname homepage\n  freenode twitter github created updated`\n\nfunction get (args) {\n  const tfa = 'two-factor auth'\n  const conf = config()\n  return pulseTillDone.withPromise(profile.get(conf)).then((info) => {\n    if (!info.cidr_whitelist) delete info.cidr_whitelist\n    if (conf.json) {\n      output(JSON.stringify(info, null, 2))\n      return\n    }\n    const cleaned = {}\n    knownProfileKeys.forEach((k) => { cleaned[k] = info[k] || '' })\n    Object.keys(info).filter((k) => !(k in cleaned)).forEach((k) => { cleaned[k] = info[k] || '' })\n    delete cleaned.tfa\n    delete cleaned.email_verified\n    cleaned['email'] += info.email_verified ? ' (verified)' : '(unverified)'\n    if (info.tfa && !info.tfa.pending) {\n      cleaned[tfa] = info.tfa.mode\n    } else {\n      cleaned[tfa] = 'disabled'\n    }\n    if (args.length) {\n      const values = args // comma or space separated ↓\n        .join(',').split(/,/).map((arg) => arg.trim()).filter((arg) => arg !== '')\n        .map((arg) => cleaned[arg])\n        .join('\\t')\n      output(values)\n    } else {\n      if (conf.parseable) {\n        Object.keys(info).forEach((key) => {\n          if (key === 'tfa') {\n            output(`${key}\\t${cleaned[tfa]}`)\n          } else {\n            output(`${key}\\t${info[key]}`)\n          }\n        })\n      } else {\n        const table = new Table()\n        Object.keys(cleaned).forEach((k) => table.push({[ansistyles.bright(k)]: cleaned[k]}))\n        output(table.toString())\n      }\n    }\n  })\n}\n\nconst writableProfileKeys = qw`\n  email password fullname homepage freenode twitter github`\n\nfunction set (args) {\n  const conf = config()\n  const prop = (args[0] || '').toLowerCase().trim()\n  let value = args.length > 1 ? args.slice(1).join(' ') : null\n  if (prop !== 'password' && value === null) {\n    return Promise.reject(Error('npm profile set <prop> <value>'))\n  }\n  if (prop === 'password' && value !== null) {\n    return Promise.reject(Error(\n      'npm profile set password\\n' +\n      'Do not include your current or new passwords on the command line.'))\n  }\n  if (writableProfileKeys.indexOf(prop) === -1) {\n    return Promise.reject(Error(`\"${prop}\" is not a property we can set. Valid properties are: ` + writableProfileKeys.join(', ')))\n  }\n  return Bluebird.try(() => {\n    if (prop === 'password') {\n      return readUserInfo.password('Current password: ').then((current) => {\n        return readPasswords().then((newpassword) => {\n          value = {old: current, new: newpassword}\n        })\n      })\n    } else if (prop === 'email') {\n      return readUserInfo.password('Password: ').then((current) => {\n        return {password: current, email: value}\n      })\n    }\n    function readPasswords () {\n      return readUserInfo.password('New password: ').then((password1) => {\n        return readUserInfo.password('       Again:     ').then((password2) => {\n          if (password1 !== password2) {\n            log.warn('profile', 'Passwords do not match, please try again.')\n            return readPasswords()\n          }\n          return password1\n        })\n      })\n    }\n  }).then(() => {\n    // FIXME: Work around to not clear everything other than what we're setting\n    return pulseTillDone.withPromise(profile.get(conf).then((user) => {\n      const newUser = {}\n      writableProfileKeys.forEach((k) => { newUser[k] = user[k] })\n      newUser[prop] = value\n      return profile.set(newUser, conf).catch((err) => {\n        if (err.code !== 'EOTP') throw err\n        return readUserInfo.otp('Enter OTP:  ').then((otp) => {\n          conf.auth.otp = otp\n          return profile.set(newUser, conf)\n        })\n      }).then((result) => {\n        if (conf.json) {\n          output(JSON.stringify({[prop]: result[prop]}, null, 2))\n        } else if (conf.parseable) {\n          output(prop + '\\t' + result[prop])\n        } else if (result[prop] != null) {\n          output('Set', prop, 'to', result[prop])\n        } else {\n          output('Set', prop)\n        }\n      })\n    }))\n  })\n}\n\nfunction enable2fa (args) {\n  if (args.length > 1) {\n    return Promise.reject(new Error('npm profile enable-2fa [auth-and-writes|auth-only]'))\n  }\n  const mode = args[0] || 'auth-and-writes'\n  if (mode !== 'auth-only' && mode !== 'auth-and-writes') {\n    return Promise.reject(new Error(`Invalid two-factor authentication mode \"${mode}\".\\n` +\n      'Valid modes are:\\n' +\n      '  auth-only - Require two-factor authentication only when logging in\\n' +\n      '  auth-and-writes - Require two-factor authentication when logging in AND when publishing'))\n  }\n  const conf = config()\n  if (conf.json || conf.parseable) {\n    return Promise.reject(new Error(\n      'Enabling two-factor authentication is an interactive operation and ' +\n      (conf.json ? 'JSON' : 'parseable') + ' output mode is not available'))\n  }\n\n  const info = {\n    tfa: {\n      mode: mode\n    }\n  }\n\n  return Bluebird.try(() => {\n    // if they're using legacy auth currently then we have to update them to a\n    // bearer token before continuing.\n    if (conf.auth.basic) {\n      log.info('profile', 'Updating authentication to bearer token')\n      return profile.login(conf.auth.basic.username, conf.auth.basic.password, conf).then((result) => {\n        if (!result.token) throw new Error('Your registry ' + conf.registry + 'does not seem to support bearer tokens. Bearer tokens are required for two-factor authentication')\n        npm.config.setCredentialsByURI(conf.registry, {token: result.token})\n        return Bluebird.fromNode((cb) => npm.config.save('user', cb))\n      })\n    }\n  }).then(() => {\n    log.notice('profile', 'Enabling two factor authentication for ' + mode)\n    return readUserInfo.password()\n  }).then((password) => {\n    info.tfa.password = password\n    log.info('profile', 'Determine if tfa is pending')\n    return pulseTillDone.withPromise(profile.get(conf)).then((info) => {\n      if (!info.tfa) return\n      if (info.tfa.pending) {\n        log.info('profile', 'Resetting two-factor authentication')\n        return pulseTillDone.withPromise(profile.set({tfa: {password, mode: 'disable'}}, conf))\n      } else {\n        if (conf.auth.otp) return\n        return readUserInfo.otp('Enter OTP:  ').then((otp) => {\n          conf.auth.otp = otp\n        })\n      }\n    })\n  }).then(() => {\n    log.info('profile', 'Setting two-factor authentication to ' + mode)\n    return pulseTillDone.withPromise(profile.set(info, conf))\n  }).then((challenge) => {\n    if (challenge.tfa === null) {\n      output('Two factor authentication mode changed to: ' + mode)\n      return\n    }\n    if (typeof challenge.tfa !== 'string' || !/^otpauth:[/][/]/.test(challenge.tfa)) {\n      throw new Error('Unknown error enabling two-factor authentication. Expected otpauth URL, got: ' + inspect(challenge.tfa))\n    }\n    const otpauth = url.parse(challenge.tfa)\n    const opts = queryString.parse(otpauth.query)\n    return qrcode(challenge.tfa).then((code) => {\n      output('Scan into your authenticator app:\\n' + code + '\\n Or enter code:', opts.secret)\n    }).then((code) => {\n      return readUserInfo.otp('And an OTP code from your authenticator: ')\n    }).then((otp1) => {\n      log.info('profile', 'Finalizing two-factor authentication')\n      return profile.set({tfa: [otp1]}, conf)\n    }).then((result) => {\n      output('2FA successfully enabled. Below are your recovery codes, please print these out.')\n      output('You will need these to recover access to your account if you lose your authentication device.')\n      result.tfa.forEach((c) => output('\\t' + c))\n    })\n  })\n}\n\nfunction disable2fa (args) {\n  const conf = config()\n  return pulseTillDone.withPromise(profile.get(conf)).then((info) => {\n    if (!info.tfa || info.tfa.pending) {\n      output('Two factor authentication not enabled.')\n      return\n    }\n    return readUserInfo.password().then((password) => {\n      return Bluebird.try(() => {\n        if (conf.auth.otp) return\n        return readUserInfo.otp('Enter one-time password from your authenticator: ').then((otp) => {\n          conf.auth.otp = otp\n        })\n      }).then(() => {\n        log.info('profile', 'disabling tfa')\n        return pulseTillDone.withPromise(profile.set({tfa: {password: password, mode: 'disable'}}, conf)).then(() => {\n          if (conf.json) {\n            output(JSON.stringify({tfa: false}, null, 2))\n          } else if (conf.parseable) {\n            output('tfa\\tfalse')\n          } else {\n            output('Two factor authentication disabled.')\n          }\n        })\n      })\n    })\n  })\n}\n\nfunction qrcode (url) {\n  return new Promise((resolve) => qrcodeTerminal.generate(url, resolve))\n}\n"]}