'use strict';

var Installer = require('libcipm');
var lifecycleOpts = require('./config/lifecycle.js');
var npm = require('./npm.js');
var npmlog = require('npmlog');
var pacoteOpts = require('./config/pacote.js');

ci.usage = 'npm ci';

ci.completion = function (cb) {
  return cb(null, []);
};

Installer.CipmConfig.impl(npm.config, {
  get: npm.config.get,
  set: npm.config.set,
  toLifecycle: function toLifecycle(moreOpts) {
    return lifecycleOpts(moreOpts);
  },
  toPacote: function toPacote(moreOpts) {
    return pacoteOpts(moreOpts);
  }
});

module.exports = ci;
function ci(args, cb) {
  return new Installer({
    config: npm.config,
    log: npmlog
  }).run().then(function (details) {
    npmlog.disableProgress();
    console.error('added ' + details.pkgCount + ' packages in ' + details.runTime / 1000 + 's');
  }).then(function () {
    return cb();
  }, cb);
}
//# sourceMappingURL=ci.js.map