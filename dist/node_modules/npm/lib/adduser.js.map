{"version":3,"sources":["../../../../node_modules/npm/lib/adduser.js"],"names":["module","exports","adduser","log","require","npm","usage","crypto","ex","args","cb","Error","registry","config","get","scope","creds","getCredentialsByURI","scopedRegistry","cliRegistry","disableProgress","auth","e","login","err","newCreds","del","set","setCredentialsByURI","save"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,OAAjB;;AAEA,IAAIC,MAAMC,QAAQ,QAAR,CAAV;AACA,IAAIC,MAAMD,QAAQ,UAAR,CAAV;AACA,IAAIE,QAAQF,QAAQ,eAAR,CAAZ;AACA,IAAIG,MAAJ;;AAEA,IAAI;AACFA,WAASH,QAAQ,QAAR,CAAT;AACD,CAFD,CAEE,OAAOI,EAAP,EAAW,CAAE;;AAEfN,QAAQI,KAAR,GAAgBA,MACd,SADc,EAEd,sFAFc,CAAhB;;AAKA,SAASJ,OAAT,CAAkBO,IAAlB,EAAwBC,EAAxB,EAA4B;AAC1B,MAAI,CAACH,MAAL,EAAa;AACX,WAAOG,GAAG,IAAIC,KAAJ,CACR,mEADQ,CAAH,CAAP;AAGD;;AAED,MAAIC,WAAWP,IAAIQ,MAAJ,CAAWC,GAAX,CAAe,UAAf,CAAf;AACA,MAAIC,QAAQV,IAAIQ,MAAJ,CAAWC,GAAX,CAAe,OAAf,CAAZ;AACA,MAAIE,QAAQX,IAAIQ,MAAJ,CAAWI,mBAAX,CAA+BZ,IAAIQ,MAAJ,CAAWC,GAAX,CAAe,UAAf,CAA/B,CAAZ;;AAEA,MAAIC,KAAJ,EAAW;AACT,QAAIG,iBAAiBb,IAAIQ,MAAJ,CAAWC,GAAX,CAAeC,QAAQ,WAAvB,CAArB;AACA,QAAII,cAAcd,IAAIQ,MAAJ,CAAWC,GAAX,CAAe,UAAf,EAA2B,KAA3B,CAAlB;AACA,QAAII,kBAAkB,CAACC,WAAvB,EAAoCP,WAAWM,cAAX;AACrC;;AAEDf,MAAIiB,eAAJ;;AAEA,MAAI;AACF,QAAIC,OAAOjB,QAAQ,YAAYC,IAAIQ,MAAJ,CAAWC,GAAX,CAAe,WAAf,CAApB,CAAX;AACD,GAFD,CAEE,OAAOQ,CAAP,EAAU;AACV,WAAOZ,GAAG,IAAIC,KAAJ,CAAU,qBAAV,CAAH,CAAP;AACD;AACDU,OAAKE,KAAL,CAAWP,KAAX,EAAkBJ,QAAlB,EAA4BG,KAA5B,EAAmC,UAAUS,GAAV,EAAeC,QAAf,EAAyB;AAC1D,QAAID,GAAJ,EAAS,OAAOd,GAAGc,GAAH,CAAP;;AAETnB,QAAIQ,MAAJ,CAAWa,GAAX,CAAe,QAAf,EAAyB,MAAzB,EAH0D,CAGzB;AACjC,QAAIX,KAAJ,EAAWV,IAAIQ,MAAJ,CAAWc,GAAX,CAAeZ,QAAQ,WAAvB,EAAoCH,QAApC,EAA8C,MAA9C;AACXP,QAAIQ,MAAJ,CAAWe,mBAAX,CAA+BhB,QAA/B,EAAyCa,QAAzC;AACApB,QAAIQ,MAAJ,CAAWgB,IAAX,CAAgB,MAAhB,EAAwBnB,EAAxB;AACD,GAPD;AAQD","file":"adduser.js","sourcesContent":["module.exports = adduser\n\nvar log = require('npmlog')\nvar npm = require('./npm.js')\nvar usage = require('./utils/usage')\nvar crypto\n\ntry {\n  crypto = require('crypto')\n} catch (ex) {}\n\nadduser.usage = usage(\n  'adduser',\n  'npm adduser [--registry=url] [--scope=@orgname] [--auth-type=legacy] [--always-auth]'\n)\n\nfunction adduser (args, cb) {\n  if (!crypto) {\n    return cb(new Error(\n      'You must compile node with ssl support to use the adduser feature'\n    ))\n  }\n\n  var registry = npm.config.get('registry')\n  var scope = npm.config.get('scope')\n  var creds = npm.config.getCredentialsByURI(npm.config.get('registry'))\n\n  if (scope) {\n    var scopedRegistry = npm.config.get(scope + ':registry')\n    var cliRegistry = npm.config.get('registry', 'cli')\n    if (scopedRegistry && !cliRegistry) registry = scopedRegistry\n  }\n\n  log.disableProgress()\n\n  try {\n    var auth = require('./auth/' + npm.config.get('auth-type'))\n  } catch (e) {\n    return cb(new Error('no such auth module'))\n  }\n  auth.login(creds, registry, scope, function (err, newCreds) {\n    if (err) return cb(err)\n\n    npm.config.del('_token', 'user') // prevent legacy pollution\n    if (scope) npm.config.set(scope + ':registry', registry, 'user')\n    npm.config.setCredentialsByURI(registry, newCreds)\n    npm.config.save('user', cb)\n  })\n}\n"]}