{"version":3,"sources":["../../../../../node_modules/npm/lib/install/read-shrinkwrap.js"],"names":["BB","require","fs","iferr","inflateShrinkwrap","log","parseJSON","path","PKGLOCK_VERSION","lockfileVersion","readFileAsync","promisify","readFile","module","exports","readShrinkwrap","child","next","package","_shrinkwrap","process","nextTick","join","maybeReadFile","isTop","shrinkwrap","lockfile","pkgJson","warn","name","parsed","parsePkgLock","then","catch","code","andInflate","PARENT_RE","OURS_RE","THEIRS_RE","END_RE","_isDiff","isDiff","str","match","_parsePkgLock","filename","e","pieces","split","reduce","acc","line","state","ours","theirs","parent","reconcileLockfiles","_e","error","silly","Object","assign"],"mappings":"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","file":"read-shrinkwrap.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst fs = require('graceful-fs')\nconst iferr = require('iferr')\nconst inflateShrinkwrap = require('./inflate-shrinkwrap.js')\nconst log = require('npmlog')\nconst parseJSON = require('../utils/parse-json.js')\nconst path = require('path')\nconst PKGLOCK_VERSION = require('../npm.js').lockfileVersion\n\nconst readFileAsync = BB.promisify(fs.readFile)\n\nmodule.exports = readShrinkwrap\nfunction readShrinkwrap (child, next) {\n  if (child.package._shrinkwrap) return process.nextTick(next)\n  BB.join(\n    maybeReadFile('npm-shrinkwrap.json', child),\n    // Don't read non-root lockfiles\n    child.isTop && maybeReadFile('package-lock.json', child),\n    child.isTop && maybeReadFile('package.json', child),\n    (shrinkwrap, lockfile, pkgJson) => {\n      if (shrinkwrap && lockfile) {\n        log.warn('read-shrinkwrap', 'Ignoring package-lock.json because there is already an npm-shrinkwrap.json. Please use only one of the two.')\n      }\n      const name = shrinkwrap ? 'npm-shrinkwrap.json' : 'package-lock.json'\n      const parsed = parsePkgLock(shrinkwrap || lockfile, name)\n      if (parsed && parsed.lockfileVersion !== PKGLOCK_VERSION) {\n        log.warn('read-shrinkwrap', `This version of npm is compatible with lockfileVersion@${PKGLOCK_VERSION}, but ${name} was generated for lockfileVersion@${parsed.lockfileVersion || 0}. I'll try to do my best with it!`)\n      }\n      child.package._shrinkwrap = parsed\n    }\n  ).then(() => next(), next)\n}\n\nfunction maybeReadFile (name, child) {\n  return readFileAsync(\n    path.join(child.path, name),\n    'utf8'\n  ).catch({code: 'ENOENT'}, () => null)\n}\n\nmodule.exports.andInflate = function (child, next) {\n  readShrinkwrap(child, iferr(next, function () {\n    if (child.package._shrinkwrap) {\n      return inflateShrinkwrap(child, child.package._shrinkwrap || {}, next)\n    } else {\n      return next()\n    }\n  }))\n}\n\nconst PARENT_RE = /\\|{7,}/g\nconst OURS_RE = /<{7,}/g\nconst THEIRS_RE = /={7,}/g\nconst END_RE = />{7,}/g\n\nmodule.exports._isDiff = isDiff\nfunction isDiff (str) {\n  return str.match(OURS_RE) && str.match(THEIRS_RE) && str.match(END_RE)\n}\n\nmodule.exports._parsePkgLock = parsePkgLock\nfunction parsePkgLock (str, filename) {\n  if (!str) { return null }\n  try {\n    return parseJSON(str)\n  } catch (e) {\n    if (isDiff(str)) {\n      log.warn('conflict', `A git conflict was detected in ${filename}. Attempting to auto-resolve.`)\n      log.warn('conflict', 'To make this happen automatically on git rebase/merge, consider using the npm-merge-driver:')\n      log.warn('conflict', '$ npx npm-merge-driver install -g')\n      const pieces = str.split(/[\\n\\r]+/g).reduce((acc, line) => {\n        if (line.match(PARENT_RE)) acc.state = 'parent'\n        else if (line.match(OURS_RE)) acc.state = 'ours'\n        else if (line.match(THEIRS_RE)) acc.state = 'theirs'\n        else if (line.match(END_RE)) acc.state = 'top'\n        else {\n          if (acc.state === 'top' || acc.state === 'ours') acc.ours += line\n          if (acc.state === 'top' || acc.state === 'theirs') acc.theirs += line\n          if (acc.state === 'top' || acc.state === 'parent') acc.parent += line\n        }\n        return acc\n      }, {\n        state: 'top',\n        ours: '',\n        theirs: '',\n        parent: ''\n      })\n      try {\n        const ours = parseJSON(pieces.ours)\n        const theirs = parseJSON(pieces.theirs)\n        return reconcileLockfiles(ours, theirs)\n      } catch (_e) {\n        log.error('conflict', `Automatic conflict resolution failed. Please manually resolve conflicts in ${filename} and try again.`)\n        log.silly('conflict', `Error during resolution: ${_e}`)\n        throw e\n      }\n    } else {\n      throw e\n    }\n  }\n}\n\nfunction reconcileLockfiles (parent, ours, theirs) {\n  return Object.assign({}, ours, theirs)\n}\n"]}