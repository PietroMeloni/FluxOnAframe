{"version":3,"sources":["../../../../../../node_modules/npm/lib/install/action/extract.js"],"names":["BB","require","stat","promisify","gentlyRm","mkdirp","moduleStagingPath","move","npa","npm","packageId","pacoteOpts","path","localWorker","workerFarm","isRegistry","WORKER_PATH","resolve","workers","ENABLE_WORKERS","process","platform","extract","init","maxConcurrentCallsPerWorker","limit","fetch","maxRetries","teardown","end","module","exports","staging","pkg","log","silly","extractTo","opts","integrity","package","_integrity","resolved","_resolved","args","_requested","fromNode","cb","launcher","msg","spec","raw","type","loglevel","level","dirPacker","JSON","stringify","e","then","bundleDependencies","anyBundled","readBundled","join","top","children","some","child","fromBundle","map","error","stageBundledModule","concurrency","bundler","parentPath","stageFrom","name","stageTo","finishModule","dirname"],"mappings":"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","file":"extract.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nconst stat = BB.promisify(require('graceful-fs').stat)\nconst gentlyRm = BB.promisify(require('../../utils/gently-rm.js'))\nconst mkdirp = BB.promisify(require('mkdirp'))\nconst moduleStagingPath = require('../module-staging-path.js')\nconst move = require('../../utils/move.js')\nconst npa = require('npm-package-arg')\nconst npm = require('../../npm.js')\nconst packageId = require('../../utils/package-id.js')\nlet pacoteOpts\nconst path = require('path')\nconst localWorker = require('./extract-worker.js')\nconst workerFarm = require('worker-farm')\nconst isRegistry = require('../../utils/is-registry.js')\n\nconst WORKER_PATH = require.resolve('./extract-worker.js')\nlet workers\n\n// NOTE: temporarily disabled on non-OSX due to ongoing issues:\n//\n// * Seems to make Windows antivirus issues much more common\n// * Messes with Docker (I think)\n//\n// There are other issues that should be fixed that affect OSX too:\n//\n// * Logging is messed up right now because pacote does its own thing\n// * Global deduplication in pacote breaks due to multiple procs\n//\n// As these get fixed, we can start experimenting with re-enabling it\n// at least on some platforms.\nconst ENABLE_WORKERS = process.platform === 'darwin'\n\nextract.init = () => {\n  if (ENABLE_WORKERS) {\n    workers = workerFarm({\n      maxConcurrentCallsPerWorker: npm.limit.fetch,\n      maxRetries: 1\n    }, WORKER_PATH)\n  }\n  return BB.resolve()\n}\nextract.teardown = () => {\n  if (ENABLE_WORKERS) {\n    workerFarm.end(workers)\n    workers = null\n  }\n  return BB.resolve()\n}\nmodule.exports = extract\nfunction extract (staging, pkg, log) {\n  log.silly('extract', packageId(pkg))\n  const extractTo = moduleStagingPath(staging, pkg)\n  if (!pacoteOpts) {\n    pacoteOpts = require('../../config/pacote')\n  }\n  const opts = pacoteOpts({\n    integrity: pkg.package._integrity,\n    resolved: pkg.package._resolved\n  })\n  const args = [\n    pkg.package._requested,\n    extractTo,\n    opts\n  ]\n  return BB.fromNode((cb) => {\n    let launcher = localWorker\n    let msg = args\n    const spec = typeof args[0] === 'string' ? npa(args[0]) : args[0]\n    args[0] = spec.raw\n    if (ENABLE_WORKERS && (isRegistry(spec) || spec.type === 'remote')) {\n      // We can't serialize these options\n      opts.loglevel = opts.log.level\n      opts.log = null\n      opts.dirPacker = null\n      // workers will run things in parallel!\n      launcher = workers\n      try {\n        msg = JSON.stringify(msg)\n      } catch (e) {\n        return cb(e)\n      }\n    }\n    launcher(msg, cb)\n  }).then(() => {\n    if (pkg.package.bundleDependencies || anyBundled(pkg)) {\n      return readBundled(pkg, staging, extractTo)\n    }\n  }).then(() => {\n    return gentlyRm(path.join(extractTo, 'node_modules'))\n  })\n}\n\nfunction anyBundled (top, pkg) {\n  if (!pkg) pkg = top\n  return pkg.children.some((child) => child.fromBundle === top || anyBundled(top, child))\n}\n\nfunction readBundled (pkg, staging, extractTo) {\n  return BB.map(pkg.children, (child) => {\n    if (!child.fromBundle) return\n    if (child.error) {\n      throw child.error\n    } else {\n      return stageBundledModule(pkg, child, staging, extractTo)\n    }\n  }, {concurrency: 10})\n}\n\nfunction stageBundledModule (bundler, child, staging, parentPath) {\n  const stageFrom = path.join(parentPath, 'node_modules', child.package.name)\n  const stageTo = moduleStagingPath(staging, child)\n\n  return BB.map(child.children, (child) => {\n    if (child.error) {\n      throw child.error\n    } else {\n      return stageBundledModule(bundler, child, staging, stageFrom)\n    }\n  }).then(() => {\n    return finishModule(bundler, child, stageTo, stageFrom)\n  })\n}\n\nfunction finishModule (bundler, child, stageTo, stageFrom) {\n  // If we were the one's who bundled this moduleâ€¦\n  if (child.fromBundle === bundler) {\n    return mkdirp(path.dirname(stageTo)).then(() => {\n      return move(stageFrom, stageTo)\n    })\n  } else {\n    return stat(stageFrom).then(() => gentlyRm(stageFrom), () => {})\n  }\n}\n"]}