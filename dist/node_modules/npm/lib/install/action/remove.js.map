{"version":3,"sources":["../../../../../../node_modules/npm/lib/install/action/remove.js"],"names":["path","require","fs","rimraf","asyncMap","mkdirp","npm","andIgnoreErrors","move","isInside","vacuum","module","exports","staging","pkg","log","next","silly","target","removeLink","removeDir","base","prefix","err","modpath","join","dirname","basename","then","unbuildPackage","moveEr","andRemoveEmptyParents","moveModulesBack","er","removeEmptyParents","readdir","makeTarget","readdirEr","files","cleanup","length","mkdirEr","moveModules","file","done","from","to","afterCleanup","rimrafEr","warn","resolve","pkgdir","rmdir","code"],"mappings":"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","file":"remove.js","sourcesContent":["'use strict'\nvar path = require('path')\nvar fs = require('graceful-fs')\nvar rimraf = require('rimraf')\nvar asyncMap = require('slide').asyncMap\nvar mkdirp = require('mkdirp')\nvar npm = require('../../npm.js')\nvar andIgnoreErrors = require('../and-ignore-errors.js')\nvar move = require('../../utils/move.js')\nvar isInside = require('path-is-inside')\nvar vacuum = require('fs-vacuum')\n\n// This is weird because we want to remove the module but not it's node_modules folder\n// allowing for this allows us to not worry about the order of operations\nmodule.exports = function (staging, pkg, log, next) {\n  log.silly('remove', pkg.path)\n  if (pkg.target) {\n    removeLink(pkg, next)\n  } else {\n    removeDir(pkg, log, next)\n  }\n}\n\nfunction removeLink (pkg, next) {\n  var base = isInside(pkg.path, npm.prefix) ? npm.prefix : pkg.path\n  rimraf(pkg.path, (err) => {\n    if (err) return next(err)\n    vacuum(pkg.path, {base: base}, next)\n  })\n}\n\nfunction removeDir (pkg, log, next) {\n  var modpath = path.join(path.dirname(pkg.path), '.' + path.basename(pkg.path) + '.MODULES')\n\n  move(path.join(pkg.path, 'node_modules'), modpath).then(unbuildPackage, unbuildPackage)\n\n  function unbuildPackage (moveEr) {\n    rimraf(pkg.path, moveEr ? andRemoveEmptyParents(pkg.path) : moveModulesBack)\n  }\n\n  function andRemoveEmptyParents (path) {\n    return function (er) {\n      if (er) return next(er)\n      removeEmptyParents(pkg.path)\n    }\n  }\n\n  function moveModulesBack () {\n    fs.readdir(modpath, makeTarget)\n  }\n\n  function makeTarget (readdirEr, files) {\n    if (readdirEr) return cleanup()\n    if (!files.length) return cleanup()\n    mkdirp(path.join(pkg.path, 'node_modules'), function (mkdirEr) { moveModules(mkdirEr, files) })\n  }\n\n  function moveModules (mkdirEr, files) {\n    if (mkdirEr) return next(mkdirEr)\n    asyncMap(files, function (file, done) {\n      var from = path.join(modpath, file)\n      var to = path.join(pkg.path, 'node_modules', file)\n      // we ignore errors here, because they can legitimately happen, for instance,\n      // bundled modules will be in both node_modules folders\n      move(from, to).then(andIgnoreErrors(done), andIgnoreErrors(done))\n    }, cleanup)\n  }\n\n  function cleanup () {\n    rimraf(modpath, afterCleanup)\n  }\n\n  function afterCleanup (rimrafEr) {\n    if (rimrafEr) log.warn('remove', rimrafEr)\n    removeEmptyParents(path.resolve(pkg.path, '..'))\n  }\n\n  function removeEmptyParents (pkgdir) {\n    fs.rmdir(pkgdir, function (er) {\n      // FIXME: Make sure windows does what we want here\n      if (er && er.code !== 'ENOENT') return next()\n      removeEmptyParents(path.resolve(pkgdir, '..'))\n    })\n  }\n}\n"]}