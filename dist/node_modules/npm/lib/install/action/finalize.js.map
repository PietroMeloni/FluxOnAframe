{"version":3,"sources":["../../../../../../node_modules/npm/lib/install/action/finalize.js"],"names":["path","require","fs","Bluebird","rimraf","promisify","mkdirp","lstat","readdir","symlink","gentlyRm","moduleStagingPath","move","moveOpts","Promise","maxConcurrency","getRequested","log","packageId","module","exports","staging","pkg","silly","realpath","extractedTo","delpath","join","dirname","basename","movedDestAway","requested","package","_requested","type","relative","makeParentPath","then","catch","ex","moveStagingToDestination","restoreOldNodeModules","err","moveOldDestinationBack","dir","destinationIsClear","actuallyMoveStaging","moveOldDestinationAway","Error","modules","length","map","file","from","to","rollback","top","try","resolve","warn","message"],"mappings":"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","file":"finalize.js","sourcesContent":["'use strict'\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst Bluebird = require('bluebird')\nconst rimraf = Bluebird.promisify(require('rimraf'))\nconst mkdirp = Bluebird.promisify(require('mkdirp'))\nconst lstat = Bluebird.promisify(fs.lstat)\nconst readdir = Bluebird.promisify(fs.readdir)\nconst symlink = Bluebird.promisify(fs.symlink)\nconst gentlyRm = Bluebird.promisify(require('../../utils/gently-rm'))\nconst moduleStagingPath = require('../module-staging-path.js')\nconst move = require('move-concurrently')\nconst moveOpts = {fs: fs, Promise: Bluebird, maxConcurrency: 4}\nconst getRequested = require('../get-requested.js')\nconst log = require('npmlog')\nconst packageId = require('../../utils/package-id.js')\n\nmodule.exports = function (staging, pkg, log) {\n  log.silly('finalize', pkg.realpath)\n\n  const extractedTo = moduleStagingPath(staging, pkg)\n\n  const delpath = path.join(path.dirname(pkg.realpath), '.' + path.basename(pkg.realpath) + '.DELETE')\n  let movedDestAway = false\n\n  const requested = pkg.package._requested || getRequested(pkg)\n  if (requested.type === 'directory') {\n    const relative = path.relative(path.dirname(pkg.path), pkg.realpath)\n    return makeParentPath(pkg.path)\n      .then(() => symlink(relative, pkg.path, 'junction'))\n      .catch((ex) => {\n        return rimraf(pkg.path).then(() => symlink(relative, pkg.path, 'junction'))\n      })\n  } else {\n    return makeParentPath(pkg.realpath)\n      .then(moveStagingToDestination)\n      .then(restoreOldNodeModules)\n      .catch((err) => {\n        if (movedDestAway) {\n          return rimraf(pkg.realpath).then(moveOldDestinationBack).then(() => {\n            throw err\n          })\n        } else {\n          throw err\n        }\n      })\n      .then(() => rimraf(delpath))\n  }\n\n  function makeParentPath (dir) {\n    return mkdirp(path.dirname(dir))\n  }\n\n  function moveStagingToDestination () {\n    return destinationIsClear()\n      .then(actuallyMoveStaging)\n      .catch(() => moveOldDestinationAway().then(actuallyMoveStaging))\n  }\n\n  function destinationIsClear () {\n    return lstat(pkg.realpath).then(() => {\n      throw new Error('destination exists')\n    }, () => {})\n  }\n\n  function actuallyMoveStaging () {\n    return move(extractedTo, pkg.realpath, moveOpts)\n  }\n\n  function moveOldDestinationAway () {\n    return rimraf(delpath).then(() => {\n      return move(pkg.realpath, delpath, moveOpts)\n    }).then(() => { movedDestAway = true })\n  }\n\n  function moveOldDestinationBack () {\n    return move(delpath, pkg.realpath, moveOpts).then(() => { movedDestAway = false })\n  }\n\n  function restoreOldNodeModules () {\n    if (!movedDestAway) return\n    return readdir(path.join(delpath, 'node_modules')).catch(() => []).then((modules) => {\n      if (!modules.length) return\n      return mkdirp(path.join(pkg.realpath, 'node_modules')).then(() => Bluebird.map(modules, (file) => {\n        const from = path.join(delpath, 'node_modules', file)\n        const to = path.join(pkg.realpath, 'node_modules', file)\n        return move(from, to, moveOpts)\n      }))\n    })\n  }\n}\n\nmodule.exports.rollback = function (top, staging, pkg) {\n  return Bluebird.try(() => {\n    const requested = pkg.package._requested || getRequested(pkg)\n    if (requested && requested.type === 'directory') return Promise.resolve()\n    // strictly speaking rolling back a finalize should ONLY remove module that\n    // was being finalized, not any of the things under it. But currently\n    // those modules are guaranteed to be useless so we may as well remove them too.\n    // When/if we separate `commit` step and can rollback to previous versions\n    // of upgraded modules then we'll need to revisit thisâ€¦\n    return gentlyRm(pkg.path, false, top).catch((err) => {\n      log.warn('rollback', `Rolling back ${packageId(pkg)} failed (this is probably harmless): ${err.message ? err.message : err}`)\n    })\n  })\n}\n"]}