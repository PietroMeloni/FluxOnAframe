{"version":3,"sources":["../../../../../node_modules/npm/lib/install/inflate-shrinkwrap.js"],"names":["BB","require","addBundled","childPath","createChild","create","fetchPackageMetadata","inflateBundled","moduleName","normalizePackageData","npm","realizeShrinkwrapSpecifier","validate","path","isRegistry","hasModernMeta","ssri","npa","module","exports","tree","sw","opts","finishInflating","promisify","arguments","length","config","get","loaded","hasRequiresFromLock","requires","inflateShrinkwrap","dependencies","then","topPath","swdeps","Promise","resolve","onDisk","children","forEach","child","each","Object","keys","name","requested","inflatableChild","normalizePackageDataNoErrors","pkg","ex","quotemeta","str","replace","tarballToVersion","tb","registry","matchRegTarball","nameMatch","RegExp","match","onDiskChild","usesIntegrity","type","regTarball","version","resolved","map","_","modernLink","from","childIsEquivalent","fromShrinkwrap","package","_requested","_spec","rawSpec","_where","_optional","optional","_development","dev","_inBundle","bundled","fromBundle","_args","push","String","swRequires","integrity","makeFakeChild","fetchChild","isGit","raw","_id","_resolved","_integrity","_from","toString","bundleDependencies","filter","d","parent","fakeChild","realpath","fetchSpec","location","isLink","isInLink","_bundled","parse","relative"],"mappings":"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","file":"inflate-shrinkwrap.js","sourcesContent":["'use strict'\n\nconst BB = require('bluebird')\n\nlet addBundled\nconst childPath = require('../utils/child-path.js')\nconst createChild = require('./node.js').create\nlet fetchPackageMetadata\nconst inflateBundled = require('./inflate-bundled.js')\nconst moduleName = require('../utils/module-name.js')\nconst normalizePackageData = require('normalize-package-data')\nconst npm = require('../npm.js')\nconst realizeShrinkwrapSpecifier = require('./realize-shrinkwrap-specifier.js')\nconst validate = require('aproba')\nconst path = require('path')\nconst isRegistry = require('../utils/is-registry.js')\nconst hasModernMeta = require('./has-modern-meta.js')\nconst ssri = require('ssri')\nconst npa = require('npm-package-arg')\n\nmodule.exports = function (tree, sw, opts, finishInflating) {\n  if (!fetchPackageMetadata) {\n    fetchPackageMetadata = BB.promisify(require('../fetch-package-metadata.js'))\n    addBundled = BB.promisify(fetchPackageMetadata.addBundled)\n  }\n  if (arguments.length === 3) {\n    finishInflating = opts\n    opts = {}\n  }\n  if (!npm.config.get('shrinkwrap') || !npm.config.get('package-lock')) {\n    return finishInflating()\n  }\n  tree.loaded = false\n  tree.hasRequiresFromLock = sw.requires\n  return inflateShrinkwrap(tree.path, tree, sw.dependencies, opts).then(\n    () => finishInflating(),\n    finishInflating\n  )\n}\n\nfunction inflateShrinkwrap (topPath, tree, swdeps, opts) {\n  if (!swdeps) return Promise.resolve()\n  if (!opts) opts = {}\n  const onDisk = {}\n  tree.children.forEach((child) => {\n    onDisk[moduleName(child)] = child\n  })\n\n  tree.children = []\n\n  return BB.each(Object.keys(swdeps), (name) => {\n    const sw = swdeps[name]\n    const dependencies = sw.dependencies || {}\n    const requested = realizeShrinkwrapSpecifier(name, sw, topPath)\n    return inflatableChild(\n      onDisk[name], name, topPath, tree, sw, requested, opts\n    ).then((child) => {\n      child.hasRequiresFromLock = tree.hasRequiresFromLock\n      return inflateShrinkwrap(topPath, child, dependencies)\n    })\n  })\n}\n\nfunction normalizePackageDataNoErrors (pkg) {\n  try {\n    normalizePackageData(pkg)\n  } catch (ex) {\n    // don't care\n  }\n}\n\nfunction quotemeta (str) {\n  return str.replace(/([^A-Za-z_0-9/])/g, '\\\\$1')\n}\n\nfunction tarballToVersion (name, tb) {\n  const registry = quotemeta(npm.config.get('registry'))\n    .replace(/https?:/, 'https?:')\n    .replace(/([^/])$/, '$1/')\n  let matchRegTarball\n  if (name) {\n    const nameMatch = quotemeta(name)\n    matchRegTarball = new RegExp(`^${registry}${nameMatch}/-/${nameMatch}-(.*)[.]tgz$`)\n  } else {\n    matchRegTarball = new RegExp(`^${registry}(.*)?/-/\\\\1-(.*)[.]tgz$`)\n  }\n  const match = tb.match(matchRegTarball)\n  if (!match) return\n  return match[2] || match[1]\n}\n\nfunction inflatableChild (onDiskChild, name, topPath, tree, sw, requested, opts) {\n  validate('OSSOOOO|ZSSOOOO', arguments)\n  const usesIntegrity = (\n    requested.registry ||\n    requested.type === 'remote' ||\n    requested.type === 'file'\n  )\n  const regTarball = tarballToVersion(name, sw.version)\n  if (regTarball) {\n    sw.resolved = sw.version\n    sw.version = regTarball\n  }\n  if (sw.requires) Object.keys(sw.requires).map(_ => { sw.requires[_] = tarballToVersion(_, sw.requires[_]) || sw.requires[_] })\n  const modernLink = requested.type === 'directory' && !sw.from\n  if (hasModernMeta(onDiskChild) && childIsEquivalent(sw, requested, onDiskChild)) {\n    // The version on disk matches the shrinkwrap entry.\n    if (!onDiskChild.fromShrinkwrap) onDiskChild.fromShrinkwrap = requested\n    onDiskChild.package._requested = requested\n    onDiskChild.package._spec = requested.rawSpec\n    onDiskChild.package._where = topPath\n    onDiskChild.package._optional = sw.optional\n    onDiskChild.package._development = sw.dev\n    onDiskChild.package._inBundle = sw.bundled\n    onDiskChild.fromBundle = (sw.bundled || onDiskChild.package._inBundle) ? tree.fromBundle || tree : null\n    if (!onDiskChild.package._args) onDiskChild.package._args = []\n    onDiskChild.package._args.push([String(requested), topPath])\n    // non-npm registries can and will return unnormalized data, plus\n    // even the npm registry may have package data normalized with older\n    // normalization rules. This ensures we get package data in a consistent,\n    // stable format.\n    normalizePackageDataNoErrors(onDiskChild.package)\n    onDiskChild.swRequires = sw.requires\n    tree.children.push(onDiskChild)\n    return BB.resolve(onDiskChild)\n  } else if ((sw.version && (sw.integrity || !usesIntegrity) && (requested.type !== 'directory' || modernLink)) || sw.bundled) {\n    // The shrinkwrap entry has an integrity field. We can fake a pkg to get\n    // the installer to do a content-address fetch from the cache, if possible.\n    return BB.resolve(makeFakeChild(name, topPath, tree, sw, requested))\n  } else {\n    // It's not on disk, and we can't just look it up by address -- do a full\n    // fpm/inflate bundle pass. For registry deps, this will go straight to the\n    // tarball URL, as if it were a remote tarball dep.\n    return fetchChild(topPath, tree, sw, requested)\n  }\n}\n\nfunction isGit (sw) {\n  const version = npa.resolve(sw.name, sw.version)\n  return (version && version.type === 'git')\n}\n\nfunction makeFakeChild (name, topPath, tree, sw, requested) {\n  const from = sw.from || requested.raw\n  const pkg = {\n    name: name,\n    version: sw.version,\n    _id: name + '@' + sw.version,\n    _resolved: sw.resolved || (isGit(sw) && sw.version),\n    _requested: requested,\n    _optional: sw.optional,\n    _development: sw.dev,\n    _inBundle: sw.bundled,\n    _integrity: sw.integrity,\n    _from: from,\n    _spec: requested.rawSpec,\n    _where: topPath,\n    _args: [[requested.toString(), topPath]],\n    dependencies: sw.requires\n  }\n\n  if (!sw.bundled) {\n    const bundleDependencies = Object.keys(sw.dependencies || {}).filter((d) => sw.dependencies[d].bundled)\n    if (bundleDependencies.length === 0) {\n      pkg.bundleDependencies = bundleDependencies\n    }\n  }\n  const child = createChild({\n    package: pkg,\n    loaded: false,\n    parent: tree,\n    children: [],\n    fromShrinkwrap: requested,\n    fakeChild: sw,\n    fromBundle: sw.bundled ? tree.fromBundle || tree : null,\n    path: childPath(tree.path, pkg),\n    realpath: requested.type === 'directory' ? requested.fetchSpec : childPath(tree.realpath, pkg),\n    location: (tree.location === '/' ? '' : tree.location + '/') + pkg.name,\n    isLink: requested.type === 'directory',\n    isInLink: tree.isLink,\n    swRequires: sw.requires\n  })\n  tree.children.push(child)\n  return child\n}\n\nfunction fetchChild (topPath, tree, sw, requested) {\n  return fetchPackageMetadata(requested, topPath).then((pkg) => {\n    pkg._from = sw.from || requested.raw\n    pkg._optional = sw.optional\n    pkg._development = sw.dev\n    pkg._inBundle = false\n    return addBundled(pkg).then(() => pkg)\n  }).then((pkg) => {\n    var isLink = pkg._requested.type === 'directory'\n    const child = createChild({\n      package: pkg,\n      loaded: false,\n      parent: tree,\n      fromShrinkwrap: requested,\n      path: childPath(tree.path, pkg),\n      realpath: isLink ? requested.fetchSpec : childPath(tree.realpath, pkg),\n      children: pkg._bundled || [],\n      location: (tree.location === '/' ? '' : tree.location + '/') + pkg.name,\n      fromBundle: null,\n      isLink: isLink,\n      isInLink: tree.isLink,\n      swRequires: sw.requires\n    })\n    tree.children.push(child)\n    if (pkg._bundled) {\n      delete pkg._bundled\n      inflateBundled(child, child, child.children)\n    }\n    return child\n  })\n}\n\nfunction childIsEquivalent (sw, requested, child) {\n  if (!child) return false\n  if (child.fromShrinkwrap) return true\n  if (\n    sw.integrity &&\n    child.package._integrity &&\n    ssri.parse(sw.integrity).match(child.package._integrity)\n  ) return true\n  if (child.isLink && requested.type === 'directory') return path.relative(child.realpath, requested.fetchSpec) === ''\n\n  if (sw.resolved) return child.package._resolved === sw.resolved\n  if (!isRegistry(requested) && sw.from) return child.package._from === sw.from\n  if (!isRegistry(requested) && child.package._resolved) return sw.version === child.package._resolved\n  return child.package.version === sw.version\n}\n"]}