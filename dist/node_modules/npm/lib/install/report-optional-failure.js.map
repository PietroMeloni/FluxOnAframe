{"version":3,"sources":["../../../../../node_modules/npm/lib/install/report-optional-failure.js"],"names":["path","require","moduleName","module","exports","reportOptionalFailure","top","tree","parent","what","error","topTree","warnings","id","depVer","package","dependencies","optDepVer","optionalDependencies","devDepVer","devDependencies","version","_id","location","relative","join","optional","push"],"mappings":"AAAA;;AACA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,aAAaD,QAAQ,yBAAR,CAAjB;;AAEAE,OAAOC,OAAP,GAAiBC,qBAAjB;;AAEA,SAASC,GAAT,CAAcC,IAAd,EAAoB;AAClB,MAAIA,KAAKC,MAAT,EAAiB,OAAOF,IAAIC,KAAKC,MAAT,CAAP;AACjB,SAAOD,IAAP;AACD;;AAED,SAASF,qBAAT,CAAgCE,IAAhC,EAAsCE,IAAtC,EAA4CC,KAA5C,EAAmD;AACjD,MAAIC,UAAUL,IAAIC,IAAJ,CAAd;AACA,MAAI,CAACI,QAAQC,QAAb,EAAuBD,QAAQC,QAAR,GAAmB,EAAnB;AACvB,MAAIC,EAAJ;AACA,MAAIJ,IAAJ,EAAU;AACR,QAAIK,SAASP,KAAKQ,OAAL,CAAaC,YAAb,IAA6BT,KAAKQ,OAAL,CAAaC,YAAb,CAA0BP,IAA1B,CAA1C;AACA,QAAIQ,YAAYV,KAAKQ,OAAL,CAAaG,oBAAb,IAAqCX,KAAKQ,OAAL,CAAaG,oBAAb,CAAkCT,IAAlC,CAArD;AACA,QAAIU,YAAYZ,KAAKQ,OAAL,CAAaK,eAAb,IAAgCb,KAAKQ,OAAL,CAAaK,eAAb,CAA6BX,IAA7B,CAAhD;AACA,QAAIY,UAAUP,UAAUG,SAAV,IAAuBE,SAArC;AACAN,SAAKJ,QAAQY,UAAU,MAAMA,OAAhB,GAA0B,EAAlC,CAAL;AACD,GAND,MAMO;AACLR,SAAKN,KAAKe,GAAL,IAAYpB,WAAWK,IAAX,KAAoBA,KAAKQ,OAAL,CAAaM,OAAb,GAAuB,MAAMd,KAAKQ,OAAL,CAAaM,OAA1C,GAAoD,EAAxE,CAAjB;AACD;AACD,MAAIE,WAAWvB,KAAKwB,QAAL,CAAcb,QAAQX,IAAtB,EAA4BO,KAAKP,IAAjC,CAAf;AACA,MAAIS,IAAJ,EAAUc,WAAWvB,KAAKyB,IAAL,CAAUF,QAAV,EAAoB,cAApB,EAAoCd,IAApC,CAAX;;AAEVC,QAAMgB,QAAN,GAAiBb,EAAjB;AACAH,QAAMa,QAAN,GAAiBA,QAAjB;AACAZ,UAAQC,QAAR,CAAiBe,IAAjB,CAAsBjB,KAAtB;AACD","file":"report-optional-failure.js","sourcesContent":["'use strict'\nvar path = require('path')\nvar moduleName = require('../utils/module-name.js')\n\nmodule.exports = reportOptionalFailure\n\nfunction top (tree) {\n  if (tree.parent) return top(tree.parent)\n  return tree\n}\n\nfunction reportOptionalFailure (tree, what, error) {\n  var topTree = top(tree)\n  if (!topTree.warnings) topTree.warnings = []\n  var id\n  if (what) {\n    var depVer = tree.package.dependencies && tree.package.dependencies[what]\n    var optDepVer = tree.package.optionalDependencies && tree.package.optionalDependencies[what]\n    var devDepVer = tree.package.devDependencies && tree.package.devDependencies[what]\n    var version = depVer || optDepVer || devDepVer\n    id = what + (version ? '@' + version : '')\n  } else {\n    id = tree._id || moduleName(tree) + (tree.package.version ? '@' + tree.package.version : '')\n  }\n  var location = path.relative(topTree.path, tree.path)\n  if (what) location = path.join(location, 'node_modules', what)\n\n  error.optional = id\n  error.location = location\n  topTree.warnings.push(error)\n}\n"]}