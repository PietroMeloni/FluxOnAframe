{"version":3,"sources":["../../../../../node_modules/npm/lib/install/is-only-dev.js"],"names":["module","exports","isOnlyDev","moduleName","require","isDevDep","isProdDep","node","seen","Set","requiredBy","length","every","andIsOnlyDev","name","req","isDev","isProd","isTop","has","add"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiBC,SAAjB;;AAEA,IAAMC,aAAaC,QAAQ,yBAAR,CAAnB;AACA,IAAMC,WAAWD,QAAQ,iBAAR,CAAjB;AACA,IAAME,YAAYF,QAAQ,kBAAR,CAAlB;;AAEA;AACA;AACA;AACA;AACA,SAASF,SAAT,CAAoBK,IAApB,EAA0BC,IAA1B,EAAgC;AAC9B,MAAI,CAACA,IAAL,EAAWA,OAAO,IAAIC,GAAJ,EAAP;AACX,SAAOF,KAAKG,UAAL,CAAgBC,MAAhB,IAA0BJ,KAAKG,UAAL,CAAgBE,KAAhB,CAAsBC,aAAaV,WAAWI,IAAX,CAAb,EAA+BC,IAA/B,CAAtB,CAAjC;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,YAAT,CAAuBC,IAAvB,EAA6BN,IAA7B,EAAmC;AACjC,SAAO,UAAUO,GAAV,EAAe;AACpB,QAAMC,QAAQX,SAASU,GAAT,EAAcD,IAAd,CAAd;AACA,QAAMG,SAASX,UAAUS,GAAV,EAAeD,IAAf,CAAf;AACA,QAAIC,IAAIG,KAAR,EAAe;AACb,aAAOF,SAAS,CAACC,MAAjB;AACD,KAFD,MAEO;AACL,UAAIT,KAAKW,GAAL,CAASJ,GAAT,CAAJ,EAAmB,OAAO,IAAP;AACnBP,WAAKY,GAAL,CAASL,GAAT;AACA,aAAOb,UAAUa,GAAV,EAAeP,IAAf,CAAP;AACD;AACF,GAVD;AAWD","file":"is-only-dev.js","sourcesContent":["'use strict'\nmodule.exports = isOnlyDev\n\nconst moduleName = require('../utils/module-name.js')\nconst isDevDep = require('./is-dev-dep.js')\nconst isProdDep = require('./is-prod-dep.js')\n\n// Returns true if the module `node` is only required direcctly as a dev\n// dependency of the top level or transitively _from_ top level dev\n// dependencies.\n// Dual mode modules (that are both dev AND prod) should return false.\nfunction isOnlyDev (node, seen) {\n  if (!seen) seen = new Set()\n  return node.requiredBy.length && node.requiredBy.every(andIsOnlyDev(moduleName(node), seen))\n}\n\n// There is a known limitation with this implementation: If a dependency is\n// ONLY required by cycles that are detached from the top level then it will\n// ultimately return true.\n//\n// This is ok though: We don't allow shrinkwraps with extraneous deps and\n// these situation is caught by the extraneous checker before we get here.\nfunction andIsOnlyDev (name, seen) {\n  return function (req) {\n    const isDev = isDevDep(req, name)\n    const isProd = isProdDep(req, name)\n    if (req.isTop) {\n      return isDev && !isProd\n    } else {\n      if (seen.has(req)) return true\n      seen.add(req)\n      return isOnlyDev(req, seen)\n    }\n  }\n}\n"]}