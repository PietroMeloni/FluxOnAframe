{"version":3,"sources":["../../../../../node_modules/npm/lib/install/flatten-tree.js"],"names":["validate","require","moduleName","module","exports","flattenTree","flatName","flatNameFromTree","tree","arguments","seen","Set","flat","todo","length","next","shift","pkg","add","path","ii","children","child","has","push","isTop","parent"],"mappings":"AAAA;;AACA,IAAIA,WAAWC,QAAQ,QAAR,CAAf;AACA,IAAIC,aAAaD,QAAQ,yBAAR,CAAjB;;AAEAE,OAAOC,OAAP,GAAiBC,WAAjB;AACAF,OAAOC,OAAP,CAAeE,QAAf,GAA0BA,QAA1B;AACAH,OAAOC,OAAP,CAAeG,gBAAf,GAAkCA,gBAAlC;;AAEA,SAASF,WAAT,CAAsBG,IAAtB,EAA4B;AAC1BR,WAAS,GAAT,EAAcS,SAAd;AACA,MAAIC,OAAO,IAAIC,GAAJ,EAAX;AACA,MAAIC,OAAO,EAAX;AACA,MAAIC,OAAO,CAAC,CAACL,IAAD,EAAO,GAAP,CAAD,CAAX;AACA,SAAOK,KAAKC,MAAZ,EAAoB;AAClB,QAAIC,OAAOF,KAAKG,KAAL,EAAX;AACA,QAAIC,MAAMF,KAAK,CAAL,CAAV;AACAL,SAAKQ,GAAL,CAASD,GAAT;AACA,QAAIE,OAAOJ,KAAK,CAAL,CAAX;AACAH,SAAKO,IAAL,IAAaF,GAAb;AACA,QAAIE,SAAS,GAAb,EAAkBA,QAAQ,GAAR;AAClB,SAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKH,IAAII,QAAJ,CAAaP,MAAnC,EAA2C,EAAEM,EAA7C,EAAiD;AAC/C,UAAIE,QAAQL,IAAII,QAAJ,CAAaD,EAAb,CAAZ;AACA,UAAI,CAACV,KAAKa,GAAL,CAASD,KAAT,CAAL,EAAsB;AACpBT,aAAKW,IAAL,CAAU,CAACF,KAAD,EAAQhB,SAASa,IAAT,EAAeG,KAAf,CAAR,CAAV;AACD;AACF;AACF;AACD,SAAOV,IAAP;AACD;;AAED,SAASN,QAAT,CAAmBa,IAAnB,EAAyBG,KAAzB,EAAgC;AAC9BtB,WAAS,IAAT,EAAeS,SAAf;AACA,SAAOU,QAAQjB,WAAWoB,KAAX,KAAqB,KAA7B,CAAP;AACD;;AAED,SAASf,gBAAT,CAA2BC,IAA3B,EAAiC;AAC/BR,WAAS,GAAT,EAAcS,SAAd;AACA,MAAID,KAAKiB,KAAT,EAAgB,OAAO,GAAP;AAChB,MAAIN,OAAOZ,iBAAiBC,KAAKkB,MAAtB,CAAX;AACA,MAAIP,SAAS,GAAb,EAAkBA,QAAQ,GAAR;AAClB,SAAOb,SAASa,IAAT,EAAeX,IAAf,CAAP;AACD","file":"flatten-tree.js","sourcesContent":["'use strict'\nvar validate = require('aproba')\nvar moduleName = require('../utils/module-name.js')\n\nmodule.exports = flattenTree\nmodule.exports.flatName = flatName\nmodule.exports.flatNameFromTree = flatNameFromTree\n\nfunction flattenTree (tree) {\n  validate('O', arguments)\n  var seen = new Set()\n  var flat = {}\n  var todo = [[tree, '/']]\n  while (todo.length) {\n    var next = todo.shift()\n    var pkg = next[0]\n    seen.add(pkg)\n    var path = next[1]\n    flat[path] = pkg\n    if (path !== '/') path += '/'\n    for (var ii = 0; ii < pkg.children.length; ++ii) {\n      var child = pkg.children[ii]\n      if (!seen.has(child)) {\n        todo.push([child, flatName(path, child)])\n      }\n    }\n  }\n  return flat\n}\n\nfunction flatName (path, child) {\n  validate('SO', arguments)\n  return path + (moduleName(child) || 'TOP')\n}\n\nfunction flatNameFromTree (tree) {\n  validate('O', arguments)\n  if (tree.isTop) return '/'\n  var path = flatNameFromTree(tree.parent)\n  if (path !== '/') path += '/'\n  return flatName(path, tree)\n}\n"]}