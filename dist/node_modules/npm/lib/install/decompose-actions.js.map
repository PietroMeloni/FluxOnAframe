{"version":3,"sources":["../../../../../node_modules/npm/lib/install/decompose-actions.js"],"names":["validate","require","npm","module","exports","differences","decomposed","next","arguments","forEach","action","cmd","pkg","addSteps","updateSteps","moveSteps","removeSteps","defaultSteps","addAction","some","_","push","fromBundle","isLink","config","get","oldPkg"],"mappings":"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","file":"decompose-actions.js","sourcesContent":["'use strict'\nvar validate = require('aproba')\nvar npm = require('../npm.js')\n\nmodule.exports = function (differences, decomposed, next) {\n  validate('AAF', arguments)\n  differences.forEach((action) => {\n    var cmd = action[0]\n    var pkg = action[1]\n    switch (cmd) {\n      case 'add':\n        addSteps(decomposed, pkg)\n        break\n      case 'update':\n        updateSteps(decomposed, pkg)\n        break\n      case 'move':\n        moveSteps(decomposed, pkg)\n        break\n      case 'remove':\n        removeSteps(decomposed, pkg)\n        break\n      default:\n        defaultSteps(decomposed, cmd, pkg)\n    }\n  })\n  next()\n}\n\nfunction addAction (decomposed, action, pkg) {\n  if (decomposed.some((_) => _[0] === action && _[1] === pkg)) return\n  decomposed.push([action, pkg])\n}\n\nfunction addSteps (decomposed, pkg) {\n  if (pkg.fromBundle) {\n    // make sure our source module exists to extract ourselves from\n    // if we're installing our source module anyway, the duplication\n    // of these steps will be elided by `addAction` automatically\n    addAction(decomposed, 'fetch', pkg.fromBundle)\n    addAction(decomposed, 'extract', pkg.fromBundle)\n  }\n  if (!pkg.fromBundle && !pkg.isLink) {\n    addAction(decomposed, 'fetch', pkg)\n    addAction(decomposed, 'extract', pkg)\n  }\n  if (!pkg.fromBundle || npm.config.get('rebuild-bundle')) {\n    addAction(decomposed, 'preinstall', pkg)\n    addAction(decomposed, 'build', pkg)\n    addAction(decomposed, 'install', pkg)\n    addAction(decomposed, 'postinstall', pkg)\n  }\n  if (!pkg.fromBundle || !pkg.isLink) {\n    addAction(decomposed, 'finalize', pkg)\n  }\n  addAction(decomposed, 'refresh-package-json', pkg)\n}\n\nfunction updateSteps (decomposed, pkg) {\n  removeSteps(decomposed, pkg.oldPkg)\n  addSteps(decomposed, pkg)\n}\n\nfunction removeSteps (decomposed, pkg) {\n  addAction(decomposed, 'unbuild', pkg)\n  addAction(decomposed, 'remove', pkg)\n}\n\nfunction moveSteps (decomposed, pkg) {\n  addAction(decomposed, 'move', pkg)\n  addAction(decomposed, 'build', pkg)\n  addAction(decomposed, 'install', pkg)\n  addAction(decomposed, 'postinstall', pkg)\n  addAction(decomposed, 'refresh-package-json', pkg)\n}\n\nfunction defaultSteps (decomposed, cmd, pkg) {\n  addAction(decomposed, cmd, pkg)\n}\n"]}