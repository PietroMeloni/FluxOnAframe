{"version":3,"sources":["../../../../../node_modules/npm/lib/install/audit.js"],"names":["exports","generate","generateFromInstall","submitForInstallReport","submitForFullReport","printInstallReport","printParseableReport","printFullReport","Bluebird","require","auditReport","treeToShrinkwrap","packageId","output","npm","qw","registryFetch","zlib","gzip","promisify","log","perf","url","npa","uuid","ssri","cloneDeep","pacoteOpts","runId","v4","auditData","cfg","config","scopedRegistries","keys","filter","test","_","map","get","emit","JSON","stringify","then","info","body","length","forEach","fetchAudit","resolve","reg","on","destroy","resume","response","json","result","href","opts","method","headers","npmSession","projectScope","auditResult","reporter","withColor","color","withUnicode","report","shrinkwrap","requires","diffs","install","remove","sw","lockfileVersion","scrubRequires","scrubDeps","dependencies","scrubArg","generateMetadata","md","metadata","scrubKeys","deleteKeys","deps","Object","shouldScrubName","name","shouldScrubSpec","version","value","scrub","toScrub","scrubSpec","toDelete","reqs","spec","getScope","slice","indexOf","scope","Boolean","req","registry","arg","rawSpec","scrubName","type","module","rid","fromData","algorithms","hexDigest","meta","npm_version","node_version","process","platform","node_env","env","NODE_ENV","Promise","tree","pkg","package","devDependencies","auditInstall","a","auditRemove","auditDiffs","action","mutation","child","push","location","previous","oldPkg"],"mappings":"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","file":"audit.js","sourcesContent":["'use strict'\nexports.generate = generate\nexports.generateFromInstall = generateFromInstall\nexports.submitForInstallReport = submitForInstallReport\nexports.submitForFullReport = submitForFullReport\nexports.printInstallReport = printInstallReport\nexports.printParseableReport = printParseableReport\nexports.printFullReport = printFullReport\n\nconst Bluebird = require('bluebird')\nconst auditReport = require('npm-audit-report')\nconst treeToShrinkwrap = require('../shrinkwrap.js').treeToShrinkwrap\nconst packageId = require('../utils/package-id.js')\nconst output = require('../utils/output.js')\nconst npm = require('../npm.js')\nconst qw = require('qw')\nconst registryFetch = require('npm-registry-fetch')\nconst zlib = require('zlib')\nconst gzip = Bluebird.promisify(zlib.gzip)\nconst log = require('npmlog')\nconst perf = require('../utils/perf.js')\nconst url = require('url')\nconst npa = require('npm-package-arg')\nconst uuid = require('uuid')\nconst ssri = require('ssri')\nconst cloneDeep = require('lodash.clonedeep')\nconst pacoteOpts = require('../config/pacote.js')\n\n// used when scrubbing module names/specifiers\nconst runId = uuid.v4()\n\nfunction submitForInstallReport (auditData) {\n  const cfg = npm.config // avoid the no-dynamic-lookups test\n  const scopedRegistries = cfg.keys.filter(_ => /:registry$/.test(_)).map(_ => cfg.get(_))\n  perf.emit('time', 'audit compress')\n  // TODO: registryFetch will be adding native support for `Content-Encoding: gzip` at which point\n  // we'll pass in something like `gzip: true` and not need to JSON stringify, gzip or headers.\n  return gzip(JSON.stringify(auditData)).then(body => {\n    perf.emit('timeEnd', 'audit compress')\n    log.info('audit', 'Submitting payload of ' + body.length + 'bytes')\n    scopedRegistries.forEach(reg => {\n      // we don't care about the response so destroy the stream if we can, or leave it flowing\n      // so it can eventually finish and clean up after itself\n      fetchAudit(url.resolve(reg, '/-/npm/v1/security/audits/quick'))\n        .then(_ => {\n          _.body.on('error', () => {})\n          if (_.body.destroy) {\n            _.body.destroy()\n          } else {\n            _.body.resume()\n          }\n        }, _ => {})\n    })\n    perf.emit('time', 'audit submit')\n    return fetchAudit('/-/npm/v1/security/audits/quick', body).then(response => {\n      perf.emit('timeEnd', 'audit submit')\n      perf.emit('time', 'audit body')\n      return response.json()\n    }).then(result => {\n      perf.emit('timeEnd', 'audit body')\n      return result\n    })\n  })\n}\n\nfunction submitForFullReport (auditData) {\n  perf.emit('time', 'audit compress')\n  // TODO: registryFetch will be adding native support for `Content-Encoding: gzip` at which point\n  // we'll pass in something like `gzip: true` and not need to JSON stringify, gzip or headers.\n  return gzip(JSON.stringify(auditData)).then(body => {\n    perf.emit('timeEnd', 'audit compress')\n    log.info('audit', 'Submitting payload of ' + body.length + ' bytes')\n    perf.emit('time', 'audit submit')\n    return fetchAudit('/-/npm/v1/security/audits', body).then(response => {\n      perf.emit('timeEnd', 'audit submit')\n      perf.emit('time', 'audit body')\n      return response.json()\n    }).then(result => {\n      perf.emit('timeEnd', 'audit body')\n      result.runId = runId\n      return result\n    })\n  })\n}\n\nfunction fetchAudit (href, body) {\n  const opts = pacoteOpts()\n  return registryFetch(href, {\n    method: 'POST',\n    headers: { 'Content-Encoding': 'gzip', 'Content-Type': 'application/json' },\n    config: npm.config,\n    npmSession: opts.npmSession,\n    projectScope: npm.projectScope,\n    log: log,\n    body: body\n  })\n}\n\nfunction printInstallReport (auditResult) {\n  return auditReport(auditResult, {\n    reporter: 'install',\n    withColor: npm.color,\n    withUnicode: npm.config.get('unicode')\n  }).then(result => output(result.report))\n}\n\nfunction printFullReport (auditResult) {\n  return auditReport(auditResult, {\n    log: output,\n    reporter: npm.config.get('json') ? 'json' : 'detail',\n    withColor: npm.color,\n    withUnicode: npm.config.get('unicode')\n  }).then(result => output(result.report))\n}\n\nfunction printParseableReport (auditResult) {\n  return auditReport(auditResult, {\n    log: output,\n    reporter: 'parseable',\n    withColor: npm.color,\n    withUnicode: npm.config.get('unicode')\n  }).then(result => output(result.report))\n}\n\nfunction generate (shrinkwrap, requires, diffs, install, remove) {\n  const sw = cloneDeep(shrinkwrap)\n  delete sw.lockfileVersion\n  sw.requires = scrubRequires(requires)\n  scrubDeps(sw.dependencies)\n\n  // sw.diffs = diffs || {}\n  sw.install = (install || []).map(scrubArg)\n  sw.remove = (remove || []).map(scrubArg)\n  return generateMetadata().then((md) => {\n    sw.metadata = md\n    return sw\n  })\n}\n\nconst scrubKeys = qw`version`\nconst deleteKeys = qw`from resolved`\n\nfunction scrubDeps (deps) {\n  if (!deps) return\n  Object.keys(deps).forEach(name => {\n    if (!shouldScrubName(name) && !shouldScrubSpec(name, deps[name].version)) return\n    const value = deps[name]\n    delete deps[name]\n    deps[scrub(name)] = value\n  })\n  Object.keys(deps).forEach(name => {\n    for (let toScrub of scrubKeys) {\n      if (!deps[name][toScrub]) continue\n      deps[name][toScrub] = scrubSpec(name, deps[name][toScrub])\n    }\n    for (let toDelete of deleteKeys) delete deps[name][toDelete]\n\n    scrubRequires(deps[name].requires)\n    scrubDeps(deps[name].dependencies)\n  })\n}\n\nfunction scrubRequires (reqs) {\n  if (!reqs) return reqs\n  Object.keys(reqs).forEach(name => {\n    const spec = reqs[name]\n    if (shouldScrubName(name) || shouldScrubSpec(name, spec)) {\n      delete reqs[name]\n      reqs[scrub(name)] = scrubSpec(name, spec)\n    } else {\n      reqs[name] = scrubSpec(name, spec)\n    }\n  })\n  return reqs\n}\n\nfunction getScope (name) {\n  if (name[0] === '@') return name.slice(0, name.indexOf('/'))\n}\n\nfunction shouldScrubName (name) {\n  const scope = getScope(name)\n  const cfg = npm.config // avoid the no-dynamic-lookups test\n  return Boolean(scope && cfg.get(scope + ':registry'))\n}\nfunction shouldScrubSpec (name, spec) {\n  const req = npa.resolve(name, spec)\n  return !req.registry\n}\n\nfunction scrubArg (arg) {\n  const req = npa(arg)\n  let name = req.name\n  if (shouldScrubName(name) || shouldScrubSpec(name, req.rawSpec)) {\n    name = scrubName(name)\n  }\n  const spec = scrubSpec(req.name, req.rawSpec)\n  return name + '@' + spec\n}\n\nfunction scrubName (name) {\n  return shouldScrubName(name) ? scrub(name) : name\n}\n\nfunction scrubSpec (name, spec) {\n  const req = npa.resolve(name, spec)\n  if (req.registry) return spec\n  if (req.type === 'git') {\n    return 'git+ssh://' + scrub(spec)\n  } else if (req.type === 'remote') {\n    return 'https://' + scrub(spec)\n  } else if (req.type === 'directory') {\n    return 'file:' + scrub(spec)\n  } else if (req.type === 'file') {\n    return 'file:' + scrub(spec) + '.tar'\n  } else {\n    return scrub(spec)\n  }\n}\n\nmodule.exports.scrub = scrub\nfunction scrub (value, rid) {\n  return ssri.fromData((rid || runId) + ' ' + value, {algorithms: ['sha256']}).hexDigest()\n}\n\nfunction generateMetadata () {\n  const meta = {}\n  meta.npm_version = npm.version\n  meta.node_version = process.version\n  meta.platform = process.platform\n  meta.node_env = process.env.NODE_ENV\n\n  return Promise.resolve(meta)\n}\n/*\n  const head = path.resolve(npm.prefix, '.git/HEAD')\n  return readFile(head, 'utf8').then((head) => {\n    if (!head.match(/^ref: /)) {\n      meta.commit_hash = head.trim()\n      return\n    }\n    const headFile = head.replace(/^ref: /, '').trim()\n    meta.branch = headFile.replace(/^refs[/]heads[/]/, '')\n    return readFile(path.resolve(npm.prefix, '.git', headFile), 'utf8')\n  }).then((commitHash) => {\n    meta.commit_hash = commitHash.trim()\n    const proc = spawn('git', qw`diff --quiet --exit-code package.json package-lock.json`, {cwd: npm.prefix, stdio: 'ignore'})\n    return new Promise((resolve, reject) => {\n      proc.once('error', reject)\n      proc.on('exit', (code, signal) => {\n        if (signal == null) meta.state = code === 0 ? 'clean' : 'dirty'\n        resolve()\n      })\n    })\n  }).then(() => meta, () => meta)\n*/\n\nfunction generateFromInstall (tree, diffs, install, remove) {\n  const requires = {}\n  tree.requires.forEach((pkg) => {\n    requires[pkg.package.name] = tree.package.dependencies[pkg.package.name] || tree.package.devDependencies[pkg.package.name] || pkg.package.version\n  })\n\n  const auditInstall = (install || []).filter((a) => a.name).map(packageId)\n  const auditRemove = (remove || []).filter((a) => a.name).map(packageId)\n  const auditDiffs = {}\n  diffs.forEach((action) => {\n    const mutation = action[0]\n    const child = action[1]\n    if (mutation !== 'add' && mutation !== 'update' && mutation !== 'remove') return\n    if (!auditDiffs[mutation]) auditDiffs[mutation] = []\n    if (mutation === 'add') {\n      auditDiffs[mutation].push({location: child.location})\n    } else if (mutation === 'update') {\n      auditDiffs[mutation].push({location: child.location, previous: packageId(child.oldPkg)})\n    } else if (mutation === 'remove') {\n      auditDiffs[mutation].push({previous: packageId(child)})\n    }\n  })\n\n  return generate(treeToShrinkwrap(tree), requires, auditDiffs, auditInstall, auditRemove)\n}\n"]}