{"version":3,"sources":["../../../../../node_modules/npm/lib/install/diff-trees.js"],"names":["npm","require","validate","npa","flattenTree","isOnlyDev","log","path","ssri","moduleName","isOnlyOptional","pkgRequested","pkg","_requested","_resolved","_from","nonRegistrySource","requested","fromGit","fromLocal","fromRemote","type","pkgIntegrity","sri","dist","integrity","_integrity","_shasum","fromHex","toString","parse","Object","keys","length","ex","sriMatch","aa","bb","algo","aaHash","bbHash","digest","pkgAreEquiv","isInLink","package","aaIntegrity","bbIntegrity","isLink","realpath","aaReq","bbReq","version","pushAll","Array","prototype","push","apply","module","exports","oldTree","newTree","differences","next","arguments","sortActions","diffTrees","finish","isNotTopOrExtraneous","node","isTop","userRequired","existing","actions","forEach","action","child","location","sorted","added","sortedlocs","sort","sortByLocation","toplocs","filter","mod","requiredBy","some","concat","sortByDeps","localeCompare","sortModuleByLocation","unshift","_","indexOf","setAction","_diffTrees","flatOldTree","flatNewTree","toRemove","toRemoveByName","flatname","test","relative","name","oldPkg","removing","rm","bundlesOrFromBundle","fromBundle","bundleDependencies","toMv","shift","fromPath","map","filterActions","includeOpt","config","get","includeDev","includeProd","silly","diff","pkgIsOnlyDev","pkgIsOnlyOpt"],"mappings":"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","file":"diff-trees.js","sourcesContent":["'use strict'\nvar npm = require('../npm.js')\nvar validate = require('aproba')\nvar npa = require('npm-package-arg')\nvar flattenTree = require('./flatten-tree.js')\nvar isOnlyDev = require('./is-only-dev.js')\nvar log = require('npmlog')\nvar path = require('path')\nvar ssri = require('ssri')\nvar moduleName = require('../utils/module-name.js')\nvar isOnlyOptional = require('./is-only-optional.js')\n\n// we don't use get-requested because we're operating on files on disk, and\n// we don't want to extropolate from what _should_ be there.\nfunction pkgRequested (pkg) {\n  return pkg._requested || (pkg._resolved && npa(pkg._resolved)) || (pkg._from && npa(pkg._from))\n}\n\nfunction nonRegistrySource (requested) {\n  if (fromGit(requested)) return true\n  if (fromLocal(requested)) return true\n  if (fromRemote(requested)) return true\n  return false\n}\n\nfunction fromRemote (requested) {\n  if (requested.type === 'remote') return true\n}\n\nfunction fromLocal (requested) {\n  // local is an npm@3 type that meant \"file\"\n  if (requested.type === 'file' || requested.type === 'directory' || requested.type === 'local') return true\n  return false\n}\n\nfunction fromGit (requested) {\n  if (requested.type === 'hosted' || requested.type === 'git') return true\n  return false\n}\n\nfunction pkgIntegrity (pkg) {\n  try {\n    // dist is provided by the registry\n    var sri = (pkg.dist && pkg.dist.integrity) ||\n              // _integrity is provided by pacote\n              pkg._integrity ||\n              // _shasum is legacy\n              (pkg._shasum && ssri.fromHex(pkg._shasum, 'sha1').toString())\n    if (!sri) return\n    var integrity = ssri.parse(sri)\n    if (Object.keys(integrity).length === 0) return\n    return integrity\n  } catch (ex) {\n\n  }\n}\n\nfunction sriMatch (aa, bb) {\n  if (!aa || !bb) return false\n  for (let algo of Object.keys(aa)) {\n    if (!bb[algo]) continue\n    for (let aaHash of aa[algo]) {\n      for (let bbHash of bb[algo]) {\n        return aaHash.digest === bbHash.digest\n      }\n    }\n  }\n  return false\n}\n\nfunction pkgAreEquiv (aa, bb) {\n  // coming in we know they share a path…\n\n  // if one is inside a link and the other is not, then they are not equivalent\n  // this happens when we're replacing a linked dep with a non-linked version\n  if (aa.isInLink !== bb.isInLink) return false\n  // if they share package metadata _identity_, they're the same thing\n  if (aa.package === bb.package) return true\n  // if they share integrity information, they're the same thing\n  var aaIntegrity = pkgIntegrity(aa.package)\n  var bbIntegrity = pkgIntegrity(bb.package)\n  if (aaIntegrity || bbIntegrity) return sriMatch(aaIntegrity, bbIntegrity)\n\n  // if they're links and they share the same target, they're the same thing\n  if (aa.isLink && bb.isLink) return aa.realpath === bb.realpath\n\n  // if we can't determine both their sources then we have no way to know\n  // if they're the same thing, so we have to assume they aren't\n  var aaReq = pkgRequested(aa.package)\n  var bbReq = pkgRequested(bb.package)\n  if (!aaReq || !bbReq) return false\n\n  if (fromGit(aaReq) && fromGit(bbReq)) {\n    // if both are git and share a _resolved specifier (one with the\n    // comittish replaced by a commit hash) then they're the same\n    return aa.package._resolved && bb.package._resolved &&\n           aa.package._resolved === bb.package._resolved\n  }\n\n  // we have to give up trying to find matches for non-registry sources at this point…\n  if (nonRegistrySource(aaReq) || nonRegistrySource(bbReq)) return false\n\n  // finally, if they ARE a registry source then version matching counts\n  return aa.package.version === bb.package.version\n}\n\nfunction pushAll (aa, bb) {\n  Array.prototype.push.apply(aa, bb)\n}\n\nmodule.exports = function (oldTree, newTree, differences, log, next) {\n  validate('OOAOF', arguments)\n  pushAll(differences, sortActions(diffTrees(oldTree, newTree)))\n  log.finish()\n  next()\n}\n\nfunction isNotTopOrExtraneous (node) {\n  return !node.isTop && !node.userRequired && !node.existing\n}\n\nvar sortActions = module.exports.sortActions = function (differences) {\n  var actions = {}\n  differences.forEach(function (action) {\n    var child = action[1]\n    actions[child.location] = action\n  })\n\n  var sorted = []\n  var added = {}\n\n  var sortedlocs = Object.keys(actions).sort(sortByLocation)\n\n  // We're going to sort the actions taken on top level dependencies first, before\n  // considering the order of transitive deps. Because we're building our list\n  // from the bottom up, this means we will return a list with top level deps LAST.\n  // This is important in terms of keeping installations as consistent as possible\n  // as folks add new dependencies.\n  var toplocs = sortedlocs.filter(function (location) {\n    var mod = actions[location][1]\n    if (!mod.requiredBy) return true\n    // If this module is required by any non-top level module\n    // or by any extraneous module, eg user requested or existing\n    // then we don't want to give this priority sorting.\n    return !mod.requiredBy.some(isNotTopOrExtraneous)\n  })\n\n  toplocs.concat(sortedlocs).forEach(function (location) {\n    sortByDeps(actions[location])\n  })\n\n  function sortByLocation (aa, bb) {\n    return bb.localeCompare(aa)\n  }\n  function sortModuleByLocation (aa, bb) {\n    return sortByLocation(aa && aa.location, bb && bb.location)\n  }\n  function sortByDeps (action) {\n    var mod = action[1]\n    if (added[mod.location]) return\n    added[mod.location] = action\n    if (!mod.requiredBy) mod.requiredBy = []\n    mod.requiredBy.sort(sortModuleByLocation).forEach(function (mod) {\n      if (actions[mod.location]) sortByDeps(actions[mod.location])\n    })\n    sorted.unshift(action)\n  }\n\n  // safety net, anything excluded above gets tacked on the end\n  differences.forEach((_) => {\n    if (sorted.indexOf(_) === -1) sorted.push(_)\n  })\n\n  return sorted\n}\n\nfunction setAction (differences, action, pkg) {\n  differences.push([action, pkg])\n}\n\nvar diffTrees = module.exports._diffTrees = function (oldTree, newTree) {\n  validate('OO', arguments)\n  var differences = []\n  var flatOldTree = flattenTree(oldTree)\n  var flatNewTree = flattenTree(newTree)\n  var toRemove = {}\n  var toRemoveByName = {}\n\n  // Build our tentative remove list.  We don't add remove actions yet\n  // because we might resuse them as part of a move.\n  Object.keys(flatOldTree).forEach(function (flatname) {\n    if (flatname === '/') return\n    if (flatNewTree[flatname]) return\n    var pkg = flatOldTree[flatname]\n    if (pkg.isInLink && /^[.][.][/\\\\]/.test(path.relative(newTree.realpath, pkg.realpath))) return\n\n    toRemove[flatname] = pkg\n    var name = moduleName(pkg)\n    if (!toRemoveByName[name]) toRemoveByName[name] = []\n    toRemoveByName[name].push({flatname: flatname, pkg: pkg})\n  })\n\n  // generate our add/update/move actions\n  Object.keys(flatNewTree).forEach(function (flatname) {\n    if (flatname === '/') return\n    var pkg = flatNewTree[flatname]\n    var oldPkg = pkg.oldPkg = flatOldTree[flatname]\n    if (oldPkg) {\n      // if the versions are equivalent then we don't need to update… unless\n      // the user explicitly asked us to.\n      if (!pkg.userRequired && pkgAreEquiv(oldPkg, pkg)) return\n      setAction(differences, 'update', pkg)\n    } else {\n      var name = moduleName(pkg)\n      // find any packages we're removing that share the same name and are equivalent\n      var removing = (toRemoveByName[name] || []).filter((rm) => pkgAreEquiv(rm.pkg, pkg))\n      var bundlesOrFromBundle = pkg.fromBundle || pkg.package.bundleDependencies\n      // if we have any removes that match AND we're not working with a bundle then upgrade to a move\n      if (removing.length && !bundlesOrFromBundle) {\n        var toMv = removing.shift()\n        toRemoveByName[name] = toRemoveByName[name].filter((rm) => rm !== toMv)\n        pkg.fromPath = toMv.pkg.path\n        setAction(differences, 'move', pkg)\n        delete toRemove[toMv.flatname]\n      // we don't generate add actions for things found in links (which already exist on disk)\n      } else if (!pkg.isInLink || !(pkg.fromBundle && pkg.fromBundle.isLink)) {\n        setAction(differences, 'add', pkg)\n      }\n    }\n  })\n\n  // finally generate our remove actions from any not consumed by moves\n  Object\n    .keys(toRemove)\n    .map((flatname) => toRemove[flatname])\n    .forEach((pkg) => setAction(differences, 'remove', pkg))\n\n  return filterActions(differences)\n}\n\nfunction filterActions (differences) {\n  const includeOpt = npm.config.get('optional')\n  const includeDev = npm.config.get('dev') ||\n    (!/^prod(uction)?$/.test(npm.config.get('only')) && !npm.config.get('production')) ||\n    /^dev(elopment)?$/.test(npm.config.get('only')) ||\n    /^dev(elopment)?$/.test(npm.config.get('also'))\n  const includeProd = !/^dev(elopment)?$/.test(npm.config.get('only'))\n  if (includeProd && includeDev && includeOpt) return differences\n\n  log.silly('diff-trees', 'filtering actions:', 'includeDev', includeDev, 'includeProd', includeProd, 'includeOpt', includeOpt)\n  return differences.filter((diff) => {\n    const pkg = diff[1]\n    const pkgIsOnlyDev = isOnlyDev(pkg)\n    const pkgIsOnlyOpt = isOnlyOptional(pkg)\n    if (!includeProd && pkgIsOnlyDev) return true\n    if (includeDev && pkgIsOnlyDev) return true\n    if (includeProd && !pkgIsOnlyDev && (includeOpt || !pkgIsOnlyOpt)) return true\n    return false\n  })\n}\n"]}