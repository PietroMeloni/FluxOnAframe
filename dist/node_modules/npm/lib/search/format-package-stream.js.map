{"version":3,"sources":["../../../../../node_modules/npm/lib/search/format-package-stream.js"],"names":["ms","require","jsonstream","columnify","module","exports","formatPackageStream","opts","json","jsonOutputStream","textOutputStream","pipeline","obj","through","stringify","line","pkg","enc","cb","prettify","data","num","truncate","long","normalizePackage","columns","description","parseable","map","col","replace","join","output","include","showHeaders","columnSplitter","config","name","minWidth","maxWidth","truncateMarker","author","date","version","keywords","Infinity","trimToMaxWidth","color","highlightSearchTerms","args","colors","cl","length","addColorMarker","str","arg","i","m","markStart","String","fromCharCode","markEnd","charAt","RegExp","substr","bit","pieces","toLowerCase","split","p","piece","mark","colorize","uncolor","getMaxWidth","cols","tty","stdout","process","isatty","fd","getWindowSize","ex","slice","terms","forEach","trim","maintainers","username","Array","isArray","toISOString"],"mappings":"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","file":"format-package-stream.js","sourcesContent":["'use strict'\n\nvar ms = require('mississippi')\nvar jsonstream = require('JSONStream')\nvar columnify = require('columnify')\n\n// This module consumes package data in the following format:\n//\n// {\n//   name: String,\n//   description: String,\n//   maintainers: [{ username: String, email: String }],\n//   keywords: String | [String],\n//   version: String,\n//   date: Date // can be null,\n// }\n//\n// The returned stream will format this package data\n// into a byte stream of formatted, displayable output.\n\nmodule.exports = formatPackageStream\nfunction formatPackageStream (opts) {\n  opts = opts || {}\n  if (opts.json) {\n    return jsonOutputStream()\n  } else {\n    return textOutputStream(opts)\n  }\n}\n\nfunction jsonOutputStream () {\n  return ms.pipeline.obj(\n    ms.through.obj(),\n    jsonstream.stringify('[', ',', ']'),\n    ms.through()\n  )\n}\n\nfunction textOutputStream (opts) {\n  var line = 0\n  return ms.through.obj(function (pkg, enc, cb) {\n    cb(null, prettify(pkg, ++line, opts))\n  })\n}\n\nfunction prettify (data, num, opts) {\n  opts = opts || {}\n  var truncate = !opts.long\n\n  var pkg = normalizePackage(data, opts)\n\n  var columns = opts.description\n    ? ['name', 'description', 'author', 'date', 'version', 'keywords']\n    : ['name', 'author', 'date', 'version', 'keywords']\n\n  if (opts.parseable) {\n    return columns.map(function (col) {\n      return pkg[col] && ('' + pkg[col]).replace(/\\t/g, ' ')\n    }).join('\\t')\n  }\n\n  var output = columnify(\n    [pkg],\n    {\n      include: columns,\n      showHeaders: num <= 1,\n      columnSplitter: ' | ',\n      truncate: truncate,\n      config: {\n        name: { minWidth: 25, maxWidth: 25, truncate: false, truncateMarker: '' },\n        description: { minWidth: 20, maxWidth: 20 },\n        author: { minWidth: 15, maxWidth: 15 },\n        date: { maxWidth: 11 },\n        version: { minWidth: 8, maxWidth: 8 },\n        keywords: { maxWidth: Infinity }\n      }\n    }\n  )\n  output = trimToMaxWidth(output)\n  if (opts.color) {\n    output = highlightSearchTerms(output, opts.args)\n  }\n  return output\n}\n\nvar colors = [31, 33, 32, 36, 34, 35]\nvar cl = colors.length\n\nfunction addColorMarker (str, arg, i) {\n  var m = i % cl + 1\n  var markStart = String.fromCharCode(m)\n  var markEnd = String.fromCharCode(0)\n\n  if (arg.charAt(0) === '/') {\n    return str.replace(\n      new RegExp(arg.substr(1, arg.length - 2), 'gi'),\n      function (bit) { return markStart + bit + markEnd }\n    )\n  }\n\n  // just a normal string, do the split/map thing\n  var pieces = str.toLowerCase().split(arg.toLowerCase())\n  var p = 0\n\n  return pieces.map(function (piece) {\n    piece = str.substr(p, piece.length)\n    var mark = markStart +\n               str.substr(p + piece.length, arg.length) +\n               markEnd\n    p += piece.length + arg.length\n    return piece + mark\n  }).join('')\n}\n\nfunction colorize (line) {\n  for (var i = 0; i < cl; i++) {\n    var m = i + 1\n    var color = '\\u001B[' + colors[i] + 'm'\n    line = line.split(String.fromCharCode(m)).join(color)\n  }\n  var uncolor = '\\u001B[0m'\n  return line.split('\\u0000').join(uncolor)\n}\n\nfunction getMaxWidth () {\n  var cols\n  try {\n    var tty = require('tty')\n    var stdout = process.stdout\n    cols = !tty.isatty(stdout.fd) ? Infinity : process.stdout.getWindowSize()[0]\n    cols = (cols === 0) ? Infinity : cols\n  } catch (ex) { cols = Infinity }\n  return cols\n}\n\nfunction trimToMaxWidth (str) {\n  var maxWidth = getMaxWidth()\n  return str.split('\\n').map(function (line) {\n    return line.slice(0, maxWidth)\n  }).join('\\n')\n}\n\nfunction highlightSearchTerms (str, terms) {\n  terms.forEach(function (arg, i) {\n    str = addColorMarker(str, arg, i)\n  })\n\n  return colorize(str).trim()\n}\n\nfunction normalizePackage (data, opts) {\n  opts = opts || {}\n  return {\n    name: data.name,\n    description: opts.description ? data.description : '',\n    author: (data.maintainers || []).map(function (m) {\n      return '=' + m.username\n    }).join(' '),\n    keywords: Array.isArray(data.keywords)\n      ? data.keywords.join(' ')\n      : typeof data.keywords === 'string'\n        ? data.keywords.replace(/[,\\s]+/, ' ')\n        : '',\n    version: data.version,\n    date: (data.date &&\n          (data.date.toISOString() // remove time\n            .split('T').join(' ')\n            .replace(/:[0-9]{2}\\.[0-9]{3}Z$/, ''))\n            .slice(0, -5)) ||\n          'prehistoric'\n  }\n}\n"]}