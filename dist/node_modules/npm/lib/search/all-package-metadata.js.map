{"version":3,"sources":["../../../../../node_modules/npm/lib/search/all-package-metadata.js"],"names":["fs","require","path","mkdir","chownr","npm","log","cacheFile","correctMkdir","mapToRegistry","jsonstream","writeStreamAtomic","ms","sortedUnionStream","once","gunzip","module","exports","allPackageMetadata","staleness","stream","through","obj","config","er","uri","auth","emit","cacheBase","get","cachePath","join","createEntryStream","err","entryStream","latest","newEntries","silly","createCacheWriteStream","writeStream","pipeline","Error","_createEntryStream","cb","createCacheEntryStream","cacheStream","cacheLatest","warn","createEntryUpdateStream","updateStream","updatedLatest","createMergedStream","_createMergedStream","a","b","linkStreams","pkg","name","_createCacheEntryStream","verbose","stat","createReadStream","parse","extractUpdated","_createEntryUpdateStream","all","params","timeout","follow","staleOk","streaming","partialUpdate","Date","now","registry","request","res","statusCode","chunk","enc","key","headers","date","label","nope","msg","removeAllListeners","destroy","onErr","onEnd","on","removeListener","pause","_createCacheWriteStream","_ensureCacheDirExists","outStream","_createCacheOutStream","cacheFileStream","inputStream","_createCacheInStream","errEmitted","end","duplex","dirname","cache","st","made","uid","gid","writer","updatedWritten","inStream","stringifyObject","write","lastError"],"mappings":"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","file":"all-package-metadata.js","sourcesContent":["'use strict'\n\nvar fs = require('graceful-fs')\nvar path = require('path')\nvar mkdir = require('mkdirp')\nvar chownr = require('chownr')\nvar npm = require('../npm.js')\nvar log = require('npmlog')\nvar cacheFile = require('npm-cache-filename')\nvar correctMkdir = require('../utils/correct-mkdir.js')\nvar mapToRegistry = require('../utils/map-to-registry.js')\nvar jsonstream = require('JSONStream')\nvar writeStreamAtomic = require('fs-write-stream-atomic')\nvar ms = require('mississippi')\nvar sortedUnionStream = require('sorted-union-stream')\nvar once = require('once')\nvar gunzip = require('../utils/gunzip-maybe')\n\n// Returns a sorted stream of all package metadata. Internally, takes care of\n// maintaining its metadata cache and making partial or full remote requests,\n// according to staleness, validity, etc.\n//\n// The local cache must hold certain invariants:\n// 1. It must be a proper JSON object\n// 2. It must have its keys lexically sorted\n// 3. The first entry must be `_updated` with a millisecond timestamp as a val.\n// 4. It must include all entries that exist in the metadata endpoint as of\n//    the value in `_updated`\nmodule.exports = allPackageMetadata\nfunction allPackageMetadata (staleness) {\n  var stream = ms.through.obj()\n\n  mapToRegistry('-/all', npm.config, function (er, uri, auth) {\n    if (er) return stream.emit('error', er)\n\n    var cacheBase = cacheFile(npm.config.get('cache'))(uri)\n    var cachePath = path.join(cacheBase, '.cache.json')\n\n    createEntryStream(cachePath, uri, auth, staleness, function (err, entryStream, latest, newEntries) {\n      if (err) return stream.emit('error', err)\n      log.silly('all-package-metadata', 'entry stream created')\n      if (entryStream && newEntries) {\n        createCacheWriteStream(cachePath, latest, function (err, writeStream) {\n          if (err) return stream.emit('error', err)\n          log.silly('all-package-metadata', 'output stream created')\n          ms.pipeline.obj(entryStream, writeStream, stream)\n        })\n      } else if (entryStream) {\n        ms.pipeline.obj(entryStream, stream)\n      } else {\n        stream.emit('error', new Error('No search sources available'))\n      }\n    })\n  })\n  return stream\n}\n\n// Creates a stream of the latest available package metadata.\n// Metadata will come from a combination of the local cache and remote data.\nmodule.exports._createEntryStream = createEntryStream\nfunction createEntryStream (cachePath, uri, auth, staleness, cb) {\n  createCacheEntryStream(cachePath, function (err, cacheStream, cacheLatest) {\n    cacheLatest = cacheLatest || 0\n    if (err) {\n      log.warn('', 'Failed to read search cache. Rebuilding')\n      log.silly('all-package-metadata', 'cache read error: ', err)\n    }\n    createEntryUpdateStream(uri, auth, staleness, cacheLatest, function (err, updateStream, updatedLatest) {\n      updatedLatest = updatedLatest || 0\n      var latest = updatedLatest || cacheLatest\n      if (!cacheStream && !updateStream) {\n        return cb(new Error('No search sources available'))\n      }\n      if (err) {\n        log.warn('', 'Search data request failed, search might be stale')\n        log.silly('all-package-metadata', 'update request error: ', err)\n      }\n      if (cacheStream && updateStream) {\n        // Deduped, unioned, sorted stream from the combination of both.\n        cb(null,\n          createMergedStream(cacheStream, updateStream),\n          latest,\n          !!updatedLatest)\n      } else {\n        // Either one works if one or the other failed\n        cb(null, cacheStream || updateStream, latest, !!updatedLatest)\n      }\n    })\n  })\n}\n\n// Merges `a` and `b` into one stream, dropping duplicates in favor of entries\n// in `b`. Both input streams should already be individually sorted, and the\n// returned output stream will have semantics resembling the merge step of a\n// plain old merge sort.\nmodule.exports._createMergedStream = createMergedStream\nfunction createMergedStream (a, b) {\n  linkStreams(a, b)\n  return sortedUnionStream(b, a, function (pkg) { return pkg.name })\n}\n\n// Reads the local index and returns a stream that spits out package data.\nmodule.exports._createCacheEntryStream = createCacheEntryStream\nfunction createCacheEntryStream (cacheFile, cb) {\n  log.verbose('all-package-metadata', 'creating entry stream from local cache')\n  log.verbose('all-package-metadata', cacheFile)\n  fs.stat(cacheFile, function (err, stat) {\n    if (err) return cb(err)\n    // TODO - This isn't very helpful if `cacheFile` is empty or just `{}`\n    var entryStream = ms.pipeline.obj(\n      fs.createReadStream(cacheFile),\n      jsonstream.parse('*'),\n      // I believe this passthrough is necessary cause `jsonstream` returns\n      // weird custom streams that behave funny sometimes.\n      ms.through.obj()\n    )\n    extractUpdated(entryStream, 'cached-entry-stream', cb)\n  })\n}\n\n// Stream of entry updates from the server. If `latest` is `0`, streams the\n// entire metadata object from the registry.\nmodule.exports._createEntryUpdateStream = createEntryUpdateStream\nfunction createEntryUpdateStream (all, auth, staleness, latest, cb) {\n  log.verbose('all-package-metadata', 'creating remote entry stream')\n  var params = {\n    timeout: 600,\n    follow: true,\n    staleOk: true,\n    auth: auth,\n    streaming: true\n  }\n  var partialUpdate = false\n  if (latest && (Date.now() - latest < (staleness * 1000))) {\n    // Skip the request altogether if our `latest` isn't stale.\n    log.verbose('all-package-metadata', 'Local data up to date, skipping update')\n    return cb(null)\n  } else if (latest === 0) {\n    log.warn('', 'Building the local index for the first time, please be patient')\n    log.verbose('all-package-metadata', 'No cached data: requesting full metadata db')\n  } else {\n    log.verbose('all-package-metadata', 'Cached data present with timestamp:', latest, 'requesting partial index update')\n    all += '/since?stale=update_after&startkey=' + latest\n    partialUpdate = true\n  }\n  npm.registry.request(all, params, function (er, res) {\n    if (er) return cb(er)\n    log.silly('all-package-metadata', 'request stream opened, code:', res.statusCode)\n    // NOTE - The stream returned by `request` seems to be very persnickety\n    //        and this is almost a magic incantation to get it to work.\n    //        Modify how `res` is used here at your own risk.\n    var entryStream = ms.pipeline.obj(\n      res,\n      ms.through(function (chunk, enc, cb) {\n        cb(null, chunk)\n      }),\n      gunzip(),\n      jsonstream.parse('*', function (pkg, key) {\n        if (key[0] === '_updated' || key[0][0] !== '_') {\n          return pkg\n        }\n      })\n    )\n    if (partialUpdate) {\n      // The `/all/since` endpoint doesn't return `_updated`, so we\n      // just use the request's own timestamp.\n      cb(null, entryStream, Date.parse(res.headers.date))\n    } else {\n      extractUpdated(entryStream, 'entry-update-stream', cb)\n    }\n  })\n}\n\n// Both the (full) remote requests and the local index have `_updated` as their\n// first returned entries. This is the \"latest\" unix timestamp for the metadata\n// in question. This code does a bit of juggling with the data streams\n// so that we can pretend that field doesn't exist, but still extract `latest`\nfunction extractUpdated (entryStream, label, cb) {\n  cb = once(cb)\n  log.silly('all-package-metadata', 'extracting latest')\n  function nope (msg) {\n    return function () {\n      log.warn('all-package-metadata', label, msg)\n      entryStream.removeAllListeners()\n      entryStream.destroy()\n      cb(new Error(msg))\n    }\n  }\n  var onErr = nope('Failed to read stream')\n  var onEnd = nope('Empty or invalid stream')\n  entryStream.on('error', onErr)\n  entryStream.on('end', onEnd)\n  entryStream.once('data', function (latest) {\n    log.silly('all-package-metadata', 'got first stream entry for', label, latest)\n    entryStream.removeListener('error', onErr)\n    entryStream.removeListener('end', onEnd)\n    // Because `.once()` unpauses the stream, we re-pause it after the first\n    // entry so we don't vomit entries into the void.\n    entryStream.pause()\n    if (typeof latest === 'number') {\n      // The extra pipeline is to return a stream that will implicitly unpause\n      // after having an `.on('data')` listener attached, since using this\n      // `data` event broke its initial state.\n      cb(null, ms.pipeline.obj(entryStream, ms.through.obj()), latest)\n    } else {\n      cb(new Error('expected first entry to be _updated'))\n    }\n  })\n}\n\n// Creates a stream that writes input metadata to the current cache.\n// Cache updates are atomic, and the stream closes when *everything* is done.\n// The stream is also passthrough, so entries going through it will also\n// be output from it.\nmodule.exports._createCacheWriteStream = createCacheWriteStream\nfunction createCacheWriteStream (cacheFile, latest, cb) {\n  _ensureCacheDirExists(cacheFile, function (err) {\n    if (err) return cb(err)\n    log.silly('all-package-metadata', 'creating output stream')\n    var outStream = _createCacheOutStream()\n    var cacheFileStream = writeStreamAtomic(cacheFile)\n    var inputStream = _createCacheInStream(cacheFileStream, outStream, latest)\n\n    // Glue together the various streams so they fail together.\n    // `cacheFileStream` errors are already handled by the `inputStream`\n    // pipeline\n    var errEmitted = false\n    linkStreams(inputStream, outStream, function () { errEmitted = true })\n\n    cacheFileStream.on('close', function () { !errEmitted && outStream.end() })\n\n    cb(null, ms.duplex.obj(inputStream, outStream))\n  })\n}\n\nfunction _ensureCacheDirExists (cacheFile, cb) {\n  var cacheBase = path.dirname(cacheFile)\n  log.silly('all-package-metadata', 'making sure cache dir exists at', cacheBase)\n  correctMkdir(npm.cache, function (er, st) {\n    if (er) return cb(er)\n    mkdir(cacheBase, function (er, made) {\n      if (er) return cb(er)\n      chownr(made || cacheBase, st.uid, st.gid, cb)\n    })\n  })\n}\n\nfunction _createCacheOutStream () {\n  return ms.pipeline.obj(\n    // These two passthrough `through` streams compensate for some\n    // odd behavior with `jsonstream`.\n    ms.through(),\n    jsonstream.parse('*', function (obj, key) {\n      // This stream happens to get _updated passed through it, for\n      // implementation reasons. We make sure to filter it out cause\n      // the fact that it comes t\n      if (typeof obj === 'object') {\n        return obj\n      }\n    }),\n    ms.through.obj()\n  )\n}\n\nfunction _createCacheInStream (writer, outStream, latest) {\n  var updatedWritten = false\n  var inStream = ms.pipeline.obj(\n    ms.through.obj(function (pkg, enc, cb) {\n      if (!updatedWritten && typeof pkg === 'number') {\n        // This is the `_updated` value getting sent through.\n        updatedWritten = true\n        return cb(null, ['_updated', pkg])\n      } else if (typeof pkg !== 'object') {\n        this.emit('error', new Error('invalid value written to input stream'))\n      } else {\n        // The [key, val] format is expected by `jsonstream` for object writing\n        cb(null, [pkg.name, pkg])\n      }\n    }),\n    jsonstream.stringifyObject('{', ',', '}'),\n    ms.through(function (chunk, enc, cb) {\n      // This tees off the buffer data to `outStream`, and then continues\n      // the pipeline as usual\n      outStream.write(chunk, enc, function () {\n        cb(null, chunk)\n      })\n    }),\n    // And finally, we write to the cache file.\n    writer\n  )\n  inStream.write(latest)\n  return inStream\n}\n\n// Links errors between `a` and `b`, preventing cycles, and calls `cb` if\n// an error happens, once per error.\nfunction linkStreams (a, b, cb) {\n  var lastError = null\n  a.on('error', function (err) {\n    if (err !== lastError) {\n      lastError = err\n      b.emit('error', err)\n      cb(err)\n    }\n  })\n  b.on('error', function (err) {\n    if (err !== lastError) {\n      lastError = err\n      a.emit('error', err)\n      cb(err)\n    }\n  })\n}\n"]}