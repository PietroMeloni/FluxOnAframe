{"version":3,"sources":["../../../../node_modules/npm/lib/update.js"],"names":["module","exports","update","url","require","log","Bluebird","npm","Installer","usage","outdated","promisify","commands","completion","args","cb","update_","asCallback","dryrun","config","get","verbose","then","rawOutdated","map","ww","dep","depname","current","wanted","latest","req","what","filter","length","info","toInstall","forEach","parse","protocol","where","parent","path","isTransitive","requiredBy","some","p","isTop","key","String","opts","saveOnlyLock","indexOf","push","each","Object","keys","deps","inst","run"],"mappings":"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","file":"update.js","sourcesContent":["'use strict'\nmodule.exports = update\n\nconst url = require('url')\nconst log = require('npmlog')\nconst Bluebird = require('bluebird')\nconst npm = require('./npm.js')\nconst Installer = require('./install.js').Installer\nconst usage = require('./utils/usage')\nconst outdated = Bluebird.promisify(npm.commands.outdated)\n\nupdate.usage = usage(\n  'update',\n  'npm update [-g] [<pkg>...]'\n)\n\nupdate.completion = npm.commands.outdated.completion\n\nfunction update (args, cb) {\n  return update_(args).asCallback(cb)\n}\n\nfunction update_ (args) {\n  let dryrun = false\n  if (npm.config.get('dry-run')) dryrun = true\n\n  log.verbose('update', 'computing outdated modules to update')\n  return outdated(args, true).then((rawOutdated) => {\n    const outdated = rawOutdated.map(function (ww) {\n      return {\n        dep: ww[0],\n        depname: ww[1],\n        current: ww[2],\n        wanted: ww[3],\n        latest: ww[4],\n        req: ww[5],\n        what: ww[1] + '@' + ww[3]\n      }\n    })\n\n    const wanted = outdated.filter(function (ww) {\n      if (ww.current === ww.wanted && ww.wanted !== ww.latest) {\n        log.verbose(\n          'outdated',\n          'not updating', ww.depname,\n          \"because it's currently at the maximum version that matches its specified semver range\"\n        )\n      }\n      return ww.current !== ww.wanted && ww.latest !== 'linked'\n    })\n    if (wanted.length === 0) return\n\n    log.info('outdated', 'updating', wanted)\n    const toInstall = {}\n\n    wanted.forEach(function (ww) {\n      // use the initial installation method (repo, tar, git) for updating\n      if (url.parse(ww.req).protocol) ww.what = ww.req\n\n      const where = (ww.dep.parent && ww.dep.parent.path) || ww.dep.path\n      const isTransitive = !(ww.dep.requiredBy || []).some((p) => p.isTop)\n      const key = where + ':' + String(isTransitive)\n      if (!toInstall[key]) toInstall[key] = {where: where, opts: {saveOnlyLock: isTransitive}, what: []}\n      if (toInstall[key].what.indexOf(ww.what) === -1) toInstall[key].what.push(ww.what)\n    })\n    return Bluebird.each(Object.keys(toInstall), (key) => {\n      const deps = toInstall[key]\n      const inst = new Installer(deps.where, dryrun, deps.what, deps.opts)\n      return inst.run()\n    })\n  })\n}\n"]}