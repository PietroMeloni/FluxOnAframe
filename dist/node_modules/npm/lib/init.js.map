{"version":3,"sources":["../../../../node_modules/npm/lib/init.js"],"names":["module","exports","init","path","require","log","npa","npm","npx","initJson","isRegistry","output","noProgressTillDone","tillDone","usage","args","cb","length","NPM_PATH","resolve","__dirname","initerName","packageName","test","req","type","hosted","user","project","replace","name","rawSpec","err","Error","code","npxArgs","process","argv0","argv","slice","parsed","parseArgs","then","catch","dir","cwd","pause","initFile","config","get","yes","join","er","data","resume","silly","message","warn","info"],"mappings":"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","file":"init.js","sourcesContent":["// initialize a package.json file\n\nmodule.exports = init\n\nvar path = require('path')\nvar log = require('npmlog')\nvar npa = require('npm-package-arg')\nvar npm = require('./npm.js')\nvar npx = require('libnpx')\nvar initJson = require('init-package-json')\nvar isRegistry = require('./utils/is-registry.js')\nvar output = require('./utils/output.js')\nvar noProgressTillDone = require('./utils/no-progress-while-running').tillDone\nvar usage = require('./utils/usage')\n\ninit.usage = usage(\n  'init',\n  '\\nnpm init [--force|-f|--yes|-y|--scope]' +\n  '\\nnpm init <@scope> (same as `npx <@scope>/create`)' +\n  '\\nnpm init [<@scope>/]<name> (same as `npx [<@scope>/]create-<name>`)'\n)\n\nfunction init (args, cb) {\n  if (args.length) {\n    var NPM_PATH = path.resolve(__dirname, '../bin/npm-cli.js')\n    var initerName = args[0]\n    var packageName = initerName\n    if (/^@[^/]+$/.test(initerName)) {\n      packageName = initerName + '/create'\n    } else {\n      var req = npa(initerName)\n      if (req.type === 'git' && req.hosted) {\n        var { user, project } = req.hosted\n        packageName = initerName\n          .replace(user + '/' + project, user + '/create-' + project)\n      } else if (isRegistry(req)) {\n        packageName = req.name.replace(/^(@[^/]+\\/)?/, '$1create-')\n        if (req.rawSpec) {\n          packageName += '@' + req.rawSpec\n        }\n      } else {\n        var err = new Error(\n          'Unrecognized initializer: ' + initerName +\n          '\\nFor more package binary executing power check out `npx`:' +\n          '\\nhttps://www.npmjs.com/package/npx'\n        )\n        err.code = 'EUNSUPPORTED'\n        throw err\n      }\n    }\n    var npxArgs = [process.argv0, '[fake arg]', '--always-spawn', packageName, ...process.argv.slice(4)]\n    var parsed = npx.parseArgs(npxArgs, NPM_PATH)\n\n    return npx(parsed)\n      .then(() => cb())\n      .catch(cb)\n  }\n  var dir = process.cwd()\n  log.pause()\n  var initFile = npm.config.get('init-module')\n  if (!initJson.yes(npm.config)) {\n    output([\n      'This utility will walk you through creating a package.json file.',\n      'It only covers the most common items, and tries to guess sensible defaults.',\n      '',\n      'See `npm help json` for definitive documentation on these fields',\n      'and exactly what they do.',\n      '',\n      'Use `npm install <pkg>` afterwards to install a package and',\n      'save it as a dependency in the package.json file.',\n      '',\n      'Press ^C at any time to quit.'\n    ].join('\\n'))\n  }\n  initJson(dir, initFile, npm.config, noProgressTillDone(function (er, data) {\n    log.resume()\n    log.silly('package data', data)\n    if (er && er.message === 'canceled') {\n      log.warn('init', 'canceled')\n      return cb(null, data)\n    }\n    log.info('init', 'written successfully')\n    cb(er, data)\n  }))\n}\n"]}