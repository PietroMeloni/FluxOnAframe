{"version":3,"sources":["../../../../../node_modules/npm/lib/config/load-prefix.js"],"names":["module","exports","loadPrefix","findPrefix","require","path","cb","cli","list","Object","defineProperty","set","prefix","g","get","bind","globalPrefix","localPrefix","enumerable","resolve","p","prototype","hasOwnProperty","call","process","nextTick","cwd","then","found"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiBC,UAAjB;;AAEA,IAAIC,aAAaC,QAAQ,iBAAR,CAAjB;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,SAASF,UAAT,CAAqBI,EAArB,EAAyB;AACvB,MAAIC,MAAM,KAAKC,IAAL,CAAU,CAAV,CAAV;;AAEAC,SAAOC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EACE;AACEC,SAAK,UAAUC,MAAV,EAAkB;AACrB,UAAIC,IAAI,KAAKC,GAAL,CAAS,QAAT,CAAR;AACA,WAAKD,IAAI,cAAJ,GAAqB,aAA1B,IAA2CD,MAA3C;AACD,KAHI,CAGHG,IAHG,CAGE,IAHF,CADP;AAKED,SAAK,YAAY;AACf,UAAID,IAAI,KAAKC,GAAL,CAAS,QAAT,CAAR;AACA,aAAOD,IAAI,KAAKG,YAAT,GAAwB,KAAKC,WAApC;AACD,KAHI,CAGHF,IAHG,CAGE,IAHF,CALP;AASEG,gBAAY;AATd,GADF;;AAaAT,SAAOC,cAAP,CAAsB,IAAtB,EAA4B,cAA5B,EACE;AACEC,SAAK,UAAUC,MAAV,EAAkB;AACrB,WAAKD,GAAL,CAAS,QAAT,EAAmBC,MAAnB;AACD,KAFI,CAEHG,IAFG,CAEE,IAFF,CADP;AAIED,SAAK,YAAY;AACf,aAAOT,KAAKc,OAAL,CAAa,KAAKL,GAAL,CAAS,QAAT,CAAb,CAAP;AACD,KAFI,CAEHC,IAFG,CAEE,IAFF,CAJP;AAOEG,gBAAY;AAPd,GADF;;AAWA,MAAIE,CAAJ;AACAX,SAAOC,cAAP,CAAsB,IAAtB,EAA4B,aAA5B,EACE,EAAEC,KAAK,aAAUC,MAAV,EAAkB;AAAEQ,UAAIR,MAAJ;AAAY,KAAvC;AACEE,SAAK,eAAY;AAAE,aAAOM,CAAP;AAAU,KAD/B;AAEEF,gBAAY,IAFd,EADF;;AAKA;AACA;AACA;AACA,MAAIT,OAAOY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChB,GAArC,EAA0C,QAA1C,CAAJ,EAAyD;AACvDa,QAAIf,KAAKc,OAAL,CAAaZ,IAAIK,MAAjB,CAAJ;AACAY,YAAQC,QAAR,CAAiBnB,EAAjB;AACD,GAHD,MAGO;AACLH,eAAWqB,QAAQE,GAAR,EAAX,EAA0BC,IAA1B,CAA+B,UAACC,KAAD,EAAW;AACxCR,UAAIQ,KAAJ;AACAtB;AACD,KAHD,EAGGA,EAHH;AAID;AACF","file":"load-prefix.js","sourcesContent":["module.exports = loadPrefix\n\nvar findPrefix = require('find-npm-prefix')\nvar path = require('path')\n\nfunction loadPrefix (cb) {\n  var cli = this.list[0]\n\n  Object.defineProperty(this, 'prefix',\n    {\n      set: function (prefix) {\n        var g = this.get('global')\n        this[g ? 'globalPrefix' : 'localPrefix'] = prefix\n      }.bind(this),\n      get: function () {\n        var g = this.get('global')\n        return g ? this.globalPrefix : this.localPrefix\n      }.bind(this),\n      enumerable: true\n    })\n\n  Object.defineProperty(this, 'globalPrefix',\n    {\n      set: function (prefix) {\n        this.set('prefix', prefix)\n      }.bind(this),\n      get: function () {\n        return path.resolve(this.get('prefix'))\n      }.bind(this),\n      enumerable: true\n    })\n\n  var p\n  Object.defineProperty(this, 'localPrefix',\n    { set: function (prefix) { p = prefix },\n      get: function () { return p },\n      enumerable: true })\n\n  // try to guess at a good node_modules location.\n  // If we are *explicitly* given a prefix on the cli, then\n  // always use that.  otherwise, infer local prefix from cwd.\n  if (Object.prototype.hasOwnProperty.call(cli, 'prefix')) {\n    p = path.resolve(cli.prefix)\n    process.nextTick(cb)\n  } else {\n    findPrefix(process.cwd()).then((found) => {\n      p = found\n      cb()\n    }, cb)\n  }\n}\n"]}