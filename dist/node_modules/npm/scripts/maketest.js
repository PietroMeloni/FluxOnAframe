#!/usr/bin/env node

'use strict';

var loadFromDir = require('tacks/load-from-dir.js');

process.exit(main(process.argv.slice(2)));

function main(argv) {
  if (argv.length !== 1) {
    console.error('Usage: maketest <fixturedir>');
    return 1;
  }
  var fixturedir = process.argv[2];

  console.log(generateFromDir(fixturedir));
  return 0;
}

function indent(ind, str) {
  return str.replace(/\n/g, '\n' + ind);
}

function generateFromDir(dir) {
  var tacks = loadFromDir(dir);
  return '\'use strict\'\nconst path = require(\'path\')\nconst test = require(\'tap\').test\nconst mr = require(\'npm-registry-mock\')\nconst Tacks = require(\'tacks\')\nconst File = Tacks.File\nconst Symlink = Tacks.Symlink\nconst Dir = Tacks.Dir\nconst common = require(\'../common-tap.js\')\n\nconst basedir = path.join(__dirname, path.basename(__filename, \'.js\'))\nconst testdir = path.join(basedir, \'testdir\')\nconst cachedir = path.join(basedir, \'cache\')\nconst globaldir = path.join(basedir, \'global\')\nconst tmpdir = path.join(basedir, \'tmp\')\n\nconst conf = {\n  cwd: testdir,\n  env: Object.assign({}, process.env, {\n    npm_config_cache: cachedir,\n    npm_config_tmp: tmpdir,\n    npm_config_prefix: globaldir,\n    npm_config_registry: common.registry,\n    npm_config_loglevel: \'warn\'\n  })\n}\n\nlet server\nconst fixture = new Tacks(Dir({\n  cache: Dir(),\n  global: Dir(),\n  tmp: Dir(),\n  testdir: ' + indent('  ', tacks.fixture.toSource()) + '\n}))\n\nfunction setup () {\n  cleanup()\n  fixture.create(basedir)\n}\n\nfunction cleanup () {\n  fixture.remove(basedir)\n}\n\ntest(\'setup\', function (t) {\n  setup()\n  mr({port: common.port, throwOnUnmatched: true}, function (err, s) {\n    if (err) throw err\n    server = s\n    t.done()\n  })\n})\n\ntest(\'example\', function (t) {\n  common.npm([\'install\'], conf, function (err, code, stdout, stderr) {\n    if (err) throw err\n    t.is(code, 0, \'command ran ok\')\n    t.comment(stdout.trim())\n    t.comment(stderr.trim())\n    // your assertions here\n    t.done()\n  })\n})\n\ntest(\'cleanup\', function (t) {\n  server.close()\n  cleanup()\n  t.done()\n})\n';
}
//# sourceMappingURL=maketest.js.map