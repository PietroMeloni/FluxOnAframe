{"version":3,"sources":["../../../../node_modules/npm/scripts/changelog.js"],"names":["execSync","require","branch","process","argv","log","toString","split","main","shortname","url","matched","match","repo","id","printCommit","c","console","shortid","fullid","fixes","label","prurl","msg","message","replace","credit","forEach","author","commit","line","m","test","push","reviewed"],"mappings":"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","file":"changelog.js","sourcesContent":["'use strict'\n/*\nUsage:\n\nnode scripts/changelog.js [comittish]\n\nGenerates changelog entries in our format as best as its able based on\ncommits starting at comittish, or if that's not passed, latest.\n\nOrdinarily this is run via the gen-changelog shell script, which appends\nthe result to the changelog.\n\n*/\nconst execSync = require('child_process').execSync\nconst branch = process.argv[2] || 'origin/latest'\nconst log = execSync(`git log --reverse --pretty='format:%h %H%d %s (%aN)%n%b%n---%n' ${branch}...`).toString().split(/\\n/)\n\nmain()\n\nfunction shortname (url) {\n  let matched = url.match(/https:\\/\\/github.com\\/([^/]+\\/[^/]+)\\/(?:pull|issues)\\/(\\d+)/)\n  if (!matched) return false\n  let repo = matched[1]\n  let id = matched[2]\n  if (repo !== 'npm/npm') {\n    return `${repo}#${id}`\n  } else {\n    return `#${id}`\n  }\n}\n\nfunction printCommit (c) {\n  console.log(`* [\\`${c.shortid}\\`](https://github.com/npm/npm/commit/${c.fullid})`)\n  if (c.fixes) {\n    let label = shortname(c.fixes)\n    if (label) {\n      console.log(`  [${label}](${c.fixes})`)\n    } else {\n      console.log(`  [#${c.fixes}](https://github.com/npm/npm/issues/${c.fixes})`)\n    }\n  } else if (c.prurl) {\n    let label = shortname(c.prurl)\n    if (label) {\n      console.log(`  [${label}](${c.prurl})`)\n    } else {\n      console.log(`  [#](${c.prurl})`)\n    }\n  }\n  let msg = c.message\n    .replace(/^\\s+/mg, '')\n    .replace(/^[-a-z]+: /, '')\n    .replace(/^/mg, '  ')\n    .replace(/\\n$/, '')\n    // backtickify package@version\n    .replace(/^(\\s*[^@\\s]+@\\d+[.]\\d+[.]\\d+)(\\s*\\S)/g, '$1:$2')\n    .replace(/\\b([^@\\s]+@\\d+[.]\\d+[.]\\d+)\\b/g, '`$1`')\n    // linkify commitids\n    .replace(/\\b([a-f0-9]{7,8})\\b/g, '[`$1`](https://github.com/npm/npm/commit/$1)')\n    .replace(/\\b#(\\d+)\\b/g, '[#$1](https://github.com/npm/npm/issues/$1)')\n  console.log(msg)\n  if (c.credit) {\n    c.credit.forEach(function (credit) {\n      console.log(`  ([@${credit}](https://github.com/${credit}))`)\n    })\n  } else {\n    console.log(`  ([@${c.author}](https://github.com/${c.author}))`)\n  }\n}\n\nfunction main () {\n  let commit\n  log.forEach(function (line) {\n    let m\n    /* eslint no-cond-assign:0 */\n    if (/^---$/.test(line)) {\n      printCommit(commit)\n    } else if (m = line.match(/^([a-f0-9]{7,9}) ([a-f0-9]+) (?:[(]([^)]+)[)] )?(.*?) [(](.*?)[)]/)) {\n      commit = {\n        shortid: m[1],\n        fullid: m[2],\n        branch: m[3],\n        message: m[4],\n        author: m[5],\n        prurl: null,\n        fixes: null,\n        credit: null\n      }\n    } else if (m = line.match(/^PR-URL: (.*)/)) {\n      commit.prurl = m[1]\n    } else if (m = line.match(/^Credit: @(.*)/)) {\n      if (!commit.credit) commit.credit = []\n      commit.credit.push(m[1])\n    } else if (m = line.match(/^Fixes: #?(.*?)/)) {\n      commit.fixes = m[1]\n    } else if (m = line.match(/^Reviewed-By: @(.*)/)) {\n      commit.reviewed = m[1]\n    } else if (/\\S/.test(line)) {\n      commit.message += `\\n${line}`\n    }\n  })\n}\n"]}