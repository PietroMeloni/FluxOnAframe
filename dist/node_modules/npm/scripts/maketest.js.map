{"version":3,"sources":["../../../../node_modules/npm/scripts/maketest"],"names":["loadFromDir","require","process","exit","main","argv","slice","length","console","error","fixturedir","log","generateFromDir","indent","ind","str","replace","dir","tacks","fixture","toSource"],"mappings":";AACA;;AACA,IAAMA,cAAcC,QAAQ,wBAAR,CAApB;;AAEAC,QAAQC,IAAR,CAAaC,KAAKF,QAAQG,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAL,CAAb;;AAEA,SAASF,IAAT,CAAeC,IAAf,EAAqB;AACnB,MAAIA,KAAKE,MAAL,KAAgB,CAApB,EAAuB;AACrBC,YAAQC,KAAR,CAAc,8BAAd;AACA,WAAO,CAAP;AACD;AACD,MAAMC,aAAaR,QAAQG,IAAR,CAAa,CAAb,CAAnB;;AAEAG,UAAQG,GAAR,CAAYC,gBAAgBF,UAAhB,CAAZ;AACA,SAAO,CAAP;AACD;;AAED,SAASG,MAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,SAAOA,IAAIC,OAAJ,CAAY,KAAZ,EAAmB,OAAOF,GAA1B,CAAP;AACD;;AAED,SAASF,eAAT,CAA0BK,GAA1B,EAA+B;AAC7B,MAAMC,QAAQlB,YAAYiB,GAAZ,CAAd;AACA,u6BAgCWJ,OAAO,IAAP,EAAaK,MAAMC,OAAN,CAAcC,QAAd,EAAb,CAhCX;AAqED","file":"maketest.js","sourcesContent":["\n'use strict'\nconst loadFromDir = require('tacks/load-from-dir.js')\n\nprocess.exit(main(process.argv.slice(2)))\n\nfunction main (argv) {\n  if (argv.length !== 1) {\n    console.error('Usage: maketest <fixturedir>')\n    return 1\n  }\n  const fixturedir = process.argv[2]\n\n  console.log(generateFromDir(fixturedir))\n  return 0\n}\n\nfunction indent (ind, str) {\n  return str.replace(/\\n/g, '\\n' + ind)\n}\n\nfunction generateFromDir (dir) {\n  const tacks = loadFromDir(dir)\n  return `'use strict'\nconst path = require('path')\nconst test = require('tap').test\nconst mr = require('npm-registry-mock')\nconst Tacks = require('tacks')\nconst File = Tacks.File\nconst Symlink = Tacks.Symlink\nconst Dir = Tacks.Dir\nconst common = require('../common-tap.js')\n\nconst basedir = path.join(__dirname, path.basename(__filename, '.js'))\nconst testdir = path.join(basedir, 'testdir')\nconst cachedir = path.join(basedir, 'cache')\nconst globaldir = path.join(basedir, 'global')\nconst tmpdir = path.join(basedir, 'tmp')\n\nconst conf = {\n  cwd: testdir,\n  env: Object.assign({}, process.env, {\n    npm_config_cache: cachedir,\n    npm_config_tmp: tmpdir,\n    npm_config_prefix: globaldir,\n    npm_config_registry: common.registry,\n    npm_config_loglevel: 'warn'\n  })\n}\n\nlet server\nconst fixture = new Tacks(Dir({\n  cache: Dir(),\n  global: Dir(),\n  tmp: Dir(),\n  testdir: ${indent('  ', tacks.fixture.toSource())}\n}))\n\nfunction setup () {\n  cleanup()\n  fixture.create(basedir)\n}\n\nfunction cleanup () {\n  fixture.remove(basedir)\n}\n\ntest('setup', function (t) {\n  setup()\n  mr({port: common.port, throwOnUnmatched: true}, function (err, s) {\n    if (err) throw err\n    server = s\n    t.done()\n  })\n})\n\ntest('example', function (t) {\n  common.npm(['install'], conf, function (err, code, stdout, stderr) {\n    if (err) throw err\n    t.is(code, 0, 'command ran ok')\n    t.comment(stdout.trim())\n    t.comment(stderr.trim())\n    // your assertions here\n    t.done()\n  })\n})\n\ntest('cleanup', function (t) {\n  server.close()\n  cleanup()\n  t.done()\n})\\n`\n}\n"]}